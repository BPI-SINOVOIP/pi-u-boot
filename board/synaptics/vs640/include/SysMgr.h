//////
/// don't edit! auto-generated by docc: SysMgr.h
////////////////////////////////////////////////////////////
#ifndef SysMgr_h
#define SysMgr_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
///
/// $INTERFACE padRing                                  (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               %unsigned 1  REG_PDB_CORE              0x1
///                                    : NORMAL                    0x1
///                                    : PWRDN                     0x0
///                                                 ###
///                                                 * When REG_PDB_CORE is logic '1', the regulator works in normal mode and consumes ~60uA current at typical 25degC. When REG_PDB_CORE is logic '0', the regulator works in power-down mode and consumes ~6uA current at typical 25degC.
///                                                 ###
///               %unsigned 1  REF_INT_EN                0x1
///                                    : NORMAL                    0x1
///                                    : REF_DOWN                  0x0
///                                                 ###
///                                                 * When REF_INT_EN='1', REF/REF_FT is generated internally. When REF_INT_EN='0', the internal REF circuit is powered down and the REF signal is brought down to 0.
///                                                 * Since we do not use HSIN pads in bg3, we do not use this setting.
///                                                 ###
///               %unsigned 1  V18EN_CORE                0x0
///               %unsigned 1  V25EN_CORE                0x0
///                                    ###
///                                    * V18EN_CORE and V25EN_CORE are settings for different IO supply level
///                                    * V18EN_CORE=0,V25EN_CORE=0 : 3.3V
///                                    * V18EN_CORE=0,V25EN_CORE=1 : 2.5V
///                                    * V18EN_CORE=1,V25EN_CORE=X : 1.5V, 1.5V or 1.8V
///                                    ###
///               %unsigned 4  ZP                        0x0
///                                    ###
///                                    * ZP[3:0] is used to program PMOS output driver strength for PADXDC_HSIOB. ZP[3:0]='1111' is the strongest setting.
///                                    ###
///               %unsigned 4  ZN                        0x0
///                                    ###
///                                    * ZN[3:0] is used to program NMOS output driver strength for PADXDC_HSIOB. ZN[3:0]='1111' is the strongest setting.
///                                    ###
///               %unsigned 4  CAL_ZP                    0x0
///                                    ###
///                                    * ZN / ZP signals for calibration pad.
///                                    * ZN / ZP signals of the output impedance calibration pad and the functional I/O pad should be separated.
///                                    ###
///               %unsigned 4  CAL_ZN                    0x0
///                                    ###
///                                    * ZN / ZP signals for calibration pad.
///                                    * ZN / ZP signals of the output impedance calibration pad and the functional I/O pad should be separated.
///                                    ###
///               %unsigned 1  CAL_P_EN                  0x0
///                                    ###
///                                    * CAL_P_EN is active high core signal. Needs to be asserted high to start the PMOS driver calibration
///                                    ###
///               %unsigned 1  CAL_N_EN                  0x0
///                                    ###
///                                    * CAL_N_EN is active high core signal. Needs to be asserted high to start the NMOS driver calibration. PMOS driver has to be calibrated first, and ZP_AFT_CAL[3:0] need to be set to the calibrated PMOS settings before CAL_N_EN is asserted high
///                                    ###
///               %unsigned 1  ODR_EN                    0x1
///                                    ###
///                                    * When off-chip resistor is used, please set ODR_EN=0. When internal resistor is used for calibration, please set ODR_EN=1 and choose a proper ODR[2:0] setting to achieve desired driver strength.
///                                    ###
///               %unsigned 3  ODR                       0x0
///                                    ###
///                                    * ODR[2:0] is used to adjust the internal reference resistor value for calibration without external resistor. ODR_EN need to be set to '1' to enable internal resistor.
///                                    ###
///               %unsigned 4  ZP_AFT_CAL                0x0
///                                    ###
///                                    * ZP_AFT_CAL[3:0] are active high signals at the core signal level. They should be fed in by the registers that stores the settings after the PMOS driver calibration
///                                    ###
///               %%        2          # Stuffing bits...
///     @ 0x00004 status               (R-)
///               %unsigned 1  CAL_P_INC
///                                    ###
///                                    * CAL_P_INC is the output of the comparator. When the pad voltage is lower than the internal reference voltage, CAL_P_INC is high (i.e. the output impedance of PMOS is higher than the desired impedance).
///                                    * In a calibration loop, CAL_P_INC high can be interpreted as a signal to increment ZP[3:0].
///                                    ###
///               %unsigned 1  CAL_N_INC
///                                    ###
///                                    * CAL_N_INC is the output of the comparator. When the pad voltage is higher than the internal reference voltage, CAL_N_INC is high (i.e. the output impedance of NMOS is higher than the desired impedance). In a calibration loop, CAL_N_INC high can be interpreted as a signal to increment ZN[3:0].
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_padRing
#define h_padRing (){}

    #define     RA_padRing_ctrl                                0x0000

    #define     BA_padRing_ctrl_REG_PDB_CORE                   0x0000
    #define     B16padRing_ctrl_REG_PDB_CORE                   0x0000
    #define   LSb32padRing_ctrl_REG_PDB_CORE                      0
    #define   LSb16padRing_ctrl_REG_PDB_CORE                      0
    #define       bpadRing_ctrl_REG_PDB_CORE                   1
    #define   MSK32padRing_ctrl_REG_PDB_CORE                      0x00000001
    #define        padRing_ctrl_REG_PDB_CORE_NORMAL                         0x1
    #define        padRing_ctrl_REG_PDB_CORE_PWRDN                          0x0

    #define     BA_padRing_ctrl_REF_INT_EN                     0x0000
    #define     B16padRing_ctrl_REF_INT_EN                     0x0000
    #define   LSb32padRing_ctrl_REF_INT_EN                        1
    #define   LSb16padRing_ctrl_REF_INT_EN                        1
    #define       bpadRing_ctrl_REF_INT_EN                     1
    #define   MSK32padRing_ctrl_REF_INT_EN                        0x00000002
    #define        padRing_ctrl_REF_INT_EN_NORMAL                           0x1
    #define        padRing_ctrl_REF_INT_EN_REF_DOWN                         0x0

    #define     BA_padRing_ctrl_V18EN_CORE                     0x0000
    #define     B16padRing_ctrl_V18EN_CORE                     0x0000
    #define   LSb32padRing_ctrl_V18EN_CORE                        2
    #define   LSb16padRing_ctrl_V18EN_CORE                        2
    #define       bpadRing_ctrl_V18EN_CORE                     1
    #define   MSK32padRing_ctrl_V18EN_CORE                        0x00000004

    #define     BA_padRing_ctrl_V25EN_CORE                     0x0000
    #define     B16padRing_ctrl_V25EN_CORE                     0x0000
    #define   LSb32padRing_ctrl_V25EN_CORE                        3
    #define   LSb16padRing_ctrl_V25EN_CORE                        3
    #define       bpadRing_ctrl_V25EN_CORE                     1
    #define   MSK32padRing_ctrl_V25EN_CORE                        0x00000008

    #define     BA_padRing_ctrl_ZP                             0x0000
    #define     B16padRing_ctrl_ZP                             0x0000
    #define   LSb32padRing_ctrl_ZP                                4
    #define   LSb16padRing_ctrl_ZP                                4
    #define       bpadRing_ctrl_ZP                             4
    #define   MSK32padRing_ctrl_ZP                                0x000000F0

    #define     BA_padRing_ctrl_ZN                             0x0001
    #define     B16padRing_ctrl_ZN                             0x0000
    #define   LSb32padRing_ctrl_ZN                                8
    #define   LSb16padRing_ctrl_ZN                                8
    #define       bpadRing_ctrl_ZN                             4
    #define   MSK32padRing_ctrl_ZN                                0x00000F00

    #define     BA_padRing_ctrl_CAL_ZP                         0x0001
    #define     B16padRing_ctrl_CAL_ZP                         0x0000
    #define   LSb32padRing_ctrl_CAL_ZP                            12
    #define   LSb16padRing_ctrl_CAL_ZP                            12
    #define       bpadRing_ctrl_CAL_ZP                         4
    #define   MSK32padRing_ctrl_CAL_ZP                            0x0000F000

    #define     BA_padRing_ctrl_CAL_ZN                         0x0002
    #define     B16padRing_ctrl_CAL_ZN                         0x0002
    #define   LSb32padRing_ctrl_CAL_ZN                            16
    #define   LSb16padRing_ctrl_CAL_ZN                            0
    #define       bpadRing_ctrl_CAL_ZN                         4
    #define   MSK32padRing_ctrl_CAL_ZN                            0x000F0000

    #define     BA_padRing_ctrl_CAL_P_EN                       0x0002
    #define     B16padRing_ctrl_CAL_P_EN                       0x0002
    #define   LSb32padRing_ctrl_CAL_P_EN                          20
    #define   LSb16padRing_ctrl_CAL_P_EN                          4
    #define       bpadRing_ctrl_CAL_P_EN                       1
    #define   MSK32padRing_ctrl_CAL_P_EN                          0x00100000

    #define     BA_padRing_ctrl_CAL_N_EN                       0x0002
    #define     B16padRing_ctrl_CAL_N_EN                       0x0002
    #define   LSb32padRing_ctrl_CAL_N_EN                          21
    #define   LSb16padRing_ctrl_CAL_N_EN                          5
    #define       bpadRing_ctrl_CAL_N_EN                       1
    #define   MSK32padRing_ctrl_CAL_N_EN                          0x00200000

    #define     BA_padRing_ctrl_ODR_EN                         0x0002
    #define     B16padRing_ctrl_ODR_EN                         0x0002
    #define   LSb32padRing_ctrl_ODR_EN                            22
    #define   LSb16padRing_ctrl_ODR_EN                            6
    #define       bpadRing_ctrl_ODR_EN                         1
    #define   MSK32padRing_ctrl_ODR_EN                            0x00400000

    #define     BA_padRing_ctrl_ODR                            0x0002
    #define     B16padRing_ctrl_ODR                            0x0002
    #define   LSb32padRing_ctrl_ODR                               23
    #define   LSb16padRing_ctrl_ODR                               7
    #define       bpadRing_ctrl_ODR                            3
    #define   MSK32padRing_ctrl_ODR                               0x03800000

    #define     BA_padRing_ctrl_ZP_AFT_CAL                     0x0003
    #define     B16padRing_ctrl_ZP_AFT_CAL                     0x0002
    #define   LSb32padRing_ctrl_ZP_AFT_CAL                        26
    #define   LSb16padRing_ctrl_ZP_AFT_CAL                        10
    #define       bpadRing_ctrl_ZP_AFT_CAL                     4
    #define   MSK32padRing_ctrl_ZP_AFT_CAL                        0x3C000000
    ///////////////////////////////////////////////////////////
    #define     RA_padRing_status                              0x0004

    #define     BA_padRing_status_CAL_P_INC                    0x0004
    #define     B16padRing_status_CAL_P_INC                    0x0004
    #define   LSb32padRing_status_CAL_P_INC                       0
    #define   LSb16padRing_status_CAL_P_INC                       0
    #define       bpadRing_status_CAL_P_INC                    1
    #define   MSK32padRing_status_CAL_P_INC                       0x00000001

    #define     BA_padRing_status_CAL_N_INC                    0x0004
    #define     B16padRing_status_CAL_N_INC                    0x0004
    #define   LSb32padRing_status_CAL_N_INC                       1
    #define   LSb16padRing_status_CAL_N_INC                       1
    #define       bpadRing_status_CAL_N_INC                    1
    #define   MSK32padRing_status_CAL_N_INC                       0x00000002
    ///////////////////////////////////////////////////////////

    typedef struct SIE_padRing {
    ///////////////////////////////////////////////////////////
    #define   GET32padRing_ctrl_REG_PDB_CORE(r32)              _BFGET_(r32, 0, 0)
    #define   SET32padRing_ctrl_REG_PDB_CORE(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16padRing_ctrl_REG_PDB_CORE(r16)              _BFGET_(r16, 0, 0)
    #define   SET16padRing_ctrl_REG_PDB_CORE(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32padRing_ctrl_REF_INT_EN(r32)                _BFGET_(r32, 1, 1)
    #define   SET32padRing_ctrl_REF_INT_EN(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16padRing_ctrl_REF_INT_EN(r16)                _BFGET_(r16, 1, 1)
    #define   SET16padRing_ctrl_REF_INT_EN(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32padRing_ctrl_V18EN_CORE(r32)                _BFGET_(r32, 2, 2)
    #define   SET32padRing_ctrl_V18EN_CORE(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16padRing_ctrl_V18EN_CORE(r16)                _BFGET_(r16, 2, 2)
    #define   SET16padRing_ctrl_V18EN_CORE(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32padRing_ctrl_V25EN_CORE(r32)                _BFGET_(r32, 3, 3)
    #define   SET32padRing_ctrl_V25EN_CORE(r32,v)              _BFSET_(r32, 3, 3,v)
    #define   GET16padRing_ctrl_V25EN_CORE(r16)                _BFGET_(r16, 3, 3)
    #define   SET16padRing_ctrl_V25EN_CORE(r16,v)              _BFSET_(r16, 3, 3,v)

    #define   GET32padRing_ctrl_ZP(r32)                        _BFGET_(r32, 7, 4)
    #define   SET32padRing_ctrl_ZP(r32,v)                      _BFSET_(r32, 7, 4,v)
    #define   GET16padRing_ctrl_ZP(r16)                        _BFGET_(r16, 7, 4)
    #define   SET16padRing_ctrl_ZP(r16,v)                      _BFSET_(r16, 7, 4,v)

    #define   GET32padRing_ctrl_ZN(r32)                        _BFGET_(r32,11, 8)
    #define   SET32padRing_ctrl_ZN(r32,v)                      _BFSET_(r32,11, 8,v)
    #define   GET16padRing_ctrl_ZN(r16)                        _BFGET_(r16,11, 8)
    #define   SET16padRing_ctrl_ZN(r16,v)                      _BFSET_(r16,11, 8,v)

    #define   GET32padRing_ctrl_CAL_ZP(r32)                    _BFGET_(r32,15,12)
    #define   SET32padRing_ctrl_CAL_ZP(r32,v)                  _BFSET_(r32,15,12,v)
    #define   GET16padRing_ctrl_CAL_ZP(r16)                    _BFGET_(r16,15,12)
    #define   SET16padRing_ctrl_CAL_ZP(r16,v)                  _BFSET_(r16,15,12,v)

    #define   GET32padRing_ctrl_CAL_ZN(r32)                    _BFGET_(r32,19,16)
    #define   SET32padRing_ctrl_CAL_ZN(r32,v)                  _BFSET_(r32,19,16,v)
    #define   GET16padRing_ctrl_CAL_ZN(r16)                    _BFGET_(r16, 3, 0)
    #define   SET16padRing_ctrl_CAL_ZN(r16,v)                  _BFSET_(r16, 3, 0,v)

    #define   GET32padRing_ctrl_CAL_P_EN(r32)                  _BFGET_(r32,20,20)
    #define   SET32padRing_ctrl_CAL_P_EN(r32,v)                _BFSET_(r32,20,20,v)
    #define   GET16padRing_ctrl_CAL_P_EN(r16)                  _BFGET_(r16, 4, 4)
    #define   SET16padRing_ctrl_CAL_P_EN(r16,v)                _BFSET_(r16, 4, 4,v)

    #define   GET32padRing_ctrl_CAL_N_EN(r32)                  _BFGET_(r32,21,21)
    #define   SET32padRing_ctrl_CAL_N_EN(r32,v)                _BFSET_(r32,21,21,v)
    #define   GET16padRing_ctrl_CAL_N_EN(r16)                  _BFGET_(r16, 5, 5)
    #define   SET16padRing_ctrl_CAL_N_EN(r16,v)                _BFSET_(r16, 5, 5,v)

    #define   GET32padRing_ctrl_ODR_EN(r32)                    _BFGET_(r32,22,22)
    #define   SET32padRing_ctrl_ODR_EN(r32,v)                  _BFSET_(r32,22,22,v)
    #define   GET16padRing_ctrl_ODR_EN(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16padRing_ctrl_ODR_EN(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32padRing_ctrl_ODR(r32)                       _BFGET_(r32,25,23)
    #define   SET32padRing_ctrl_ODR(r32,v)                     _BFSET_(r32,25,23,v)
    #define   GET16padRing_ctrl_ODR(r16)                       _BFGET_(r16, 9, 7)
    #define   SET16padRing_ctrl_ODR(r16,v)                     _BFSET_(r16, 9, 7,v)

    #define   GET32padRing_ctrl_ZP_AFT_CAL(r32)                _BFGET_(r32,29,26)
    #define   SET32padRing_ctrl_ZP_AFT_CAL(r32,v)              _BFSET_(r32,29,26,v)
    #define   GET16padRing_ctrl_ZP_AFT_CAL(r16)                _BFGET_(r16,13,10)
    #define   SET16padRing_ctrl_ZP_AFT_CAL(r16,v)              _BFSET_(r16,13,10,v)

    #define     w32padRing_ctrl                                {\
            UNSG32 uctrl_REG_PDB_CORE                          :  1;\
            UNSG32 uctrl_REF_INT_EN                            :  1;\
            UNSG32 uctrl_V18EN_CORE                            :  1;\
            UNSG32 uctrl_V25EN_CORE                            :  1;\
            UNSG32 uctrl_ZP                                    :  4;\
            UNSG32 uctrl_ZN                                    :  4;\
            UNSG32 uctrl_CAL_ZP                                :  4;\
            UNSG32 uctrl_CAL_ZN                                :  4;\
            UNSG32 uctrl_CAL_P_EN                              :  1;\
            UNSG32 uctrl_CAL_N_EN                              :  1;\
            UNSG32 uctrl_ODR_EN                                :  1;\
            UNSG32 uctrl_ODR                                   :  3;\
            UNSG32 uctrl_ZP_AFT_CAL                            :  4;\
            UNSG32 RSVDx0_b30                                  :  2;\
          }
    union { UNSG32 u32padRing_ctrl;
            struct w32padRing_ctrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32padRing_status_CAL_P_INC(r32)               _BFGET_(r32, 0, 0)
    #define   SET32padRing_status_CAL_P_INC(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16padRing_status_CAL_P_INC(r16)               _BFGET_(r16, 0, 0)
    #define   SET16padRing_status_CAL_P_INC(r16,v)             _BFSET_(r16, 0, 0,v)

    #define   GET32padRing_status_CAL_N_INC(r32)               _BFGET_(r32, 1, 1)
    #define   SET32padRing_status_CAL_N_INC(r32,v)             _BFSET_(r32, 1, 1,v)
    #define   GET16padRing_status_CAL_N_INC(r16)               _BFGET_(r16, 1, 1)
    #define   SET16padRing_status_CAL_N_INC(r16,v)             _BFSET_(r16, 1, 1,v)

    #define     w32padRing_status                              {\
            UNSG32 ustatus_CAL_P_INC                           :  1;\
            UNSG32 ustatus_CAL_N_INC                           :  1;\
            UNSG32 RSVDx4_b2                                   : 30;\
          }
    union { UNSG32 u32padRing_status;
            struct w32padRing_status;
          };
    ///////////////////////////////////////////////////////////
    } SIE_padRing;

    typedef union  T32padRing_ctrl
          { UNSG32 u32;
            struct w32padRing_ctrl;
                 } T32padRing_ctrl;
    typedef union  T32padRing_status
          { UNSG32 u32;
            struct w32padRing_status;
                 } T32padRing_status;
    ///////////////////////////////////////////////////////////

    typedef union  TpadRing_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32padRing_ctrl;
                   };
                 } TpadRing_ctrl;
    typedef union  TpadRing_status
          { UNSG32 u32[1];
            struct {
            struct w32padRing_status;
                   };
                 } TpadRing_status;

    ///////////////////////////////////////////////////////////
     SIGN32 padRing_drvrd(SIE_padRing *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 padRing_drvwr(SIE_padRing *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void padRing_reset(SIE_padRing *p);
     SIGN32 padRing_cmp  (SIE_padRing *p, SIE_padRing *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define padRing_check(p,pie,pfx,hLOG) padRing_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define padRing_print(p,    pfx,hLOG) padRing_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: padRing
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE padRingV18                               (4,4)
///     ###
///     * Default voltage setting is 1.8V
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               %unsigned 1  REG_PDB_CORE              0x1
///                                    : NORMAL                    0x1
///                                    : PWRDN                     0x0
///                                                 ###
///                                                 * When REG_PDB_CORE is logic '1', the regulator works in normal mode and consumes ~60uA current at typical 25degC. When REG_PDB_CORE is logic '0', the regulator works in power-down mode and consumes ~6uA current at typical 25degC.
///                                                 ###
///               %unsigned 1  REF_INT_EN                0x1
///                                    : NORMAL                    0x1
///                                    : REF_DOWN                  0x0
///                                                 ###
///                                                 * When REF_INT_EN='1', REF/REF_FT is generated internally. When REF_INT_EN='0', the internal REF circuit is powered down and the REF signal is brought down to 0.
///                                                 * Since we do not use HSIN pads in bg3, we do not use this setting.
///                                                 ###
///               %unsigned 1  V18EN_CORE                0x1
///               %unsigned 1  V25EN_CORE                0x0
///                                    ###
///                                    * V18EN_CORE and V25EN_CORE are settings for different IO supply level
///                                    * V18EN_CORE=0,V25EN_CORE=0 : 3.3V
///                                    * V18EN_CORE=0,V25EN_CORE=1 : 2.5V
///                                    * V18EN_CORE=1,V25EN_CORE=X : 1.5V, 1.5V or 1.8V
///                                    ###
///               %unsigned 4  ZP                        0x0
///                                    ###
///                                    * ZP[3:0] is used to program PMOS output driver strength for PADXDC_HSIOB. ZP[3:0]='1111' is the strongest setting.
///                                    ###
///               %unsigned 4  ZN                        0x0
///                                    ###
///                                    * ZN[3:0] is used to program NMOS output driver strength for PADXDC_HSIOB. ZN[3:0]='1111' is the strongest setting.
///                                    ###
///               %unsigned 4  CAL_ZP                    0x0
///                                    ###
///                                    * ZN / ZP signals for calibration pad.
///                                    * ZN / ZP signals of the output impedance calibration pad and the functional I/O pad should be separated.
///                                    ###
///               %unsigned 4  CAL_ZN                    0x0
///                                    ###
///                                    * ZN / ZP signals for calibration pad.
///                                    * ZN / ZP signals of the output impedance calibration pad and the functional I/O pad should be separated.
///                                    ###
///               %unsigned 1  CAL_P_EN                  0x0
///                                    ###
///                                    * CAL_P_EN is active high core signal. Needs to be asserted high to start the PMOS driver calibration
///                                    ###
///               %unsigned 1  CAL_N_EN                  0x0
///                                    ###
///                                    * CAL_N_EN is active high core signal. Needs to be asserted high to start the NMOS driver calibration. PMOS driver has to be calibrated first, and ZP_AFT_CAL[3:0] need to be set to the calibrated PMOS settings before CAL_N_EN is asserted high
///                                    ###
///               %unsigned 1  ODR_EN                    0x1
///                                    ###
///                                    * When off-chip resistor is used, please set ODR_EN=0. When internal resistor is used for calibration, please set ODR_EN=1 and choose a proper ODR[2:0] setting to achieve desired driver strength.
///                                    ###
///               %unsigned 3  ODR                       0x0
///                                    ###
///                                    * ODR[2:0] is used to adjust the internal reference resistor value for calibration without external resistor. ODR_EN need to be set to '1' to enable internal resistor.
///                                    ###
///               %unsigned 4  ZP_AFT_CAL                0x0
///                                    ###
///                                    * ZP_AFT_CAL[3:0] are active high signals at the core signal level. They should be fed in by the registers that stores the settings after the PMOS driver calibration
///                                    ###
///               %%        2          # Stuffing bits...
///     @ 0x00004 status               (R-)
///               %unsigned 1  CAL_P_INC
///                                    ###
///                                    * CAL_P_INC is the output of the comparator. When the pad voltage is lower than the internal reference voltage, CAL_P_INC is high (i.e. the output impedance of PMOS is higher than the desired impedance).
///                                    * In a calibration loop, CAL_P_INC high can be interpreted as a signal to increment ZP[3:0].
///                                    ###
///               %unsigned 1  CAL_N_INC
///                                    ###
///                                    * CAL_N_INC is the output of the comparator. When the pad voltage is higher than the internal reference voltage, CAL_N_INC is high (i.e. the output impedance of NMOS is higher than the desired impedance). In a calibration loop, CAL_N_INC high can be interpreted as a signal to increment ZN[3:0].
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:      32b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_padRingV18
#define h_padRingV18 (){}

    #define     RA_padRingV18_ctrl                             0x0000

    #define     BA_padRingV18_ctrl_REG_PDB_CORE                0x0000
    #define     B16padRingV18_ctrl_REG_PDB_CORE                0x0000
    #define   LSb32padRingV18_ctrl_REG_PDB_CORE                   0
    #define   LSb16padRingV18_ctrl_REG_PDB_CORE                   0
    #define       bpadRingV18_ctrl_REG_PDB_CORE                1
    #define   MSK32padRingV18_ctrl_REG_PDB_CORE                   0x00000001
    #define        padRingV18_ctrl_REG_PDB_CORE_NORMAL                      0x1
    #define        padRingV18_ctrl_REG_PDB_CORE_PWRDN                       0x0

    #define     BA_padRingV18_ctrl_REF_INT_EN                  0x0000
    #define     B16padRingV18_ctrl_REF_INT_EN                  0x0000
    #define   LSb32padRingV18_ctrl_REF_INT_EN                     1
    #define   LSb16padRingV18_ctrl_REF_INT_EN                     1
    #define       bpadRingV18_ctrl_REF_INT_EN                  1
    #define   MSK32padRingV18_ctrl_REF_INT_EN                     0x00000002
    #define        padRingV18_ctrl_REF_INT_EN_NORMAL                        0x1
    #define        padRingV18_ctrl_REF_INT_EN_REF_DOWN                      0x0

    #define     BA_padRingV18_ctrl_V18EN_CORE                  0x0000
    #define     B16padRingV18_ctrl_V18EN_CORE                  0x0000
    #define   LSb32padRingV18_ctrl_V18EN_CORE                     2
    #define   LSb16padRingV18_ctrl_V18EN_CORE                     2
    #define       bpadRingV18_ctrl_V18EN_CORE                  1
    #define   MSK32padRingV18_ctrl_V18EN_CORE                     0x00000004

    #define     BA_padRingV18_ctrl_V25EN_CORE                  0x0000
    #define     B16padRingV18_ctrl_V25EN_CORE                  0x0000
    #define   LSb32padRingV18_ctrl_V25EN_CORE                     3
    #define   LSb16padRingV18_ctrl_V25EN_CORE                     3
    #define       bpadRingV18_ctrl_V25EN_CORE                  1
    #define   MSK32padRingV18_ctrl_V25EN_CORE                     0x00000008

    #define     BA_padRingV18_ctrl_ZP                          0x0000
    #define     B16padRingV18_ctrl_ZP                          0x0000
    #define   LSb32padRingV18_ctrl_ZP                             4
    #define   LSb16padRingV18_ctrl_ZP                             4
    #define       bpadRingV18_ctrl_ZP                          4
    #define   MSK32padRingV18_ctrl_ZP                             0x000000F0

    #define     BA_padRingV18_ctrl_ZN                          0x0001
    #define     B16padRingV18_ctrl_ZN                          0x0000
    #define   LSb32padRingV18_ctrl_ZN                             8
    #define   LSb16padRingV18_ctrl_ZN                             8
    #define       bpadRingV18_ctrl_ZN                          4
    #define   MSK32padRingV18_ctrl_ZN                             0x00000F00

    #define     BA_padRingV18_ctrl_CAL_ZP                      0x0001
    #define     B16padRingV18_ctrl_CAL_ZP                      0x0000
    #define   LSb32padRingV18_ctrl_CAL_ZP                         12
    #define   LSb16padRingV18_ctrl_CAL_ZP                         12
    #define       bpadRingV18_ctrl_CAL_ZP                      4
    #define   MSK32padRingV18_ctrl_CAL_ZP                         0x0000F000

    #define     BA_padRingV18_ctrl_CAL_ZN                      0x0002
    #define     B16padRingV18_ctrl_CAL_ZN                      0x0002
    #define   LSb32padRingV18_ctrl_CAL_ZN                         16
    #define   LSb16padRingV18_ctrl_CAL_ZN                         0
    #define       bpadRingV18_ctrl_CAL_ZN                      4
    #define   MSK32padRingV18_ctrl_CAL_ZN                         0x000F0000

    #define     BA_padRingV18_ctrl_CAL_P_EN                    0x0002
    #define     B16padRingV18_ctrl_CAL_P_EN                    0x0002
    #define   LSb32padRingV18_ctrl_CAL_P_EN                       20
    #define   LSb16padRingV18_ctrl_CAL_P_EN                       4
    #define       bpadRingV18_ctrl_CAL_P_EN                    1
    #define   MSK32padRingV18_ctrl_CAL_P_EN                       0x00100000

    #define     BA_padRingV18_ctrl_CAL_N_EN                    0x0002
    #define     B16padRingV18_ctrl_CAL_N_EN                    0x0002
    #define   LSb32padRingV18_ctrl_CAL_N_EN                       21
    #define   LSb16padRingV18_ctrl_CAL_N_EN                       5
    #define       bpadRingV18_ctrl_CAL_N_EN                    1
    #define   MSK32padRingV18_ctrl_CAL_N_EN                       0x00200000

    #define     BA_padRingV18_ctrl_ODR_EN                      0x0002
    #define     B16padRingV18_ctrl_ODR_EN                      0x0002
    #define   LSb32padRingV18_ctrl_ODR_EN                         22
    #define   LSb16padRingV18_ctrl_ODR_EN                         6
    #define       bpadRingV18_ctrl_ODR_EN                      1
    #define   MSK32padRingV18_ctrl_ODR_EN                         0x00400000

    #define     BA_padRingV18_ctrl_ODR                         0x0002
    #define     B16padRingV18_ctrl_ODR                         0x0002
    #define   LSb32padRingV18_ctrl_ODR                            23
    #define   LSb16padRingV18_ctrl_ODR                            7
    #define       bpadRingV18_ctrl_ODR                         3
    #define   MSK32padRingV18_ctrl_ODR                            0x03800000

    #define     BA_padRingV18_ctrl_ZP_AFT_CAL                  0x0003
    #define     B16padRingV18_ctrl_ZP_AFT_CAL                  0x0002
    #define   LSb32padRingV18_ctrl_ZP_AFT_CAL                     26
    #define   LSb16padRingV18_ctrl_ZP_AFT_CAL                     10
    #define       bpadRingV18_ctrl_ZP_AFT_CAL                  4
    #define   MSK32padRingV18_ctrl_ZP_AFT_CAL                     0x3C000000
    ///////////////////////////////////////////////////////////
    #define     RA_padRingV18_status                           0x0004

    #define     BA_padRingV18_status_CAL_P_INC                 0x0004
    #define     B16padRingV18_status_CAL_P_INC                 0x0004
    #define   LSb32padRingV18_status_CAL_P_INC                    0
    #define   LSb16padRingV18_status_CAL_P_INC                    0
    #define       bpadRingV18_status_CAL_P_INC                 1
    #define   MSK32padRingV18_status_CAL_P_INC                    0x00000001

    #define     BA_padRingV18_status_CAL_N_INC                 0x0004
    #define     B16padRingV18_status_CAL_N_INC                 0x0004
    #define   LSb32padRingV18_status_CAL_N_INC                    1
    #define   LSb16padRingV18_status_CAL_N_INC                    1
    #define       bpadRingV18_status_CAL_N_INC                 1
    #define   MSK32padRingV18_status_CAL_N_INC                    0x00000002
    ///////////////////////////////////////////////////////////

    typedef struct SIE_padRingV18 {
    ///////////////////////////////////////////////////////////
    #define   GET32padRingV18_ctrl_REG_PDB_CORE(r32)           _BFGET_(r32, 0, 0)
    #define   SET32padRingV18_ctrl_REG_PDB_CORE(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16padRingV18_ctrl_REG_PDB_CORE(r16)           _BFGET_(r16, 0, 0)
    #define   SET16padRingV18_ctrl_REG_PDB_CORE(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32padRingV18_ctrl_REF_INT_EN(r32)             _BFGET_(r32, 1, 1)
    #define   SET32padRingV18_ctrl_REF_INT_EN(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16padRingV18_ctrl_REF_INT_EN(r16)             _BFGET_(r16, 1, 1)
    #define   SET16padRingV18_ctrl_REF_INT_EN(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32padRingV18_ctrl_V18EN_CORE(r32)             _BFGET_(r32, 2, 2)
    #define   SET32padRingV18_ctrl_V18EN_CORE(r32,v)           _BFSET_(r32, 2, 2,v)
    #define   GET16padRingV18_ctrl_V18EN_CORE(r16)             _BFGET_(r16, 2, 2)
    #define   SET16padRingV18_ctrl_V18EN_CORE(r16,v)           _BFSET_(r16, 2, 2,v)

    #define   GET32padRingV18_ctrl_V25EN_CORE(r32)             _BFGET_(r32, 3, 3)
    #define   SET32padRingV18_ctrl_V25EN_CORE(r32,v)           _BFSET_(r32, 3, 3,v)
    #define   GET16padRingV18_ctrl_V25EN_CORE(r16)             _BFGET_(r16, 3, 3)
    #define   SET16padRingV18_ctrl_V25EN_CORE(r16,v)           _BFSET_(r16, 3, 3,v)

    #define   GET32padRingV18_ctrl_ZP(r32)                     _BFGET_(r32, 7, 4)
    #define   SET32padRingV18_ctrl_ZP(r32,v)                   _BFSET_(r32, 7, 4,v)
    #define   GET16padRingV18_ctrl_ZP(r16)                     _BFGET_(r16, 7, 4)
    #define   SET16padRingV18_ctrl_ZP(r16,v)                   _BFSET_(r16, 7, 4,v)

    #define   GET32padRingV18_ctrl_ZN(r32)                     _BFGET_(r32,11, 8)
    #define   SET32padRingV18_ctrl_ZN(r32,v)                   _BFSET_(r32,11, 8,v)
    #define   GET16padRingV18_ctrl_ZN(r16)                     _BFGET_(r16,11, 8)
    #define   SET16padRingV18_ctrl_ZN(r16,v)                   _BFSET_(r16,11, 8,v)

    #define   GET32padRingV18_ctrl_CAL_ZP(r32)                 _BFGET_(r32,15,12)
    #define   SET32padRingV18_ctrl_CAL_ZP(r32,v)               _BFSET_(r32,15,12,v)
    #define   GET16padRingV18_ctrl_CAL_ZP(r16)                 _BFGET_(r16,15,12)
    #define   SET16padRingV18_ctrl_CAL_ZP(r16,v)               _BFSET_(r16,15,12,v)

    #define   GET32padRingV18_ctrl_CAL_ZN(r32)                 _BFGET_(r32,19,16)
    #define   SET32padRingV18_ctrl_CAL_ZN(r32,v)               _BFSET_(r32,19,16,v)
    #define   GET16padRingV18_ctrl_CAL_ZN(r16)                 _BFGET_(r16, 3, 0)
    #define   SET16padRingV18_ctrl_CAL_ZN(r16,v)               _BFSET_(r16, 3, 0,v)

    #define   GET32padRingV18_ctrl_CAL_P_EN(r32)               _BFGET_(r32,20,20)
    #define   SET32padRingV18_ctrl_CAL_P_EN(r32,v)             _BFSET_(r32,20,20,v)
    #define   GET16padRingV18_ctrl_CAL_P_EN(r16)               _BFGET_(r16, 4, 4)
    #define   SET16padRingV18_ctrl_CAL_P_EN(r16,v)             _BFSET_(r16, 4, 4,v)

    #define   GET32padRingV18_ctrl_CAL_N_EN(r32)               _BFGET_(r32,21,21)
    #define   SET32padRingV18_ctrl_CAL_N_EN(r32,v)             _BFSET_(r32,21,21,v)
    #define   GET16padRingV18_ctrl_CAL_N_EN(r16)               _BFGET_(r16, 5, 5)
    #define   SET16padRingV18_ctrl_CAL_N_EN(r16,v)             _BFSET_(r16, 5, 5,v)

    #define   GET32padRingV18_ctrl_ODR_EN(r32)                 _BFGET_(r32,22,22)
    #define   SET32padRingV18_ctrl_ODR_EN(r32,v)               _BFSET_(r32,22,22,v)
    #define   GET16padRingV18_ctrl_ODR_EN(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16padRingV18_ctrl_ODR_EN(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32padRingV18_ctrl_ODR(r32)                    _BFGET_(r32,25,23)
    #define   SET32padRingV18_ctrl_ODR(r32,v)                  _BFSET_(r32,25,23,v)
    #define   GET16padRingV18_ctrl_ODR(r16)                    _BFGET_(r16, 9, 7)
    #define   SET16padRingV18_ctrl_ODR(r16,v)                  _BFSET_(r16, 9, 7,v)

    #define   GET32padRingV18_ctrl_ZP_AFT_CAL(r32)             _BFGET_(r32,29,26)
    #define   SET32padRingV18_ctrl_ZP_AFT_CAL(r32,v)           _BFSET_(r32,29,26,v)
    #define   GET16padRingV18_ctrl_ZP_AFT_CAL(r16)             _BFGET_(r16,13,10)
    #define   SET16padRingV18_ctrl_ZP_AFT_CAL(r16,v)           _BFSET_(r16,13,10,v)

    #define     w32padRingV18_ctrl                             {\
            UNSG32 uctrl_REG_PDB_CORE                          :  1;\
            UNSG32 uctrl_REF_INT_EN                            :  1;\
            UNSG32 uctrl_V18EN_CORE                            :  1;\
            UNSG32 uctrl_V25EN_CORE                            :  1;\
            UNSG32 uctrl_ZP                                    :  4;\
            UNSG32 uctrl_ZN                                    :  4;\
            UNSG32 uctrl_CAL_ZP                                :  4;\
            UNSG32 uctrl_CAL_ZN                                :  4;\
            UNSG32 uctrl_CAL_P_EN                              :  1;\
            UNSG32 uctrl_CAL_N_EN                              :  1;\
            UNSG32 uctrl_ODR_EN                                :  1;\
            UNSG32 uctrl_ODR                                   :  3;\
            UNSG32 uctrl_ZP_AFT_CAL                            :  4;\
            UNSG32 RSVDx0_b30                                  :  2;\
          }
    union { UNSG32 u32padRingV18_ctrl;
            struct w32padRingV18_ctrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32padRingV18_status_CAL_P_INC(r32)            _BFGET_(r32, 0, 0)
    #define   SET32padRingV18_status_CAL_P_INC(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16padRingV18_status_CAL_P_INC(r16)            _BFGET_(r16, 0, 0)
    #define   SET16padRingV18_status_CAL_P_INC(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32padRingV18_status_CAL_N_INC(r32)            _BFGET_(r32, 1, 1)
    #define   SET32padRingV18_status_CAL_N_INC(r32,v)          _BFSET_(r32, 1, 1,v)
    #define   GET16padRingV18_status_CAL_N_INC(r16)            _BFGET_(r16, 1, 1)
    #define   SET16padRingV18_status_CAL_N_INC(r16,v)          _BFSET_(r16, 1, 1,v)

    #define     w32padRingV18_status                           {\
            UNSG32 ustatus_CAL_P_INC                           :  1;\
            UNSG32 ustatus_CAL_N_INC                           :  1;\
            UNSG32 RSVDx4_b2                                   : 30;\
          }
    union { UNSG32 u32padRingV18_status;
            struct w32padRingV18_status;
          };
    ///////////////////////////////////////////////////////////
    } SIE_padRingV18;

    typedef union  T32padRingV18_ctrl
          { UNSG32 u32;
            struct w32padRingV18_ctrl;
                 } T32padRingV18_ctrl;
    typedef union  T32padRingV18_status
          { UNSG32 u32;
            struct w32padRingV18_status;
                 } T32padRingV18_status;
    ///////////////////////////////////////////////////////////

    typedef union  TpadRingV18_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32padRingV18_ctrl;
                   };
                 } TpadRingV18_ctrl;
    typedef union  TpadRingV18_status
          { UNSG32 u32[1];
            struct {
            struct w32padRingV18_status;
                   };
                 } TpadRingV18_status;

    ///////////////////////////////////////////////////////////
     SIGN32 padRingV18_drvrd(SIE_padRingV18 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 padRingV18_drvwr(SIE_padRingV18 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void padRingV18_reset(SIE_padRingV18 *p);
     SIGN32 padRingV18_cmp  (SIE_padRingV18 *p, SIE_padRingV18 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define padRingV18_check(p,pie,pfx,hLOG) padRingV18_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define padRingV18_print(p,    pfx,hLOG) padRingV18_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: padRingV18
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE HSpadRing                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               %unsigned 1  V12EN                     0x0
///                                    ###
///                                    * V12_EN=0 is for 1.8V normal mode, V12_EN=1 is to enable 1.2V high-speed mode.
///                                    * At 1.8V (V12_EN=0), DIO12OB pad performance is similar to DIOB.
///                                    ###
///               %unsigned 5  ZP                        0x1F
///                                    ###
///                                    * ZP[4:0] is used to program PMOS output driver strength for PAD18DIOB.
///                                    * 50 Ohm driver (lower speed ~100MHz)
///                                    * 01111: TYP CORNER
///                                    * 10101: SLOW CORNER
///                                    * 01011: FAST CORNER
///                                    * 33 Ohm driver (strong driver for high-speed ~200MHz)
///                                    * 10111: TYP CORNER
///                                    * 11111: SLOW CORNER
///                                    * 10000: FAST CORNER
///                                    ###
///               %unsigned 5  ZN                        0x1F
///                                    ###
///                                    * ZN[4:0] is used to program NMOS output driver strength for PAD18DIOB.
///                                    * 50 Ohm driver (lower speed ~100MHz)
///                                    * 01111: TYP CORNER
///                                    * 10101: SLOW CORNER
///                                    * 01011: FAST CORNER
///                                    * 33 Ohm driver (strong driver for high-speed ~200MHz)
///                                    * 10111: TYP CORNER
///                                    * 11111: SLOW CORNER
///                                    * 10000: FAST CORNER
///                                    ###
///               %%        21         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      11b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_HSpadRing
#define h_HSpadRing (){}

    #define     RA_HSpadRing_ctrl                              0x0000

    #define     BA_HSpadRing_ctrl_V12EN                        0x0000
    #define     B16HSpadRing_ctrl_V12EN                        0x0000
    #define   LSb32HSpadRing_ctrl_V12EN                           0
    #define   LSb16HSpadRing_ctrl_V12EN                           0
    #define       bHSpadRing_ctrl_V12EN                        1
    #define   MSK32HSpadRing_ctrl_V12EN                           0x00000001

    #define     BA_HSpadRing_ctrl_ZP                           0x0000
    #define     B16HSpadRing_ctrl_ZP                           0x0000
    #define   LSb32HSpadRing_ctrl_ZP                              1
    #define   LSb16HSpadRing_ctrl_ZP                              1
    #define       bHSpadRing_ctrl_ZP                           5
    #define   MSK32HSpadRing_ctrl_ZP                              0x0000003E

    #define     BA_HSpadRing_ctrl_ZN                           0x0000
    #define     B16HSpadRing_ctrl_ZN                           0x0000
    #define   LSb32HSpadRing_ctrl_ZN                              6
    #define   LSb16HSpadRing_ctrl_ZN                              6
    #define       bHSpadRing_ctrl_ZN                           5
    #define   MSK32HSpadRing_ctrl_ZN                              0x000007C0
    ///////////////////////////////////////////////////////////

    typedef struct SIE_HSpadRing {
    ///////////////////////////////////////////////////////////
    #define   GET32HSpadRing_ctrl_V12EN(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32HSpadRing_ctrl_V12EN(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16HSpadRing_ctrl_V12EN(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16HSpadRing_ctrl_V12EN(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32HSpadRing_ctrl_ZP(r32)                      _BFGET_(r32, 5, 1)
    #define   SET32HSpadRing_ctrl_ZP(r32,v)                    _BFSET_(r32, 5, 1,v)
    #define   GET16HSpadRing_ctrl_ZP(r16)                      _BFGET_(r16, 5, 1)
    #define   SET16HSpadRing_ctrl_ZP(r16,v)                    _BFSET_(r16, 5, 1,v)

    #define   GET32HSpadRing_ctrl_ZN(r32)                      _BFGET_(r32,10, 6)
    #define   SET32HSpadRing_ctrl_ZN(r32,v)                    _BFSET_(r32,10, 6,v)
    #define   GET16HSpadRing_ctrl_ZN(r16)                      _BFGET_(r16,10, 6)
    #define   SET16HSpadRing_ctrl_ZN(r16,v)                    _BFSET_(r16,10, 6,v)

    #define     w32HSpadRing_ctrl                              {\
            UNSG32 uctrl_V12EN                                 :  1;\
            UNSG32 uctrl_ZP                                    :  5;\
            UNSG32 uctrl_ZN                                    :  5;\
            UNSG32 RSVDx0_b11                                  : 21;\
          }
    union { UNSG32 u32HSpadRing_ctrl;
            struct w32HSpadRing_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_HSpadRing;

    typedef union  T32HSpadRing_ctrl
          { UNSG32 u32;
            struct w32HSpadRing_ctrl;
                 } T32HSpadRing_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  THSpadRing_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32HSpadRing_ctrl;
                   };
                 } THSpadRing_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 HSpadRing_drvrd(SIE_HSpadRing *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 HSpadRing_drvwr(SIE_HSpadRing *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void HSpadRing_reset(SIE_HSpadRing *p);
     SIGN32 HSpadRing_cmp  (SIE_HSpadRing *p, SIE_HSpadRing *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define HSpadRing_check(p,pie,pfx,hLOG) HSpadRing_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define HSpadRing_print(p,    pfx,hLOG) HSpadRing_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: HSpadRing
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE FLpadRing                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               %unsigned 1  REG_PDB_CORE              0x0
///                                    ###
///                                    * Active low signal to place pads in power-down mode by driving ring signal LOW_VDDB_R = 0 PDB_CORE = 0, power-down
///                                    * PDB_CORE = 1, normal mode
///                                    ###
///               %unsigned 2  ODT_EN                    0x0
///                                    ###
///                                    * Active high, controls / enables the on-die termination for signal pads. Do Not Scan
///                                    * 00 - ODT off
///                                    * 01 - 150ohm ODT
///                                    * 10 - 75ohm ODT
///                                    * 11 - 50ohm ODT
///                                    ###
///               %unsigned 5  ZP                        0xF
///                                    ###
///                                    * Active high, controls the output driver pull-up network driving strength by selecting proper number of PMOS fingers to be turned on (All 0s = no fingers = tri-stated). Do Not Scan
///                                    ###
///               %unsigned 5  ZN                        0xF
///                                    ###
///                                    * Active high, controls the output driver pull-down network driving strength by selecting proper number of NMOS fingers to be turned on (All 0s = no fingers = tri-stated). Do Not Scan
///                                    ###
///               %%        19         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      13b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_FLpadRing
#define h_FLpadRing (){}

    #define     RA_FLpadRing_ctrl                              0x0000

    #define     BA_FLpadRing_ctrl_REG_PDB_CORE                 0x0000
    #define     B16FLpadRing_ctrl_REG_PDB_CORE                 0x0000
    #define   LSb32FLpadRing_ctrl_REG_PDB_CORE                    0
    #define   LSb16FLpadRing_ctrl_REG_PDB_CORE                    0
    #define       bFLpadRing_ctrl_REG_PDB_CORE                 1
    #define   MSK32FLpadRing_ctrl_REG_PDB_CORE                    0x00000001

    #define     BA_FLpadRing_ctrl_ODT_EN                       0x0000
    #define     B16FLpadRing_ctrl_ODT_EN                       0x0000
    #define   LSb32FLpadRing_ctrl_ODT_EN                          1
    #define   LSb16FLpadRing_ctrl_ODT_EN                          1
    #define       bFLpadRing_ctrl_ODT_EN                       2
    #define   MSK32FLpadRing_ctrl_ODT_EN                          0x00000006

    #define     BA_FLpadRing_ctrl_ZP                           0x0000
    #define     B16FLpadRing_ctrl_ZP                           0x0000
    #define   LSb32FLpadRing_ctrl_ZP                              3
    #define   LSb16FLpadRing_ctrl_ZP                              3
    #define       bFLpadRing_ctrl_ZP                           5
    #define   MSK32FLpadRing_ctrl_ZP                              0x000000F8

    #define     BA_FLpadRing_ctrl_ZN                           0x0001
    #define     B16FLpadRing_ctrl_ZN                           0x0000
    #define   LSb32FLpadRing_ctrl_ZN                              8
    #define   LSb16FLpadRing_ctrl_ZN                              8
    #define       bFLpadRing_ctrl_ZN                           5
    #define   MSK32FLpadRing_ctrl_ZN                              0x00001F00
    ///////////////////////////////////////////////////////////

    typedef struct SIE_FLpadRing {
    ///////////////////////////////////////////////////////////
    #define   GET32FLpadRing_ctrl_REG_PDB_CORE(r32)            _BFGET_(r32, 0, 0)
    #define   SET32FLpadRing_ctrl_REG_PDB_CORE(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16FLpadRing_ctrl_REG_PDB_CORE(r16)            _BFGET_(r16, 0, 0)
    #define   SET16FLpadRing_ctrl_REG_PDB_CORE(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32FLpadRing_ctrl_ODT_EN(r32)                  _BFGET_(r32, 2, 1)
    #define   SET32FLpadRing_ctrl_ODT_EN(r32,v)                _BFSET_(r32, 2, 1,v)
    #define   GET16FLpadRing_ctrl_ODT_EN(r16)                  _BFGET_(r16, 2, 1)
    #define   SET16FLpadRing_ctrl_ODT_EN(r16,v)                _BFSET_(r16, 2, 1,v)

    #define   GET32FLpadRing_ctrl_ZP(r32)                      _BFGET_(r32, 7, 3)
    #define   SET32FLpadRing_ctrl_ZP(r32,v)                    _BFSET_(r32, 7, 3,v)
    #define   GET16FLpadRing_ctrl_ZP(r16)                      _BFGET_(r16, 7, 3)
    #define   SET16FLpadRing_ctrl_ZP(r16,v)                    _BFSET_(r16, 7, 3,v)

    #define   GET32FLpadRing_ctrl_ZN(r32)                      _BFGET_(r32,12, 8)
    #define   SET32FLpadRing_ctrl_ZN(r32,v)                    _BFSET_(r32,12, 8,v)
    #define   GET16FLpadRing_ctrl_ZN(r16)                      _BFGET_(r16,12, 8)
    #define   SET16FLpadRing_ctrl_ZN(r16,v)                    _BFSET_(r16,12, 8,v)

    #define     w32FLpadRing_ctrl                              {\
            UNSG32 uctrl_REG_PDB_CORE                          :  1;\
            UNSG32 uctrl_ODT_EN                                :  2;\
            UNSG32 uctrl_ZP                                    :  5;\
            UNSG32 uctrl_ZN                                    :  5;\
            UNSG32 RSVDx0_b13                                  : 19;\
          }
    union { UNSG32 u32FLpadRing_ctrl;
            struct w32FLpadRing_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_FLpadRing;

    typedef union  T32FLpadRing_ctrl
          { UNSG32 u32;
            struct w32FLpadRing_ctrl;
                 } T32FLpadRing_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TFLpadRing_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32FLpadRing_ctrl;
                   };
                 } TFLpadRing_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 FLpadRing_drvrd(SIE_FLpadRing *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 FLpadRing_drvwr(SIE_FLpadRing *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void FLpadRing_reset(SIE_FLpadRing *p);
     SIGN32 FLpadRing_cmp  (SIE_FLpadRing *p, SIE_FLpadRing *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define FLpadRing_check(p,pie,pfx,hLOG) FLpadRing_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define FLpadRing_print(p,    pfx,hLOG) FLpadRing_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: FLpadRing
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE EMMC_PHY_PAD                             (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               %unsigned 1  PWRDN                     0x0
///                                    ###
///                                    * 0:Normal use
///                                    * 1: tristate pad and turn off termination
///                                    ###
///               %unsigned 1  PU                        0x0
///                                    ###
///                                    * 0: Disable Pullup for DQ
///                                    * 1: Enable Pullup for DQ
///                                    ###
///               %unsigned 1  PD                        0x0
///                                    ###
///                                    * 0: Disable Pulldown for DQ
///                                    * 1; Enable Pulldown for DQ
///                                    ###
///               %unsigned 1  RECEN                     0x1
///                                    ###
///                                    * 0:disable receiver for DQ
///                                    * 1: enable receiver for DQ
///                                    ###
///               %unsigned 1  RCVTYPE                   0x1
///                                    ###
///                                    * 0: differential receiver
///                                    * 1: CMOS receiver
///                                    ###
///               %%        27         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:       5b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_EMMC_PHY_PAD
#define h_EMMC_PHY_PAD (){}

    #define     RA_EMMC_PHY_PAD_ctrl                           0x0000

    #define     BA_EMMC_PHY_PAD_ctrl_PWRDN                     0x0000
    #define     B16EMMC_PHY_PAD_ctrl_PWRDN                     0x0000
    #define   LSb32EMMC_PHY_PAD_ctrl_PWRDN                        0
    #define   LSb16EMMC_PHY_PAD_ctrl_PWRDN                        0
    #define       bEMMC_PHY_PAD_ctrl_PWRDN                     1
    #define   MSK32EMMC_PHY_PAD_ctrl_PWRDN                        0x00000001

    #define     BA_EMMC_PHY_PAD_ctrl_PU                        0x0000
    #define     B16EMMC_PHY_PAD_ctrl_PU                        0x0000
    #define   LSb32EMMC_PHY_PAD_ctrl_PU                           1
    #define   LSb16EMMC_PHY_PAD_ctrl_PU                           1
    #define       bEMMC_PHY_PAD_ctrl_PU                        1
    #define   MSK32EMMC_PHY_PAD_ctrl_PU                           0x00000002

    #define     BA_EMMC_PHY_PAD_ctrl_PD                        0x0000
    #define     B16EMMC_PHY_PAD_ctrl_PD                        0x0000
    #define   LSb32EMMC_PHY_PAD_ctrl_PD                           2
    #define   LSb16EMMC_PHY_PAD_ctrl_PD                           2
    #define       bEMMC_PHY_PAD_ctrl_PD                        1
    #define   MSK32EMMC_PHY_PAD_ctrl_PD                           0x00000004

    #define     BA_EMMC_PHY_PAD_ctrl_RECEN                     0x0000
    #define     B16EMMC_PHY_PAD_ctrl_RECEN                     0x0000
    #define   LSb32EMMC_PHY_PAD_ctrl_RECEN                        3
    #define   LSb16EMMC_PHY_PAD_ctrl_RECEN                        3
    #define       bEMMC_PHY_PAD_ctrl_RECEN                     1
    #define   MSK32EMMC_PHY_PAD_ctrl_RECEN                        0x00000008

    #define     BA_EMMC_PHY_PAD_ctrl_RCVTYPE                   0x0000
    #define     B16EMMC_PHY_PAD_ctrl_RCVTYPE                   0x0000
    #define   LSb32EMMC_PHY_PAD_ctrl_RCVTYPE                      4
    #define   LSb16EMMC_PHY_PAD_ctrl_RCVTYPE                      4
    #define       bEMMC_PHY_PAD_ctrl_RCVTYPE                   1
    #define   MSK32EMMC_PHY_PAD_ctrl_RCVTYPE                      0x00000010
    ///////////////////////////////////////////////////////////

    typedef struct SIE_EMMC_PHY_PAD {
    ///////////////////////////////////////////////////////////
    #define   GET32EMMC_PHY_PAD_ctrl_PWRDN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32EMMC_PHY_PAD_ctrl_PWRDN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16EMMC_PHY_PAD_ctrl_PWRDN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16EMMC_PHY_PAD_ctrl_PWRDN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32EMMC_PHY_PAD_ctrl_PU(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32EMMC_PHY_PAD_ctrl_PU(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16EMMC_PHY_PAD_ctrl_PU(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16EMMC_PHY_PAD_ctrl_PU(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32EMMC_PHY_PAD_ctrl_PD(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32EMMC_PHY_PAD_ctrl_PD(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16EMMC_PHY_PAD_ctrl_PD(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16EMMC_PHY_PAD_ctrl_PD(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32EMMC_PHY_PAD_ctrl_RECEN(r32)                _BFGET_(r32, 3, 3)
    #define   SET32EMMC_PHY_PAD_ctrl_RECEN(r32,v)              _BFSET_(r32, 3, 3,v)
    #define   GET16EMMC_PHY_PAD_ctrl_RECEN(r16)                _BFGET_(r16, 3, 3)
    #define   SET16EMMC_PHY_PAD_ctrl_RECEN(r16,v)              _BFSET_(r16, 3, 3,v)

    #define   GET32EMMC_PHY_PAD_ctrl_RCVTYPE(r32)              _BFGET_(r32, 4, 4)
    #define   SET32EMMC_PHY_PAD_ctrl_RCVTYPE(r32,v)            _BFSET_(r32, 4, 4,v)
    #define   GET16EMMC_PHY_PAD_ctrl_RCVTYPE(r16)              _BFGET_(r16, 4, 4)
    #define   SET16EMMC_PHY_PAD_ctrl_RCVTYPE(r16,v)            _BFSET_(r16, 4, 4,v)

    #define     w32EMMC_PHY_PAD_ctrl                           {\
            UNSG32 uctrl_PWRDN                                 :  1;\
            UNSG32 uctrl_PU                                    :  1;\
            UNSG32 uctrl_PD                                    :  1;\
            UNSG32 uctrl_RECEN                                 :  1;\
            UNSG32 uctrl_RCVTYPE                               :  1;\
            UNSG32 RSVDx0_b5                                   : 27;\
          }
    union { UNSG32 u32EMMC_PHY_PAD_ctrl;
            struct w32EMMC_PHY_PAD_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_EMMC_PHY_PAD;

    typedef union  T32EMMC_PHY_PAD_ctrl
          { UNSG32 u32;
            struct w32EMMC_PHY_PAD_ctrl;
                 } T32EMMC_PHY_PAD_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TEMMC_PHY_PAD_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32EMMC_PHY_PAD_ctrl;
                   };
                 } TEMMC_PHY_PAD_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 EMMC_PHY_PAD_drvrd(SIE_EMMC_PHY_PAD *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 EMMC_PHY_PAD_drvwr(SIE_EMMC_PHY_PAD *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void EMMC_PHY_PAD_reset(SIE_EMMC_PHY_PAD *p);
     SIGN32 EMMC_PHY_PAD_cmp  (SIE_EMMC_PHY_PAD *p, SIE_EMMC_PHY_PAD *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define EMMC_PHY_PAD_check(p,pie,pfx,hLOG) EMMC_PHY_PAD_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define EMMC_PHY_PAD_print(p,    pfx,hLOG) EMMC_PHY_PAD_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: EMMC_PHY_PAD
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE EMMC_DRVCNTL                             (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               %unsigned 1  ODT_SEL0                  0x0
///                                    ###
///                                    * On Die Termination
///                                    ###
///               %unsigned 1  ODT_SEL1                  0x0
///                                    ###
///                                    * On Die Termination
///                                    ###
///               %unsigned 5  ZPR                       0x1F
///                                    ###
///                                    * P Driver Per-finger drive strength. Controls the P-side output drive strength.
///                                    ###
///               %unsigned 5  ZNR                       0x1F
///                                    ###
///                                    * N Driver Per-finger drive strenth. Controls the N-side output drive strength.
///                                    ###
///               %unsigned 1  ZD                        0x1
///                                    ###
///                                    * Reserved
///                                    ###
///               %%        19         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      13b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_EMMC_DRVCNTL
#define h_EMMC_DRVCNTL (){}

    #define     RA_EMMC_DRVCNTL_ctrl                           0x0000

    #define     BA_EMMC_DRVCNTL_ctrl_ODT_SEL0                  0x0000
    #define     B16EMMC_DRVCNTL_ctrl_ODT_SEL0                  0x0000
    #define   LSb32EMMC_DRVCNTL_ctrl_ODT_SEL0                     0
    #define   LSb16EMMC_DRVCNTL_ctrl_ODT_SEL0                     0
    #define       bEMMC_DRVCNTL_ctrl_ODT_SEL0                  1
    #define   MSK32EMMC_DRVCNTL_ctrl_ODT_SEL0                     0x00000001

    #define     BA_EMMC_DRVCNTL_ctrl_ODT_SEL1                  0x0000
    #define     B16EMMC_DRVCNTL_ctrl_ODT_SEL1                  0x0000
    #define   LSb32EMMC_DRVCNTL_ctrl_ODT_SEL1                     1
    #define   LSb16EMMC_DRVCNTL_ctrl_ODT_SEL1                     1
    #define       bEMMC_DRVCNTL_ctrl_ODT_SEL1                  1
    #define   MSK32EMMC_DRVCNTL_ctrl_ODT_SEL1                     0x00000002

    #define     BA_EMMC_DRVCNTL_ctrl_ZPR                       0x0000
    #define     B16EMMC_DRVCNTL_ctrl_ZPR                       0x0000
    #define   LSb32EMMC_DRVCNTL_ctrl_ZPR                          2
    #define   LSb16EMMC_DRVCNTL_ctrl_ZPR                          2
    #define       bEMMC_DRVCNTL_ctrl_ZPR                       5
    #define   MSK32EMMC_DRVCNTL_ctrl_ZPR                          0x0000007C

    #define     BA_EMMC_DRVCNTL_ctrl_ZNR                       0x0000
    #define     B16EMMC_DRVCNTL_ctrl_ZNR                       0x0000
    #define   LSb32EMMC_DRVCNTL_ctrl_ZNR                          7
    #define   LSb16EMMC_DRVCNTL_ctrl_ZNR                          7
    #define       bEMMC_DRVCNTL_ctrl_ZNR                       5
    #define   MSK32EMMC_DRVCNTL_ctrl_ZNR                          0x00000F80

    #define     BA_EMMC_DRVCNTL_ctrl_ZD                        0x0001
    #define     B16EMMC_DRVCNTL_ctrl_ZD                        0x0000
    #define   LSb32EMMC_DRVCNTL_ctrl_ZD                           12
    #define   LSb16EMMC_DRVCNTL_ctrl_ZD                           12
    #define       bEMMC_DRVCNTL_ctrl_ZD                        1
    #define   MSK32EMMC_DRVCNTL_ctrl_ZD                           0x00001000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_EMMC_DRVCNTL {
    ///////////////////////////////////////////////////////////
    #define   GET32EMMC_DRVCNTL_ctrl_ODT_SEL0(r32)             _BFGET_(r32, 0, 0)
    #define   SET32EMMC_DRVCNTL_ctrl_ODT_SEL0(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16EMMC_DRVCNTL_ctrl_ODT_SEL0(r16)             _BFGET_(r16, 0, 0)
    #define   SET16EMMC_DRVCNTL_ctrl_ODT_SEL0(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32EMMC_DRVCNTL_ctrl_ODT_SEL1(r32)             _BFGET_(r32, 1, 1)
    #define   SET32EMMC_DRVCNTL_ctrl_ODT_SEL1(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16EMMC_DRVCNTL_ctrl_ODT_SEL1(r16)             _BFGET_(r16, 1, 1)
    #define   SET16EMMC_DRVCNTL_ctrl_ODT_SEL1(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32EMMC_DRVCNTL_ctrl_ZPR(r32)                  _BFGET_(r32, 6, 2)
    #define   SET32EMMC_DRVCNTL_ctrl_ZPR(r32,v)                _BFSET_(r32, 6, 2,v)
    #define   GET16EMMC_DRVCNTL_ctrl_ZPR(r16)                  _BFGET_(r16, 6, 2)
    #define   SET16EMMC_DRVCNTL_ctrl_ZPR(r16,v)                _BFSET_(r16, 6, 2,v)

    #define   GET32EMMC_DRVCNTL_ctrl_ZNR(r32)                  _BFGET_(r32,11, 7)
    #define   SET32EMMC_DRVCNTL_ctrl_ZNR(r32,v)                _BFSET_(r32,11, 7,v)
    #define   GET16EMMC_DRVCNTL_ctrl_ZNR(r16)                  _BFGET_(r16,11, 7)
    #define   SET16EMMC_DRVCNTL_ctrl_ZNR(r16,v)                _BFSET_(r16,11, 7,v)

    #define   GET32EMMC_DRVCNTL_ctrl_ZD(r32)                   _BFGET_(r32,12,12)
    #define   SET32EMMC_DRVCNTL_ctrl_ZD(r32,v)                 _BFSET_(r32,12,12,v)
    #define   GET16EMMC_DRVCNTL_ctrl_ZD(r16)                   _BFGET_(r16,12,12)
    #define   SET16EMMC_DRVCNTL_ctrl_ZD(r16,v)                 _BFSET_(r16,12,12,v)

    #define     w32EMMC_DRVCNTL_ctrl                           {\
            UNSG32 uctrl_ODT_SEL0                              :  1;\
            UNSG32 uctrl_ODT_SEL1                              :  1;\
            UNSG32 uctrl_ZPR                                   :  5;\
            UNSG32 uctrl_ZNR                                   :  5;\
            UNSG32 uctrl_ZD                                    :  1;\
            UNSG32 RSVDx0_b13                                  : 19;\
          }
    union { UNSG32 u32EMMC_DRVCNTL_ctrl;
            struct w32EMMC_DRVCNTL_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_EMMC_DRVCNTL;

    typedef union  T32EMMC_DRVCNTL_ctrl
          { UNSG32 u32;
            struct w32EMMC_DRVCNTL_ctrl;
                 } T32EMMC_DRVCNTL_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TEMMC_DRVCNTL_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32EMMC_DRVCNTL_ctrl;
                   };
                 } TEMMC_DRVCNTL_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 EMMC_DRVCNTL_drvrd(SIE_EMMC_DRVCNTL *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 EMMC_DRVCNTL_drvwr(SIE_EMMC_DRVCNTL *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void EMMC_DRVCNTL_reset(SIE_EMMC_DRVCNTL *p);
     SIGN32 EMMC_DRVCNTL_cmp  (SIE_EMMC_DRVCNTL *p, SIE_EMMC_DRVCNTL *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define EMMC_DRVCNTL_check(p,pie,pfx,hLOG) EMMC_DRVCNTL_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define EMMC_DRVCNTL_print(p,    pfx,hLOG) EMMC_DRVCNTL_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: EMMC_DRVCNTL
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE EMMCS28_PAD                              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               %unsigned 1  REG_PDB_CORE              0x1
///                                    ###
///                                    * 0: PWRDN
///                                    * 1: NORMAL
///                                    * When REG_PDB_CORE is logic “1”, the regulator works in normal mode and consumes ~60uA current at typical 25degC. When REG_PDB_CORE is logic “0”, the regulator works in power-down mode and consumes ~6uA current at typical 25degC.
///                                    ###
///               %unsigned 1  V18EN_CORE                0x0
///               %unsigned 1  V25EN_CORE                0x0
///                                    ###
///                                    * V18EN_CORE and V25EN_CORE are settings for different IO supply level.
///                                    * V18EN_CORE=0, V25EN-CORE=0: 3.3V
///                                    * V18EN_CORE=0,V25EN_CORE=1: 2.5V
///                                    * V18EN_CORE=1,V25EN_CORE=X: 1.5V, 1.5V or 1.8V.
///                                    ###
///               %unsigned 5  ZP                        0x1F
///                                    ###
///                                    * ZP[3:0] is used to program PMOS output driver strength for PADXDC_HSIOB.
///                                    * ZP[3:0] = “1111” is the strongest setting.
///                                    ###
///               %unsigned 5  ZN                        0x1F
///                                    ###
///                                    * ZN[3:0] is used to program NMOS output driver strength for PADXDC_HSIOB.
///                                    * ZN[3:0] = “1111” is the strongest setting.
///                                    ###
///               %unsigned 1  PDB_CORE                  0x1
///                                    ###
///                                    * Active low signal to place pads in power-down mode by driving ring signal LOW_VDDB_R=0;
///                                    * 0: power-down
///                                    * 1: normal mode
///                                    * This signal is not to be mistaken with REG_PDB_CORE. REG_PDB_CORE is to power-down the regulator and make all signal pads tristated.
///                                    ###
///               %%        18         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      14b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_EMMCS28_PAD
#define h_EMMCS28_PAD (){}

    #define     RA_EMMCS28_PAD_ctrl                            0x0000

    #define     BA_EMMCS28_PAD_ctrl_REG_PDB_CORE               0x0000
    #define     B16EMMCS28_PAD_ctrl_REG_PDB_CORE               0x0000
    #define   LSb32EMMCS28_PAD_ctrl_REG_PDB_CORE                  0
    #define   LSb16EMMCS28_PAD_ctrl_REG_PDB_CORE                  0
    #define       bEMMCS28_PAD_ctrl_REG_PDB_CORE               1
    #define   MSK32EMMCS28_PAD_ctrl_REG_PDB_CORE                  0x00000001

    #define     BA_EMMCS28_PAD_ctrl_V18EN_CORE                 0x0000
    #define     B16EMMCS28_PAD_ctrl_V18EN_CORE                 0x0000
    #define   LSb32EMMCS28_PAD_ctrl_V18EN_CORE                    1
    #define   LSb16EMMCS28_PAD_ctrl_V18EN_CORE                    1
    #define       bEMMCS28_PAD_ctrl_V18EN_CORE                 1
    #define   MSK32EMMCS28_PAD_ctrl_V18EN_CORE                    0x00000002

    #define     BA_EMMCS28_PAD_ctrl_V25EN_CORE                 0x0000
    #define     B16EMMCS28_PAD_ctrl_V25EN_CORE                 0x0000
    #define   LSb32EMMCS28_PAD_ctrl_V25EN_CORE                    2
    #define   LSb16EMMCS28_PAD_ctrl_V25EN_CORE                    2
    #define       bEMMCS28_PAD_ctrl_V25EN_CORE                 1
    #define   MSK32EMMCS28_PAD_ctrl_V25EN_CORE                    0x00000004

    #define     BA_EMMCS28_PAD_ctrl_ZP                         0x0000
    #define     B16EMMCS28_PAD_ctrl_ZP                         0x0000
    #define   LSb32EMMCS28_PAD_ctrl_ZP                            3
    #define   LSb16EMMCS28_PAD_ctrl_ZP                            3
    #define       bEMMCS28_PAD_ctrl_ZP                         5
    #define   MSK32EMMCS28_PAD_ctrl_ZP                            0x000000F8

    #define     BA_EMMCS28_PAD_ctrl_ZN                         0x0001
    #define     B16EMMCS28_PAD_ctrl_ZN                         0x0000
    #define   LSb32EMMCS28_PAD_ctrl_ZN                            8
    #define   LSb16EMMCS28_PAD_ctrl_ZN                            8
    #define       bEMMCS28_PAD_ctrl_ZN                         5
    #define   MSK32EMMCS28_PAD_ctrl_ZN                            0x00001F00

    #define     BA_EMMCS28_PAD_ctrl_PDB_CORE                   0x0001
    #define     B16EMMCS28_PAD_ctrl_PDB_CORE                   0x0000
    #define   LSb32EMMCS28_PAD_ctrl_PDB_CORE                      13
    #define   LSb16EMMCS28_PAD_ctrl_PDB_CORE                      13
    #define       bEMMCS28_PAD_ctrl_PDB_CORE                   1
    #define   MSK32EMMCS28_PAD_ctrl_PDB_CORE                      0x00002000
    ///////////////////////////////////////////////////////////

    typedef struct SIE_EMMCS28_PAD {
    ///////////////////////////////////////////////////////////
    #define   GET32EMMCS28_PAD_ctrl_REG_PDB_CORE(r32)          _BFGET_(r32, 0, 0)
    #define   SET32EMMCS28_PAD_ctrl_REG_PDB_CORE(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16EMMCS28_PAD_ctrl_REG_PDB_CORE(r16)          _BFGET_(r16, 0, 0)
    #define   SET16EMMCS28_PAD_ctrl_REG_PDB_CORE(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32EMMCS28_PAD_ctrl_V18EN_CORE(r32)            _BFGET_(r32, 1, 1)
    #define   SET32EMMCS28_PAD_ctrl_V18EN_CORE(r32,v)          _BFSET_(r32, 1, 1,v)
    #define   GET16EMMCS28_PAD_ctrl_V18EN_CORE(r16)            _BFGET_(r16, 1, 1)
    #define   SET16EMMCS28_PAD_ctrl_V18EN_CORE(r16,v)          _BFSET_(r16, 1, 1,v)

    #define   GET32EMMCS28_PAD_ctrl_V25EN_CORE(r32)            _BFGET_(r32, 2, 2)
    #define   SET32EMMCS28_PAD_ctrl_V25EN_CORE(r32,v)          _BFSET_(r32, 2, 2,v)
    #define   GET16EMMCS28_PAD_ctrl_V25EN_CORE(r16)            _BFGET_(r16, 2, 2)
    #define   SET16EMMCS28_PAD_ctrl_V25EN_CORE(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32EMMCS28_PAD_ctrl_ZP(r32)                    _BFGET_(r32, 7, 3)
    #define   SET32EMMCS28_PAD_ctrl_ZP(r32,v)                  _BFSET_(r32, 7, 3,v)
    #define   GET16EMMCS28_PAD_ctrl_ZP(r16)                    _BFGET_(r16, 7, 3)
    #define   SET16EMMCS28_PAD_ctrl_ZP(r16,v)                  _BFSET_(r16, 7, 3,v)

    #define   GET32EMMCS28_PAD_ctrl_ZN(r32)                    _BFGET_(r32,12, 8)
    #define   SET32EMMCS28_PAD_ctrl_ZN(r32,v)                  _BFSET_(r32,12, 8,v)
    #define   GET16EMMCS28_PAD_ctrl_ZN(r16)                    _BFGET_(r16,12, 8)
    #define   SET16EMMCS28_PAD_ctrl_ZN(r16,v)                  _BFSET_(r16,12, 8,v)

    #define   GET32EMMCS28_PAD_ctrl_PDB_CORE(r32)              _BFGET_(r32,13,13)
    #define   SET32EMMCS28_PAD_ctrl_PDB_CORE(r32,v)            _BFSET_(r32,13,13,v)
    #define   GET16EMMCS28_PAD_ctrl_PDB_CORE(r16)              _BFGET_(r16,13,13)
    #define   SET16EMMCS28_PAD_ctrl_PDB_CORE(r16,v)            _BFSET_(r16,13,13,v)

    #define     w32EMMCS28_PAD_ctrl                            {\
            UNSG32 uctrl_REG_PDB_CORE                          :  1;\
            UNSG32 uctrl_V18EN_CORE                            :  1;\
            UNSG32 uctrl_V25EN_CORE                            :  1;\
            UNSG32 uctrl_ZP                                    :  5;\
            UNSG32 uctrl_ZN                                    :  5;\
            UNSG32 uctrl_PDB_CORE                              :  1;\
            UNSG32 RSVDx0_b14                                  : 18;\
          }
    union { UNSG32 u32EMMCS28_PAD_ctrl;
            struct w32EMMCS28_PAD_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_EMMCS28_PAD;

    typedef union  T32EMMCS28_PAD_ctrl
          { UNSG32 u32;
            struct w32EMMCS28_PAD_ctrl;
                 } T32EMMCS28_PAD_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TEMMCS28_PAD_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32EMMCS28_PAD_ctrl;
                   };
                 } TEMMCS28_PAD_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 EMMCS28_PAD_drvrd(SIE_EMMCS28_PAD *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 EMMCS28_PAD_drvwr(SIE_EMMCS28_PAD *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void EMMCS28_PAD_reset(SIE_EMMCS28_PAD *p);
     SIGN32 EMMCS28_PAD_cmp  (SIE_EMMCS28_PAD *p, SIE_EMMCS28_PAD *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define EMMCS28_PAD_check(p,pie,pfx,hLOG) EMMCS28_PAD_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define EMMCS28_PAD_print(p,    pfx,hLOG) EMMCS28_PAD_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: EMMCS28_PAD
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE TSEN                                     (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CTRL                 (P-)
///               ###
///               * PLL Control register
///               ###
///               %unsigned 1  ENA                       0x0
///                                    ###
///                                    * An asynchronous control signal commanding the sensor to re-evaluate the local die PVT parameter (active High). When ENA goes from 0 to 1, all control signals: VSAMPLE, PSAMPLE[1:0], TRIMG[4:0] and TRIMO[5:0], will be sampled.
///                                    ###
///               %unsigned 1  CLK_EN                    0x0
///                                    ###
///                                    * Enable to the divby20 clock divider circuit to generate clock TSEN_CLK
///                                    ###
///               %unsigned 2  PSAMPLE                   0x0
///                                    ###
///                                    * Select for Process sample mode
///                                    * ENA =0, VSAMPLE=PSAMPLE0=PSAMPLE1=X => Reset
///                                    * ENA=1, VSAMPLE=PSAMPLE0=PSAMPLE1=0   => Temperature
///                                    * ENA=1, VSAMPLE=1, PSAMPLE0=PSAMPLE1=X => Voltage evaluation.
///                                    * ENA=1, VSAMPLE=0, PSAMPLE0=1, PSAMPLE1=0 => Process evaluation (LVT)
///                                    * ENA=1, VSAMPLE=0, PSAMPLE0=0, PSAMPLE1=1 => Process evaluation (ULVT)
///                                    * ENA=1, VSAMPLE=0, PSAMPLE0=1, PSAMPLE1=1 => Process evaluation (SLVT)
///                                    ###
///               %unsigned 1  VSAMPLE                   0x0
///                                    ###
///                                    * Select for voltage sample mode (active High)
///                                    ###
///               %unsigned 5  TRIMG                     0xF
///                                    ###
///                                    * Trim gain bits. Optional programmable inputs which may be used to improve the absolute accuracy of the temperature sensor.
///                                    ###
///               %unsigned 6  TRIMO                     0x0
///                                    ###
///                                    * Trim offset bits. Optional programmable inputs which may be used to improve the absolute accuracy of the temperature sensor.
///                                    ###
///               %unsigned 5  TSEN_DAT_LT               0x0
///                                    ###
///                                    * Delay interms of pclk after data ready at which the data is to be latched
///                                    ###
///               %unsigned 1  TSEN_CONT_SAMPLE_EN       0x0
///                                    ###
///                                    * When set TSEN continuous sample mode is enabled
///                                    * Please set TSEN_CONT_SAMPLE_INTERVAL register for sampling interval
///                                    * Also disable TSEN_ENA in continuous sample mode.
///                                    ###
///               %%        10         # Stuffing bits...
///     @ 0x00004 TSEN_CONT_SAMPLE     (P-)
///               %unsigned 32 INTERVAL_TIMER            0xFFFF
///                                    ###
///                                    * TSEN continuous sample interval
///                                    * Default is 2.6 ms interval
///                                    * Also minimum interval has to be 1 clk as TSEN needs to see 0 to 1 transition on Enable port
///                                    ###
///     @ 0x00008 STATUS               (RW)
///               ###
///               * TSEN status register
///               ###
///               %unsigned 1  DATA_RDY                  0x0
///                                    ###
///                                    * ADC data ready, write 0 to clear interrupt, write 1 won't effect anything
///                                    * 0: no valid data
///                                    * 1: data ready to read
///                                    ###
///               %unsigned 1  INT_EN                    0x0
///                                    ###
///                                    * ADC interrupt enable
///                                    * 0: disable
///                                    * 1: enable
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x0000C DATA                 (R-)
///               %unsigned 10 DATA
///                                    ###
///                                    * A 10 bit output representing the sensed temperature or voltage.
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x00010 TSEN_CHK_CTRL        (P-)
///               %unsigned 10 TSEN_DATA_MAX             0x3FF
///                                    ###
///                                    * Maximum value used to check against TSEN_DATA
///                                    ###
///               %unsigned 10 TSEN_DATA_MIN             0x0
///                                    ###
///                                    * Minimum value used to check against TSEN_DATA
///                                    ###
///               %unsigned 1  TSEN_OVERHEAT_SEL         0x0
///                                    ###
///                                    * 0: Overheat flag uses TSEN_MAX_FAIL
///                                    * 1: Overheat flag uses TSEN_MIN_FAIL
///                                    ###
///               %%        11         # Stuffing bits...
///     @ 0x00014 TSEN_DATA_STATUS     (R-)
///               ###
///               * SM TSEN Data Threshold Check Status
///               ###
///               %unsigned 1  TSEN_MAX_FAIL             0x0
///                                    ###
///                                    * 0: TSEN_DATA <= TSEN_DATA_MAX
///                                    * 1: TSEN_DATA > TSEN_DATA_MAX
///                                    ###
///               %unsigned 1  TSEN_MIN_FAIL             0x0
///                                    ###
///                                    * 0: TSEN_DATA >= TSEN_DATA_MIN
///                                    * 1: TSEN_DATA < TSEN_DATA_MIN
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      24B, bits:      89b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_TSEN
#define h_TSEN (){}

    #define     RA_TSEN_CTRL                                   0x0000

    #define     BA_TSEN_CTRL_ENA                               0x0000
    #define     B16TSEN_CTRL_ENA                               0x0000
    #define   LSb32TSEN_CTRL_ENA                                  0
    #define   LSb16TSEN_CTRL_ENA                                  0
    #define       bTSEN_CTRL_ENA                               1
    #define   MSK32TSEN_CTRL_ENA                                  0x00000001

    #define     BA_TSEN_CTRL_CLK_EN                            0x0000
    #define     B16TSEN_CTRL_CLK_EN                            0x0000
    #define   LSb32TSEN_CTRL_CLK_EN                               1
    #define   LSb16TSEN_CTRL_CLK_EN                               1
    #define       bTSEN_CTRL_CLK_EN                            1
    #define   MSK32TSEN_CTRL_CLK_EN                               0x00000002

    #define     BA_TSEN_CTRL_PSAMPLE                           0x0000
    #define     B16TSEN_CTRL_PSAMPLE                           0x0000
    #define   LSb32TSEN_CTRL_PSAMPLE                              2
    #define   LSb16TSEN_CTRL_PSAMPLE                              2
    #define       bTSEN_CTRL_PSAMPLE                           2
    #define   MSK32TSEN_CTRL_PSAMPLE                              0x0000000C

    #define     BA_TSEN_CTRL_VSAMPLE                           0x0000
    #define     B16TSEN_CTRL_VSAMPLE                           0x0000
    #define   LSb32TSEN_CTRL_VSAMPLE                              4
    #define   LSb16TSEN_CTRL_VSAMPLE                              4
    #define       bTSEN_CTRL_VSAMPLE                           1
    #define   MSK32TSEN_CTRL_VSAMPLE                              0x00000010

    #define     BA_TSEN_CTRL_TRIMG                             0x0000
    #define     B16TSEN_CTRL_TRIMG                             0x0000
    #define   LSb32TSEN_CTRL_TRIMG                                5
    #define   LSb16TSEN_CTRL_TRIMG                                5
    #define       bTSEN_CTRL_TRIMG                             5
    #define   MSK32TSEN_CTRL_TRIMG                                0x000003E0

    #define     BA_TSEN_CTRL_TRIMO                             0x0001
    #define     B16TSEN_CTRL_TRIMO                             0x0000
    #define   LSb32TSEN_CTRL_TRIMO                                10
    #define   LSb16TSEN_CTRL_TRIMO                                10
    #define       bTSEN_CTRL_TRIMO                             6
    #define   MSK32TSEN_CTRL_TRIMO                                0x0000FC00

    #define     BA_TSEN_CTRL_TSEN_DAT_LT                       0x0002
    #define     B16TSEN_CTRL_TSEN_DAT_LT                       0x0002
    #define   LSb32TSEN_CTRL_TSEN_DAT_LT                          16
    #define   LSb16TSEN_CTRL_TSEN_DAT_LT                          0
    #define       bTSEN_CTRL_TSEN_DAT_LT                       5
    #define   MSK32TSEN_CTRL_TSEN_DAT_LT                          0x001F0000

    #define     BA_TSEN_CTRL_TSEN_CONT_SAMPLE_EN               0x0002
    #define     B16TSEN_CTRL_TSEN_CONT_SAMPLE_EN               0x0002
    #define   LSb32TSEN_CTRL_TSEN_CONT_SAMPLE_EN                  21
    #define   LSb16TSEN_CTRL_TSEN_CONT_SAMPLE_EN                  5
    #define       bTSEN_CTRL_TSEN_CONT_SAMPLE_EN               1
    #define   MSK32TSEN_CTRL_TSEN_CONT_SAMPLE_EN                  0x00200000
    ///////////////////////////////////////////////////////////
    #define     RA_TSEN_TSEN_CONT_SAMPLE                       0x0004

    #define     BA_TSEN_TSEN_CONT_SAMPLE_INTERVAL_TIMER        0x0004
    #define     B16TSEN_TSEN_CONT_SAMPLE_INTERVAL_TIMER        0x0004
    #define   LSb32TSEN_TSEN_CONT_SAMPLE_INTERVAL_TIMER           0
    #define   LSb16TSEN_TSEN_CONT_SAMPLE_INTERVAL_TIMER           0
    #define       bTSEN_TSEN_CONT_SAMPLE_INTERVAL_TIMER        32
    #define   MSK32TSEN_TSEN_CONT_SAMPLE_INTERVAL_TIMER           0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_TSEN_STATUS                                 0x0008

    #define     BA_TSEN_STATUS_DATA_RDY                        0x0008
    #define     B16TSEN_STATUS_DATA_RDY                        0x0008
    #define   LSb32TSEN_STATUS_DATA_RDY                           0
    #define   LSb16TSEN_STATUS_DATA_RDY                           0
    #define       bTSEN_STATUS_DATA_RDY                        1
    #define   MSK32TSEN_STATUS_DATA_RDY                           0x00000001

    #define     BA_TSEN_STATUS_INT_EN                          0x0008
    #define     B16TSEN_STATUS_INT_EN                          0x0008
    #define   LSb32TSEN_STATUS_INT_EN                             1
    #define   LSb16TSEN_STATUS_INT_EN                             1
    #define       bTSEN_STATUS_INT_EN                          1
    #define   MSK32TSEN_STATUS_INT_EN                             0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_TSEN_DATA                                   0x000C

    #define     BA_TSEN_DATA_DATA                              0x000C
    #define     B16TSEN_DATA_DATA                              0x000C
    #define   LSb32TSEN_DATA_DATA                                 0
    #define   LSb16TSEN_DATA_DATA                                 0
    #define       bTSEN_DATA_DATA                              10
    #define   MSK32TSEN_DATA_DATA                                 0x000003FF
    ///////////////////////////////////////////////////////////
    #define     RA_TSEN_TSEN_CHK_CTRL                          0x0010

    #define     BA_TSEN_TSEN_CHK_CTRL_TSEN_DATA_MAX            0x0010
    #define     B16TSEN_TSEN_CHK_CTRL_TSEN_DATA_MAX            0x0010
    #define   LSb32TSEN_TSEN_CHK_CTRL_TSEN_DATA_MAX               0
    #define   LSb16TSEN_TSEN_CHK_CTRL_TSEN_DATA_MAX               0
    #define       bTSEN_TSEN_CHK_CTRL_TSEN_DATA_MAX            10
    #define   MSK32TSEN_TSEN_CHK_CTRL_TSEN_DATA_MAX               0x000003FF

    #define     BA_TSEN_TSEN_CHK_CTRL_TSEN_DATA_MIN            0x0011
    #define     B16TSEN_TSEN_CHK_CTRL_TSEN_DATA_MIN            0x0010
    #define   LSb32TSEN_TSEN_CHK_CTRL_TSEN_DATA_MIN               10
    #define   LSb16TSEN_TSEN_CHK_CTRL_TSEN_DATA_MIN               10
    #define       bTSEN_TSEN_CHK_CTRL_TSEN_DATA_MIN            10
    #define   MSK32TSEN_TSEN_CHK_CTRL_TSEN_DATA_MIN               0x000FFC00

    #define     BA_TSEN_TSEN_CHK_CTRL_TSEN_OVERHEAT_SEL        0x0012
    #define     B16TSEN_TSEN_CHK_CTRL_TSEN_OVERHEAT_SEL        0x0012
    #define   LSb32TSEN_TSEN_CHK_CTRL_TSEN_OVERHEAT_SEL           20
    #define   LSb16TSEN_TSEN_CHK_CTRL_TSEN_OVERHEAT_SEL           4
    #define       bTSEN_TSEN_CHK_CTRL_TSEN_OVERHEAT_SEL        1
    #define   MSK32TSEN_TSEN_CHK_CTRL_TSEN_OVERHEAT_SEL           0x00100000
    ///////////////////////////////////////////////////////////
    #define     RA_TSEN_TSEN_DATA_STATUS                       0x0014

    #define     BA_TSEN_TSEN_DATA_STATUS_TSEN_MAX_FAIL         0x0014
    #define     B16TSEN_TSEN_DATA_STATUS_TSEN_MAX_FAIL         0x0014
    #define   LSb32TSEN_TSEN_DATA_STATUS_TSEN_MAX_FAIL            0
    #define   LSb16TSEN_TSEN_DATA_STATUS_TSEN_MAX_FAIL            0
    #define       bTSEN_TSEN_DATA_STATUS_TSEN_MAX_FAIL         1
    #define   MSK32TSEN_TSEN_DATA_STATUS_TSEN_MAX_FAIL            0x00000001

    #define     BA_TSEN_TSEN_DATA_STATUS_TSEN_MIN_FAIL         0x0014
    #define     B16TSEN_TSEN_DATA_STATUS_TSEN_MIN_FAIL         0x0014
    #define   LSb32TSEN_TSEN_DATA_STATUS_TSEN_MIN_FAIL            1
    #define   LSb16TSEN_TSEN_DATA_STATUS_TSEN_MIN_FAIL            1
    #define       bTSEN_TSEN_DATA_STATUS_TSEN_MIN_FAIL         1
    #define   MSK32TSEN_TSEN_DATA_STATUS_TSEN_MIN_FAIL            0x00000002
    ///////////////////////////////////////////////////////////

    typedef struct SIE_TSEN {
    ///////////////////////////////////////////////////////////
    #define   GET32TSEN_CTRL_ENA(r32)                          _BFGET_(r32, 0, 0)
    #define   SET32TSEN_CTRL_ENA(r32,v)                        _BFSET_(r32, 0, 0,v)
    #define   GET16TSEN_CTRL_ENA(r16)                          _BFGET_(r16, 0, 0)
    #define   SET16TSEN_CTRL_ENA(r16,v)                        _BFSET_(r16, 0, 0,v)

    #define   GET32TSEN_CTRL_CLK_EN(r32)                       _BFGET_(r32, 1, 1)
    #define   SET32TSEN_CTRL_CLK_EN(r32,v)                     _BFSET_(r32, 1, 1,v)
    #define   GET16TSEN_CTRL_CLK_EN(r16)                       _BFGET_(r16, 1, 1)
    #define   SET16TSEN_CTRL_CLK_EN(r16,v)                     _BFSET_(r16, 1, 1,v)

    #define   GET32TSEN_CTRL_PSAMPLE(r32)                      _BFGET_(r32, 3, 2)
    #define   SET32TSEN_CTRL_PSAMPLE(r32,v)                    _BFSET_(r32, 3, 2,v)
    #define   GET16TSEN_CTRL_PSAMPLE(r16)                      _BFGET_(r16, 3, 2)
    #define   SET16TSEN_CTRL_PSAMPLE(r16,v)                    _BFSET_(r16, 3, 2,v)

    #define   GET32TSEN_CTRL_VSAMPLE(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32TSEN_CTRL_VSAMPLE(r32,v)                    _BFSET_(r32, 4, 4,v)
    #define   GET16TSEN_CTRL_VSAMPLE(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16TSEN_CTRL_VSAMPLE(r16,v)                    _BFSET_(r16, 4, 4,v)

    #define   GET32TSEN_CTRL_TRIMG(r32)                        _BFGET_(r32, 9, 5)
    #define   SET32TSEN_CTRL_TRIMG(r32,v)                      _BFSET_(r32, 9, 5,v)
    #define   GET16TSEN_CTRL_TRIMG(r16)                        _BFGET_(r16, 9, 5)
    #define   SET16TSEN_CTRL_TRIMG(r16,v)                      _BFSET_(r16, 9, 5,v)

    #define   GET32TSEN_CTRL_TRIMO(r32)                        _BFGET_(r32,15,10)
    #define   SET32TSEN_CTRL_TRIMO(r32,v)                      _BFSET_(r32,15,10,v)
    #define   GET16TSEN_CTRL_TRIMO(r16)                        _BFGET_(r16,15,10)
    #define   SET16TSEN_CTRL_TRIMO(r16,v)                      _BFSET_(r16,15,10,v)

    #define   GET32TSEN_CTRL_TSEN_DAT_LT(r32)                  _BFGET_(r32,20,16)
    #define   SET32TSEN_CTRL_TSEN_DAT_LT(r32,v)                _BFSET_(r32,20,16,v)
    #define   GET16TSEN_CTRL_TSEN_DAT_LT(r16)                  _BFGET_(r16, 4, 0)
    #define   SET16TSEN_CTRL_TSEN_DAT_LT(r16,v)                _BFSET_(r16, 4, 0,v)

    #define   GET32TSEN_CTRL_TSEN_CONT_SAMPLE_EN(r32)          _BFGET_(r32,21,21)
    #define   SET32TSEN_CTRL_TSEN_CONT_SAMPLE_EN(r32,v)        _BFSET_(r32,21,21,v)
    #define   GET16TSEN_CTRL_TSEN_CONT_SAMPLE_EN(r16)          _BFGET_(r16, 5, 5)
    #define   SET16TSEN_CTRL_TSEN_CONT_SAMPLE_EN(r16,v)        _BFSET_(r16, 5, 5,v)

    #define     w32TSEN_CTRL                                   {\
            UNSG32 uCTRL_ENA                                   :  1;\
            UNSG32 uCTRL_CLK_EN                                :  1;\
            UNSG32 uCTRL_PSAMPLE                               :  2;\
            UNSG32 uCTRL_VSAMPLE                               :  1;\
            UNSG32 uCTRL_TRIMG                                 :  5;\
            UNSG32 uCTRL_TRIMO                                 :  6;\
            UNSG32 uCTRL_TSEN_DAT_LT                           :  5;\
            UNSG32 uCTRL_TSEN_CONT_SAMPLE_EN                   :  1;\
            UNSG32 RSVDx0_b22                                  : 10;\
          }
    union { UNSG32 u32TSEN_CTRL;
            struct w32TSEN_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TSEN_TSEN_CONT_SAMPLE_INTERVAL_TIMER(r32)   _BFGET_(r32,31, 0)
    #define   SET32TSEN_TSEN_CONT_SAMPLE_INTERVAL_TIMER(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32TSEN_TSEN_CONT_SAMPLE                       {\
            UNSG32 uTSEN_CONT_SAMPLE_INTERVAL_TIMER            : 32;\
          }
    union { UNSG32 u32TSEN_TSEN_CONT_SAMPLE;
            struct w32TSEN_TSEN_CONT_SAMPLE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TSEN_STATUS_DATA_RDY(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32TSEN_STATUS_DATA_RDY(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16TSEN_STATUS_DATA_RDY(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16TSEN_STATUS_DATA_RDY(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32TSEN_STATUS_INT_EN(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32TSEN_STATUS_INT_EN(r32,v)                   _BFSET_(r32, 1, 1,v)
    #define   GET16TSEN_STATUS_INT_EN(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16TSEN_STATUS_INT_EN(r16,v)                   _BFSET_(r16, 1, 1,v)

    #define     w32TSEN_STATUS                                 {\
            UNSG32 uSTATUS_DATA_RDY                            :  1;\
            UNSG32 uSTATUS_INT_EN                              :  1;\
            UNSG32 RSVDx8_b2                                   : 30;\
          }
    union { UNSG32 u32TSEN_STATUS;
            struct w32TSEN_STATUS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TSEN_DATA_DATA(r32)                         _BFGET_(r32, 9, 0)
    #define   SET32TSEN_DATA_DATA(r32,v)                       _BFSET_(r32, 9, 0,v)
    #define   GET16TSEN_DATA_DATA(r16)                         _BFGET_(r16, 9, 0)
    #define   SET16TSEN_DATA_DATA(r16,v)                       _BFSET_(r16, 9, 0,v)

    #define     w32TSEN_DATA                                   {\
            UNSG32 uDATA_DATA                                  : 10;\
            UNSG32 RSVDxC_b10                                  : 22;\
          }
    union { UNSG32 u32TSEN_DATA;
            struct w32TSEN_DATA;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TSEN_TSEN_CHK_CTRL_TSEN_DATA_MAX(r32)       _BFGET_(r32, 9, 0)
    #define   SET32TSEN_TSEN_CHK_CTRL_TSEN_DATA_MAX(r32,v)     _BFSET_(r32, 9, 0,v)
    #define   GET16TSEN_TSEN_CHK_CTRL_TSEN_DATA_MAX(r16)       _BFGET_(r16, 9, 0)
    #define   SET16TSEN_TSEN_CHK_CTRL_TSEN_DATA_MAX(r16,v)     _BFSET_(r16, 9, 0,v)

    #define   GET32TSEN_TSEN_CHK_CTRL_TSEN_DATA_MIN(r32)       _BFGET_(r32,19,10)
    #define   SET32TSEN_TSEN_CHK_CTRL_TSEN_DATA_MIN(r32,v)     _BFSET_(r32,19,10,v)

    #define   GET32TSEN_TSEN_CHK_CTRL_TSEN_OVERHEAT_SEL(r32)   _BFGET_(r32,20,20)
    #define   SET32TSEN_TSEN_CHK_CTRL_TSEN_OVERHEAT_SEL(r32,v) _BFSET_(r32,20,20,v)
    #define   GET16TSEN_TSEN_CHK_CTRL_TSEN_OVERHEAT_SEL(r16)   _BFGET_(r16, 4, 4)
    #define   SET16TSEN_TSEN_CHK_CTRL_TSEN_OVERHEAT_SEL(r16,v) _BFSET_(r16, 4, 4,v)

    #define     w32TSEN_TSEN_CHK_CTRL                          {\
            UNSG32 uTSEN_CHK_CTRL_TSEN_DATA_MAX                : 10;\
            UNSG32 uTSEN_CHK_CTRL_TSEN_DATA_MIN                : 10;\
            UNSG32 uTSEN_CHK_CTRL_TSEN_OVERHEAT_SEL            :  1;\
            UNSG32 RSVDx10_b21                                 : 11;\
          }
    union { UNSG32 u32TSEN_TSEN_CHK_CTRL;
            struct w32TSEN_TSEN_CHK_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32TSEN_TSEN_DATA_STATUS_TSEN_MAX_FAIL(r32)    _BFGET_(r32, 0, 0)
    #define   SET32TSEN_TSEN_DATA_STATUS_TSEN_MAX_FAIL(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16TSEN_TSEN_DATA_STATUS_TSEN_MAX_FAIL(r16)    _BFGET_(r16, 0, 0)
    #define   SET16TSEN_TSEN_DATA_STATUS_TSEN_MAX_FAIL(r16,v)  _BFSET_(r16, 0, 0,v)

    #define   GET32TSEN_TSEN_DATA_STATUS_TSEN_MIN_FAIL(r32)    _BFGET_(r32, 1, 1)
    #define   SET32TSEN_TSEN_DATA_STATUS_TSEN_MIN_FAIL(r32,v)  _BFSET_(r32, 1, 1,v)
    #define   GET16TSEN_TSEN_DATA_STATUS_TSEN_MIN_FAIL(r16)    _BFGET_(r16, 1, 1)
    #define   SET16TSEN_TSEN_DATA_STATUS_TSEN_MIN_FAIL(r16,v)  _BFSET_(r16, 1, 1,v)

    #define     w32TSEN_TSEN_DATA_STATUS                       {\
            UNSG32 uTSEN_DATA_STATUS_TSEN_MAX_FAIL             :  1;\
            UNSG32 uTSEN_DATA_STATUS_TSEN_MIN_FAIL             :  1;\
            UNSG32 RSVDx14_b2                                  : 30;\
          }
    union { UNSG32 u32TSEN_TSEN_DATA_STATUS;
            struct w32TSEN_TSEN_DATA_STATUS;
          };
    ///////////////////////////////////////////////////////////
    } SIE_TSEN;

    typedef union  T32TSEN_CTRL
          { UNSG32 u32;
            struct w32TSEN_CTRL;
                 } T32TSEN_CTRL;
    typedef union  T32TSEN_TSEN_CONT_SAMPLE
          { UNSG32 u32;
            struct w32TSEN_TSEN_CONT_SAMPLE;
                 } T32TSEN_TSEN_CONT_SAMPLE;
    typedef union  T32TSEN_STATUS
          { UNSG32 u32;
            struct w32TSEN_STATUS;
                 } T32TSEN_STATUS;
    typedef union  T32TSEN_DATA
          { UNSG32 u32;
            struct w32TSEN_DATA;
                 } T32TSEN_DATA;
    typedef union  T32TSEN_TSEN_CHK_CTRL
          { UNSG32 u32;
            struct w32TSEN_TSEN_CHK_CTRL;
                 } T32TSEN_TSEN_CHK_CTRL;
    typedef union  T32TSEN_TSEN_DATA_STATUS
          { UNSG32 u32;
            struct w32TSEN_TSEN_DATA_STATUS;
                 } T32TSEN_TSEN_DATA_STATUS;
    ///////////////////////////////////////////////////////////

    typedef union  TTSEN_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32TSEN_CTRL;
                   };
                 } TTSEN_CTRL;
    typedef union  TTSEN_TSEN_CONT_SAMPLE
          { UNSG32 u32[1];
            struct {
            struct w32TSEN_TSEN_CONT_SAMPLE;
                   };
                 } TTSEN_TSEN_CONT_SAMPLE;
    typedef union  TTSEN_STATUS
          { UNSG32 u32[1];
            struct {
            struct w32TSEN_STATUS;
                   };
                 } TTSEN_STATUS;
    typedef union  TTSEN_DATA
          { UNSG32 u32[1];
            struct {
            struct w32TSEN_DATA;
                   };
                 } TTSEN_DATA;
    typedef union  TTSEN_TSEN_CHK_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32TSEN_TSEN_CHK_CTRL;
                   };
                 } TTSEN_TSEN_CHK_CTRL;
    typedef union  TTSEN_TSEN_DATA_STATUS
          { UNSG32 u32[1];
            struct {
            struct w32TSEN_TSEN_DATA_STATUS;
                   };
                 } TTSEN_TSEN_DATA_STATUS;

    ///////////////////////////////////////////////////////////
     SIGN32 TSEN_drvrd(SIE_TSEN *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 TSEN_drvwr(SIE_TSEN *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void TSEN_reset(SIE_TSEN *p);
     SIGN32 TSEN_cmp  (SIE_TSEN *p, SIE_TSEN *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define TSEN_check(p,pie,pfx,hLOG) TSEN_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define TSEN_print(p,    pfx,hLOG) TSEN_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: TSEN
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE FEPHY                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 CTRL                 (P-)
///               %unsigned 1  EPHY_RST_N                0x0
///                                    ###
///                                    * Global Reset Low active, asynchronous, used to reset the whole circuit in normal mode
///                                    ###
///               %unsigned 1  EPHY_SHUTDOWN             0x1
///                                    ###
///                                    * Analog block shutdown 1'b1 : shutdown 1'b0 : power up
///                                    ###
///               %unsigned 2  EPHY_MODE                 0x0
///                                    ###
///                                    * Operation mode selection 2'b00 : normal mode 2'b01 : sim mode (Sunplus quick simulation mode) 2'b10 : AFE test mode 2'b11 : reserved
///                                    ###
///               %unsigned 2  EPHY_XMII_SEL             0x0
///                                    ###
///                                    * SMI and MII/RMII interface selection 2'b00 : internal SMI and MII 2'b01 : external SMI and MII 2'b10 : internal SMI and RMII 2'b11 : external SMI and RMII
///                                    ###
///               %unsigned 3  EPHY_CLKSEL               0x4
///                                    ###
///                                    * clock frequency 3'b100: EPHY_CLKIN 25MHz 3'b101: EPHY_CLKIN 27MHz 3'b110: EPHY_CLKIN 24MHz 3'b111: EPHY_CLKIN 50MHz others: reserved
///                                    ###
///               %unsigned 5  EPHY_ID                   0x0
///                                    ###
///                                    * PHY ID for MII/MDIO register PHY Address
///                                    ###
///               %unsigned 1  EPHY_LED_POL              0x0
///                                    ###
///                                    * LED polarity 1'b0 : high active 1'b1 : low active
///                                    ###
///               %unsigned 1  EPHY_BGS_3                0x0
///                                    ###
///                                    * Band Gap Selection Bit 3 EPHY_BGS_3,EPHY_BGS_2, EPHY_BGS_1,EPHY_BGS_0 are grouped to EPHY_BGS[3:0], EPHY_BGS is used to adjust DC voltage and should be trimmed during FT(final test) test. The trimming flow will be described in test plan document
///                                    ###
///               %unsigned 1  EPHY_BGS_2                0x0
///                                    ###
///                                    * Band Gap Selection Bit 3 EPHY_BGS_3,EPHY_BGS_2, EPHY_BGS_1,EPHY_BGS_0 are grouped to EPHY_BGS[3:0], EPHY_BGS is used to adjust DC voltage and should be trimmed during FT(final test) test. The trimming flow will be described in test plan document
///                                    ###
///               %unsigned 1  EPHY_BGS_1                0x0
///                                    ###
///                                    * Band Gap Selection Bit 3 EPHY_BGS_3,EPHY_BGS_2, EPHY_BGS_1,EPHY_BGS_0 are grouped to EPHY_BGS[3:0], EPHY_BGS is used to adjust DC voltage and should be trimmed during FT(final test) test. The trimming flow will be described in test plan document
///                                    ###
///               %unsigned 1  EPHY_BGS_0                0x0
///                                    ###
///                                    * Band Gap Selection Bit 3 EPHY_BGS_3,EPHY_BGS_2, EPHY_BGS_1,EPHY_BGS_0 are grouped to EPHY_BGS[3:0], EPHY_BGS is used to adjust DC voltage and should be trimmed during FT(final test) test. The trimming flow will be described in test plan document
///                                    ###
///               %unsigned 1  BIST_MODE                 0x0
///                                    ###
///                                    * BIST Test Mode Enable 1'b0 : disable 1'b1 : BIST test mode enable
///                                    ###
///               %unsigned 1  EPHY_AFE_CLKSRC_SEL       0x1
///               %unsigned 1  EPHY_AFE_RST_B            0x0
///               %%        10         # Stuffing bits...
///     @ 0x00004 FEPHY_BIST_STATUS    (R-)
///               %unsigned 1  BIST_FINISH_RMII2MII      0x0
///                                    ###
///                                    * BIST Test Finish for RMII2MII 1'b0 : not finish 1'b1 : finish
///                                    ###
///               %unsigned 1  BIST_FAIL_RMII2MII        0x0
///                                    ###
///                                    * BIST Test Fail for RMII2MII 1'b0 : pass if BIST_FINISH_RMII2MII is 1'b1 1'b1 : fail
///                                    ###
///               %unsigned 1  BIST_FINISH_MII2RMII      0x0
///                                    ###
///                                    * BIST Test Finish for MII2RMII 1'b0 : not finish 1'b1 : finish
///                                    ###
///               %unsigned 1  BIST_FAIL_MII2RMII        0x0
///                                    ###
///                                    * BIST Test Fail for MII2RMII 1'b0 : pass if BIST_FINISH_MII2RMII is 1'b1 1'b1 : fail
///                                    ###
///               %unsigned 1  BIST_FINISH_PLPIC         0x0
///                                    ###
///                                    * BIST Test Finish for PLPIC 1'b0 : not finish 1'b1 : finish
///                                    ###
///               %unsigned 1  BIST_FAIL_PLPIC           0x0
///                                    ###
///                                    * BIST Test Fail for PLPIC 1'b0 : pass if BIST_FINISH_PLPIC is 1'b1 1'b1 : fail
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x00008 FEPHY_ADCCLK_FREQCNTR_CNTL (P-)
///               %unsigned 1  FEPHY_ADCCLK_FREQCNTR_EN  0x0
///                                    ###
///                                    * ADCCLK Frequency counter enable. Writing one enables the counter. 0 clears the counter value.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0000C FEPHY_ADCCLK_FREQCNTR_VAL (R-)
///               %unsigned 20 FEPHY_ADCCLK_FREQCNTR_VAL 0x0
///                                    ###
///                                    * ADCCLK Frequency counter value.
///                                    ###
///               %%        12         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      16B, bits:      49b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_FEPHY
#define h_FEPHY (){}

    #define     RA_FEPHY_CTRL                                  0x0000

    #define     BA_FEPHY_CTRL_EPHY_RST_N                       0x0000
    #define     B16FEPHY_CTRL_EPHY_RST_N                       0x0000
    #define   LSb32FEPHY_CTRL_EPHY_RST_N                          0
    #define   LSb16FEPHY_CTRL_EPHY_RST_N                          0
    #define       bFEPHY_CTRL_EPHY_RST_N                       1
    #define   MSK32FEPHY_CTRL_EPHY_RST_N                          0x00000001

    #define     BA_FEPHY_CTRL_EPHY_SHUTDOWN                    0x0000
    #define     B16FEPHY_CTRL_EPHY_SHUTDOWN                    0x0000
    #define   LSb32FEPHY_CTRL_EPHY_SHUTDOWN                       1
    #define   LSb16FEPHY_CTRL_EPHY_SHUTDOWN                       1
    #define       bFEPHY_CTRL_EPHY_SHUTDOWN                    1
    #define   MSK32FEPHY_CTRL_EPHY_SHUTDOWN                       0x00000002

    #define     BA_FEPHY_CTRL_EPHY_MODE                        0x0000
    #define     B16FEPHY_CTRL_EPHY_MODE                        0x0000
    #define   LSb32FEPHY_CTRL_EPHY_MODE                           2
    #define   LSb16FEPHY_CTRL_EPHY_MODE                           2
    #define       bFEPHY_CTRL_EPHY_MODE                        2
    #define   MSK32FEPHY_CTRL_EPHY_MODE                           0x0000000C

    #define     BA_FEPHY_CTRL_EPHY_XMII_SEL                    0x0000
    #define     B16FEPHY_CTRL_EPHY_XMII_SEL                    0x0000
    #define   LSb32FEPHY_CTRL_EPHY_XMII_SEL                       4
    #define   LSb16FEPHY_CTRL_EPHY_XMII_SEL                       4
    #define       bFEPHY_CTRL_EPHY_XMII_SEL                    2
    #define   MSK32FEPHY_CTRL_EPHY_XMII_SEL                       0x00000030

    #define     BA_FEPHY_CTRL_EPHY_CLKSEL                      0x0000
    #define     B16FEPHY_CTRL_EPHY_CLKSEL                      0x0000
    #define   LSb32FEPHY_CTRL_EPHY_CLKSEL                         6
    #define   LSb16FEPHY_CTRL_EPHY_CLKSEL                         6
    #define       bFEPHY_CTRL_EPHY_CLKSEL                      3
    #define   MSK32FEPHY_CTRL_EPHY_CLKSEL                         0x000001C0

    #define     BA_FEPHY_CTRL_EPHY_ID                          0x0001
    #define     B16FEPHY_CTRL_EPHY_ID                          0x0000
    #define   LSb32FEPHY_CTRL_EPHY_ID                             9
    #define   LSb16FEPHY_CTRL_EPHY_ID                             9
    #define       bFEPHY_CTRL_EPHY_ID                          5
    #define   MSK32FEPHY_CTRL_EPHY_ID                             0x00003E00

    #define     BA_FEPHY_CTRL_EPHY_LED_POL                     0x0001
    #define     B16FEPHY_CTRL_EPHY_LED_POL                     0x0000
    #define   LSb32FEPHY_CTRL_EPHY_LED_POL                        14
    #define   LSb16FEPHY_CTRL_EPHY_LED_POL                        14
    #define       bFEPHY_CTRL_EPHY_LED_POL                     1
    #define   MSK32FEPHY_CTRL_EPHY_LED_POL                        0x00004000

    #define     BA_FEPHY_CTRL_EPHY_BGS_3                       0x0001
    #define     B16FEPHY_CTRL_EPHY_BGS_3                       0x0000
    #define   LSb32FEPHY_CTRL_EPHY_BGS_3                          15
    #define   LSb16FEPHY_CTRL_EPHY_BGS_3                          15
    #define       bFEPHY_CTRL_EPHY_BGS_3                       1
    #define   MSK32FEPHY_CTRL_EPHY_BGS_3                          0x00008000

    #define     BA_FEPHY_CTRL_EPHY_BGS_2                       0x0002
    #define     B16FEPHY_CTRL_EPHY_BGS_2                       0x0002
    #define   LSb32FEPHY_CTRL_EPHY_BGS_2                          16
    #define   LSb16FEPHY_CTRL_EPHY_BGS_2                          0
    #define       bFEPHY_CTRL_EPHY_BGS_2                       1
    #define   MSK32FEPHY_CTRL_EPHY_BGS_2                          0x00010000

    #define     BA_FEPHY_CTRL_EPHY_BGS_1                       0x0002
    #define     B16FEPHY_CTRL_EPHY_BGS_1                       0x0002
    #define   LSb32FEPHY_CTRL_EPHY_BGS_1                          17
    #define   LSb16FEPHY_CTRL_EPHY_BGS_1                          1
    #define       bFEPHY_CTRL_EPHY_BGS_1                       1
    #define   MSK32FEPHY_CTRL_EPHY_BGS_1                          0x00020000

    #define     BA_FEPHY_CTRL_EPHY_BGS_0                       0x0002
    #define     B16FEPHY_CTRL_EPHY_BGS_0                       0x0002
    #define   LSb32FEPHY_CTRL_EPHY_BGS_0                          18
    #define   LSb16FEPHY_CTRL_EPHY_BGS_0                          2
    #define       bFEPHY_CTRL_EPHY_BGS_0                       1
    #define   MSK32FEPHY_CTRL_EPHY_BGS_0                          0x00040000

    #define     BA_FEPHY_CTRL_BIST_MODE                        0x0002
    #define     B16FEPHY_CTRL_BIST_MODE                        0x0002
    #define   LSb32FEPHY_CTRL_BIST_MODE                           19
    #define   LSb16FEPHY_CTRL_BIST_MODE                           3
    #define       bFEPHY_CTRL_BIST_MODE                        1
    #define   MSK32FEPHY_CTRL_BIST_MODE                           0x00080000

    #define     BA_FEPHY_CTRL_EPHY_AFE_CLKSRC_SEL              0x0002
    #define     B16FEPHY_CTRL_EPHY_AFE_CLKSRC_SEL              0x0002
    #define   LSb32FEPHY_CTRL_EPHY_AFE_CLKSRC_SEL                 20
    #define   LSb16FEPHY_CTRL_EPHY_AFE_CLKSRC_SEL                 4
    #define       bFEPHY_CTRL_EPHY_AFE_CLKSRC_SEL              1
    #define   MSK32FEPHY_CTRL_EPHY_AFE_CLKSRC_SEL                 0x00100000

    #define     BA_FEPHY_CTRL_EPHY_AFE_RST_B                   0x0002
    #define     B16FEPHY_CTRL_EPHY_AFE_RST_B                   0x0002
    #define   LSb32FEPHY_CTRL_EPHY_AFE_RST_B                      21
    #define   LSb16FEPHY_CTRL_EPHY_AFE_RST_B                      5
    #define       bFEPHY_CTRL_EPHY_AFE_RST_B                   1
    #define   MSK32FEPHY_CTRL_EPHY_AFE_RST_B                      0x00200000
    ///////////////////////////////////////////////////////////
    #define     RA_FEPHY_FEPHY_BIST_STATUS                     0x0004

    #define     BA_FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_RMII2MII 0x0004
    #define     B16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_RMII2MII 0x0004
    #define   LSb32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_RMII2MII    0
    #define   LSb16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_RMII2MII    0
    #define       bFEPHY_FEPHY_BIST_STATUS_BIST_FINISH_RMII2MII 1
    #define   MSK32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_RMII2MII    0x00000001

    #define     BA_FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_RMII2MII  0x0004
    #define     B16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_RMII2MII  0x0004
    #define   LSb32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_RMII2MII     1
    #define   LSb16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_RMII2MII     1
    #define       bFEPHY_FEPHY_BIST_STATUS_BIST_FAIL_RMII2MII  1
    #define   MSK32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_RMII2MII     0x00000002

    #define     BA_FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_MII2RMII 0x0004
    #define     B16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_MII2RMII 0x0004
    #define   LSb32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_MII2RMII    2
    #define   LSb16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_MII2RMII    2
    #define       bFEPHY_FEPHY_BIST_STATUS_BIST_FINISH_MII2RMII 1
    #define   MSK32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_MII2RMII    0x00000004

    #define     BA_FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_MII2RMII  0x0004
    #define     B16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_MII2RMII  0x0004
    #define   LSb32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_MII2RMII     3
    #define   LSb16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_MII2RMII     3
    #define       bFEPHY_FEPHY_BIST_STATUS_BIST_FAIL_MII2RMII  1
    #define   MSK32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_MII2RMII     0x00000008

    #define     BA_FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_PLPIC   0x0004
    #define     B16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_PLPIC   0x0004
    #define   LSb32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_PLPIC      4
    #define   LSb16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_PLPIC      4
    #define       bFEPHY_FEPHY_BIST_STATUS_BIST_FINISH_PLPIC   1
    #define   MSK32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_PLPIC      0x00000010

    #define     BA_FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_PLPIC     0x0004
    #define     B16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_PLPIC     0x0004
    #define   LSb32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_PLPIC        5
    #define   LSb16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_PLPIC        5
    #define       bFEPHY_FEPHY_BIST_STATUS_BIST_FAIL_PLPIC     1
    #define   MSK32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_PLPIC        0x00000020
    ///////////////////////////////////////////////////////////
    #define     RA_FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL            0x0008

    #define     BA_FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN 0x0008
    #define     B16FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN 0x0008
    #define   LSb32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN    0
    #define   LSb16FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN    0
    #define       bFEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN 1
    #define   MSK32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL             0x000C

    #define     BA_FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL_FEPHY_ADCCLK_FREQCNTR_VAL 0x000C
    #define     B16FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL_FEPHY_ADCCLK_FREQCNTR_VAL 0x000C
    #define   LSb32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL_FEPHY_ADCCLK_FREQCNTR_VAL    0
    #define   LSb16FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL_FEPHY_ADCCLK_FREQCNTR_VAL    0
    #define       bFEPHY_FEPHY_ADCCLK_FREQCNTR_VAL_FEPHY_ADCCLK_FREQCNTR_VAL 20
    #define   MSK32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL_FEPHY_ADCCLK_FREQCNTR_VAL    0x000FFFFF
    ///////////////////////////////////////////////////////////

    typedef struct SIE_FEPHY {
    ///////////////////////////////////////////////////////////
    #define   GET32FEPHY_CTRL_EPHY_RST_N(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32FEPHY_CTRL_EPHY_RST_N(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16FEPHY_CTRL_EPHY_RST_N(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16FEPHY_CTRL_EPHY_RST_N(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32FEPHY_CTRL_EPHY_SHUTDOWN(r32)               _BFGET_(r32, 1, 1)
    #define   SET32FEPHY_CTRL_EPHY_SHUTDOWN(r32,v)             _BFSET_(r32, 1, 1,v)
    #define   GET16FEPHY_CTRL_EPHY_SHUTDOWN(r16)               _BFGET_(r16, 1, 1)
    #define   SET16FEPHY_CTRL_EPHY_SHUTDOWN(r16,v)             _BFSET_(r16, 1, 1,v)

    #define   GET32FEPHY_CTRL_EPHY_MODE(r32)                   _BFGET_(r32, 3, 2)
    #define   SET32FEPHY_CTRL_EPHY_MODE(r32,v)                 _BFSET_(r32, 3, 2,v)
    #define   GET16FEPHY_CTRL_EPHY_MODE(r16)                   _BFGET_(r16, 3, 2)
    #define   SET16FEPHY_CTRL_EPHY_MODE(r16,v)                 _BFSET_(r16, 3, 2,v)

    #define   GET32FEPHY_CTRL_EPHY_XMII_SEL(r32)               _BFGET_(r32, 5, 4)
    #define   SET32FEPHY_CTRL_EPHY_XMII_SEL(r32,v)             _BFSET_(r32, 5, 4,v)
    #define   GET16FEPHY_CTRL_EPHY_XMII_SEL(r16)               _BFGET_(r16, 5, 4)
    #define   SET16FEPHY_CTRL_EPHY_XMII_SEL(r16,v)             _BFSET_(r16, 5, 4,v)

    #define   GET32FEPHY_CTRL_EPHY_CLKSEL(r32)                 _BFGET_(r32, 8, 6)
    #define   SET32FEPHY_CTRL_EPHY_CLKSEL(r32,v)               _BFSET_(r32, 8, 6,v)
    #define   GET16FEPHY_CTRL_EPHY_CLKSEL(r16)                 _BFGET_(r16, 8, 6)
    #define   SET16FEPHY_CTRL_EPHY_CLKSEL(r16,v)               _BFSET_(r16, 8, 6,v)

    #define   GET32FEPHY_CTRL_EPHY_ID(r32)                     _BFGET_(r32,13, 9)
    #define   SET32FEPHY_CTRL_EPHY_ID(r32,v)                   _BFSET_(r32,13, 9,v)
    #define   GET16FEPHY_CTRL_EPHY_ID(r16)                     _BFGET_(r16,13, 9)
    #define   SET16FEPHY_CTRL_EPHY_ID(r16,v)                   _BFSET_(r16,13, 9,v)

    #define   GET32FEPHY_CTRL_EPHY_LED_POL(r32)                _BFGET_(r32,14,14)
    #define   SET32FEPHY_CTRL_EPHY_LED_POL(r32,v)              _BFSET_(r32,14,14,v)
    #define   GET16FEPHY_CTRL_EPHY_LED_POL(r16)                _BFGET_(r16,14,14)
    #define   SET16FEPHY_CTRL_EPHY_LED_POL(r16,v)              _BFSET_(r16,14,14,v)

    #define   GET32FEPHY_CTRL_EPHY_BGS_3(r32)                  _BFGET_(r32,15,15)
    #define   SET32FEPHY_CTRL_EPHY_BGS_3(r32,v)                _BFSET_(r32,15,15,v)
    #define   GET16FEPHY_CTRL_EPHY_BGS_3(r16)                  _BFGET_(r16,15,15)
    #define   SET16FEPHY_CTRL_EPHY_BGS_3(r16,v)                _BFSET_(r16,15,15,v)

    #define   GET32FEPHY_CTRL_EPHY_BGS_2(r32)                  _BFGET_(r32,16,16)
    #define   SET32FEPHY_CTRL_EPHY_BGS_2(r32,v)                _BFSET_(r32,16,16,v)
    #define   GET16FEPHY_CTRL_EPHY_BGS_2(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16FEPHY_CTRL_EPHY_BGS_2(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32FEPHY_CTRL_EPHY_BGS_1(r32)                  _BFGET_(r32,17,17)
    #define   SET32FEPHY_CTRL_EPHY_BGS_1(r32,v)                _BFSET_(r32,17,17,v)
    #define   GET16FEPHY_CTRL_EPHY_BGS_1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16FEPHY_CTRL_EPHY_BGS_1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32FEPHY_CTRL_EPHY_BGS_0(r32)                  _BFGET_(r32,18,18)
    #define   SET32FEPHY_CTRL_EPHY_BGS_0(r32,v)                _BFSET_(r32,18,18,v)
    #define   GET16FEPHY_CTRL_EPHY_BGS_0(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16FEPHY_CTRL_EPHY_BGS_0(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32FEPHY_CTRL_BIST_MODE(r32)                   _BFGET_(r32,19,19)
    #define   SET32FEPHY_CTRL_BIST_MODE(r32,v)                 _BFSET_(r32,19,19,v)
    #define   GET16FEPHY_CTRL_BIST_MODE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16FEPHY_CTRL_BIST_MODE(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32FEPHY_CTRL_EPHY_AFE_CLKSRC_SEL(r32)         _BFGET_(r32,20,20)
    #define   SET32FEPHY_CTRL_EPHY_AFE_CLKSRC_SEL(r32,v)       _BFSET_(r32,20,20,v)
    #define   GET16FEPHY_CTRL_EPHY_AFE_CLKSRC_SEL(r16)         _BFGET_(r16, 4, 4)
    #define   SET16FEPHY_CTRL_EPHY_AFE_CLKSRC_SEL(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32FEPHY_CTRL_EPHY_AFE_RST_B(r32)              _BFGET_(r32,21,21)
    #define   SET32FEPHY_CTRL_EPHY_AFE_RST_B(r32,v)            _BFSET_(r32,21,21,v)
    #define   GET16FEPHY_CTRL_EPHY_AFE_RST_B(r16)              _BFGET_(r16, 5, 5)
    #define   SET16FEPHY_CTRL_EPHY_AFE_RST_B(r16,v)            _BFSET_(r16, 5, 5,v)

    #define     w32FEPHY_CTRL                                  {\
            UNSG32 uCTRL_EPHY_RST_N                            :  1;\
            UNSG32 uCTRL_EPHY_SHUTDOWN                         :  1;\
            UNSG32 uCTRL_EPHY_MODE                             :  2;\
            UNSG32 uCTRL_EPHY_XMII_SEL                         :  2;\
            UNSG32 uCTRL_EPHY_CLKSEL                           :  3;\
            UNSG32 uCTRL_EPHY_ID                               :  5;\
            UNSG32 uCTRL_EPHY_LED_POL                          :  1;\
            UNSG32 uCTRL_EPHY_BGS_3                            :  1;\
            UNSG32 uCTRL_EPHY_BGS_2                            :  1;\
            UNSG32 uCTRL_EPHY_BGS_1                            :  1;\
            UNSG32 uCTRL_EPHY_BGS_0                            :  1;\
            UNSG32 uCTRL_BIST_MODE                             :  1;\
            UNSG32 uCTRL_EPHY_AFE_CLKSRC_SEL                   :  1;\
            UNSG32 uCTRL_EPHY_AFE_RST_B                        :  1;\
            UNSG32 RSVDx0_b22                                  : 10;\
          }
    union { UNSG32 u32FEPHY_CTRL;
            struct w32FEPHY_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_RMII2MII(r32) _BFGET_(r32, 0, 0)
    #define   SET32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_RMII2MII(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_RMII2MII(r16) _BFGET_(r16, 0, 0)
    #define   SET16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_RMII2MII(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_RMII2MII(r32) _BFGET_(r32, 1, 1)
    #define   SET32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_RMII2MII(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_RMII2MII(r16) _BFGET_(r16, 1, 1)
    #define   SET16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_RMII2MII(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_MII2RMII(r32) _BFGET_(r32, 2, 2)
    #define   SET32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_MII2RMII(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_MII2RMII(r16) _BFGET_(r16, 2, 2)
    #define   SET16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_MII2RMII(r16,v) _BFSET_(r16, 2, 2,v)

    #define   GET32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_MII2RMII(r32) _BFGET_(r32, 3, 3)
    #define   SET32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_MII2RMII(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_MII2RMII(r16) _BFGET_(r16, 3, 3)
    #define   SET16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_MII2RMII(r16,v) _BFSET_(r16, 3, 3,v)

    #define   GET32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_PLPIC(r32) _BFGET_(r32, 4, 4)
    #define   SET32FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_PLPIC(r32,v) _BFSET_(r32, 4, 4,v)
    #define   GET16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_PLPIC(r16) _BFGET_(r16, 4, 4)
    #define   SET16FEPHY_FEPHY_BIST_STATUS_BIST_FINISH_PLPIC(r16,v) _BFSET_(r16, 4, 4,v)

    #define   GET32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_PLPIC(r32) _BFGET_(r32, 5, 5)
    #define   SET32FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_PLPIC(r32,v) _BFSET_(r32, 5, 5,v)
    #define   GET16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_PLPIC(r16) _BFGET_(r16, 5, 5)
    #define   SET16FEPHY_FEPHY_BIST_STATUS_BIST_FAIL_PLPIC(r16,v) _BFSET_(r16, 5, 5,v)

    #define     w32FEPHY_FEPHY_BIST_STATUS                     {\
            UNSG32 uFEPHY_BIST_STATUS_BIST_FINISH_RMII2MII     :  1;\
            UNSG32 uFEPHY_BIST_STATUS_BIST_FAIL_RMII2MII       :  1;\
            UNSG32 uFEPHY_BIST_STATUS_BIST_FINISH_MII2RMII     :  1;\
            UNSG32 uFEPHY_BIST_STATUS_BIST_FAIL_MII2RMII       :  1;\
            UNSG32 uFEPHY_BIST_STATUS_BIST_FINISH_PLPIC        :  1;\
            UNSG32 uFEPHY_BIST_STATUS_BIST_FAIL_PLPIC          :  1;\
            UNSG32 RSVDx4_b6                                   : 26;\
          }
    union { UNSG32 u32FEPHY_FEPHY_BIST_STATUS;
            struct w32FEPHY_FEPHY_BIST_STATUS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN(r32) _BFGET_(r32, 0, 0)
    #define   SET32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN(r16) _BFGET_(r16, 0, 0)
    #define   SET16FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN(r16,v) _BFSET_(r16, 0, 0,v)

    #define     w32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL            {\
            UNSG32 uFEPHY_ADCCLK_FREQCNTR_CNTL_FEPHY_ADCCLK_FREQCNTR_EN :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL;
            struct w32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL_FEPHY_ADCCLK_FREQCNTR_VAL(r32) _BFGET_(r32,19, 0)
    #define   SET32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL_FEPHY_ADCCLK_FREQCNTR_VAL(r32,v) _BFSET_(r32,19, 0,v)

    #define     w32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL             {\
            UNSG32 uFEPHY_ADCCLK_FREQCNTR_VAL_FEPHY_ADCCLK_FREQCNTR_VAL : 20;\
            UNSG32 RSVDxC_b20                                  : 12;\
          }
    union { UNSG32 u32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL;
            struct w32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL;
          };
    ///////////////////////////////////////////////////////////
    } SIE_FEPHY;

    typedef union  T32FEPHY_CTRL
          { UNSG32 u32;
            struct w32FEPHY_CTRL;
                 } T32FEPHY_CTRL;
    typedef union  T32FEPHY_FEPHY_BIST_STATUS
          { UNSG32 u32;
            struct w32FEPHY_FEPHY_BIST_STATUS;
                 } T32FEPHY_FEPHY_BIST_STATUS;
    typedef union  T32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL
          { UNSG32 u32;
            struct w32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL;
                 } T32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL;
    typedef union  T32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL
          { UNSG32 u32;
            struct w32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL;
                 } T32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL;
    ///////////////////////////////////////////////////////////

    typedef union  TFEPHY_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32FEPHY_CTRL;
                   };
                 } TFEPHY_CTRL;
    typedef union  TFEPHY_FEPHY_BIST_STATUS
          { UNSG32 u32[1];
            struct {
            struct w32FEPHY_FEPHY_BIST_STATUS;
                   };
                 } TFEPHY_FEPHY_BIST_STATUS;
    typedef union  TFEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL
          { UNSG32 u32[1];
            struct {
            struct w32FEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL;
                   };
                 } TFEPHY_FEPHY_ADCCLK_FREQCNTR_CNTL;
    typedef union  TFEPHY_FEPHY_ADCCLK_FREQCNTR_VAL
          { UNSG32 u32[1];
            struct {
            struct w32FEPHY_FEPHY_ADCCLK_FREQCNTR_VAL;
                   };
                 } TFEPHY_FEPHY_ADCCLK_FREQCNTR_VAL;

    ///////////////////////////////////////////////////////////
     SIGN32 FEPHY_drvrd(SIE_FEPHY *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 FEPHY_drvwr(SIE_FEPHY *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void FEPHY_reset(SIE_FEPHY *p);
     SIGN32 FEPHY_cmp  (SIE_FEPHY *p, SIE_FEPHY *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define FEPHY_check(p,pie,pfx,hLOG) FEPHY_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define FEPHY_print(p,    pfx,hLOG) FEPHY_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: FEPHY
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SRAMPWR                                  (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  SD                        0x0
///                                    : ON                        0x0
///                                    : SHUTDWN                   0x1
///                                                 ###
///                                                 * Shut down mode achieves highest leakage reduction without data retention
///                                                 ###
///               %unsigned 1  DSLP                      0x0
///                                    : ON                        0x0
///                                    : DEEPSLP                   0x1
///                                                 ###
///                                                 * Deep sleep mode powers down the most of peripheral circuit for leakage reduction and retains memory
///                                                 * array content with lower voltage
///                                                 ###
///               %unsigned 1  SLP                       0x0
///                                    : ON                        0x0
///                                    : SLEEP                     0x1
///                                                 ###
///                                                 * Sleep mode powers down most peripheral circuit for leakage reduction with data retention
///                                                 ###
///               %%        29         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:       3b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SRAMPWR
#define h_SRAMPWR (){}

    #define     RA_SRAMPWR_ctrl                                0x0000

    #define     BA_SRAMPWR_ctrl_SD                             0x0000
    #define     B16SRAMPWR_ctrl_SD                             0x0000
    #define   LSb32SRAMPWR_ctrl_SD                                0
    #define   LSb16SRAMPWR_ctrl_SD                                0
    #define       bSRAMPWR_ctrl_SD                             1
    #define   MSK32SRAMPWR_ctrl_SD                                0x00000001
    #define        SRAMPWR_ctrl_SD_ON                                       0x0
    #define        SRAMPWR_ctrl_SD_SHUTDWN                                  0x1

    #define     BA_SRAMPWR_ctrl_DSLP                           0x0000
    #define     B16SRAMPWR_ctrl_DSLP                           0x0000
    #define   LSb32SRAMPWR_ctrl_DSLP                              1
    #define   LSb16SRAMPWR_ctrl_DSLP                              1
    #define       bSRAMPWR_ctrl_DSLP                           1
    #define   MSK32SRAMPWR_ctrl_DSLP                              0x00000002
    #define        SRAMPWR_ctrl_DSLP_ON                                     0x0
    #define        SRAMPWR_ctrl_DSLP_DEEPSLP                                0x1

    #define     BA_SRAMPWR_ctrl_SLP                            0x0000
    #define     B16SRAMPWR_ctrl_SLP                            0x0000
    #define   LSb32SRAMPWR_ctrl_SLP                               2
    #define   LSb16SRAMPWR_ctrl_SLP                               2
    #define       bSRAMPWR_ctrl_SLP                            1
    #define   MSK32SRAMPWR_ctrl_SLP                               0x00000004
    #define        SRAMPWR_ctrl_SLP_ON                                      0x0
    #define        SRAMPWR_ctrl_SLP_SLEEP                                   0x1
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SRAMPWR {
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMPWR_ctrl_SD(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32SRAMPWR_ctrl_SD(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16SRAMPWR_ctrl_SD(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16SRAMPWR_ctrl_SD(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define   GET32SRAMPWR_ctrl_DSLP(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32SRAMPWR_ctrl_DSLP(r32,v)                    _BFSET_(r32, 1, 1,v)
    #define   GET16SRAMPWR_ctrl_DSLP(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16SRAMPWR_ctrl_DSLP(r16,v)                    _BFSET_(r16, 1, 1,v)

    #define   GET32SRAMPWR_ctrl_SLP(r32)                       _BFGET_(r32, 2, 2)
    #define   SET32SRAMPWR_ctrl_SLP(r32,v)                     _BFSET_(r32, 2, 2,v)
    #define   GET16SRAMPWR_ctrl_SLP(r16)                       _BFGET_(r16, 2, 2)
    #define   SET16SRAMPWR_ctrl_SLP(r16,v)                     _BFSET_(r16, 2, 2,v)

    #define     w32SRAMPWR_ctrl                                {\
            UNSG32 uctrl_SD                                    :  1;\
            UNSG32 uctrl_DSLP                                  :  1;\
            UNSG32 uctrl_SLP                                   :  1;\
            UNSG32 RSVDx0_b3                                   : 29;\
          }
    union { UNSG32 u32SRAMPWR_ctrl;
            struct w32SRAMPWR_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SRAMPWR;

    typedef union  T32SRAMPWR_ctrl
          { UNSG32 u32;
            struct w32SRAMPWR_ctrl;
                 } T32SRAMPWR_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TSRAMPWR_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32SRAMPWR_ctrl;
                   };
                 } TSRAMPWR_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 SRAMPWR_drvrd(SIE_SRAMPWR *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SRAMPWR_drvwr(SIE_SRAMPWR *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SRAMPWR_reset(SIE_SRAMPWR *p);
     SIGN32 SRAMPWR_cmp  (SIE_SRAMPWR *p, SIE_SRAMPWR *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SRAMPWR_check(p,pie,pfx,hLOG) SRAMPWR_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SRAMPWR_print(p,    pfx,hLOG) SRAMPWR_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SRAMPWR
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SRAMRWTC                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl0                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  RF1P                      0x5
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  UHDRF1P                   0x9
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL[3:2] = 10 (default)
///                                    ###
///               %unsigned 8  RF2P                      0x35
///                                    ###
///                                    * RCT [1:0] = 01 (default)
///                                    * WCT [3:2] = 01 (default)
///                                    * KP[6:4]      = 011 (default)
///                                    * Bit7 not used
///                                    ###
///               %unsigned 8  UHDRF2P                   0x1
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL [3:2] = 00 (default)
///                                    * MTSEL [5:4] = 00 (default)
///                                    * Bit 7 and 8 not used
///                                    ###
///               %unsigned 8  UHDRF2P_ULVT              0x15
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL [3:2] = 01 (default)
///                                    * MTSEL [5:4] = 01 (default)
///                                    * Bit 7 and 8 not used
///                                    ###
///     @ 0x00004 ctrl1                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  SHDMBSR1P                 0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHDSBSR1P                 0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SHCMBSR1P_SSEG            0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SHCMBSR1P_USEG            0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHCSBSR1P                 0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHCSBSR1P_CUSTM           0xD
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 11 (default)
///                                    ###
///               %unsigned 4  SPSRAM_WT0                0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SPSRAM_WT1                0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///     @ 0x00008 ctrl2                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  L1CACHE                   0x0
///                                    ###
///                                    * MCR[1:0] = 00 (default)
///                                    * MCW[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  DPSR2P                    0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 8  ROM                       0x15
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * PTSEL[3:2] = 01 (default)
///                                    * TRB[5:4]: 01
///                                    * TM[6]: 0
///                                    * Bit 7 not used
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      12B, bits:      80b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SRAMRWTC
#define h_SRAMRWTC (){}

    #define     RA_SRAMRWTC_ctrl0                              0x0000

    #define     BA_SRAMRWTC_ctrl0_RF1P                         0x0000
    #define     B16SRAMRWTC_ctrl0_RF1P                         0x0000
    #define   LSb32SRAMRWTC_ctrl0_RF1P                            0
    #define   LSb16SRAMRWTC_ctrl0_RF1P                            0
    #define       bSRAMRWTC_ctrl0_RF1P                         4
    #define   MSK32SRAMRWTC_ctrl0_RF1P                            0x0000000F

    #define     BA_SRAMRWTC_ctrl0_UHDRF1P                      0x0000
    #define     B16SRAMRWTC_ctrl0_UHDRF1P                      0x0000
    #define   LSb32SRAMRWTC_ctrl0_UHDRF1P                         4
    #define   LSb16SRAMRWTC_ctrl0_UHDRF1P                         4
    #define       bSRAMRWTC_ctrl0_UHDRF1P                      4
    #define   MSK32SRAMRWTC_ctrl0_UHDRF1P                         0x000000F0

    #define     BA_SRAMRWTC_ctrl0_RF2P                         0x0001
    #define     B16SRAMRWTC_ctrl0_RF2P                         0x0000
    #define   LSb32SRAMRWTC_ctrl0_RF2P                            8
    #define   LSb16SRAMRWTC_ctrl0_RF2P                            8
    #define       bSRAMRWTC_ctrl0_RF2P                         8
    #define   MSK32SRAMRWTC_ctrl0_RF2P                            0x0000FF00

    #define     BA_SRAMRWTC_ctrl0_UHDRF2P                      0x0002
    #define     B16SRAMRWTC_ctrl0_UHDRF2P                      0x0002
    #define   LSb32SRAMRWTC_ctrl0_UHDRF2P                         16
    #define   LSb16SRAMRWTC_ctrl0_UHDRF2P                         0
    #define       bSRAMRWTC_ctrl0_UHDRF2P                      8
    #define   MSK32SRAMRWTC_ctrl0_UHDRF2P                         0x00FF0000

    #define     BA_SRAMRWTC_ctrl0_UHDRF2P_ULVT                 0x0003
    #define     B16SRAMRWTC_ctrl0_UHDRF2P_ULVT                 0x0002
    #define   LSb32SRAMRWTC_ctrl0_UHDRF2P_ULVT                    24
    #define   LSb16SRAMRWTC_ctrl0_UHDRF2P_ULVT                    8
    #define       bSRAMRWTC_ctrl0_UHDRF2P_ULVT                 8
    #define   MSK32SRAMRWTC_ctrl0_UHDRF2P_ULVT                    0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SRAMRWTC_ctrl1                              0x0004

    #define     BA_SRAMRWTC_ctrl1_SHDMBSR1P                    0x0004
    #define     B16SRAMRWTC_ctrl1_SHDMBSR1P                    0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHDMBSR1P                       0
    #define   LSb16SRAMRWTC_ctrl1_SHDMBSR1P                       0
    #define       bSRAMRWTC_ctrl1_SHDMBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHDMBSR1P                       0x0000000F

    #define     BA_SRAMRWTC_ctrl1_SHDSBSR1P                    0x0004
    #define     B16SRAMRWTC_ctrl1_SHDSBSR1P                    0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHDSBSR1P                       4
    #define   LSb16SRAMRWTC_ctrl1_SHDSBSR1P                       4
    #define       bSRAMRWTC_ctrl1_SHDSBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHDSBSR1P                       0x000000F0

    #define     BA_SRAMRWTC_ctrl1_SHCMBSR1P_SSEG               0x0005
    #define     B16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG               0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  8
    #define   LSb16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  8
    #define       bSRAMRWTC_ctrl1_SHCMBSR1P_SSEG               4
    #define   MSK32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  0x00000F00

    #define     BA_SRAMRWTC_ctrl1_SHCMBSR1P_USEG               0x0005
    #define     B16SRAMRWTC_ctrl1_SHCMBSR1P_USEG               0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  12
    #define   LSb16SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  12
    #define       bSRAMRWTC_ctrl1_SHCMBSR1P_USEG               4
    #define   MSK32SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  0x0000F000

    #define     BA_SRAMRWTC_ctrl1_SHCSBSR1P                    0x0006
    #define     B16SRAMRWTC_ctrl1_SHCSBSR1P                    0x0006
    #define   LSb32SRAMRWTC_ctrl1_SHCSBSR1P                       16
    #define   LSb16SRAMRWTC_ctrl1_SHCSBSR1P                       0
    #define       bSRAMRWTC_ctrl1_SHCSBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHCSBSR1P                       0x000F0000

    #define     BA_SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              0x0006
    #define     B16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              0x0006
    #define   LSb32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 20
    #define   LSb16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 4
    #define       bSRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              4
    #define   MSK32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 0x00F00000

    #define     BA_SRAMRWTC_ctrl1_SPSRAM_WT0                   0x0007
    #define     B16SRAMRWTC_ctrl1_SPSRAM_WT0                   0x0006
    #define   LSb32SRAMRWTC_ctrl1_SPSRAM_WT0                      24
    #define   LSb16SRAMRWTC_ctrl1_SPSRAM_WT0                      8
    #define       bSRAMRWTC_ctrl1_SPSRAM_WT0                   4
    #define   MSK32SRAMRWTC_ctrl1_SPSRAM_WT0                      0x0F000000

    #define     BA_SRAMRWTC_ctrl1_SPSRAM_WT1                   0x0007
    #define     B16SRAMRWTC_ctrl1_SPSRAM_WT1                   0x0006
    #define   LSb32SRAMRWTC_ctrl1_SPSRAM_WT1                      28
    #define   LSb16SRAMRWTC_ctrl1_SPSRAM_WT1                      12
    #define       bSRAMRWTC_ctrl1_SPSRAM_WT1                   4
    #define   MSK32SRAMRWTC_ctrl1_SPSRAM_WT1                      0xF0000000
    ///////////////////////////////////////////////////////////
    #define     RA_SRAMRWTC_ctrl2                              0x0008

    #define     BA_SRAMRWTC_ctrl2_L1CACHE                      0x0008
    #define     B16SRAMRWTC_ctrl2_L1CACHE                      0x0008
    #define   LSb32SRAMRWTC_ctrl2_L1CACHE                         0
    #define   LSb16SRAMRWTC_ctrl2_L1CACHE                         0
    #define       bSRAMRWTC_ctrl2_L1CACHE                      4
    #define   MSK32SRAMRWTC_ctrl2_L1CACHE                         0x0000000F

    #define     BA_SRAMRWTC_ctrl2_DPSR2P                       0x0008
    #define     B16SRAMRWTC_ctrl2_DPSR2P                       0x0008
    #define   LSb32SRAMRWTC_ctrl2_DPSR2P                          4
    #define   LSb16SRAMRWTC_ctrl2_DPSR2P                          4
    #define       bSRAMRWTC_ctrl2_DPSR2P                       4
    #define   MSK32SRAMRWTC_ctrl2_DPSR2P                          0x000000F0

    #define     BA_SRAMRWTC_ctrl2_ROM                          0x0009
    #define     B16SRAMRWTC_ctrl2_ROM                          0x0008
    #define   LSb32SRAMRWTC_ctrl2_ROM                             8
    #define   LSb16SRAMRWTC_ctrl2_ROM                             8
    #define       bSRAMRWTC_ctrl2_ROM                          8
    #define   MSK32SRAMRWTC_ctrl2_ROM                             0x0000FF00
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SRAMRWTC {
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl0_RF1P(r32)                    _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl0_RF1P(r32,v)                  _BFSET_(r32, 3, 0,v)
    #define   GET16SRAMRWTC_ctrl0_RF1P(r16)                    _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl0_RF1P(r16,v)                  _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF1P(r32)                 _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl0_UHDRF1P(r32,v)               _BFSET_(r32, 7, 4,v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF1P(r16)                 _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl0_UHDRF1P(r16,v)               _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl0_RF2P(r32)                    _BFGET_(r32,15, 8)
    #define   SET32SRAMRWTC_ctrl0_RF2P(r32,v)                  _BFSET_(r32,15, 8,v)
    #define   GET16SRAMRWTC_ctrl0_RF2P(r16)                    _BFGET_(r16,15, 8)
    #define   SET16SRAMRWTC_ctrl0_RF2P(r16,v)                  _BFSET_(r16,15, 8,v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF2P(r32)                 _BFGET_(r32,23,16)
    #define   SET32SRAMRWTC_ctrl0_UHDRF2P(r32,v)               _BFSET_(r32,23,16,v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF2P(r16)                 _BFGET_(r16, 7, 0)
    #define   SET16SRAMRWTC_ctrl0_UHDRF2P(r16,v)               _BFSET_(r16, 7, 0,v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF2P_ULVT(r32)            _BFGET_(r32,31,24)
    #define   SET32SRAMRWTC_ctrl0_UHDRF2P_ULVT(r32,v)          _BFSET_(r32,31,24,v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF2P_ULVT(r16)            _BFGET_(r16,15, 8)
    #define   SET16SRAMRWTC_ctrl0_UHDRF2P_ULVT(r16,v)          _BFSET_(r16,15, 8,v)

    #define     w32SRAMRWTC_ctrl0                              {\
            UNSG32 uctrl0_RF1P                                 :  4;\
            UNSG32 uctrl0_UHDRF1P                              :  4;\
            UNSG32 uctrl0_RF2P                                 :  8;\
            UNSG32 uctrl0_UHDRF2P                              :  8;\
            UNSG32 uctrl0_UHDRF2P_ULVT                         :  8;\
          }
    union { UNSG32 u32SRAMRWTC_ctrl0;
            struct w32SRAMRWTC_ctrl0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl1_SHDMBSR1P(r32)               _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl1_SHDMBSR1P(r32,v)             _BFSET_(r32, 3, 0,v)
    #define   GET16SRAMRWTC_ctrl1_SHDMBSR1P(r16)               _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl1_SHDMBSR1P(r16,v)             _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl1_SHDSBSR1P(r32)               _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl1_SHDSBSR1P(r32,v)             _BFSET_(r32, 7, 4,v)
    #define   GET16SRAMRWTC_ctrl1_SHDSBSR1P(r16)               _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl1_SHDSBSR1P(r16,v)             _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r32)          _BFGET_(r32,11, 8)
    #define   SET32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r32,v)        _BFSET_(r32,11, 8,v)
    #define   GET16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r16)          _BFGET_(r16,11, 8)
    #define   SET16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r16,v)        _BFSET_(r16,11, 8,v)

    #define   GET32SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r32)          _BFGET_(r32,15,12)
    #define   SET32SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r32,v)        _BFSET_(r32,15,12,v)
    #define   GET16SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r16)          _BFGET_(r16,15,12)
    #define   SET16SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r16,v)        _BFSET_(r16,15,12,v)

    #define   GET32SRAMRWTC_ctrl1_SHCSBSR1P(r32)               _BFGET_(r32,19,16)
    #define   SET32SRAMRWTC_ctrl1_SHCSBSR1P(r32,v)             _BFSET_(r32,19,16,v)
    #define   GET16SRAMRWTC_ctrl1_SHCSBSR1P(r16)               _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl1_SHCSBSR1P(r16,v)             _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r32)         _BFGET_(r32,23,20)
    #define   SET32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r32,v)       _BFSET_(r32,23,20,v)
    #define   GET16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r16)         _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r16,v)       _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl1_SPSRAM_WT0(r32)              _BFGET_(r32,27,24)
    #define   SET32SRAMRWTC_ctrl1_SPSRAM_WT0(r32,v)            _BFSET_(r32,27,24,v)
    #define   GET16SRAMRWTC_ctrl1_SPSRAM_WT0(r16)              _BFGET_(r16,11, 8)
    #define   SET16SRAMRWTC_ctrl1_SPSRAM_WT0(r16,v)            _BFSET_(r16,11, 8,v)

    #define   GET32SRAMRWTC_ctrl1_SPSRAM_WT1(r32)              _BFGET_(r32,31,28)
    #define   SET32SRAMRWTC_ctrl1_SPSRAM_WT1(r32,v)            _BFSET_(r32,31,28,v)
    #define   GET16SRAMRWTC_ctrl1_SPSRAM_WT1(r16)              _BFGET_(r16,15,12)
    #define   SET16SRAMRWTC_ctrl1_SPSRAM_WT1(r16,v)            _BFSET_(r16,15,12,v)

    #define     w32SRAMRWTC_ctrl1                              {\
            UNSG32 uctrl1_SHDMBSR1P                            :  4;\
            UNSG32 uctrl1_SHDSBSR1P                            :  4;\
            UNSG32 uctrl1_SHCMBSR1P_SSEG                       :  4;\
            UNSG32 uctrl1_SHCMBSR1P_USEG                       :  4;\
            UNSG32 uctrl1_SHCSBSR1P                            :  4;\
            UNSG32 uctrl1_SHCSBSR1P_CUSTM                      :  4;\
            UNSG32 uctrl1_SPSRAM_WT0                           :  4;\
            UNSG32 uctrl1_SPSRAM_WT1                           :  4;\
          }
    union { UNSG32 u32SRAMRWTC_ctrl1;
            struct w32SRAMRWTC_ctrl1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl2_L1CACHE(r32)                 _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl2_L1CACHE(r32,v)               _BFSET_(r32, 3, 0,v)
    #define   GET16SRAMRWTC_ctrl2_L1CACHE(r16)                 _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl2_L1CACHE(r16,v)               _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl2_DPSR2P(r32)                  _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl2_DPSR2P(r32,v)                _BFSET_(r32, 7, 4,v)
    #define   GET16SRAMRWTC_ctrl2_DPSR2P(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl2_DPSR2P(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl2_ROM(r32)                     _BFGET_(r32,15, 8)
    #define   SET32SRAMRWTC_ctrl2_ROM(r32,v)                   _BFSET_(r32,15, 8,v)
    #define   GET16SRAMRWTC_ctrl2_ROM(r16)                     _BFGET_(r16,15, 8)
    #define   SET16SRAMRWTC_ctrl2_ROM(r16,v)                   _BFSET_(r16,15, 8,v)

    #define     w32SRAMRWTC_ctrl2                              {\
            UNSG32 uctrl2_L1CACHE                              :  4;\
            UNSG32 uctrl2_DPSR2P                               :  4;\
            UNSG32 uctrl2_ROM                                  :  8;\
            UNSG32 RSVDx8_b16                                  : 16;\
          }
    union { UNSG32 u32SRAMRWTC_ctrl2;
            struct w32SRAMRWTC_ctrl2;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SRAMRWTC;

    typedef union  T32SRAMRWTC_ctrl0
          { UNSG32 u32;
            struct w32SRAMRWTC_ctrl0;
                 } T32SRAMRWTC_ctrl0;
    typedef union  T32SRAMRWTC_ctrl1
          { UNSG32 u32;
            struct w32SRAMRWTC_ctrl1;
                 } T32SRAMRWTC_ctrl1;
    typedef union  T32SRAMRWTC_ctrl2
          { UNSG32 u32;
            struct w32SRAMRWTC_ctrl2;
                 } T32SRAMRWTC_ctrl2;
    ///////////////////////////////////////////////////////////

    typedef union  TSRAMRWTC_ctrl0
          { UNSG32 u32[1];
            struct {
            struct w32SRAMRWTC_ctrl0;
                   };
                 } TSRAMRWTC_ctrl0;
    typedef union  TSRAMRWTC_ctrl1
          { UNSG32 u32[1];
            struct {
            struct w32SRAMRWTC_ctrl1;
                   };
                 } TSRAMRWTC_ctrl1;
    typedef union  TSRAMRWTC_ctrl2
          { UNSG32 u32[1];
            struct {
            struct w32SRAMRWTC_ctrl2;
                   };
                 } TSRAMRWTC_ctrl2;

    ///////////////////////////////////////////////////////////
     SIGN32 SRAMRWTC_drvrd(SIE_SRAMRWTC *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SRAMRWTC_drvwr(SIE_SRAMRWTC *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SRAMRWTC_reset(SIE_SRAMRWTC *p);
     SIGN32 SRAMRWTC_cmp  (SIE_SRAMRWTC *p, SIE_SRAMRWTC *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SRAMRWTC_check(p,pie,pfx,hLOG) SRAMRWTC_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SRAMRWTC_print(p,    pfx,hLOG) SRAMRWTC_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SRAMRWTC
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE smSysCtl                biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 SM_ID                (R-)
///               ###
///               * SM ID information
///               ###
///               %unsigned 4  REV_ID                    0xA
///                                    ###
///                                    * SM revision ID
///                                    ###
///               %unsigned 16 PART_ID                   0x7788
///                                    ###
///                                    * SM part number ID
///                                    ###
///               %unsigned 12 MFC_ID                    0x8D
///                                    ###
///                                    * SM manufacture
///                                    ###
///     @ 0x00004 SM_CPU_CTRL          (RW)
///               ###
///               * SM CPU control
///               ###
///               %unsigned 1  CPU_RST_GO                0x0
///                                    ###
///                                    * SM CPU reset control
///                                    * 0: assert CPU reset
///                                    * 1: de-assert CPU reset
///                                    ###
///               %unsigned 1  CPU_VINITHI               0x0
///                                    ###
///                                    * High exception vector address select
///                                    * 0: starts from 0x0000_0000
///                                    * 1: starts from 0xFFFF_0000
///                                    ###
///               %unsigned 1  CPU_INITRAM               0x1
///                                    ###
///                                    * TCM enable at reset
///                                    * 0: TCM disable at reet
///                                    * 1: TCM is enabled at reset
///                                    ###
///               %unsigned 1  CPU_BIGEND                0x0
///                                    ###
///                                    * SM CPU endian status
///                                    * 0: little endian
///                                    * 1: big endian
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00008 SM_RST_CTRL          (RW-)
///               ###
///               * SM reset control
///               ###
///               %unsigned 1  SOC_RST_GO                0x1
///                                    ###
///                                    * Berlin SoC reset control
///                                    * 0: assert Berlin SoC reset
///                                    * 1: de-assert Berlin SoC reset
///                                    ###
///               %unsigned 1  APB_RST_GO                0x1
///                                    ###
///                                    * SM APB component reset control, write 0 to assert APB reset. This reset automatically de-assert after 10 SM system clocks
///                                    * 0: assert APB reset, de-assert automatically
///                                    * 1: no effect
///                                    ###
///               %unsigned 1  SXBAR_RST_GO              0x1
///                                    ###
///                                    * SM crossbar reset control, write 0 to assert SXBAR reset. This reset automatically de-assert after 10 SM system clocks
///                                    * 0: assert SXBAR reset, de-assert automatically
///                                    * 1: no effect
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x0000C SM_RST_STATUS        (RW)
///               ###
///               * SM reset status control
///               ###
///               %unsigned 1  RST_WD_0                  0x0
///                                    ###
///                                    * Watch dog 0 status
///                                    * 0: no watch dog 0 event happen
///                                    * 1: watch dog 0 event happen
///                                    ###
///               %unsigned 1  RST_WD_1                  0x0
///                                    ###
///                                    * Watch dog 1 status
///                                    * 0: no watch dog 1 event happen
///                                    * 1: watch dog 1 event happen
///                                    ###
///               %unsigned 1  RST_WD_2                  0x0
///                                    ###
///                                    * Watch dog 2 status
///                                    * 0: no watch dog 2 event happen
///                                    * 1: watch dog 2 event happen
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00010 SM_STRP_STATUS       (RW)
///               ###
///               * SM power strapping status control
///               ###
///               %unsigned 1  BOOT_MODE                 0x0
///                                    ###
///                                    * SM to SOC RSTn mode select0: SM_SOC_RSTOn_DO_FMmodule releasing waits for SoCRstCnt but does not wait for SM_PWR_OK(mode_0 of SM_FE_LED[1], system will assert this signal when SOC core power is ready).1: SM_SOC_RSTOn_DO_FMmodule releasing waits for both SoCRstCnt  and SM_PWR_OK.
///                                    ###
///               %unsigned 1  STRP_1                    0x0
///                                    ###
///                                    * Reserved
///                                    ###
///               %unsigned 1  STRP_2                    0x0
///                                    ###
///                                    * Reserved
///                                    ###
///               %unsigned 1  STRP_3                    0x0
///                                    ###
///                                    * Reserved
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00014 SM_CTRL              (RW-)
///               ###
///               * SM misc control
///               ###
///               %unsigned 1  ISO_EN                    0x0
///                                    ###
///                                    * Isolation cell enable
///                                    * 0: disable
///                                    * 1: enable
///                                    ###
///               %unsigned 1  SM2SOC_SW_INTR            0x0
///                                    ###
///                                    * SM to SOC software interrupt
///                                    * 0: disable
///                                    * 1: enable
///                                    ###
///               %unsigned 1  SOC2SM_SW_INTR            0x1
///                                    ###
///                                    * SOC to SM software interrupt, connects to IRQ13, active low
///                                    * 0: enable
///                                    * 1: disable
///                                    ###
///               %unsigned 3  ADC_ENCTR                 0x0
///                                    ###
///                                    * ADC Test Modes
///                                    ###
///               %unsigned 3  ADC_SELIN                 0x0
///                                    ###
///                                    * ADC input selection
///                                    * 4'h0: ADC_IN[0]
///                                    * 4'h1: ADC_IN[1]
///                                    * 4'h2: ADC_IN[2]
///                                    * 4'h3: ADC_IN[3]
///                                    * 4'h4: ADC_IN[4]
///                                    * 4'h5: ADC_IN[5]
///                                    * 4'h6: ADC_IN[6]
///                                    * 4'h7: ADC_IN[7]
///                                    ###
///               %unsigned 1  ADC_EN                    0x0
///                                    ###
///                                    * SM ADC power control
///                                    * 0: ADC in power-down/stand-by mode
///                                    * 1: normal operation.
///                                    ###
///               %unsigned 1  ADC_SEL_VREF              0x0
///                                    ###
///                                    * Selects if internal reference voltage is used
///                                    * 0: Use external voltage reference. Not applicable for Dolphin. Program 0 to reduce leakage during ADC shut-down.
///                                    * 1: Use internal voltage reference. Normal operation.
///                                    ###
///               %unsigned 1  ADC_SELBG                 0x0
///                                    ###
///                                    * Enable internal bandgap voltage generator
///                                    * 0: internal band-gap is in power-down. Reduces leakage.
///                                    * 1: internal bandgap is active. Normal operation.
///                                    ###
///               %unsigned 1  ADC_SELDIFF               0x0
///                                    ###
///                                    * Select ADC input mode
///                                    * 0: single-ended input
///                                    * 1: differential inpu
///                                    ###
///               %unsigned 2  ADC_SELRES                0x3
///                                    ###
///                                    * Select ADC resolution
///                                    * 2'b00: 6-bit mode
///                                    * 2'b01: 8-bit mode
///                                    * 2'b10: 10-bit mode
///                                    * 2'b11: 12-bit mode
///                                    ###
///               %unsigned 1  ADC_START                 0x0
///                                    ###
///                                    * Start ADC digitalization process, write 1 to start ADC digitalization. This bit automatically clear after receiving ADC done signal
///                                    * 0: no effect
///                                    * 1: Start ADC digitalization, clear automatically.
///                                    ###
///               %unsigned 1  ADC_RESET                 0x1
///                                    ###
///                                    * ADC reset control input, active high.
///                                    * 1: the digital circuitry is held in reset .
///                                    * 0: the digital circuitry is enabled.
///                                    ###
///               %unsigned 1  ADC_CONT                  0x0
///                                    ###
///                                    * continuous mode vs. single-shot mode
///                                    * 0: ADC is in single-shot conversion operating mode.
///                                    * 1: ADC is in continuous conversion operating mode.
///                                    ###
///               %%        14         # Stuffing bits...
///     @ 0x00018 SM_ADC_CTRL          (P-)
///               ###
///               * SM ADCs Control
///               ###
///               %unsigned 5  ADC_DAT_LT                0x0
///                                    ###
///                                    * Delay interms of pclk after data ready at which the data is to be latched
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x0001C SM_ADC_STATUS        (RW-)
///               ###
///               * SM ADC status and interrupt enable
///               ###
///               %unsigned 1  DATA_RDY                  0x0
///                                    ###
///                                    * ADC data ready, write 0 to clear interrupt, write 1 won't effect anything
///                                    * 0: no valid data
///                                    * 1: data ready to read
///                                    ###
///               %unsigned 1  INT_EN                    0x0
///                                    ###
///                                    * ADC interrupt enable
///                                    * 0: disable
///                                    * 1: enable
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00020 SM_ADC_DATA          (R-)
///               ###
///               * SM ADC digitalized data
///               ###
///               %unsigned 12 ADC_DATA                  0x0
///                                    ###
///                                    * ADC data
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x00024                      (P)
///     # 0x00024 TSEN
///               $TSEN                TSEN              REG
///                                    ###
///                                    * PVT Sensor control and status registers
///                                    ###
///     @ 0x0003C                      (P)
///     # 0x0003C FEPHY
///               $FEPHY               FEPHY             REG
///                                    ###
///                                    * FEPHY configuration registers
///                                    ###
///     @ 0x0004C SM_BOOT_STATUS       (RW)
///               ###
///               * SM Software Boot status
///               ###
///               %unsigned 32 MODE                      0x0
///                                    ###
///                                    * Used by software only to store boot up status. HW can only clean to 0 with POR
///                                    ###
///     @ 0x00050 SM_WDT_MASK          (P-)
///               ###
///               * SM WDT Mask
///               ###
///               %unsigned 3  SM_RST                    0x7
///                                    ###
///                                    * WDT reset mask bit for SM reset signal.
///                                    * 1 : disable WDT (0,1,2) timeout to reset SM for each WDT
///                                    ###
///               %unsigned 3  SOC_RST                   0x7
///                                    ###
///                                    * WDT reset mask bit for SOC reset signal.
///                                    * 1 : disable WDT (0,1,2) timeout to reset SOC for each WDT
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x00054 POR_status           (R-)
///               %unsigned 1  POR_VDDIO1P8_SM
///                                    ###
///                                    * The output of POR_VDDIO1P8 from SM. For monitor purpose
///                                    ###
///               %unsigned 1  POR_VDD_SM
///                                    ###
///                                    * The output of POR_VDD from SM. For monitor purpose
///                                    ###
///               %unsigned 1  POR_VDDIO_SOC
///                                    ###
///                                    * The output of POR_AVDD from SOC without isolation. For monitor purpose
///                                    ###
///               %unsigned 1  POR_VDDIO3P3_SOC
///                                    ###
///                                    * The output of POR_VDDIO3P3 from SOC. For monitor purpose
///                                    ###
///               %unsigned 1  POR_VDD_SOC
///                                    ###
///                                    * The output of POR_VDD from SOC without SM isolation. For monitor purpose
///                                    ###
///               %unsigned 1  POR_VDD_CPU
///                                    ###
///                                    * The output of POR_VDD from cpu without SM isolation. For monitor purpose.
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x00058 SM_TEST              (RW-)
///               ###
///               * SM ADC Test Results
///               ###
///               %unsigned 1  ADC_TEST_FAIL             0x0
///                                    ###
///                                    * ADC Test result bit
///                                    * 1: ADC data is not in the valid window
///                                    * Write 0 to clear the bit
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0005C SM_TEST_DATA0        (P-)
///               ###
///               * SM ADC Test Registers High
///               ###
///               %unsigned 12 ADC_DATA_HIGH             0x0
///                                    ###
///                                    * ADC test data upper boundary
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x00060 SM_TEST_DATA1        (P-)
///               ###
///               * SM ADC Test Registers Low
///               ###
///               %unsigned 12 ADC_DATA_LOW              0x0
///                                    ###
///                                    * ADC test data Lower boundary
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x00064 SM_PORT_SEL_CTRL     (P-)
///               %unsigned 1  TW2                       0x0
///                                    ###
///                                    * 0: Selected from TW2A
///                                    * 1: Selected from TW2B
///                                    ###
///               %unsigned 1  URT1                      0x0
///                                    ###
///                                    * Not used
///                                    ###
///               %unsigned 1  FE_MDIO                   0x0
///                                    ###
///                                    * 0: from eth mac
///                                    * 1: from pad for test
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00068 SM_DUMMY_REG         (RW)
///               ###
///               * Dummy Register for ECOs and Etc
///               ###
///               %unsigned 32 REG0                      0x0
///                                    ###
///                                    * 32-bit Dummy Spare Register
///                                    ###
///     @ 0x0006C SM_POR_CTL           (P-)
///               ###
///               *                                 Bypass POR_AVDD and POR_AVDD33 in case voltage monitor is no longer needed for AVDD33/AVDD18
///               ###
///               %unsigned 1  SOC_VDD1P8V_BYPASS        0x0
///                                    ###
///                                    * POR_VDDIO is always enable during boot-up.
///                                    * This register can bypass POR_VDDIO 1.8V after boot-up to disable the voltage-monitor feature.
///                                    ###
///               %unsigned 1  SM_VDD1P8V_BYPASS         0x0
///                                    ###
///                                    * SM_VDDIO1P8V is always enabled during boot-up. This register can bypass SM_POR_VDDIO1P8V after boot up to disable the voltage-monitor feature.
///                                    ###
///               %unsigned 1  SOC_VDD3P3V_BYPASS        0x0
///                                    ###
///                                    * SOC_VDDIO3P3V is always enabled during boot-up. This register can bypass SOC_POR_VDDIO3P3V after boot up to disable the voltage-monitor feature.
///                                    ###
///               %unsigned 1  POR_SOC_IO_1P8V_PD        0x0
///                                    ###
///                                    * Power down control for SOC 1.8V POR
///                                    ###
///               %unsigned 2  POR_SOC_IO_1P8V_VTH       0x0
///                                    ###
///                                    * SOC 1.8V POR Threshold control. These control bits effect only after boot up for voltage-monitor feature
///                                    ###
///               %unsigned 1  POR_SM_IO_1P8V_PD         0x0
///                                    ###
///                                    * Power down control for SM 1.8V POR
///                                    ###
///               %unsigned 2  POR_SM_IO_1P8V_VTH        0x0
///                                    ###
///                                    * SM 1.8V POR Threshold control. These control bits effect only after boot up for voltage-monitor feature
///                                    ###
///               %unsigned 1  POR_SOC_IO_3P3V_PD        0x0
///                                    ###
///                                    * Power down control for SOC 3.3V POR
///                                    ###
///               %unsigned 2  POR_SOC_IO_3P3V_VTH       0x0
///                                    ###
///                                    * SOC 3.3V POR Threshold control. These control bits effect only after boot up for voltage-monitor feature
///                                    ###
///               %%        20         # Stuffing bits...
///     @ 0x00070 SM_PWR_OK            (R-)
///               %unsigned 1  status
///                                    ###
///                                    * SM_PWR_OK status register
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00074                      (P)
///     # 0x00074 SRAMPWR
///               $SRAMPWR             SRAMPWR           REG
///     @ 0x00078                      (P)
///     # 0x00078 SRAMWTC
///               $SRAMRWTC            SRAMWTC           REG
///     @ 0x00084                      (W-)
///     #         # Stuffing bytes...
///               %% 3040
///     @ 0x00200 smPinMuxCntlBus      (P-)
///               %unsigned 3  SM_TW2_SCL                0x0
///                                    ###
///                                    * smPinMuxCntlBus[0*3+2:0*3]	 pinMux Control for SM_TW2_SCL
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SM_TW2_SDA                0x0
///                                    ###
///                                    * smPinMuxCntlBus[1*3+2:1*3]	 pinMux Control for SM_TW2_SDA
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SM_URT1_TXD               0x0
///                                    ###
///                                    * smPinMuxCntlBus[2*3+2:2*3]	 pinMux Control for SM_URT1_TXD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_5                    0x5
///               %unsigned 3  SM_URT1_RXD               0x0
///                                    ###
///                                    * smPinMuxCntlBus[3*3+2:3*3]	 pinMux Control for SM_URT1_RXD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_5                    0x5
///               %unsigned 3  SM_HDMI_TX_HPD            0x0
///                                    ###
///                                    * smPinMuxCntlBus[4*3+2:4*3]	 pinMux Control for SM_HDMI_TX_HPD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SM_HDMI_TX_CEC            0x0
///                                    ###
///                                    * smPinMuxCntlBus[5*3+2:5*3]	 pinMux Control for SM_HDMI_TX_CEC
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SM_TMS                    0x0
///                                    ###
///                                    * smPinMuxCntlBus[6*3+2:6*3]	 pinMux Control for SM_TMS
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  SM_TDI                    0x0
///                                    ###
///                                    * smPinMuxCntlBus[7*3+2:7*3]	 pinMux Control for SM_TDI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  SM_TDO                    0x0
///                                    ###
///                                    * smPinMuxCntlBus[8*3+2:8*3]	 pinMux Control for SM_TDO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///               %unsigned 3  SM_TW3_SCL                0x0
///                                    ###
///                                    * smPinMuxCntlBus[9*3+2:9*3]	 pinMux Control for SM_TW3_SCL
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///               %%        2          # Stuffing bits...
///     # 0x00204 smPinMuxCntlBus1
///               %unsigned 3  SM_TW3_SDA                0x0
///                                    ###
///                                    * smPinMuxCntlBus[10*3+2:10*3]	 pinMux Control for SM_TW3_SDA
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_6                    0x6
///               %unsigned 3  SM_SPI2_SS0n              0x0
///                                    ###
///                                    * smPinMuxCntlBus[11*3+2:11*3]	 pinMux Control for SM_SPI2_SS0n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_6                    0x6
///                                    : MODE_7                    0x7
///               %unsigned 3  SM_SPI2_SS1n              0x0
///                                    ###
///                                    * smPinMuxCntlBus[12*3+2:12*3]	 pinMux Control for SM_SPI2_SS1n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_6                    0x6
///                                    : MODE_7                    0x7
///               %unsigned 3  SM_SPI2_SS2n              0x0
///                                    ###
///                                    * smPinMuxCntlBus[13*3+2:13*3]	 pinMux Control for SM_SPI2_SS2n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_5                    0x5
///                                    : MODE_6                    0x6
///                                    : MODE_7                    0x7
///               %unsigned 3  SM_SPI2_SS3n              0x0
///                                    ###
///                                    * smPinMuxCntlBus[14*3+2:14*3]	 pinMux Control for SM_SPI2_SS3n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_5                    0x5
///                                    : MODE_6                    0x6
///                                    : MODE_7                    0x7
///               %unsigned 3  SM_SPI2_SDO               0x0
///                                    ###
///                                    * smPinMuxCntlBus[15*3+2:15*3]	 pinMux Control for SM_SPI2_SDO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_6                    0x6
///               %unsigned 3  SM_SPI2_SDI               0x0
///                                    ###
///                                    * smPinMuxCntlBus[16*3+2:16*3]	 pinMux Control for SM_SPI2_SDI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_6                    0x6
///               %unsigned 3  SM_SPI2_SCLK              0x0
///                                    ###
///                                    * smPinMuxCntlBus[17*3+2:17*3]	 pinMux Control for SM_SPI2_SCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_6                    0x6
///               %unsigned 3  SM_URT0_TXD               0x0
///                                    ###
///                                    * smPinMuxCntlBus[18*3+2:18*3]	 pinMux Control for SM_URT0_TXD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SM_URT0_RXD               0x0
///                                    ###
///                                    * smPinMuxCntlBus[19*3+2:19*3]	 pinMux Control for SM_URT0_RXD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %%        2          # Stuffing bits...
///     @ 0x00208 SM_RCLKICntl         (P-)
///               ###
///               * Pad Control for SM_RCLKI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x1
///               %unsigned 1  RD0                       0x0
///               %unsigned 1  RD1                       0x0
///               %unsigned 1  REF0                      0x0
///               %unsigned 1  REF1                      0x0
///               %unsigned 1  XE                        0x1
///               %%        23         # Stuffing bits...
///     @ 0x0020C SM_TW2_SCLCntl       (P-)
///               ###
///               * Pad Control for SM_TW2_SCL
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x00210 SM_TW2_SDACntl       (P-)
///               ###
///               * Pad Control for SM_TW2_SDA
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x00214 SM_URT1_TXDCntl      (P-)
///               ###
///               * Pad Control for SM_URT1_TXD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x00218 SM_URT1_RXDCntl      (P-)
///               ###
///               * Pad Control for SM_URT1_RXD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x0021C SM_HDMI_TX_HPDCntl   (P-)
///               ###
///               * Pad Control for SM_HDMI_TX_HPD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x00220 SM_HDMI_TX_CECCntl   (P-)
///               ###
///               * Pad Control for SM_HDMI_TX_CEC
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x00224 SM_TMSCntl           (P-)
///               ###
///               * Pad Control for SM_TMS
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x1
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x00228 SM_TDICntl           (P-)
///               ###
///               * Pad Control for SM_TDI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x1
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0022C SM_TDOCntl           (P-)
///               ###
///               * Pad Control for SM_TDO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x1
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x00230 SM_TW3_SCLCntl       (P-)
///               ###
///               * Pad Control for SM_TW3_SCL
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x00234 SM_TW3_SDACntl       (P-)
///               ###
///               * Pad Control for SM_TW3_SDA
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x00238 SM_SPI2_SS0nCntl     (P-)
///               ###
///               * Pad Control for SM_SPI2_SS0n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0023C SM_SPI2_SS1nCntl     (P-)
///               ###
///               * Pad Control for SM_SPI2_SS1n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x00240 SM_SPI2_SS2nCntl     (P-)
///               ###
///               * Pad Control for SM_SPI2_SS2n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x00244 SM_SPI2_SS3nCntl     (P-)
///               ###
///               * Pad Control for SM_SPI2_SS3n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x00248 SM_SPI2_SDOCntl      (P-)
///               ###
///               * Pad Control for SM_SPI2_SDO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0024C SM_SPI2_SDICntl      (P-)
///               ###
///               * Pad Control for SM_SPI2_SDI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x00250 SM_SPI2_SCLKCntl     (P-)
///               ###
///               * Pad Control for SM_SPI2_SCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x00254 SM_URT0_TXDCntl      (P-)
///               ###
///               * Pad Control for SM_URT0_TXD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x1
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x00258 SM_URT0_RXDCntl      (P-)
///               ###
///               * Pad Control for SM_URT0_RXD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:     604B, bits:     670b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_smSysCtl
#define h_smSysCtl (){}

    #define     RA_smSysCtl_SM_ID                              0x0000

    #define     BA_smSysCtl_SM_ID_REV_ID                       0x0000
    #define     B16smSysCtl_SM_ID_REV_ID                       0x0000
    #define   LSb32smSysCtl_SM_ID_REV_ID                          0
    #define   LSb16smSysCtl_SM_ID_REV_ID                          0
    #define       bsmSysCtl_SM_ID_REV_ID                       4
    #define   MSK32smSysCtl_SM_ID_REV_ID                          0x0000000F

    #define     BA_smSysCtl_SM_ID_PART_ID                      0x0000
    #define     B16smSysCtl_SM_ID_PART_ID                      0x0000
    #define   LSb32smSysCtl_SM_ID_PART_ID                         4
    #define   LSb16smSysCtl_SM_ID_PART_ID                         4
    #define       bsmSysCtl_SM_ID_PART_ID                      16
    #define   MSK32smSysCtl_SM_ID_PART_ID                         0x000FFFF0

    #define     BA_smSysCtl_SM_ID_MFC_ID                       0x0002
    #define     B16smSysCtl_SM_ID_MFC_ID                       0x0002
    #define   LSb32smSysCtl_SM_ID_MFC_ID                          20
    #define   LSb16smSysCtl_SM_ID_MFC_ID                          4
    #define       bsmSysCtl_SM_ID_MFC_ID                       12
    #define   MSK32smSysCtl_SM_ID_MFC_ID                          0xFFF00000
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_CPU_CTRL                        0x0004

    #define     BA_smSysCtl_SM_CPU_CTRL_CPU_RST_GO             0x0004
    #define     B16smSysCtl_SM_CPU_CTRL_CPU_RST_GO             0x0004
    #define   LSb32smSysCtl_SM_CPU_CTRL_CPU_RST_GO                0
    #define   LSb16smSysCtl_SM_CPU_CTRL_CPU_RST_GO                0
    #define       bsmSysCtl_SM_CPU_CTRL_CPU_RST_GO             1
    #define   MSK32smSysCtl_SM_CPU_CTRL_CPU_RST_GO                0x00000001

    #define     BA_smSysCtl_SM_CPU_CTRL_CPU_VINITHI            0x0004
    #define     B16smSysCtl_SM_CPU_CTRL_CPU_VINITHI            0x0004
    #define   LSb32smSysCtl_SM_CPU_CTRL_CPU_VINITHI               1
    #define   LSb16smSysCtl_SM_CPU_CTRL_CPU_VINITHI               1
    #define       bsmSysCtl_SM_CPU_CTRL_CPU_VINITHI            1
    #define   MSK32smSysCtl_SM_CPU_CTRL_CPU_VINITHI               0x00000002

    #define     BA_smSysCtl_SM_CPU_CTRL_CPU_INITRAM            0x0004
    #define     B16smSysCtl_SM_CPU_CTRL_CPU_INITRAM            0x0004
    #define   LSb32smSysCtl_SM_CPU_CTRL_CPU_INITRAM               2
    #define   LSb16smSysCtl_SM_CPU_CTRL_CPU_INITRAM               2
    #define       bsmSysCtl_SM_CPU_CTRL_CPU_INITRAM            1
    #define   MSK32smSysCtl_SM_CPU_CTRL_CPU_INITRAM               0x00000004

    #define     BA_smSysCtl_SM_CPU_CTRL_CPU_BIGEND             0x0004
    #define     B16smSysCtl_SM_CPU_CTRL_CPU_BIGEND             0x0004
    #define   LSb32smSysCtl_SM_CPU_CTRL_CPU_BIGEND                3
    #define   LSb16smSysCtl_SM_CPU_CTRL_CPU_BIGEND                3
    #define       bsmSysCtl_SM_CPU_CTRL_CPU_BIGEND             1
    #define   MSK32smSysCtl_SM_CPU_CTRL_CPU_BIGEND                0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_RST_CTRL                        0x0008

    #define     BA_smSysCtl_SM_RST_CTRL_SOC_RST_GO             0x0008
    #define     B16smSysCtl_SM_RST_CTRL_SOC_RST_GO             0x0008
    #define   LSb32smSysCtl_SM_RST_CTRL_SOC_RST_GO                0
    #define   LSb16smSysCtl_SM_RST_CTRL_SOC_RST_GO                0
    #define       bsmSysCtl_SM_RST_CTRL_SOC_RST_GO             1
    #define   MSK32smSysCtl_SM_RST_CTRL_SOC_RST_GO                0x00000001

    #define     BA_smSysCtl_SM_RST_CTRL_APB_RST_GO             0x0008
    #define     B16smSysCtl_SM_RST_CTRL_APB_RST_GO             0x0008
    #define   LSb32smSysCtl_SM_RST_CTRL_APB_RST_GO                1
    #define   LSb16smSysCtl_SM_RST_CTRL_APB_RST_GO                1
    #define       bsmSysCtl_SM_RST_CTRL_APB_RST_GO             1
    #define   MSK32smSysCtl_SM_RST_CTRL_APB_RST_GO                0x00000002

    #define     BA_smSysCtl_SM_RST_CTRL_SXBAR_RST_GO           0x0008
    #define     B16smSysCtl_SM_RST_CTRL_SXBAR_RST_GO           0x0008
    #define   LSb32smSysCtl_SM_RST_CTRL_SXBAR_RST_GO              2
    #define   LSb16smSysCtl_SM_RST_CTRL_SXBAR_RST_GO              2
    #define       bsmSysCtl_SM_RST_CTRL_SXBAR_RST_GO           1
    #define   MSK32smSysCtl_SM_RST_CTRL_SXBAR_RST_GO              0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_RST_STATUS                      0x000C

    #define     BA_smSysCtl_SM_RST_STATUS_RST_WD_0             0x000C
    #define     B16smSysCtl_SM_RST_STATUS_RST_WD_0             0x000C
    #define   LSb32smSysCtl_SM_RST_STATUS_RST_WD_0                0
    #define   LSb16smSysCtl_SM_RST_STATUS_RST_WD_0                0
    #define       bsmSysCtl_SM_RST_STATUS_RST_WD_0             1
    #define   MSK32smSysCtl_SM_RST_STATUS_RST_WD_0                0x00000001

    #define     BA_smSysCtl_SM_RST_STATUS_RST_WD_1             0x000C
    #define     B16smSysCtl_SM_RST_STATUS_RST_WD_1             0x000C
    #define   LSb32smSysCtl_SM_RST_STATUS_RST_WD_1                1
    #define   LSb16smSysCtl_SM_RST_STATUS_RST_WD_1                1
    #define       bsmSysCtl_SM_RST_STATUS_RST_WD_1             1
    #define   MSK32smSysCtl_SM_RST_STATUS_RST_WD_1                0x00000002

    #define     BA_smSysCtl_SM_RST_STATUS_RST_WD_2             0x000C
    #define     B16smSysCtl_SM_RST_STATUS_RST_WD_2             0x000C
    #define   LSb32smSysCtl_SM_RST_STATUS_RST_WD_2                2
    #define   LSb16smSysCtl_SM_RST_STATUS_RST_WD_2                2
    #define       bsmSysCtl_SM_RST_STATUS_RST_WD_2             1
    #define   MSK32smSysCtl_SM_RST_STATUS_RST_WD_2                0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_STRP_STATUS                     0x0010

    #define     BA_smSysCtl_SM_STRP_STATUS_BOOT_MODE           0x0010
    #define     B16smSysCtl_SM_STRP_STATUS_BOOT_MODE           0x0010
    #define   LSb32smSysCtl_SM_STRP_STATUS_BOOT_MODE              0
    #define   LSb16smSysCtl_SM_STRP_STATUS_BOOT_MODE              0
    #define       bsmSysCtl_SM_STRP_STATUS_BOOT_MODE           1
    #define   MSK32smSysCtl_SM_STRP_STATUS_BOOT_MODE              0x00000001

    #define     BA_smSysCtl_SM_STRP_STATUS_STRP_1              0x0010
    #define     B16smSysCtl_SM_STRP_STATUS_STRP_1              0x0010
    #define   LSb32smSysCtl_SM_STRP_STATUS_STRP_1                 1
    #define   LSb16smSysCtl_SM_STRP_STATUS_STRP_1                 1
    #define       bsmSysCtl_SM_STRP_STATUS_STRP_1              1
    #define   MSK32smSysCtl_SM_STRP_STATUS_STRP_1                 0x00000002

    #define     BA_smSysCtl_SM_STRP_STATUS_STRP_2              0x0010
    #define     B16smSysCtl_SM_STRP_STATUS_STRP_2              0x0010
    #define   LSb32smSysCtl_SM_STRP_STATUS_STRP_2                 2
    #define   LSb16smSysCtl_SM_STRP_STATUS_STRP_2                 2
    #define       bsmSysCtl_SM_STRP_STATUS_STRP_2              1
    #define   MSK32smSysCtl_SM_STRP_STATUS_STRP_2                 0x00000004

    #define     BA_smSysCtl_SM_STRP_STATUS_STRP_3              0x0010
    #define     B16smSysCtl_SM_STRP_STATUS_STRP_3              0x0010
    #define   LSb32smSysCtl_SM_STRP_STATUS_STRP_3                 3
    #define   LSb16smSysCtl_SM_STRP_STATUS_STRP_3                 3
    #define       bsmSysCtl_SM_STRP_STATUS_STRP_3              1
    #define   MSK32smSysCtl_SM_STRP_STATUS_STRP_3                 0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_CTRL                            0x0014

    #define     BA_smSysCtl_SM_CTRL_ISO_EN                     0x0014
    #define     B16smSysCtl_SM_CTRL_ISO_EN                     0x0014
    #define   LSb32smSysCtl_SM_CTRL_ISO_EN                        0
    #define   LSb16smSysCtl_SM_CTRL_ISO_EN                        0
    #define       bsmSysCtl_SM_CTRL_ISO_EN                     1
    #define   MSK32smSysCtl_SM_CTRL_ISO_EN                        0x00000001

    #define     BA_smSysCtl_SM_CTRL_SM2SOC_SW_INTR             0x0014
    #define     B16smSysCtl_SM_CTRL_SM2SOC_SW_INTR             0x0014
    #define   LSb32smSysCtl_SM_CTRL_SM2SOC_SW_INTR                1
    #define   LSb16smSysCtl_SM_CTRL_SM2SOC_SW_INTR                1
    #define       bsmSysCtl_SM_CTRL_SM2SOC_SW_INTR             1
    #define   MSK32smSysCtl_SM_CTRL_SM2SOC_SW_INTR                0x00000002

    #define     BA_smSysCtl_SM_CTRL_SOC2SM_SW_INTR             0x0014
    #define     B16smSysCtl_SM_CTRL_SOC2SM_SW_INTR             0x0014
    #define   LSb32smSysCtl_SM_CTRL_SOC2SM_SW_INTR                2
    #define   LSb16smSysCtl_SM_CTRL_SOC2SM_SW_INTR                2
    #define       bsmSysCtl_SM_CTRL_SOC2SM_SW_INTR             1
    #define   MSK32smSysCtl_SM_CTRL_SOC2SM_SW_INTR                0x00000004

    #define     BA_smSysCtl_SM_CTRL_ADC_ENCTR                  0x0014
    #define     B16smSysCtl_SM_CTRL_ADC_ENCTR                  0x0014
    #define   LSb32smSysCtl_SM_CTRL_ADC_ENCTR                     3
    #define   LSb16smSysCtl_SM_CTRL_ADC_ENCTR                     3
    #define       bsmSysCtl_SM_CTRL_ADC_ENCTR                  3
    #define   MSK32smSysCtl_SM_CTRL_ADC_ENCTR                     0x00000038

    #define     BA_smSysCtl_SM_CTRL_ADC_SELIN                  0x0014
    #define     B16smSysCtl_SM_CTRL_ADC_SELIN                  0x0014
    #define   LSb32smSysCtl_SM_CTRL_ADC_SELIN                     6
    #define   LSb16smSysCtl_SM_CTRL_ADC_SELIN                     6
    #define       bsmSysCtl_SM_CTRL_ADC_SELIN                  3
    #define   MSK32smSysCtl_SM_CTRL_ADC_SELIN                     0x000001C0

    #define     BA_smSysCtl_SM_CTRL_ADC_EN                     0x0015
    #define     B16smSysCtl_SM_CTRL_ADC_EN                     0x0014
    #define   LSb32smSysCtl_SM_CTRL_ADC_EN                        9
    #define   LSb16smSysCtl_SM_CTRL_ADC_EN                        9
    #define       bsmSysCtl_SM_CTRL_ADC_EN                     1
    #define   MSK32smSysCtl_SM_CTRL_ADC_EN                        0x00000200

    #define     BA_smSysCtl_SM_CTRL_ADC_SEL_VREF               0x0015
    #define     B16smSysCtl_SM_CTRL_ADC_SEL_VREF               0x0014
    #define   LSb32smSysCtl_SM_CTRL_ADC_SEL_VREF                  10
    #define   LSb16smSysCtl_SM_CTRL_ADC_SEL_VREF                  10
    #define       bsmSysCtl_SM_CTRL_ADC_SEL_VREF               1
    #define   MSK32smSysCtl_SM_CTRL_ADC_SEL_VREF                  0x00000400

    #define     BA_smSysCtl_SM_CTRL_ADC_SELBG                  0x0015
    #define     B16smSysCtl_SM_CTRL_ADC_SELBG                  0x0014
    #define   LSb32smSysCtl_SM_CTRL_ADC_SELBG                     11
    #define   LSb16smSysCtl_SM_CTRL_ADC_SELBG                     11
    #define       bsmSysCtl_SM_CTRL_ADC_SELBG                  1
    #define   MSK32smSysCtl_SM_CTRL_ADC_SELBG                     0x00000800

    #define     BA_smSysCtl_SM_CTRL_ADC_SELDIFF                0x0015
    #define     B16smSysCtl_SM_CTRL_ADC_SELDIFF                0x0014
    #define   LSb32smSysCtl_SM_CTRL_ADC_SELDIFF                   12
    #define   LSb16smSysCtl_SM_CTRL_ADC_SELDIFF                   12
    #define       bsmSysCtl_SM_CTRL_ADC_SELDIFF                1
    #define   MSK32smSysCtl_SM_CTRL_ADC_SELDIFF                   0x00001000

    #define     BA_smSysCtl_SM_CTRL_ADC_SELRES                 0x0015
    #define     B16smSysCtl_SM_CTRL_ADC_SELRES                 0x0014
    #define   LSb32smSysCtl_SM_CTRL_ADC_SELRES                    13
    #define   LSb16smSysCtl_SM_CTRL_ADC_SELRES                    13
    #define       bsmSysCtl_SM_CTRL_ADC_SELRES                 2
    #define   MSK32smSysCtl_SM_CTRL_ADC_SELRES                    0x00006000

    #define     BA_smSysCtl_SM_CTRL_ADC_START                  0x0015
    #define     B16smSysCtl_SM_CTRL_ADC_START                  0x0014
    #define   LSb32smSysCtl_SM_CTRL_ADC_START                     15
    #define   LSb16smSysCtl_SM_CTRL_ADC_START                     15
    #define       bsmSysCtl_SM_CTRL_ADC_START                  1
    #define   MSK32smSysCtl_SM_CTRL_ADC_START                     0x00008000

    #define     BA_smSysCtl_SM_CTRL_ADC_RESET                  0x0016
    #define     B16smSysCtl_SM_CTRL_ADC_RESET                  0x0016
    #define   LSb32smSysCtl_SM_CTRL_ADC_RESET                     16
    #define   LSb16smSysCtl_SM_CTRL_ADC_RESET                     0
    #define       bsmSysCtl_SM_CTRL_ADC_RESET                  1
    #define   MSK32smSysCtl_SM_CTRL_ADC_RESET                     0x00010000

    #define     BA_smSysCtl_SM_CTRL_ADC_CONT                   0x0016
    #define     B16smSysCtl_SM_CTRL_ADC_CONT                   0x0016
    #define   LSb32smSysCtl_SM_CTRL_ADC_CONT                      17
    #define   LSb16smSysCtl_SM_CTRL_ADC_CONT                      1
    #define       bsmSysCtl_SM_CTRL_ADC_CONT                   1
    #define   MSK32smSysCtl_SM_CTRL_ADC_CONT                      0x00020000
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_ADC_CTRL                        0x0018

    #define     BA_smSysCtl_SM_ADC_CTRL_ADC_DAT_LT             0x0018
    #define     B16smSysCtl_SM_ADC_CTRL_ADC_DAT_LT             0x0018
    #define   LSb32smSysCtl_SM_ADC_CTRL_ADC_DAT_LT                0
    #define   LSb16smSysCtl_SM_ADC_CTRL_ADC_DAT_LT                0
    #define       bsmSysCtl_SM_ADC_CTRL_ADC_DAT_LT             5
    #define   MSK32smSysCtl_SM_ADC_CTRL_ADC_DAT_LT                0x0000001F
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_ADC_STATUS                      0x001C

    #define     BA_smSysCtl_SM_ADC_STATUS_DATA_RDY             0x001C
    #define     B16smSysCtl_SM_ADC_STATUS_DATA_RDY             0x001C
    #define   LSb32smSysCtl_SM_ADC_STATUS_DATA_RDY                0
    #define   LSb16smSysCtl_SM_ADC_STATUS_DATA_RDY                0
    #define       bsmSysCtl_SM_ADC_STATUS_DATA_RDY             1
    #define   MSK32smSysCtl_SM_ADC_STATUS_DATA_RDY                0x00000001

    #define     BA_smSysCtl_SM_ADC_STATUS_INT_EN               0x001C
    #define     B16smSysCtl_SM_ADC_STATUS_INT_EN               0x001C
    #define   LSb32smSysCtl_SM_ADC_STATUS_INT_EN                  1
    #define   LSb16smSysCtl_SM_ADC_STATUS_INT_EN                  1
    #define       bsmSysCtl_SM_ADC_STATUS_INT_EN               1
    #define   MSK32smSysCtl_SM_ADC_STATUS_INT_EN                  0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_ADC_DATA                        0x0020

    #define     BA_smSysCtl_SM_ADC_DATA_ADC_DATA               0x0020
    #define     B16smSysCtl_SM_ADC_DATA_ADC_DATA               0x0020
    #define   LSb32smSysCtl_SM_ADC_DATA_ADC_DATA                  0
    #define   LSb16smSysCtl_SM_ADC_DATA_ADC_DATA                  0
    #define       bsmSysCtl_SM_ADC_DATA_ADC_DATA               12
    #define   MSK32smSysCtl_SM_ADC_DATA_ADC_DATA                  0x00000FFF
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_TSEN                               0x0024
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_FEPHY                              0x003C
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_BOOT_STATUS                     0x004C

    #define     BA_smSysCtl_SM_BOOT_STATUS_MODE                0x004C
    #define     B16smSysCtl_SM_BOOT_STATUS_MODE                0x004C
    #define   LSb32smSysCtl_SM_BOOT_STATUS_MODE                   0
    #define   LSb16smSysCtl_SM_BOOT_STATUS_MODE                   0
    #define       bsmSysCtl_SM_BOOT_STATUS_MODE                32
    #define   MSK32smSysCtl_SM_BOOT_STATUS_MODE                   0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_WDT_MASK                        0x0050

    #define     BA_smSysCtl_SM_WDT_MASK_SM_RST                 0x0050
    #define     B16smSysCtl_SM_WDT_MASK_SM_RST                 0x0050
    #define   LSb32smSysCtl_SM_WDT_MASK_SM_RST                    0
    #define   LSb16smSysCtl_SM_WDT_MASK_SM_RST                    0
    #define       bsmSysCtl_SM_WDT_MASK_SM_RST                 3
    #define   MSK32smSysCtl_SM_WDT_MASK_SM_RST                    0x00000007

    #define     BA_smSysCtl_SM_WDT_MASK_SOC_RST                0x0050
    #define     B16smSysCtl_SM_WDT_MASK_SOC_RST                0x0050
    #define   LSb32smSysCtl_SM_WDT_MASK_SOC_RST                   3
    #define   LSb16smSysCtl_SM_WDT_MASK_SOC_RST                   3
    #define       bsmSysCtl_SM_WDT_MASK_SOC_RST                3
    #define   MSK32smSysCtl_SM_WDT_MASK_SOC_RST                   0x00000038
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_POR_status                         0x0054

    #define     BA_smSysCtl_POR_status_POR_VDDIO1P8_SM         0x0054
    #define     B16smSysCtl_POR_status_POR_VDDIO1P8_SM         0x0054
    #define   LSb32smSysCtl_POR_status_POR_VDDIO1P8_SM            0
    #define   LSb16smSysCtl_POR_status_POR_VDDIO1P8_SM            0
    #define       bsmSysCtl_POR_status_POR_VDDIO1P8_SM         1
    #define   MSK32smSysCtl_POR_status_POR_VDDIO1P8_SM            0x00000001

    #define     BA_smSysCtl_POR_status_POR_VDD_SM              0x0054
    #define     B16smSysCtl_POR_status_POR_VDD_SM              0x0054
    #define   LSb32smSysCtl_POR_status_POR_VDD_SM                 1
    #define   LSb16smSysCtl_POR_status_POR_VDD_SM                 1
    #define       bsmSysCtl_POR_status_POR_VDD_SM              1
    #define   MSK32smSysCtl_POR_status_POR_VDD_SM                 0x00000002

    #define     BA_smSysCtl_POR_status_POR_VDDIO_SOC           0x0054
    #define     B16smSysCtl_POR_status_POR_VDDIO_SOC           0x0054
    #define   LSb32smSysCtl_POR_status_POR_VDDIO_SOC              2
    #define   LSb16smSysCtl_POR_status_POR_VDDIO_SOC              2
    #define       bsmSysCtl_POR_status_POR_VDDIO_SOC           1
    #define   MSK32smSysCtl_POR_status_POR_VDDIO_SOC              0x00000004

    #define     BA_smSysCtl_POR_status_POR_VDDIO3P3_SOC        0x0054
    #define     B16smSysCtl_POR_status_POR_VDDIO3P3_SOC        0x0054
    #define   LSb32smSysCtl_POR_status_POR_VDDIO3P3_SOC           3
    #define   LSb16smSysCtl_POR_status_POR_VDDIO3P3_SOC           3
    #define       bsmSysCtl_POR_status_POR_VDDIO3P3_SOC        1
    #define   MSK32smSysCtl_POR_status_POR_VDDIO3P3_SOC           0x00000008

    #define     BA_smSysCtl_POR_status_POR_VDD_SOC             0x0054
    #define     B16smSysCtl_POR_status_POR_VDD_SOC             0x0054
    #define   LSb32smSysCtl_POR_status_POR_VDD_SOC                4
    #define   LSb16smSysCtl_POR_status_POR_VDD_SOC                4
    #define       bsmSysCtl_POR_status_POR_VDD_SOC             1
    #define   MSK32smSysCtl_POR_status_POR_VDD_SOC                0x00000010

    #define     BA_smSysCtl_POR_status_POR_VDD_CPU             0x0054
    #define     B16smSysCtl_POR_status_POR_VDD_CPU             0x0054
    #define   LSb32smSysCtl_POR_status_POR_VDD_CPU                5
    #define   LSb16smSysCtl_POR_status_POR_VDD_CPU                5
    #define       bsmSysCtl_POR_status_POR_VDD_CPU             1
    #define   MSK32smSysCtl_POR_status_POR_VDD_CPU                0x00000020
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_TEST                            0x0058

    #define     BA_smSysCtl_SM_TEST_ADC_TEST_FAIL              0x0058
    #define     B16smSysCtl_SM_TEST_ADC_TEST_FAIL              0x0058
    #define   LSb32smSysCtl_SM_TEST_ADC_TEST_FAIL                 0
    #define   LSb16smSysCtl_SM_TEST_ADC_TEST_FAIL                 0
    #define       bsmSysCtl_SM_TEST_ADC_TEST_FAIL              1
    #define   MSK32smSysCtl_SM_TEST_ADC_TEST_FAIL                 0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_TEST_DATA0                      0x005C

    #define     BA_smSysCtl_SM_TEST_DATA0_ADC_DATA_HIGH        0x005C
    #define     B16smSysCtl_SM_TEST_DATA0_ADC_DATA_HIGH        0x005C
    #define   LSb32smSysCtl_SM_TEST_DATA0_ADC_DATA_HIGH           0
    #define   LSb16smSysCtl_SM_TEST_DATA0_ADC_DATA_HIGH           0
    #define       bsmSysCtl_SM_TEST_DATA0_ADC_DATA_HIGH        12
    #define   MSK32smSysCtl_SM_TEST_DATA0_ADC_DATA_HIGH           0x00000FFF
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_TEST_DATA1                      0x0060

    #define     BA_smSysCtl_SM_TEST_DATA1_ADC_DATA_LOW         0x0060
    #define     B16smSysCtl_SM_TEST_DATA1_ADC_DATA_LOW         0x0060
    #define   LSb32smSysCtl_SM_TEST_DATA1_ADC_DATA_LOW            0
    #define   LSb16smSysCtl_SM_TEST_DATA1_ADC_DATA_LOW            0
    #define       bsmSysCtl_SM_TEST_DATA1_ADC_DATA_LOW         12
    #define   MSK32smSysCtl_SM_TEST_DATA1_ADC_DATA_LOW            0x00000FFF
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_PORT_SEL_CTRL                   0x0064

    #define     BA_smSysCtl_SM_PORT_SEL_CTRL_TW2               0x0064
    #define     B16smSysCtl_SM_PORT_SEL_CTRL_TW2               0x0064
    #define   LSb32smSysCtl_SM_PORT_SEL_CTRL_TW2                  0
    #define   LSb16smSysCtl_SM_PORT_SEL_CTRL_TW2                  0
    #define       bsmSysCtl_SM_PORT_SEL_CTRL_TW2               1
    #define   MSK32smSysCtl_SM_PORT_SEL_CTRL_TW2                  0x00000001

    #define     BA_smSysCtl_SM_PORT_SEL_CTRL_URT1              0x0064
    #define     B16smSysCtl_SM_PORT_SEL_CTRL_URT1              0x0064
    #define   LSb32smSysCtl_SM_PORT_SEL_CTRL_URT1                 1
    #define   LSb16smSysCtl_SM_PORT_SEL_CTRL_URT1                 1
    #define       bsmSysCtl_SM_PORT_SEL_CTRL_URT1              1
    #define   MSK32smSysCtl_SM_PORT_SEL_CTRL_URT1                 0x00000002

    #define     BA_smSysCtl_SM_PORT_SEL_CTRL_FE_MDIO           0x0064
    #define     B16smSysCtl_SM_PORT_SEL_CTRL_FE_MDIO           0x0064
    #define   LSb32smSysCtl_SM_PORT_SEL_CTRL_FE_MDIO              2
    #define   LSb16smSysCtl_SM_PORT_SEL_CTRL_FE_MDIO              2
    #define       bsmSysCtl_SM_PORT_SEL_CTRL_FE_MDIO           1
    #define   MSK32smSysCtl_SM_PORT_SEL_CTRL_FE_MDIO              0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_DUMMY_REG                       0x0068

    #define     BA_smSysCtl_SM_DUMMY_REG_REG0                  0x0068
    #define     B16smSysCtl_SM_DUMMY_REG_REG0                  0x0068
    #define   LSb32smSysCtl_SM_DUMMY_REG_REG0                     0
    #define   LSb16smSysCtl_SM_DUMMY_REG_REG0                     0
    #define       bsmSysCtl_SM_DUMMY_REG_REG0                  32
    #define   MSK32smSysCtl_SM_DUMMY_REG_REG0                     0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_POR_CTL                         0x006C

    #define     BA_smSysCtl_SM_POR_CTL_SOC_VDD1P8V_BYPASS      0x006C
    #define     B16smSysCtl_SM_POR_CTL_SOC_VDD1P8V_BYPASS      0x006C
    #define   LSb32smSysCtl_SM_POR_CTL_SOC_VDD1P8V_BYPASS         0
    #define   LSb16smSysCtl_SM_POR_CTL_SOC_VDD1P8V_BYPASS         0
    #define       bsmSysCtl_SM_POR_CTL_SOC_VDD1P8V_BYPASS      1
    #define   MSK32smSysCtl_SM_POR_CTL_SOC_VDD1P8V_BYPASS         0x00000001

    #define     BA_smSysCtl_SM_POR_CTL_SM_VDD1P8V_BYPASS       0x006C
    #define     B16smSysCtl_SM_POR_CTL_SM_VDD1P8V_BYPASS       0x006C
    #define   LSb32smSysCtl_SM_POR_CTL_SM_VDD1P8V_BYPASS          1
    #define   LSb16smSysCtl_SM_POR_CTL_SM_VDD1P8V_BYPASS          1
    #define       bsmSysCtl_SM_POR_CTL_SM_VDD1P8V_BYPASS       1
    #define   MSK32smSysCtl_SM_POR_CTL_SM_VDD1P8V_BYPASS          0x00000002

    #define     BA_smSysCtl_SM_POR_CTL_SOC_VDD3P3V_BYPASS      0x006C
    #define     B16smSysCtl_SM_POR_CTL_SOC_VDD3P3V_BYPASS      0x006C
    #define   LSb32smSysCtl_SM_POR_CTL_SOC_VDD3P3V_BYPASS         2
    #define   LSb16smSysCtl_SM_POR_CTL_SOC_VDD3P3V_BYPASS         2
    #define       bsmSysCtl_SM_POR_CTL_SOC_VDD3P3V_BYPASS      1
    #define   MSK32smSysCtl_SM_POR_CTL_SOC_VDD3P3V_BYPASS         0x00000004

    #define     BA_smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_PD      0x006C
    #define     B16smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_PD      0x006C
    #define   LSb32smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_PD         3
    #define   LSb16smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_PD         3
    #define       bsmSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_PD      1
    #define   MSK32smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_PD         0x00000008

    #define     BA_smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_VTH     0x006C
    #define     B16smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_VTH     0x006C
    #define   LSb32smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_VTH        4
    #define   LSb16smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_VTH        4
    #define       bsmSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_VTH     2
    #define   MSK32smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_VTH        0x00000030

    #define     BA_smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_PD       0x006C
    #define     B16smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_PD       0x006C
    #define   LSb32smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_PD          6
    #define   LSb16smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_PD          6
    #define       bsmSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_PD       1
    #define   MSK32smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_PD          0x00000040

    #define     BA_smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_VTH      0x006C
    #define     B16smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_VTH      0x006C
    #define   LSb32smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_VTH         7
    #define   LSb16smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_VTH         7
    #define       bsmSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_VTH      2
    #define   MSK32smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_VTH         0x00000180

    #define     BA_smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_PD      0x006D
    #define     B16smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_PD      0x006C
    #define   LSb32smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_PD         9
    #define   LSb16smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_PD         9
    #define       bsmSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_PD      1
    #define   MSK32smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_PD         0x00000200

    #define     BA_smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_VTH     0x006D
    #define     B16smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_VTH     0x006C
    #define   LSb32smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_VTH        10
    #define   LSb16smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_VTH        10
    #define       bsmSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_VTH     2
    #define   MSK32smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_VTH        0x00000C00
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_PWR_OK                          0x0070

    #define     BA_smSysCtl_SM_PWR_OK_status                   0x0070
    #define     B16smSysCtl_SM_PWR_OK_status                   0x0070
    #define   LSb32smSysCtl_SM_PWR_OK_status                      0
    #define   LSb16smSysCtl_SM_PWR_OK_status                      0
    #define       bsmSysCtl_SM_PWR_OK_status                   1
    #define   MSK32smSysCtl_SM_PWR_OK_status                      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SRAMPWR                            0x0074
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SRAMWTC                            0x0078
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_smPinMuxCntlBus                    0x0200

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_TW2_SCL         0x0200
    #define     B16smSysCtl_smPinMuxCntlBus_SM_TW2_SCL         0x0200
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_TW2_SCL            0
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_TW2_SCL            0
    #define       bsmSysCtl_smPinMuxCntlBus_SM_TW2_SCL         3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_TW2_SCL            0x00000007
    #define        smSysCtl_smPinMuxCntlBus_SM_TW2_SCL_MODE_0               0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_TW2_SCL_MODE_1               0x1

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_TW2_SDA         0x0200
    #define     B16smSysCtl_smPinMuxCntlBus_SM_TW2_SDA         0x0200
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_TW2_SDA            3
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_TW2_SDA            3
    #define       bsmSysCtl_smPinMuxCntlBus_SM_TW2_SDA         3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_TW2_SDA            0x00000038
    #define        smSysCtl_smPinMuxCntlBus_SM_TW2_SDA_MODE_0               0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_TW2_SDA_MODE_1               0x1

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_URT1_TXD        0x0200
    #define     B16smSysCtl_smPinMuxCntlBus_SM_URT1_TXD        0x0200
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_URT1_TXD           6
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_URT1_TXD           6
    #define       bsmSysCtl_smPinMuxCntlBus_SM_URT1_TXD        3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_URT1_TXD           0x000001C0
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_TXD_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_TXD_MODE_1              0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_TXD_MODE_2              0x2
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_TXD_MODE_3              0x3
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_TXD_MODE_4              0x4
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_TXD_MODE_5              0x5

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_URT1_RXD        0x0201
    #define     B16smSysCtl_smPinMuxCntlBus_SM_URT1_RXD        0x0200
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_URT1_RXD           9
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_URT1_RXD           9
    #define       bsmSysCtl_smPinMuxCntlBus_SM_URT1_RXD        3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_URT1_RXD           0x00000E00
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_RXD_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_RXD_MODE_1              0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_RXD_MODE_2              0x2
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_RXD_MODE_3              0x3
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_RXD_MODE_4              0x4
    #define        smSysCtl_smPinMuxCntlBus_SM_URT1_RXD_MODE_5              0x5

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD     0x0201
    #define     B16smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD     0x0200
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD        12
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD        12
    #define       bsmSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD     3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD        0x00007000
    #define        smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD_MODE_1              0x1

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_CEC     0x0201
    #define     B16smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_CEC     0x0200
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_CEC        15
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_CEC        15
    #define       bsmSysCtl_smPinMuxCntlBus_SM_HDMI_TX_CEC     3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_CEC        0x00038000
    #define        smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_CEC_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_CEC_MODE_1              0x1

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_TMS             0x0202
    #define     B16smSysCtl_smPinMuxCntlBus_SM_TMS             0x0202
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_TMS                18
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_TMS                2
    #define       bsmSysCtl_smPinMuxCntlBus_SM_TMS             3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_TMS                0x001C0000
    #define        smSysCtl_smPinMuxCntlBus_SM_TMS_MODE_0                   0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_TMS_MODE_1                   0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_TMS_MODE_2                   0x2
    #define        smSysCtl_smPinMuxCntlBus_SM_TMS_MODE_3                   0x3

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_TDI             0x0202
    #define     B16smSysCtl_smPinMuxCntlBus_SM_TDI             0x0202
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_TDI                21
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_TDI                5
    #define       bsmSysCtl_smPinMuxCntlBus_SM_TDI             3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_TDI                0x00E00000
    #define        smSysCtl_smPinMuxCntlBus_SM_TDI_MODE_0                   0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_TDI_MODE_1                   0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_TDI_MODE_2                   0x2
    #define        smSysCtl_smPinMuxCntlBus_SM_TDI_MODE_3                   0x3

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_TDO             0x0203
    #define     B16smSysCtl_smPinMuxCntlBus_SM_TDO             0x0202
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_TDO                24
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_TDO                8
    #define       bsmSysCtl_smPinMuxCntlBus_SM_TDO             3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_TDO                0x07000000
    #define        smSysCtl_smPinMuxCntlBus_SM_TDO_MODE_0                   0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_TDO_MODE_1                   0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_TDO_MODE_3                   0x3

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_TW3_SCL         0x0203
    #define     B16smSysCtl_smPinMuxCntlBus_SM_TW3_SCL         0x0202
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_TW3_SCL            27
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_TW3_SCL            11
    #define       bsmSysCtl_smPinMuxCntlBus_SM_TW3_SCL         3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_TW3_SCL            0x38000000
    #define        smSysCtl_smPinMuxCntlBus_SM_TW3_SCL_MODE_0               0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_TW3_SCL_MODE_1               0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_TW3_SCL_MODE_2               0x2

    #define     RA_smSysCtl_smPinMuxCntlBus1                   0x0204

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_TW3_SDA         0x0204
    #define     B16smSysCtl_smPinMuxCntlBus_SM_TW3_SDA         0x0204
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_TW3_SDA            0
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_TW3_SDA            0
    #define       bsmSysCtl_smPinMuxCntlBus_SM_TW3_SDA         3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_TW3_SDA            0x00000007
    #define        smSysCtl_smPinMuxCntlBus_SM_TW3_SDA_MODE_0               0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_TW3_SDA_MODE_1               0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_TW3_SDA_MODE_2               0x2
    #define        smSysCtl_smPinMuxCntlBus_SM_TW3_SDA_MODE_6               0x6

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n       0x0204
    #define     B16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n       0x0204
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n          3
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n          3
    #define       bsmSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n       3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n          0x00000038
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n_MODE_1              0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n_MODE_6              0x6
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n_MODE_7              0x7

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n       0x0204
    #define     B16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n       0x0204
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n          6
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n          6
    #define       bsmSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n       3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n          0x000001C0
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n_MODE_1              0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n_MODE_6              0x6
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n_MODE_7              0x7

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n       0x0205
    #define     B16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n       0x0204
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n          9
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n          9
    #define       bsmSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n       3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n          0x00000E00
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n_MODE_1              0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n_MODE_2              0x2
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n_MODE_3              0x3
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n_MODE_4              0x4
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n_MODE_5              0x5
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n_MODE_6              0x6
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n_MODE_7              0x7

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n       0x0205
    #define     B16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n       0x0204
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n          12
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n          12
    #define       bsmSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n       3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n          0x00007000
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n_MODE_1              0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n_MODE_2              0x2
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n_MODE_3              0x3
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n_MODE_4              0x4
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n_MODE_5              0x5
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n_MODE_6              0x6
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n_MODE_7              0x7

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO        0x0205
    #define     B16smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO        0x0204
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO           15
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO           15
    #define       bsmSysCtl_smPinMuxCntlBus_SM_SPI2_SDO        3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO           0x00038000
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO_MODE_1              0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO_MODE_2              0x2
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO_MODE_6              0x6

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI        0x0206
    #define     B16smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI        0x0206
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI           18
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI           2
    #define       bsmSysCtl_smPinMuxCntlBus_SM_SPI2_SDI        3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI           0x001C0000
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI_MODE_1              0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI_MODE_2              0x2
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI_MODE_6              0x6

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK       0x0206
    #define     B16smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK       0x0206
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK          21
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK          5
    #define       bsmSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK       3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK          0x00E00000
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK_MODE_1              0x1
    #define        smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK_MODE_6              0x6

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_URT0_TXD        0x0207
    #define     B16smSysCtl_smPinMuxCntlBus_SM_URT0_TXD        0x0206
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_URT0_TXD           24
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_URT0_TXD           8
    #define       bsmSysCtl_smPinMuxCntlBus_SM_URT0_TXD        3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_URT0_TXD           0x07000000
    #define        smSysCtl_smPinMuxCntlBus_SM_URT0_TXD_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_URT0_TXD_MODE_1              0x1

    #define     BA_smSysCtl_smPinMuxCntlBus_SM_URT0_RXD        0x0207
    #define     B16smSysCtl_smPinMuxCntlBus_SM_URT0_RXD        0x0206
    #define   LSb32smSysCtl_smPinMuxCntlBus_SM_URT0_RXD           27
    #define   LSb16smSysCtl_smPinMuxCntlBus_SM_URT0_RXD           11
    #define       bsmSysCtl_smPinMuxCntlBus_SM_URT0_RXD        3
    #define   MSK32smSysCtl_smPinMuxCntlBus_SM_URT0_RXD           0x38000000
    #define        smSysCtl_smPinMuxCntlBus_SM_URT0_RXD_MODE_0              0x0
    #define        smSysCtl_smPinMuxCntlBus_SM_URT0_RXD_MODE_1              0x1
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_RCLKICntl                       0x0208

    #define     BA_smSysCtl_SM_RCLKICntl_DS0                   0x0208
    #define     B16smSysCtl_SM_RCLKICntl_DS0                   0x0208
    #define   LSb32smSysCtl_SM_RCLKICntl_DS0                      0
    #define   LSb16smSysCtl_SM_RCLKICntl_DS0                      0
    #define       bsmSysCtl_SM_RCLKICntl_DS0                   1
    #define   MSK32smSysCtl_SM_RCLKICntl_DS0                      0x00000001

    #define     BA_smSysCtl_SM_RCLKICntl_DS1                   0x0208
    #define     B16smSysCtl_SM_RCLKICntl_DS1                   0x0208
    #define   LSb32smSysCtl_SM_RCLKICntl_DS1                      1
    #define   LSb16smSysCtl_SM_RCLKICntl_DS1                      1
    #define       bsmSysCtl_SM_RCLKICntl_DS1                   1
    #define   MSK32smSysCtl_SM_RCLKICntl_DS1                      0x00000002

    #define     BA_smSysCtl_SM_RCLKICntl_DS2                   0x0208
    #define     B16smSysCtl_SM_RCLKICntl_DS2                   0x0208
    #define   LSb32smSysCtl_SM_RCLKICntl_DS2                      2
    #define   LSb16smSysCtl_SM_RCLKICntl_DS2                      2
    #define       bsmSysCtl_SM_RCLKICntl_DS2                   1
    #define   MSK32smSysCtl_SM_RCLKICntl_DS2                      0x00000004

    #define     BA_smSysCtl_SM_RCLKICntl_DS3                   0x0208
    #define     B16smSysCtl_SM_RCLKICntl_DS3                   0x0208
    #define   LSb32smSysCtl_SM_RCLKICntl_DS3                      3
    #define   LSb16smSysCtl_SM_RCLKICntl_DS3                      3
    #define       bsmSysCtl_SM_RCLKICntl_DS3                   1
    #define   MSK32smSysCtl_SM_RCLKICntl_DS3                      0x00000008

    #define     BA_smSysCtl_SM_RCLKICntl_RD0                   0x0208
    #define     B16smSysCtl_SM_RCLKICntl_RD0                   0x0208
    #define   LSb32smSysCtl_SM_RCLKICntl_RD0                      4
    #define   LSb16smSysCtl_SM_RCLKICntl_RD0                      4
    #define       bsmSysCtl_SM_RCLKICntl_RD0                   1
    #define   MSK32smSysCtl_SM_RCLKICntl_RD0                      0x00000010

    #define     BA_smSysCtl_SM_RCLKICntl_RD1                   0x0208
    #define     B16smSysCtl_SM_RCLKICntl_RD1                   0x0208
    #define   LSb32smSysCtl_SM_RCLKICntl_RD1                      5
    #define   LSb16smSysCtl_SM_RCLKICntl_RD1                      5
    #define       bsmSysCtl_SM_RCLKICntl_RD1                   1
    #define   MSK32smSysCtl_SM_RCLKICntl_RD1                      0x00000020

    #define     BA_smSysCtl_SM_RCLKICntl_REF0                  0x0208
    #define     B16smSysCtl_SM_RCLKICntl_REF0                  0x0208
    #define   LSb32smSysCtl_SM_RCLKICntl_REF0                     6
    #define   LSb16smSysCtl_SM_RCLKICntl_REF0                     6
    #define       bsmSysCtl_SM_RCLKICntl_REF0                  1
    #define   MSK32smSysCtl_SM_RCLKICntl_REF0                     0x00000040

    #define     BA_smSysCtl_SM_RCLKICntl_REF1                  0x0208
    #define     B16smSysCtl_SM_RCLKICntl_REF1                  0x0208
    #define   LSb32smSysCtl_SM_RCLKICntl_REF1                     7
    #define   LSb16smSysCtl_SM_RCLKICntl_REF1                     7
    #define       bsmSysCtl_SM_RCLKICntl_REF1                  1
    #define   MSK32smSysCtl_SM_RCLKICntl_REF1                     0x00000080

    #define     BA_smSysCtl_SM_RCLKICntl_XE                    0x0209
    #define     B16smSysCtl_SM_RCLKICntl_XE                    0x0208
    #define   LSb32smSysCtl_SM_RCLKICntl_XE                       8
    #define   LSb16smSysCtl_SM_RCLKICntl_XE                       8
    #define       bsmSysCtl_SM_RCLKICntl_XE                    1
    #define   MSK32smSysCtl_SM_RCLKICntl_XE                       0x00000100
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_TW2_SCLCntl                     0x020C

    #define     BA_smSysCtl_SM_TW2_SCLCntl_DS0                 0x020C
    #define     B16smSysCtl_SM_TW2_SCLCntl_DS0                 0x020C
    #define   LSb32smSysCtl_SM_TW2_SCLCntl_DS0                    0
    #define   LSb16smSysCtl_SM_TW2_SCLCntl_DS0                    0
    #define       bsmSysCtl_SM_TW2_SCLCntl_DS0                 1
    #define   MSK32smSysCtl_SM_TW2_SCLCntl_DS0                    0x00000001

    #define     BA_smSysCtl_SM_TW2_SCLCntl_DS1                 0x020C
    #define     B16smSysCtl_SM_TW2_SCLCntl_DS1                 0x020C
    #define   LSb32smSysCtl_SM_TW2_SCLCntl_DS1                    1
    #define   LSb16smSysCtl_SM_TW2_SCLCntl_DS1                    1
    #define       bsmSysCtl_SM_TW2_SCLCntl_DS1                 1
    #define   MSK32smSysCtl_SM_TW2_SCLCntl_DS1                    0x00000002

    #define     BA_smSysCtl_SM_TW2_SCLCntl_DS2                 0x020C
    #define     B16smSysCtl_SM_TW2_SCLCntl_DS2                 0x020C
    #define   LSb32smSysCtl_SM_TW2_SCLCntl_DS2                    2
    #define   LSb16smSysCtl_SM_TW2_SCLCntl_DS2                    2
    #define       bsmSysCtl_SM_TW2_SCLCntl_DS2                 1
    #define   MSK32smSysCtl_SM_TW2_SCLCntl_DS2                    0x00000004

    #define     BA_smSysCtl_SM_TW2_SCLCntl_DS3                 0x020C
    #define     B16smSysCtl_SM_TW2_SCLCntl_DS3                 0x020C
    #define   LSb32smSysCtl_SM_TW2_SCLCntl_DS3                    3
    #define   LSb16smSysCtl_SM_TW2_SCLCntl_DS3                    3
    #define       bsmSysCtl_SM_TW2_SCLCntl_DS3                 1
    #define   MSK32smSysCtl_SM_TW2_SCLCntl_DS3                    0x00000008

    #define     BA_smSysCtl_SM_TW2_SCLCntl_IE                  0x020C
    #define     B16smSysCtl_SM_TW2_SCLCntl_IE                  0x020C
    #define   LSb32smSysCtl_SM_TW2_SCLCntl_IE                     4
    #define   LSb16smSysCtl_SM_TW2_SCLCntl_IE                     4
    #define       bsmSysCtl_SM_TW2_SCLCntl_IE                  1
    #define   MSK32smSysCtl_SM_TW2_SCLCntl_IE                     0x00000010

    #define     BA_smSysCtl_SM_TW2_SCLCntl_PE                  0x020C
    #define     B16smSysCtl_SM_TW2_SCLCntl_PE                  0x020C
    #define   LSb32smSysCtl_SM_TW2_SCLCntl_PE                     5
    #define   LSb16smSysCtl_SM_TW2_SCLCntl_PE                     5
    #define       bsmSysCtl_SM_TW2_SCLCntl_PE                  1
    #define   MSK32smSysCtl_SM_TW2_SCLCntl_PE                     0x00000020

    #define     BA_smSysCtl_SM_TW2_SCLCntl_PS                  0x020C
    #define     B16smSysCtl_SM_TW2_SCLCntl_PS                  0x020C
    #define   LSb32smSysCtl_SM_TW2_SCLCntl_PS                     6
    #define   LSb16smSysCtl_SM_TW2_SCLCntl_PS                     6
    #define       bsmSysCtl_SM_TW2_SCLCntl_PS                  1
    #define   MSK32smSysCtl_SM_TW2_SCLCntl_PS                     0x00000040

    #define     BA_smSysCtl_SM_TW2_SCLCntl_SL                  0x020C
    #define     B16smSysCtl_SM_TW2_SCLCntl_SL                  0x020C
    #define   LSb32smSysCtl_SM_TW2_SCLCntl_SL                     7
    #define   LSb16smSysCtl_SM_TW2_SCLCntl_SL                     7
    #define       bsmSysCtl_SM_TW2_SCLCntl_SL                  1
    #define   MSK32smSysCtl_SM_TW2_SCLCntl_SL                     0x00000080

    #define     BA_smSysCtl_SM_TW2_SCLCntl_SPU                 0x020D
    #define     B16smSysCtl_SM_TW2_SCLCntl_SPU                 0x020C
    #define   LSb32smSysCtl_SM_TW2_SCLCntl_SPU                    8
    #define   LSb16smSysCtl_SM_TW2_SCLCntl_SPU                    8
    #define       bsmSysCtl_SM_TW2_SCLCntl_SPU                 1
    #define   MSK32smSysCtl_SM_TW2_SCLCntl_SPU                    0x00000100

    #define     BA_smSysCtl_SM_TW2_SCLCntl_ST                  0x020D
    #define     B16smSysCtl_SM_TW2_SCLCntl_ST                  0x020C
    #define   LSb32smSysCtl_SM_TW2_SCLCntl_ST                     9
    #define   LSb16smSysCtl_SM_TW2_SCLCntl_ST                     9
    #define       bsmSysCtl_SM_TW2_SCLCntl_ST                  1
    #define   MSK32smSysCtl_SM_TW2_SCLCntl_ST                     0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_TW2_SDACntl                     0x0210

    #define     BA_smSysCtl_SM_TW2_SDACntl_DS0                 0x0210
    #define     B16smSysCtl_SM_TW2_SDACntl_DS0                 0x0210
    #define   LSb32smSysCtl_SM_TW2_SDACntl_DS0                    0
    #define   LSb16smSysCtl_SM_TW2_SDACntl_DS0                    0
    #define       bsmSysCtl_SM_TW2_SDACntl_DS0                 1
    #define   MSK32smSysCtl_SM_TW2_SDACntl_DS0                    0x00000001

    #define     BA_smSysCtl_SM_TW2_SDACntl_DS1                 0x0210
    #define     B16smSysCtl_SM_TW2_SDACntl_DS1                 0x0210
    #define   LSb32smSysCtl_SM_TW2_SDACntl_DS1                    1
    #define   LSb16smSysCtl_SM_TW2_SDACntl_DS1                    1
    #define       bsmSysCtl_SM_TW2_SDACntl_DS1                 1
    #define   MSK32smSysCtl_SM_TW2_SDACntl_DS1                    0x00000002

    #define     BA_smSysCtl_SM_TW2_SDACntl_DS2                 0x0210
    #define     B16smSysCtl_SM_TW2_SDACntl_DS2                 0x0210
    #define   LSb32smSysCtl_SM_TW2_SDACntl_DS2                    2
    #define   LSb16smSysCtl_SM_TW2_SDACntl_DS2                    2
    #define       bsmSysCtl_SM_TW2_SDACntl_DS2                 1
    #define   MSK32smSysCtl_SM_TW2_SDACntl_DS2                    0x00000004

    #define     BA_smSysCtl_SM_TW2_SDACntl_DS3                 0x0210
    #define     B16smSysCtl_SM_TW2_SDACntl_DS3                 0x0210
    #define   LSb32smSysCtl_SM_TW2_SDACntl_DS3                    3
    #define   LSb16smSysCtl_SM_TW2_SDACntl_DS3                    3
    #define       bsmSysCtl_SM_TW2_SDACntl_DS3                 1
    #define   MSK32smSysCtl_SM_TW2_SDACntl_DS3                    0x00000008

    #define     BA_smSysCtl_SM_TW2_SDACntl_IE                  0x0210
    #define     B16smSysCtl_SM_TW2_SDACntl_IE                  0x0210
    #define   LSb32smSysCtl_SM_TW2_SDACntl_IE                     4
    #define   LSb16smSysCtl_SM_TW2_SDACntl_IE                     4
    #define       bsmSysCtl_SM_TW2_SDACntl_IE                  1
    #define   MSK32smSysCtl_SM_TW2_SDACntl_IE                     0x00000010

    #define     BA_smSysCtl_SM_TW2_SDACntl_PE                  0x0210
    #define     B16smSysCtl_SM_TW2_SDACntl_PE                  0x0210
    #define   LSb32smSysCtl_SM_TW2_SDACntl_PE                     5
    #define   LSb16smSysCtl_SM_TW2_SDACntl_PE                     5
    #define       bsmSysCtl_SM_TW2_SDACntl_PE                  1
    #define   MSK32smSysCtl_SM_TW2_SDACntl_PE                     0x00000020

    #define     BA_smSysCtl_SM_TW2_SDACntl_PS                  0x0210
    #define     B16smSysCtl_SM_TW2_SDACntl_PS                  0x0210
    #define   LSb32smSysCtl_SM_TW2_SDACntl_PS                     6
    #define   LSb16smSysCtl_SM_TW2_SDACntl_PS                     6
    #define       bsmSysCtl_SM_TW2_SDACntl_PS                  1
    #define   MSK32smSysCtl_SM_TW2_SDACntl_PS                     0x00000040

    #define     BA_smSysCtl_SM_TW2_SDACntl_SL                  0x0210
    #define     B16smSysCtl_SM_TW2_SDACntl_SL                  0x0210
    #define   LSb32smSysCtl_SM_TW2_SDACntl_SL                     7
    #define   LSb16smSysCtl_SM_TW2_SDACntl_SL                     7
    #define       bsmSysCtl_SM_TW2_SDACntl_SL                  1
    #define   MSK32smSysCtl_SM_TW2_SDACntl_SL                     0x00000080

    #define     BA_smSysCtl_SM_TW2_SDACntl_SPU                 0x0211
    #define     B16smSysCtl_SM_TW2_SDACntl_SPU                 0x0210
    #define   LSb32smSysCtl_SM_TW2_SDACntl_SPU                    8
    #define   LSb16smSysCtl_SM_TW2_SDACntl_SPU                    8
    #define       bsmSysCtl_SM_TW2_SDACntl_SPU                 1
    #define   MSK32smSysCtl_SM_TW2_SDACntl_SPU                    0x00000100

    #define     BA_smSysCtl_SM_TW2_SDACntl_ST                  0x0211
    #define     B16smSysCtl_SM_TW2_SDACntl_ST                  0x0210
    #define   LSb32smSysCtl_SM_TW2_SDACntl_ST                     9
    #define   LSb16smSysCtl_SM_TW2_SDACntl_ST                     9
    #define       bsmSysCtl_SM_TW2_SDACntl_ST                  1
    #define   MSK32smSysCtl_SM_TW2_SDACntl_ST                     0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_URT1_TXDCntl                    0x0214

    #define     BA_smSysCtl_SM_URT1_TXDCntl_DS0                0x0214
    #define     B16smSysCtl_SM_URT1_TXDCntl_DS0                0x0214
    #define   LSb32smSysCtl_SM_URT1_TXDCntl_DS0                   0
    #define   LSb16smSysCtl_SM_URT1_TXDCntl_DS0                   0
    #define       bsmSysCtl_SM_URT1_TXDCntl_DS0                1
    #define   MSK32smSysCtl_SM_URT1_TXDCntl_DS0                   0x00000001

    #define     BA_smSysCtl_SM_URT1_TXDCntl_DS1                0x0214
    #define     B16smSysCtl_SM_URT1_TXDCntl_DS1                0x0214
    #define   LSb32smSysCtl_SM_URT1_TXDCntl_DS1                   1
    #define   LSb16smSysCtl_SM_URT1_TXDCntl_DS1                   1
    #define       bsmSysCtl_SM_URT1_TXDCntl_DS1                1
    #define   MSK32smSysCtl_SM_URT1_TXDCntl_DS1                   0x00000002

    #define     BA_smSysCtl_SM_URT1_TXDCntl_DS2                0x0214
    #define     B16smSysCtl_SM_URT1_TXDCntl_DS2                0x0214
    #define   LSb32smSysCtl_SM_URT1_TXDCntl_DS2                   2
    #define   LSb16smSysCtl_SM_URT1_TXDCntl_DS2                   2
    #define       bsmSysCtl_SM_URT1_TXDCntl_DS2                1
    #define   MSK32smSysCtl_SM_URT1_TXDCntl_DS2                   0x00000004

    #define     BA_smSysCtl_SM_URT1_TXDCntl_DS3                0x0214
    #define     B16smSysCtl_SM_URT1_TXDCntl_DS3                0x0214
    #define   LSb32smSysCtl_SM_URT1_TXDCntl_DS3                   3
    #define   LSb16smSysCtl_SM_URT1_TXDCntl_DS3                   3
    #define       bsmSysCtl_SM_URT1_TXDCntl_DS3                1
    #define   MSK32smSysCtl_SM_URT1_TXDCntl_DS3                   0x00000008

    #define     BA_smSysCtl_SM_URT1_TXDCntl_IE                 0x0214
    #define     B16smSysCtl_SM_URT1_TXDCntl_IE                 0x0214
    #define   LSb32smSysCtl_SM_URT1_TXDCntl_IE                    4
    #define   LSb16smSysCtl_SM_URT1_TXDCntl_IE                    4
    #define       bsmSysCtl_SM_URT1_TXDCntl_IE                 1
    #define   MSK32smSysCtl_SM_URT1_TXDCntl_IE                    0x00000010

    #define     BA_smSysCtl_SM_URT1_TXDCntl_PE                 0x0214
    #define     B16smSysCtl_SM_URT1_TXDCntl_PE                 0x0214
    #define   LSb32smSysCtl_SM_URT1_TXDCntl_PE                    5
    #define   LSb16smSysCtl_SM_URT1_TXDCntl_PE                    5
    #define       bsmSysCtl_SM_URT1_TXDCntl_PE                 1
    #define   MSK32smSysCtl_SM_URT1_TXDCntl_PE                    0x00000020

    #define     BA_smSysCtl_SM_URT1_TXDCntl_PS                 0x0214
    #define     B16smSysCtl_SM_URT1_TXDCntl_PS                 0x0214
    #define   LSb32smSysCtl_SM_URT1_TXDCntl_PS                    6
    #define   LSb16smSysCtl_SM_URT1_TXDCntl_PS                    6
    #define       bsmSysCtl_SM_URT1_TXDCntl_PS                 1
    #define   MSK32smSysCtl_SM_URT1_TXDCntl_PS                    0x00000040

    #define     BA_smSysCtl_SM_URT1_TXDCntl_SL                 0x0214
    #define     B16smSysCtl_SM_URT1_TXDCntl_SL                 0x0214
    #define   LSb32smSysCtl_SM_URT1_TXDCntl_SL                    7
    #define   LSb16smSysCtl_SM_URT1_TXDCntl_SL                    7
    #define       bsmSysCtl_SM_URT1_TXDCntl_SL                 1
    #define   MSK32smSysCtl_SM_URT1_TXDCntl_SL                    0x00000080

    #define     BA_smSysCtl_SM_URT1_TXDCntl_SPU                0x0215
    #define     B16smSysCtl_SM_URT1_TXDCntl_SPU                0x0214
    #define   LSb32smSysCtl_SM_URT1_TXDCntl_SPU                   8
    #define   LSb16smSysCtl_SM_URT1_TXDCntl_SPU                   8
    #define       bsmSysCtl_SM_URT1_TXDCntl_SPU                1
    #define   MSK32smSysCtl_SM_URT1_TXDCntl_SPU                   0x00000100

    #define     BA_smSysCtl_SM_URT1_TXDCntl_ST                 0x0215
    #define     B16smSysCtl_SM_URT1_TXDCntl_ST                 0x0214
    #define   LSb32smSysCtl_SM_URT1_TXDCntl_ST                    9
    #define   LSb16smSysCtl_SM_URT1_TXDCntl_ST                    9
    #define       bsmSysCtl_SM_URT1_TXDCntl_ST                 1
    #define   MSK32smSysCtl_SM_URT1_TXDCntl_ST                    0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_URT1_RXDCntl                    0x0218

    #define     BA_smSysCtl_SM_URT1_RXDCntl_DS0                0x0218
    #define     B16smSysCtl_SM_URT1_RXDCntl_DS0                0x0218
    #define   LSb32smSysCtl_SM_URT1_RXDCntl_DS0                   0
    #define   LSb16smSysCtl_SM_URT1_RXDCntl_DS0                   0
    #define       bsmSysCtl_SM_URT1_RXDCntl_DS0                1
    #define   MSK32smSysCtl_SM_URT1_RXDCntl_DS0                   0x00000001

    #define     BA_smSysCtl_SM_URT1_RXDCntl_DS1                0x0218
    #define     B16smSysCtl_SM_URT1_RXDCntl_DS1                0x0218
    #define   LSb32smSysCtl_SM_URT1_RXDCntl_DS1                   1
    #define   LSb16smSysCtl_SM_URT1_RXDCntl_DS1                   1
    #define       bsmSysCtl_SM_URT1_RXDCntl_DS1                1
    #define   MSK32smSysCtl_SM_URT1_RXDCntl_DS1                   0x00000002

    #define     BA_smSysCtl_SM_URT1_RXDCntl_DS2                0x0218
    #define     B16smSysCtl_SM_URT1_RXDCntl_DS2                0x0218
    #define   LSb32smSysCtl_SM_URT1_RXDCntl_DS2                   2
    #define   LSb16smSysCtl_SM_URT1_RXDCntl_DS2                   2
    #define       bsmSysCtl_SM_URT1_RXDCntl_DS2                1
    #define   MSK32smSysCtl_SM_URT1_RXDCntl_DS2                   0x00000004

    #define     BA_smSysCtl_SM_URT1_RXDCntl_DS3                0x0218
    #define     B16smSysCtl_SM_URT1_RXDCntl_DS3                0x0218
    #define   LSb32smSysCtl_SM_URT1_RXDCntl_DS3                   3
    #define   LSb16smSysCtl_SM_URT1_RXDCntl_DS3                   3
    #define       bsmSysCtl_SM_URT1_RXDCntl_DS3                1
    #define   MSK32smSysCtl_SM_URT1_RXDCntl_DS3                   0x00000008

    #define     BA_smSysCtl_SM_URT1_RXDCntl_IE                 0x0218
    #define     B16smSysCtl_SM_URT1_RXDCntl_IE                 0x0218
    #define   LSb32smSysCtl_SM_URT1_RXDCntl_IE                    4
    #define   LSb16smSysCtl_SM_URT1_RXDCntl_IE                    4
    #define       bsmSysCtl_SM_URT1_RXDCntl_IE                 1
    #define   MSK32smSysCtl_SM_URT1_RXDCntl_IE                    0x00000010

    #define     BA_smSysCtl_SM_URT1_RXDCntl_PE                 0x0218
    #define     B16smSysCtl_SM_URT1_RXDCntl_PE                 0x0218
    #define   LSb32smSysCtl_SM_URT1_RXDCntl_PE                    5
    #define   LSb16smSysCtl_SM_URT1_RXDCntl_PE                    5
    #define       bsmSysCtl_SM_URT1_RXDCntl_PE                 1
    #define   MSK32smSysCtl_SM_URT1_RXDCntl_PE                    0x00000020

    #define     BA_smSysCtl_SM_URT1_RXDCntl_PS                 0x0218
    #define     B16smSysCtl_SM_URT1_RXDCntl_PS                 0x0218
    #define   LSb32smSysCtl_SM_URT1_RXDCntl_PS                    6
    #define   LSb16smSysCtl_SM_URT1_RXDCntl_PS                    6
    #define       bsmSysCtl_SM_URT1_RXDCntl_PS                 1
    #define   MSK32smSysCtl_SM_URT1_RXDCntl_PS                    0x00000040

    #define     BA_smSysCtl_SM_URT1_RXDCntl_SL                 0x0218
    #define     B16smSysCtl_SM_URT1_RXDCntl_SL                 0x0218
    #define   LSb32smSysCtl_SM_URT1_RXDCntl_SL                    7
    #define   LSb16smSysCtl_SM_URT1_RXDCntl_SL                    7
    #define       bsmSysCtl_SM_URT1_RXDCntl_SL                 1
    #define   MSK32smSysCtl_SM_URT1_RXDCntl_SL                    0x00000080

    #define     BA_smSysCtl_SM_URT1_RXDCntl_SPU                0x0219
    #define     B16smSysCtl_SM_URT1_RXDCntl_SPU                0x0218
    #define   LSb32smSysCtl_SM_URT1_RXDCntl_SPU                   8
    #define   LSb16smSysCtl_SM_URT1_RXDCntl_SPU                   8
    #define       bsmSysCtl_SM_URT1_RXDCntl_SPU                1
    #define   MSK32smSysCtl_SM_URT1_RXDCntl_SPU                   0x00000100

    #define     BA_smSysCtl_SM_URT1_RXDCntl_ST                 0x0219
    #define     B16smSysCtl_SM_URT1_RXDCntl_ST                 0x0218
    #define   LSb32smSysCtl_SM_URT1_RXDCntl_ST                    9
    #define   LSb16smSysCtl_SM_URT1_RXDCntl_ST                    9
    #define       bsmSysCtl_SM_URT1_RXDCntl_ST                 1
    #define   MSK32smSysCtl_SM_URT1_RXDCntl_ST                    0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_HDMI_TX_HPDCntl                 0x021C

    #define     BA_smSysCtl_SM_HDMI_TX_HPDCntl_DS0             0x021C
    #define     B16smSysCtl_SM_HDMI_TX_HPDCntl_DS0             0x021C
    #define   LSb32smSysCtl_SM_HDMI_TX_HPDCntl_DS0                0
    #define   LSb16smSysCtl_SM_HDMI_TX_HPDCntl_DS0                0
    #define       bsmSysCtl_SM_HDMI_TX_HPDCntl_DS0             1
    #define   MSK32smSysCtl_SM_HDMI_TX_HPDCntl_DS0                0x00000001

    #define     BA_smSysCtl_SM_HDMI_TX_HPDCntl_DS1             0x021C
    #define     B16smSysCtl_SM_HDMI_TX_HPDCntl_DS1             0x021C
    #define   LSb32smSysCtl_SM_HDMI_TX_HPDCntl_DS1                1
    #define   LSb16smSysCtl_SM_HDMI_TX_HPDCntl_DS1                1
    #define       bsmSysCtl_SM_HDMI_TX_HPDCntl_DS1             1
    #define   MSK32smSysCtl_SM_HDMI_TX_HPDCntl_DS1                0x00000002

    #define     BA_smSysCtl_SM_HDMI_TX_HPDCntl_DS2             0x021C
    #define     B16smSysCtl_SM_HDMI_TX_HPDCntl_DS2             0x021C
    #define   LSb32smSysCtl_SM_HDMI_TX_HPDCntl_DS2                2
    #define   LSb16smSysCtl_SM_HDMI_TX_HPDCntl_DS2                2
    #define       bsmSysCtl_SM_HDMI_TX_HPDCntl_DS2             1
    #define   MSK32smSysCtl_SM_HDMI_TX_HPDCntl_DS2                0x00000004

    #define     BA_smSysCtl_SM_HDMI_TX_HPDCntl_DS3             0x021C
    #define     B16smSysCtl_SM_HDMI_TX_HPDCntl_DS3             0x021C
    #define   LSb32smSysCtl_SM_HDMI_TX_HPDCntl_DS3                3
    #define   LSb16smSysCtl_SM_HDMI_TX_HPDCntl_DS3                3
    #define       bsmSysCtl_SM_HDMI_TX_HPDCntl_DS3             1
    #define   MSK32smSysCtl_SM_HDMI_TX_HPDCntl_DS3                0x00000008

    #define     BA_smSysCtl_SM_HDMI_TX_HPDCntl_IE              0x021C
    #define     B16smSysCtl_SM_HDMI_TX_HPDCntl_IE              0x021C
    #define   LSb32smSysCtl_SM_HDMI_TX_HPDCntl_IE                 4
    #define   LSb16smSysCtl_SM_HDMI_TX_HPDCntl_IE                 4
    #define       bsmSysCtl_SM_HDMI_TX_HPDCntl_IE              1
    #define   MSK32smSysCtl_SM_HDMI_TX_HPDCntl_IE                 0x00000010

    #define     BA_smSysCtl_SM_HDMI_TX_HPDCntl_PE              0x021C
    #define     B16smSysCtl_SM_HDMI_TX_HPDCntl_PE              0x021C
    #define   LSb32smSysCtl_SM_HDMI_TX_HPDCntl_PE                 5
    #define   LSb16smSysCtl_SM_HDMI_TX_HPDCntl_PE                 5
    #define       bsmSysCtl_SM_HDMI_TX_HPDCntl_PE              1
    #define   MSK32smSysCtl_SM_HDMI_TX_HPDCntl_PE                 0x00000020

    #define     BA_smSysCtl_SM_HDMI_TX_HPDCntl_PS              0x021C
    #define     B16smSysCtl_SM_HDMI_TX_HPDCntl_PS              0x021C
    #define   LSb32smSysCtl_SM_HDMI_TX_HPDCntl_PS                 6
    #define   LSb16smSysCtl_SM_HDMI_TX_HPDCntl_PS                 6
    #define       bsmSysCtl_SM_HDMI_TX_HPDCntl_PS              1
    #define   MSK32smSysCtl_SM_HDMI_TX_HPDCntl_PS                 0x00000040

    #define     BA_smSysCtl_SM_HDMI_TX_HPDCntl_SL              0x021C
    #define     B16smSysCtl_SM_HDMI_TX_HPDCntl_SL              0x021C
    #define   LSb32smSysCtl_SM_HDMI_TX_HPDCntl_SL                 7
    #define   LSb16smSysCtl_SM_HDMI_TX_HPDCntl_SL                 7
    #define       bsmSysCtl_SM_HDMI_TX_HPDCntl_SL              1
    #define   MSK32smSysCtl_SM_HDMI_TX_HPDCntl_SL                 0x00000080

    #define     BA_smSysCtl_SM_HDMI_TX_HPDCntl_SPU             0x021D
    #define     B16smSysCtl_SM_HDMI_TX_HPDCntl_SPU             0x021C
    #define   LSb32smSysCtl_SM_HDMI_TX_HPDCntl_SPU                8
    #define   LSb16smSysCtl_SM_HDMI_TX_HPDCntl_SPU                8
    #define       bsmSysCtl_SM_HDMI_TX_HPDCntl_SPU             1
    #define   MSK32smSysCtl_SM_HDMI_TX_HPDCntl_SPU                0x00000100

    #define     BA_smSysCtl_SM_HDMI_TX_HPDCntl_ST              0x021D
    #define     B16smSysCtl_SM_HDMI_TX_HPDCntl_ST              0x021C
    #define   LSb32smSysCtl_SM_HDMI_TX_HPDCntl_ST                 9
    #define   LSb16smSysCtl_SM_HDMI_TX_HPDCntl_ST                 9
    #define       bsmSysCtl_SM_HDMI_TX_HPDCntl_ST              1
    #define   MSK32smSysCtl_SM_HDMI_TX_HPDCntl_ST                 0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_HDMI_TX_CECCntl                 0x0220

    #define     BA_smSysCtl_SM_HDMI_TX_CECCntl_DS0             0x0220
    #define     B16smSysCtl_SM_HDMI_TX_CECCntl_DS0             0x0220
    #define   LSb32smSysCtl_SM_HDMI_TX_CECCntl_DS0                0
    #define   LSb16smSysCtl_SM_HDMI_TX_CECCntl_DS0                0
    #define       bsmSysCtl_SM_HDMI_TX_CECCntl_DS0             1
    #define   MSK32smSysCtl_SM_HDMI_TX_CECCntl_DS0                0x00000001

    #define     BA_smSysCtl_SM_HDMI_TX_CECCntl_DS1             0x0220
    #define     B16smSysCtl_SM_HDMI_TX_CECCntl_DS1             0x0220
    #define   LSb32smSysCtl_SM_HDMI_TX_CECCntl_DS1                1
    #define   LSb16smSysCtl_SM_HDMI_TX_CECCntl_DS1                1
    #define       bsmSysCtl_SM_HDMI_TX_CECCntl_DS1             1
    #define   MSK32smSysCtl_SM_HDMI_TX_CECCntl_DS1                0x00000002

    #define     BA_smSysCtl_SM_HDMI_TX_CECCntl_DS2             0x0220
    #define     B16smSysCtl_SM_HDMI_TX_CECCntl_DS2             0x0220
    #define   LSb32smSysCtl_SM_HDMI_TX_CECCntl_DS2                2
    #define   LSb16smSysCtl_SM_HDMI_TX_CECCntl_DS2                2
    #define       bsmSysCtl_SM_HDMI_TX_CECCntl_DS2             1
    #define   MSK32smSysCtl_SM_HDMI_TX_CECCntl_DS2                0x00000004

    #define     BA_smSysCtl_SM_HDMI_TX_CECCntl_DS3             0x0220
    #define     B16smSysCtl_SM_HDMI_TX_CECCntl_DS3             0x0220
    #define   LSb32smSysCtl_SM_HDMI_TX_CECCntl_DS3                3
    #define   LSb16smSysCtl_SM_HDMI_TX_CECCntl_DS3                3
    #define       bsmSysCtl_SM_HDMI_TX_CECCntl_DS3             1
    #define   MSK32smSysCtl_SM_HDMI_TX_CECCntl_DS3                0x00000008

    #define     BA_smSysCtl_SM_HDMI_TX_CECCntl_IE              0x0220
    #define     B16smSysCtl_SM_HDMI_TX_CECCntl_IE              0x0220
    #define   LSb32smSysCtl_SM_HDMI_TX_CECCntl_IE                 4
    #define   LSb16smSysCtl_SM_HDMI_TX_CECCntl_IE                 4
    #define       bsmSysCtl_SM_HDMI_TX_CECCntl_IE              1
    #define   MSK32smSysCtl_SM_HDMI_TX_CECCntl_IE                 0x00000010

    #define     BA_smSysCtl_SM_HDMI_TX_CECCntl_PE              0x0220
    #define     B16smSysCtl_SM_HDMI_TX_CECCntl_PE              0x0220
    #define   LSb32smSysCtl_SM_HDMI_TX_CECCntl_PE                 5
    #define   LSb16smSysCtl_SM_HDMI_TX_CECCntl_PE                 5
    #define       bsmSysCtl_SM_HDMI_TX_CECCntl_PE              1
    #define   MSK32smSysCtl_SM_HDMI_TX_CECCntl_PE                 0x00000020

    #define     BA_smSysCtl_SM_HDMI_TX_CECCntl_PS              0x0220
    #define     B16smSysCtl_SM_HDMI_TX_CECCntl_PS              0x0220
    #define   LSb32smSysCtl_SM_HDMI_TX_CECCntl_PS                 6
    #define   LSb16smSysCtl_SM_HDMI_TX_CECCntl_PS                 6
    #define       bsmSysCtl_SM_HDMI_TX_CECCntl_PS              1
    #define   MSK32smSysCtl_SM_HDMI_TX_CECCntl_PS                 0x00000040

    #define     BA_smSysCtl_SM_HDMI_TX_CECCntl_SL              0x0220
    #define     B16smSysCtl_SM_HDMI_TX_CECCntl_SL              0x0220
    #define   LSb32smSysCtl_SM_HDMI_TX_CECCntl_SL                 7
    #define   LSb16smSysCtl_SM_HDMI_TX_CECCntl_SL                 7
    #define       bsmSysCtl_SM_HDMI_TX_CECCntl_SL              1
    #define   MSK32smSysCtl_SM_HDMI_TX_CECCntl_SL                 0x00000080

    #define     BA_smSysCtl_SM_HDMI_TX_CECCntl_SPU             0x0221
    #define     B16smSysCtl_SM_HDMI_TX_CECCntl_SPU             0x0220
    #define   LSb32smSysCtl_SM_HDMI_TX_CECCntl_SPU                8
    #define   LSb16smSysCtl_SM_HDMI_TX_CECCntl_SPU                8
    #define       bsmSysCtl_SM_HDMI_TX_CECCntl_SPU             1
    #define   MSK32smSysCtl_SM_HDMI_TX_CECCntl_SPU                0x00000100

    #define     BA_smSysCtl_SM_HDMI_TX_CECCntl_ST              0x0221
    #define     B16smSysCtl_SM_HDMI_TX_CECCntl_ST              0x0220
    #define   LSb32smSysCtl_SM_HDMI_TX_CECCntl_ST                 9
    #define   LSb16smSysCtl_SM_HDMI_TX_CECCntl_ST                 9
    #define       bsmSysCtl_SM_HDMI_TX_CECCntl_ST              1
    #define   MSK32smSysCtl_SM_HDMI_TX_CECCntl_ST                 0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_TMSCntl                         0x0224

    #define     BA_smSysCtl_SM_TMSCntl_DS0                     0x0224
    #define     B16smSysCtl_SM_TMSCntl_DS0                     0x0224
    #define   LSb32smSysCtl_SM_TMSCntl_DS0                        0
    #define   LSb16smSysCtl_SM_TMSCntl_DS0                        0
    #define       bsmSysCtl_SM_TMSCntl_DS0                     1
    #define   MSK32smSysCtl_SM_TMSCntl_DS0                        0x00000001

    #define     BA_smSysCtl_SM_TMSCntl_DS1                     0x0224
    #define     B16smSysCtl_SM_TMSCntl_DS1                     0x0224
    #define   LSb32smSysCtl_SM_TMSCntl_DS1                        1
    #define   LSb16smSysCtl_SM_TMSCntl_DS1                        1
    #define       bsmSysCtl_SM_TMSCntl_DS1                     1
    #define   MSK32smSysCtl_SM_TMSCntl_DS1                        0x00000002

    #define     BA_smSysCtl_SM_TMSCntl_DS2                     0x0224
    #define     B16smSysCtl_SM_TMSCntl_DS2                     0x0224
    #define   LSb32smSysCtl_SM_TMSCntl_DS2                        2
    #define   LSb16smSysCtl_SM_TMSCntl_DS2                        2
    #define       bsmSysCtl_SM_TMSCntl_DS2                     1
    #define   MSK32smSysCtl_SM_TMSCntl_DS2                        0x00000004

    #define     BA_smSysCtl_SM_TMSCntl_IE                      0x0224
    #define     B16smSysCtl_SM_TMSCntl_IE                      0x0224
    #define   LSb32smSysCtl_SM_TMSCntl_IE                         3
    #define   LSb16smSysCtl_SM_TMSCntl_IE                         3
    #define       bsmSysCtl_SM_TMSCntl_IE                      1
    #define   MSK32smSysCtl_SM_TMSCntl_IE                         0x00000008

    #define     BA_smSysCtl_SM_TMSCntl_PD                      0x0224
    #define     B16smSysCtl_SM_TMSCntl_PD                      0x0224
    #define   LSb32smSysCtl_SM_TMSCntl_PD                         4
    #define   LSb16smSysCtl_SM_TMSCntl_PD                         4
    #define       bsmSysCtl_SM_TMSCntl_PD                      1
    #define   MSK32smSysCtl_SM_TMSCntl_PD                         0x00000010

    #define     BA_smSysCtl_SM_TMSCntl_PU                      0x0224
    #define     B16smSysCtl_SM_TMSCntl_PU                      0x0224
    #define   LSb32smSysCtl_SM_TMSCntl_PU                         5
    #define   LSb16smSysCtl_SM_TMSCntl_PU                         5
    #define       bsmSysCtl_SM_TMSCntl_PU                      1
    #define   MSK32smSysCtl_SM_TMSCntl_PU                         0x00000020

    #define     BA_smSysCtl_SM_TMSCntl_SL                      0x0224
    #define     B16smSysCtl_SM_TMSCntl_SL                      0x0224
    #define   LSb32smSysCtl_SM_TMSCntl_SL                         6
    #define   LSb16smSysCtl_SM_TMSCntl_SL                         6
    #define       bsmSysCtl_SM_TMSCntl_SL                      1
    #define   MSK32smSysCtl_SM_TMSCntl_SL                         0x00000040

    #define     BA_smSysCtl_SM_TMSCntl_ST                      0x0224
    #define     B16smSysCtl_SM_TMSCntl_ST                      0x0224
    #define   LSb32smSysCtl_SM_TMSCntl_ST                         7
    #define   LSb16smSysCtl_SM_TMSCntl_ST                         7
    #define       bsmSysCtl_SM_TMSCntl_ST                      1
    #define   MSK32smSysCtl_SM_TMSCntl_ST                         0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_TDICntl                         0x0228

    #define     BA_smSysCtl_SM_TDICntl_DS0                     0x0228
    #define     B16smSysCtl_SM_TDICntl_DS0                     0x0228
    #define   LSb32smSysCtl_SM_TDICntl_DS0                        0
    #define   LSb16smSysCtl_SM_TDICntl_DS0                        0
    #define       bsmSysCtl_SM_TDICntl_DS0                     1
    #define   MSK32smSysCtl_SM_TDICntl_DS0                        0x00000001

    #define     BA_smSysCtl_SM_TDICntl_DS1                     0x0228
    #define     B16smSysCtl_SM_TDICntl_DS1                     0x0228
    #define   LSb32smSysCtl_SM_TDICntl_DS1                        1
    #define   LSb16smSysCtl_SM_TDICntl_DS1                        1
    #define       bsmSysCtl_SM_TDICntl_DS1                     1
    #define   MSK32smSysCtl_SM_TDICntl_DS1                        0x00000002

    #define     BA_smSysCtl_SM_TDICntl_DS2                     0x0228
    #define     B16smSysCtl_SM_TDICntl_DS2                     0x0228
    #define   LSb32smSysCtl_SM_TDICntl_DS2                        2
    #define   LSb16smSysCtl_SM_TDICntl_DS2                        2
    #define       bsmSysCtl_SM_TDICntl_DS2                     1
    #define   MSK32smSysCtl_SM_TDICntl_DS2                        0x00000004

    #define     BA_smSysCtl_SM_TDICntl_IE                      0x0228
    #define     B16smSysCtl_SM_TDICntl_IE                      0x0228
    #define   LSb32smSysCtl_SM_TDICntl_IE                         3
    #define   LSb16smSysCtl_SM_TDICntl_IE                         3
    #define       bsmSysCtl_SM_TDICntl_IE                      1
    #define   MSK32smSysCtl_SM_TDICntl_IE                         0x00000008

    #define     BA_smSysCtl_SM_TDICntl_PD                      0x0228
    #define     B16smSysCtl_SM_TDICntl_PD                      0x0228
    #define   LSb32smSysCtl_SM_TDICntl_PD                         4
    #define   LSb16smSysCtl_SM_TDICntl_PD                         4
    #define       bsmSysCtl_SM_TDICntl_PD                      1
    #define   MSK32smSysCtl_SM_TDICntl_PD                         0x00000010

    #define     BA_smSysCtl_SM_TDICntl_PU                      0x0228
    #define     B16smSysCtl_SM_TDICntl_PU                      0x0228
    #define   LSb32smSysCtl_SM_TDICntl_PU                         5
    #define   LSb16smSysCtl_SM_TDICntl_PU                         5
    #define       bsmSysCtl_SM_TDICntl_PU                      1
    #define   MSK32smSysCtl_SM_TDICntl_PU                         0x00000020

    #define     BA_smSysCtl_SM_TDICntl_SL                      0x0228
    #define     B16smSysCtl_SM_TDICntl_SL                      0x0228
    #define   LSb32smSysCtl_SM_TDICntl_SL                         6
    #define   LSb16smSysCtl_SM_TDICntl_SL                         6
    #define       bsmSysCtl_SM_TDICntl_SL                      1
    #define   MSK32smSysCtl_SM_TDICntl_SL                         0x00000040

    #define     BA_smSysCtl_SM_TDICntl_ST                      0x0228
    #define     B16smSysCtl_SM_TDICntl_ST                      0x0228
    #define   LSb32smSysCtl_SM_TDICntl_ST                         7
    #define   LSb16smSysCtl_SM_TDICntl_ST                         7
    #define       bsmSysCtl_SM_TDICntl_ST                      1
    #define   MSK32smSysCtl_SM_TDICntl_ST                         0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_TDOCntl                         0x022C

    #define     BA_smSysCtl_SM_TDOCntl_DS0                     0x022C
    #define     B16smSysCtl_SM_TDOCntl_DS0                     0x022C
    #define   LSb32smSysCtl_SM_TDOCntl_DS0                        0
    #define   LSb16smSysCtl_SM_TDOCntl_DS0                        0
    #define       bsmSysCtl_SM_TDOCntl_DS0                     1
    #define   MSK32smSysCtl_SM_TDOCntl_DS0                        0x00000001

    #define     BA_smSysCtl_SM_TDOCntl_DS1                     0x022C
    #define     B16smSysCtl_SM_TDOCntl_DS1                     0x022C
    #define   LSb32smSysCtl_SM_TDOCntl_DS1                        1
    #define   LSb16smSysCtl_SM_TDOCntl_DS1                        1
    #define       bsmSysCtl_SM_TDOCntl_DS1                     1
    #define   MSK32smSysCtl_SM_TDOCntl_DS1                        0x00000002

    #define     BA_smSysCtl_SM_TDOCntl_DS2                     0x022C
    #define     B16smSysCtl_SM_TDOCntl_DS2                     0x022C
    #define   LSb32smSysCtl_SM_TDOCntl_DS2                        2
    #define   LSb16smSysCtl_SM_TDOCntl_DS2                        2
    #define       bsmSysCtl_SM_TDOCntl_DS2                     1
    #define   MSK32smSysCtl_SM_TDOCntl_DS2                        0x00000004

    #define     BA_smSysCtl_SM_TDOCntl_IE                      0x022C
    #define     B16smSysCtl_SM_TDOCntl_IE                      0x022C
    #define   LSb32smSysCtl_SM_TDOCntl_IE                         3
    #define   LSb16smSysCtl_SM_TDOCntl_IE                         3
    #define       bsmSysCtl_SM_TDOCntl_IE                      1
    #define   MSK32smSysCtl_SM_TDOCntl_IE                         0x00000008

    #define     BA_smSysCtl_SM_TDOCntl_PD                      0x022C
    #define     B16smSysCtl_SM_TDOCntl_PD                      0x022C
    #define   LSb32smSysCtl_SM_TDOCntl_PD                         4
    #define   LSb16smSysCtl_SM_TDOCntl_PD                         4
    #define       bsmSysCtl_SM_TDOCntl_PD                      1
    #define   MSK32smSysCtl_SM_TDOCntl_PD                         0x00000010

    #define     BA_smSysCtl_SM_TDOCntl_PU                      0x022C
    #define     B16smSysCtl_SM_TDOCntl_PU                      0x022C
    #define   LSb32smSysCtl_SM_TDOCntl_PU                         5
    #define   LSb16smSysCtl_SM_TDOCntl_PU                         5
    #define       bsmSysCtl_SM_TDOCntl_PU                      1
    #define   MSK32smSysCtl_SM_TDOCntl_PU                         0x00000020

    #define     BA_smSysCtl_SM_TDOCntl_SL                      0x022C
    #define     B16smSysCtl_SM_TDOCntl_SL                      0x022C
    #define   LSb32smSysCtl_SM_TDOCntl_SL                         6
    #define   LSb16smSysCtl_SM_TDOCntl_SL                         6
    #define       bsmSysCtl_SM_TDOCntl_SL                      1
    #define   MSK32smSysCtl_SM_TDOCntl_SL                         0x00000040

    #define     BA_smSysCtl_SM_TDOCntl_ST                      0x022C
    #define     B16smSysCtl_SM_TDOCntl_ST                      0x022C
    #define   LSb32smSysCtl_SM_TDOCntl_ST                         7
    #define   LSb16smSysCtl_SM_TDOCntl_ST                         7
    #define       bsmSysCtl_SM_TDOCntl_ST                      1
    #define   MSK32smSysCtl_SM_TDOCntl_ST                         0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_TW3_SCLCntl                     0x0230

    #define     BA_smSysCtl_SM_TW3_SCLCntl_DS0                 0x0230
    #define     B16smSysCtl_SM_TW3_SCLCntl_DS0                 0x0230
    #define   LSb32smSysCtl_SM_TW3_SCLCntl_DS0                    0
    #define   LSb16smSysCtl_SM_TW3_SCLCntl_DS0                    0
    #define       bsmSysCtl_SM_TW3_SCLCntl_DS0                 1
    #define   MSK32smSysCtl_SM_TW3_SCLCntl_DS0                    0x00000001

    #define     BA_smSysCtl_SM_TW3_SCLCntl_DS1                 0x0230
    #define     B16smSysCtl_SM_TW3_SCLCntl_DS1                 0x0230
    #define   LSb32smSysCtl_SM_TW3_SCLCntl_DS1                    1
    #define   LSb16smSysCtl_SM_TW3_SCLCntl_DS1                    1
    #define       bsmSysCtl_SM_TW3_SCLCntl_DS1                 1
    #define   MSK32smSysCtl_SM_TW3_SCLCntl_DS1                    0x00000002

    #define     BA_smSysCtl_SM_TW3_SCLCntl_DS2                 0x0230
    #define     B16smSysCtl_SM_TW3_SCLCntl_DS2                 0x0230
    #define   LSb32smSysCtl_SM_TW3_SCLCntl_DS2                    2
    #define   LSb16smSysCtl_SM_TW3_SCLCntl_DS2                    2
    #define       bsmSysCtl_SM_TW3_SCLCntl_DS2                 1
    #define   MSK32smSysCtl_SM_TW3_SCLCntl_DS2                    0x00000004

    #define     BA_smSysCtl_SM_TW3_SCLCntl_DS3                 0x0230
    #define     B16smSysCtl_SM_TW3_SCLCntl_DS3                 0x0230
    #define   LSb32smSysCtl_SM_TW3_SCLCntl_DS3                    3
    #define   LSb16smSysCtl_SM_TW3_SCLCntl_DS3                    3
    #define       bsmSysCtl_SM_TW3_SCLCntl_DS3                 1
    #define   MSK32smSysCtl_SM_TW3_SCLCntl_DS3                    0x00000008

    #define     BA_smSysCtl_SM_TW3_SCLCntl_IE                  0x0230
    #define     B16smSysCtl_SM_TW3_SCLCntl_IE                  0x0230
    #define   LSb32smSysCtl_SM_TW3_SCLCntl_IE                     4
    #define   LSb16smSysCtl_SM_TW3_SCLCntl_IE                     4
    #define       bsmSysCtl_SM_TW3_SCLCntl_IE                  1
    #define   MSK32smSysCtl_SM_TW3_SCLCntl_IE                     0x00000010

    #define     BA_smSysCtl_SM_TW3_SCLCntl_PE                  0x0230
    #define     B16smSysCtl_SM_TW3_SCLCntl_PE                  0x0230
    #define   LSb32smSysCtl_SM_TW3_SCLCntl_PE                     5
    #define   LSb16smSysCtl_SM_TW3_SCLCntl_PE                     5
    #define       bsmSysCtl_SM_TW3_SCLCntl_PE                  1
    #define   MSK32smSysCtl_SM_TW3_SCLCntl_PE                     0x00000020

    #define     BA_smSysCtl_SM_TW3_SCLCntl_PS                  0x0230
    #define     B16smSysCtl_SM_TW3_SCLCntl_PS                  0x0230
    #define   LSb32smSysCtl_SM_TW3_SCLCntl_PS                     6
    #define   LSb16smSysCtl_SM_TW3_SCLCntl_PS                     6
    #define       bsmSysCtl_SM_TW3_SCLCntl_PS                  1
    #define   MSK32smSysCtl_SM_TW3_SCLCntl_PS                     0x00000040

    #define     BA_smSysCtl_SM_TW3_SCLCntl_SL                  0x0230
    #define     B16smSysCtl_SM_TW3_SCLCntl_SL                  0x0230
    #define   LSb32smSysCtl_SM_TW3_SCLCntl_SL                     7
    #define   LSb16smSysCtl_SM_TW3_SCLCntl_SL                     7
    #define       bsmSysCtl_SM_TW3_SCLCntl_SL                  1
    #define   MSK32smSysCtl_SM_TW3_SCLCntl_SL                     0x00000080

    #define     BA_smSysCtl_SM_TW3_SCLCntl_SPU                 0x0231
    #define     B16smSysCtl_SM_TW3_SCLCntl_SPU                 0x0230
    #define   LSb32smSysCtl_SM_TW3_SCLCntl_SPU                    8
    #define   LSb16smSysCtl_SM_TW3_SCLCntl_SPU                    8
    #define       bsmSysCtl_SM_TW3_SCLCntl_SPU                 1
    #define   MSK32smSysCtl_SM_TW3_SCLCntl_SPU                    0x00000100

    #define     BA_smSysCtl_SM_TW3_SCLCntl_ST                  0x0231
    #define     B16smSysCtl_SM_TW3_SCLCntl_ST                  0x0230
    #define   LSb32smSysCtl_SM_TW3_SCLCntl_ST                     9
    #define   LSb16smSysCtl_SM_TW3_SCLCntl_ST                     9
    #define       bsmSysCtl_SM_TW3_SCLCntl_ST                  1
    #define   MSK32smSysCtl_SM_TW3_SCLCntl_ST                     0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_TW3_SDACntl                     0x0234

    #define     BA_smSysCtl_SM_TW3_SDACntl_DS0                 0x0234
    #define     B16smSysCtl_SM_TW3_SDACntl_DS0                 0x0234
    #define   LSb32smSysCtl_SM_TW3_SDACntl_DS0                    0
    #define   LSb16smSysCtl_SM_TW3_SDACntl_DS0                    0
    #define       bsmSysCtl_SM_TW3_SDACntl_DS0                 1
    #define   MSK32smSysCtl_SM_TW3_SDACntl_DS0                    0x00000001

    #define     BA_smSysCtl_SM_TW3_SDACntl_DS1                 0x0234
    #define     B16smSysCtl_SM_TW3_SDACntl_DS1                 0x0234
    #define   LSb32smSysCtl_SM_TW3_SDACntl_DS1                    1
    #define   LSb16smSysCtl_SM_TW3_SDACntl_DS1                    1
    #define       bsmSysCtl_SM_TW3_SDACntl_DS1                 1
    #define   MSK32smSysCtl_SM_TW3_SDACntl_DS1                    0x00000002

    #define     BA_smSysCtl_SM_TW3_SDACntl_DS2                 0x0234
    #define     B16smSysCtl_SM_TW3_SDACntl_DS2                 0x0234
    #define   LSb32smSysCtl_SM_TW3_SDACntl_DS2                    2
    #define   LSb16smSysCtl_SM_TW3_SDACntl_DS2                    2
    #define       bsmSysCtl_SM_TW3_SDACntl_DS2                 1
    #define   MSK32smSysCtl_SM_TW3_SDACntl_DS2                    0x00000004

    #define     BA_smSysCtl_SM_TW3_SDACntl_DS3                 0x0234
    #define     B16smSysCtl_SM_TW3_SDACntl_DS3                 0x0234
    #define   LSb32smSysCtl_SM_TW3_SDACntl_DS3                    3
    #define   LSb16smSysCtl_SM_TW3_SDACntl_DS3                    3
    #define       bsmSysCtl_SM_TW3_SDACntl_DS3                 1
    #define   MSK32smSysCtl_SM_TW3_SDACntl_DS3                    0x00000008

    #define     BA_smSysCtl_SM_TW3_SDACntl_IE                  0x0234
    #define     B16smSysCtl_SM_TW3_SDACntl_IE                  0x0234
    #define   LSb32smSysCtl_SM_TW3_SDACntl_IE                     4
    #define   LSb16smSysCtl_SM_TW3_SDACntl_IE                     4
    #define       bsmSysCtl_SM_TW3_SDACntl_IE                  1
    #define   MSK32smSysCtl_SM_TW3_SDACntl_IE                     0x00000010

    #define     BA_smSysCtl_SM_TW3_SDACntl_PE                  0x0234
    #define     B16smSysCtl_SM_TW3_SDACntl_PE                  0x0234
    #define   LSb32smSysCtl_SM_TW3_SDACntl_PE                     5
    #define   LSb16smSysCtl_SM_TW3_SDACntl_PE                     5
    #define       bsmSysCtl_SM_TW3_SDACntl_PE                  1
    #define   MSK32smSysCtl_SM_TW3_SDACntl_PE                     0x00000020

    #define     BA_smSysCtl_SM_TW3_SDACntl_PS                  0x0234
    #define     B16smSysCtl_SM_TW3_SDACntl_PS                  0x0234
    #define   LSb32smSysCtl_SM_TW3_SDACntl_PS                     6
    #define   LSb16smSysCtl_SM_TW3_SDACntl_PS                     6
    #define       bsmSysCtl_SM_TW3_SDACntl_PS                  1
    #define   MSK32smSysCtl_SM_TW3_SDACntl_PS                     0x00000040

    #define     BA_smSysCtl_SM_TW3_SDACntl_SL                  0x0234
    #define     B16smSysCtl_SM_TW3_SDACntl_SL                  0x0234
    #define   LSb32smSysCtl_SM_TW3_SDACntl_SL                     7
    #define   LSb16smSysCtl_SM_TW3_SDACntl_SL                     7
    #define       bsmSysCtl_SM_TW3_SDACntl_SL                  1
    #define   MSK32smSysCtl_SM_TW3_SDACntl_SL                     0x00000080

    #define     BA_smSysCtl_SM_TW3_SDACntl_SPU                 0x0235
    #define     B16smSysCtl_SM_TW3_SDACntl_SPU                 0x0234
    #define   LSb32smSysCtl_SM_TW3_SDACntl_SPU                    8
    #define   LSb16smSysCtl_SM_TW3_SDACntl_SPU                    8
    #define       bsmSysCtl_SM_TW3_SDACntl_SPU                 1
    #define   MSK32smSysCtl_SM_TW3_SDACntl_SPU                    0x00000100

    #define     BA_smSysCtl_SM_TW3_SDACntl_ST                  0x0235
    #define     B16smSysCtl_SM_TW3_SDACntl_ST                  0x0234
    #define   LSb32smSysCtl_SM_TW3_SDACntl_ST                     9
    #define   LSb16smSysCtl_SM_TW3_SDACntl_ST                     9
    #define       bsmSysCtl_SM_TW3_SDACntl_ST                  1
    #define   MSK32smSysCtl_SM_TW3_SDACntl_ST                     0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_SPI2_SS0nCntl                   0x0238

    #define     BA_smSysCtl_SM_SPI2_SS0nCntl_DS0               0x0238
    #define     B16smSysCtl_SM_SPI2_SS0nCntl_DS0               0x0238
    #define   LSb32smSysCtl_SM_SPI2_SS0nCntl_DS0                  0
    #define   LSb16smSysCtl_SM_SPI2_SS0nCntl_DS0                  0
    #define       bsmSysCtl_SM_SPI2_SS0nCntl_DS0               1
    #define   MSK32smSysCtl_SM_SPI2_SS0nCntl_DS0                  0x00000001

    #define     BA_smSysCtl_SM_SPI2_SS0nCntl_DS1               0x0238
    #define     B16smSysCtl_SM_SPI2_SS0nCntl_DS1               0x0238
    #define   LSb32smSysCtl_SM_SPI2_SS0nCntl_DS1                  1
    #define   LSb16smSysCtl_SM_SPI2_SS0nCntl_DS1                  1
    #define       bsmSysCtl_SM_SPI2_SS0nCntl_DS1               1
    #define   MSK32smSysCtl_SM_SPI2_SS0nCntl_DS1                  0x00000002

    #define     BA_smSysCtl_SM_SPI2_SS0nCntl_DS2               0x0238
    #define     B16smSysCtl_SM_SPI2_SS0nCntl_DS2               0x0238
    #define   LSb32smSysCtl_SM_SPI2_SS0nCntl_DS2                  2
    #define   LSb16smSysCtl_SM_SPI2_SS0nCntl_DS2                  2
    #define       bsmSysCtl_SM_SPI2_SS0nCntl_DS2               1
    #define   MSK32smSysCtl_SM_SPI2_SS0nCntl_DS2                  0x00000004

    #define     BA_smSysCtl_SM_SPI2_SS0nCntl_IE                0x0238
    #define     B16smSysCtl_SM_SPI2_SS0nCntl_IE                0x0238
    #define   LSb32smSysCtl_SM_SPI2_SS0nCntl_IE                   3
    #define   LSb16smSysCtl_SM_SPI2_SS0nCntl_IE                   3
    #define       bsmSysCtl_SM_SPI2_SS0nCntl_IE                1
    #define   MSK32smSysCtl_SM_SPI2_SS0nCntl_IE                   0x00000008

    #define     BA_smSysCtl_SM_SPI2_SS0nCntl_PD                0x0238
    #define     B16smSysCtl_SM_SPI2_SS0nCntl_PD                0x0238
    #define   LSb32smSysCtl_SM_SPI2_SS0nCntl_PD                   4
    #define   LSb16smSysCtl_SM_SPI2_SS0nCntl_PD                   4
    #define       bsmSysCtl_SM_SPI2_SS0nCntl_PD                1
    #define   MSK32smSysCtl_SM_SPI2_SS0nCntl_PD                   0x00000010

    #define     BA_smSysCtl_SM_SPI2_SS0nCntl_PU                0x0238
    #define     B16smSysCtl_SM_SPI2_SS0nCntl_PU                0x0238
    #define   LSb32smSysCtl_SM_SPI2_SS0nCntl_PU                   5
    #define   LSb16smSysCtl_SM_SPI2_SS0nCntl_PU                   5
    #define       bsmSysCtl_SM_SPI2_SS0nCntl_PU                1
    #define   MSK32smSysCtl_SM_SPI2_SS0nCntl_PU                   0x00000020

    #define     BA_smSysCtl_SM_SPI2_SS0nCntl_SL                0x0238
    #define     B16smSysCtl_SM_SPI2_SS0nCntl_SL                0x0238
    #define   LSb32smSysCtl_SM_SPI2_SS0nCntl_SL                   6
    #define   LSb16smSysCtl_SM_SPI2_SS0nCntl_SL                   6
    #define       bsmSysCtl_SM_SPI2_SS0nCntl_SL                1
    #define   MSK32smSysCtl_SM_SPI2_SS0nCntl_SL                   0x00000040

    #define     BA_smSysCtl_SM_SPI2_SS0nCntl_ST                0x0238
    #define     B16smSysCtl_SM_SPI2_SS0nCntl_ST                0x0238
    #define   LSb32smSysCtl_SM_SPI2_SS0nCntl_ST                   7
    #define   LSb16smSysCtl_SM_SPI2_SS0nCntl_ST                   7
    #define       bsmSysCtl_SM_SPI2_SS0nCntl_ST                1
    #define   MSK32smSysCtl_SM_SPI2_SS0nCntl_ST                   0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_SPI2_SS1nCntl                   0x023C

    #define     BA_smSysCtl_SM_SPI2_SS1nCntl_DS0               0x023C
    #define     B16smSysCtl_SM_SPI2_SS1nCntl_DS0               0x023C
    #define   LSb32smSysCtl_SM_SPI2_SS1nCntl_DS0                  0
    #define   LSb16smSysCtl_SM_SPI2_SS1nCntl_DS0                  0
    #define       bsmSysCtl_SM_SPI2_SS1nCntl_DS0               1
    #define   MSK32smSysCtl_SM_SPI2_SS1nCntl_DS0                  0x00000001

    #define     BA_smSysCtl_SM_SPI2_SS1nCntl_DS1               0x023C
    #define     B16smSysCtl_SM_SPI2_SS1nCntl_DS1               0x023C
    #define   LSb32smSysCtl_SM_SPI2_SS1nCntl_DS1                  1
    #define   LSb16smSysCtl_SM_SPI2_SS1nCntl_DS1                  1
    #define       bsmSysCtl_SM_SPI2_SS1nCntl_DS1               1
    #define   MSK32smSysCtl_SM_SPI2_SS1nCntl_DS1                  0x00000002

    #define     BA_smSysCtl_SM_SPI2_SS1nCntl_DS2               0x023C
    #define     B16smSysCtl_SM_SPI2_SS1nCntl_DS2               0x023C
    #define   LSb32smSysCtl_SM_SPI2_SS1nCntl_DS2                  2
    #define   LSb16smSysCtl_SM_SPI2_SS1nCntl_DS2                  2
    #define       bsmSysCtl_SM_SPI2_SS1nCntl_DS2               1
    #define   MSK32smSysCtl_SM_SPI2_SS1nCntl_DS2                  0x00000004

    #define     BA_smSysCtl_SM_SPI2_SS1nCntl_IE                0x023C
    #define     B16smSysCtl_SM_SPI2_SS1nCntl_IE                0x023C
    #define   LSb32smSysCtl_SM_SPI2_SS1nCntl_IE                   3
    #define   LSb16smSysCtl_SM_SPI2_SS1nCntl_IE                   3
    #define       bsmSysCtl_SM_SPI2_SS1nCntl_IE                1
    #define   MSK32smSysCtl_SM_SPI2_SS1nCntl_IE                   0x00000008

    #define     BA_smSysCtl_SM_SPI2_SS1nCntl_PD                0x023C
    #define     B16smSysCtl_SM_SPI2_SS1nCntl_PD                0x023C
    #define   LSb32smSysCtl_SM_SPI2_SS1nCntl_PD                   4
    #define   LSb16smSysCtl_SM_SPI2_SS1nCntl_PD                   4
    #define       bsmSysCtl_SM_SPI2_SS1nCntl_PD                1
    #define   MSK32smSysCtl_SM_SPI2_SS1nCntl_PD                   0x00000010

    #define     BA_smSysCtl_SM_SPI2_SS1nCntl_PU                0x023C
    #define     B16smSysCtl_SM_SPI2_SS1nCntl_PU                0x023C
    #define   LSb32smSysCtl_SM_SPI2_SS1nCntl_PU                   5
    #define   LSb16smSysCtl_SM_SPI2_SS1nCntl_PU                   5
    #define       bsmSysCtl_SM_SPI2_SS1nCntl_PU                1
    #define   MSK32smSysCtl_SM_SPI2_SS1nCntl_PU                   0x00000020

    #define     BA_smSysCtl_SM_SPI2_SS1nCntl_SL                0x023C
    #define     B16smSysCtl_SM_SPI2_SS1nCntl_SL                0x023C
    #define   LSb32smSysCtl_SM_SPI2_SS1nCntl_SL                   6
    #define   LSb16smSysCtl_SM_SPI2_SS1nCntl_SL                   6
    #define       bsmSysCtl_SM_SPI2_SS1nCntl_SL                1
    #define   MSK32smSysCtl_SM_SPI2_SS1nCntl_SL                   0x00000040

    #define     BA_smSysCtl_SM_SPI2_SS1nCntl_ST                0x023C
    #define     B16smSysCtl_SM_SPI2_SS1nCntl_ST                0x023C
    #define   LSb32smSysCtl_SM_SPI2_SS1nCntl_ST                   7
    #define   LSb16smSysCtl_SM_SPI2_SS1nCntl_ST                   7
    #define       bsmSysCtl_SM_SPI2_SS1nCntl_ST                1
    #define   MSK32smSysCtl_SM_SPI2_SS1nCntl_ST                   0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_SPI2_SS2nCntl                   0x0240

    #define     BA_smSysCtl_SM_SPI2_SS2nCntl_DS0               0x0240
    #define     B16smSysCtl_SM_SPI2_SS2nCntl_DS0               0x0240
    #define   LSb32smSysCtl_SM_SPI2_SS2nCntl_DS0                  0
    #define   LSb16smSysCtl_SM_SPI2_SS2nCntl_DS0                  0
    #define       bsmSysCtl_SM_SPI2_SS2nCntl_DS0               1
    #define   MSK32smSysCtl_SM_SPI2_SS2nCntl_DS0                  0x00000001

    #define     BA_smSysCtl_SM_SPI2_SS2nCntl_DS1               0x0240
    #define     B16smSysCtl_SM_SPI2_SS2nCntl_DS1               0x0240
    #define   LSb32smSysCtl_SM_SPI2_SS2nCntl_DS1                  1
    #define   LSb16smSysCtl_SM_SPI2_SS2nCntl_DS1                  1
    #define       bsmSysCtl_SM_SPI2_SS2nCntl_DS1               1
    #define   MSK32smSysCtl_SM_SPI2_SS2nCntl_DS1                  0x00000002

    #define     BA_smSysCtl_SM_SPI2_SS2nCntl_DS2               0x0240
    #define     B16smSysCtl_SM_SPI2_SS2nCntl_DS2               0x0240
    #define   LSb32smSysCtl_SM_SPI2_SS2nCntl_DS2                  2
    #define   LSb16smSysCtl_SM_SPI2_SS2nCntl_DS2                  2
    #define       bsmSysCtl_SM_SPI2_SS2nCntl_DS2               1
    #define   MSK32smSysCtl_SM_SPI2_SS2nCntl_DS2                  0x00000004

    #define     BA_smSysCtl_SM_SPI2_SS2nCntl_IE                0x0240
    #define     B16smSysCtl_SM_SPI2_SS2nCntl_IE                0x0240
    #define   LSb32smSysCtl_SM_SPI2_SS2nCntl_IE                   3
    #define   LSb16smSysCtl_SM_SPI2_SS2nCntl_IE                   3
    #define       bsmSysCtl_SM_SPI2_SS2nCntl_IE                1
    #define   MSK32smSysCtl_SM_SPI2_SS2nCntl_IE                   0x00000008

    #define     BA_smSysCtl_SM_SPI2_SS2nCntl_PD                0x0240
    #define     B16smSysCtl_SM_SPI2_SS2nCntl_PD                0x0240
    #define   LSb32smSysCtl_SM_SPI2_SS2nCntl_PD                   4
    #define   LSb16smSysCtl_SM_SPI2_SS2nCntl_PD                   4
    #define       bsmSysCtl_SM_SPI2_SS2nCntl_PD                1
    #define   MSK32smSysCtl_SM_SPI2_SS2nCntl_PD                   0x00000010

    #define     BA_smSysCtl_SM_SPI2_SS2nCntl_PU                0x0240
    #define     B16smSysCtl_SM_SPI2_SS2nCntl_PU                0x0240
    #define   LSb32smSysCtl_SM_SPI2_SS2nCntl_PU                   5
    #define   LSb16smSysCtl_SM_SPI2_SS2nCntl_PU                   5
    #define       bsmSysCtl_SM_SPI2_SS2nCntl_PU                1
    #define   MSK32smSysCtl_SM_SPI2_SS2nCntl_PU                   0x00000020

    #define     BA_smSysCtl_SM_SPI2_SS2nCntl_SL                0x0240
    #define     B16smSysCtl_SM_SPI2_SS2nCntl_SL                0x0240
    #define   LSb32smSysCtl_SM_SPI2_SS2nCntl_SL                   6
    #define   LSb16smSysCtl_SM_SPI2_SS2nCntl_SL                   6
    #define       bsmSysCtl_SM_SPI2_SS2nCntl_SL                1
    #define   MSK32smSysCtl_SM_SPI2_SS2nCntl_SL                   0x00000040

    #define     BA_smSysCtl_SM_SPI2_SS2nCntl_ST                0x0240
    #define     B16smSysCtl_SM_SPI2_SS2nCntl_ST                0x0240
    #define   LSb32smSysCtl_SM_SPI2_SS2nCntl_ST                   7
    #define   LSb16smSysCtl_SM_SPI2_SS2nCntl_ST                   7
    #define       bsmSysCtl_SM_SPI2_SS2nCntl_ST                1
    #define   MSK32smSysCtl_SM_SPI2_SS2nCntl_ST                   0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_SPI2_SS3nCntl                   0x0244

    #define     BA_smSysCtl_SM_SPI2_SS3nCntl_DS0               0x0244
    #define     B16smSysCtl_SM_SPI2_SS3nCntl_DS0               0x0244
    #define   LSb32smSysCtl_SM_SPI2_SS3nCntl_DS0                  0
    #define   LSb16smSysCtl_SM_SPI2_SS3nCntl_DS0                  0
    #define       bsmSysCtl_SM_SPI2_SS3nCntl_DS0               1
    #define   MSK32smSysCtl_SM_SPI2_SS3nCntl_DS0                  0x00000001

    #define     BA_smSysCtl_SM_SPI2_SS3nCntl_DS1               0x0244
    #define     B16smSysCtl_SM_SPI2_SS3nCntl_DS1               0x0244
    #define   LSb32smSysCtl_SM_SPI2_SS3nCntl_DS1                  1
    #define   LSb16smSysCtl_SM_SPI2_SS3nCntl_DS1                  1
    #define       bsmSysCtl_SM_SPI2_SS3nCntl_DS1               1
    #define   MSK32smSysCtl_SM_SPI2_SS3nCntl_DS1                  0x00000002

    #define     BA_smSysCtl_SM_SPI2_SS3nCntl_DS2               0x0244
    #define     B16smSysCtl_SM_SPI2_SS3nCntl_DS2               0x0244
    #define   LSb32smSysCtl_SM_SPI2_SS3nCntl_DS2                  2
    #define   LSb16smSysCtl_SM_SPI2_SS3nCntl_DS2                  2
    #define       bsmSysCtl_SM_SPI2_SS3nCntl_DS2               1
    #define   MSK32smSysCtl_SM_SPI2_SS3nCntl_DS2                  0x00000004

    #define     BA_smSysCtl_SM_SPI2_SS3nCntl_IE                0x0244
    #define     B16smSysCtl_SM_SPI2_SS3nCntl_IE                0x0244
    #define   LSb32smSysCtl_SM_SPI2_SS3nCntl_IE                   3
    #define   LSb16smSysCtl_SM_SPI2_SS3nCntl_IE                   3
    #define       bsmSysCtl_SM_SPI2_SS3nCntl_IE                1
    #define   MSK32smSysCtl_SM_SPI2_SS3nCntl_IE                   0x00000008

    #define     BA_smSysCtl_SM_SPI2_SS3nCntl_PD                0x0244
    #define     B16smSysCtl_SM_SPI2_SS3nCntl_PD                0x0244
    #define   LSb32smSysCtl_SM_SPI2_SS3nCntl_PD                   4
    #define   LSb16smSysCtl_SM_SPI2_SS3nCntl_PD                   4
    #define       bsmSysCtl_SM_SPI2_SS3nCntl_PD                1
    #define   MSK32smSysCtl_SM_SPI2_SS3nCntl_PD                   0x00000010

    #define     BA_smSysCtl_SM_SPI2_SS3nCntl_PU                0x0244
    #define     B16smSysCtl_SM_SPI2_SS3nCntl_PU                0x0244
    #define   LSb32smSysCtl_SM_SPI2_SS3nCntl_PU                   5
    #define   LSb16smSysCtl_SM_SPI2_SS3nCntl_PU                   5
    #define       bsmSysCtl_SM_SPI2_SS3nCntl_PU                1
    #define   MSK32smSysCtl_SM_SPI2_SS3nCntl_PU                   0x00000020

    #define     BA_smSysCtl_SM_SPI2_SS3nCntl_SL                0x0244
    #define     B16smSysCtl_SM_SPI2_SS3nCntl_SL                0x0244
    #define   LSb32smSysCtl_SM_SPI2_SS3nCntl_SL                   6
    #define   LSb16smSysCtl_SM_SPI2_SS3nCntl_SL                   6
    #define       bsmSysCtl_SM_SPI2_SS3nCntl_SL                1
    #define   MSK32smSysCtl_SM_SPI2_SS3nCntl_SL                   0x00000040

    #define     BA_smSysCtl_SM_SPI2_SS3nCntl_ST                0x0244
    #define     B16smSysCtl_SM_SPI2_SS3nCntl_ST                0x0244
    #define   LSb32smSysCtl_SM_SPI2_SS3nCntl_ST                   7
    #define   LSb16smSysCtl_SM_SPI2_SS3nCntl_ST                   7
    #define       bsmSysCtl_SM_SPI2_SS3nCntl_ST                1
    #define   MSK32smSysCtl_SM_SPI2_SS3nCntl_ST                   0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_SPI2_SDOCntl                    0x0248

    #define     BA_smSysCtl_SM_SPI2_SDOCntl_DS0                0x0248
    #define     B16smSysCtl_SM_SPI2_SDOCntl_DS0                0x0248
    #define   LSb32smSysCtl_SM_SPI2_SDOCntl_DS0                   0
    #define   LSb16smSysCtl_SM_SPI2_SDOCntl_DS0                   0
    #define       bsmSysCtl_SM_SPI2_SDOCntl_DS0                1
    #define   MSK32smSysCtl_SM_SPI2_SDOCntl_DS0                   0x00000001

    #define     BA_smSysCtl_SM_SPI2_SDOCntl_DS1                0x0248
    #define     B16smSysCtl_SM_SPI2_SDOCntl_DS1                0x0248
    #define   LSb32smSysCtl_SM_SPI2_SDOCntl_DS1                   1
    #define   LSb16smSysCtl_SM_SPI2_SDOCntl_DS1                   1
    #define       bsmSysCtl_SM_SPI2_SDOCntl_DS1                1
    #define   MSK32smSysCtl_SM_SPI2_SDOCntl_DS1                   0x00000002

    #define     BA_smSysCtl_SM_SPI2_SDOCntl_DS2                0x0248
    #define     B16smSysCtl_SM_SPI2_SDOCntl_DS2                0x0248
    #define   LSb32smSysCtl_SM_SPI2_SDOCntl_DS2                   2
    #define   LSb16smSysCtl_SM_SPI2_SDOCntl_DS2                   2
    #define       bsmSysCtl_SM_SPI2_SDOCntl_DS2                1
    #define   MSK32smSysCtl_SM_SPI2_SDOCntl_DS2                   0x00000004

    #define     BA_smSysCtl_SM_SPI2_SDOCntl_IE                 0x0248
    #define     B16smSysCtl_SM_SPI2_SDOCntl_IE                 0x0248
    #define   LSb32smSysCtl_SM_SPI2_SDOCntl_IE                    3
    #define   LSb16smSysCtl_SM_SPI2_SDOCntl_IE                    3
    #define       bsmSysCtl_SM_SPI2_SDOCntl_IE                 1
    #define   MSK32smSysCtl_SM_SPI2_SDOCntl_IE                    0x00000008

    #define     BA_smSysCtl_SM_SPI2_SDOCntl_PD                 0x0248
    #define     B16smSysCtl_SM_SPI2_SDOCntl_PD                 0x0248
    #define   LSb32smSysCtl_SM_SPI2_SDOCntl_PD                    4
    #define   LSb16smSysCtl_SM_SPI2_SDOCntl_PD                    4
    #define       bsmSysCtl_SM_SPI2_SDOCntl_PD                 1
    #define   MSK32smSysCtl_SM_SPI2_SDOCntl_PD                    0x00000010

    #define     BA_smSysCtl_SM_SPI2_SDOCntl_PU                 0x0248
    #define     B16smSysCtl_SM_SPI2_SDOCntl_PU                 0x0248
    #define   LSb32smSysCtl_SM_SPI2_SDOCntl_PU                    5
    #define   LSb16smSysCtl_SM_SPI2_SDOCntl_PU                    5
    #define       bsmSysCtl_SM_SPI2_SDOCntl_PU                 1
    #define   MSK32smSysCtl_SM_SPI2_SDOCntl_PU                    0x00000020

    #define     BA_smSysCtl_SM_SPI2_SDOCntl_SL                 0x0248
    #define     B16smSysCtl_SM_SPI2_SDOCntl_SL                 0x0248
    #define   LSb32smSysCtl_SM_SPI2_SDOCntl_SL                    6
    #define   LSb16smSysCtl_SM_SPI2_SDOCntl_SL                    6
    #define       bsmSysCtl_SM_SPI2_SDOCntl_SL                 1
    #define   MSK32smSysCtl_SM_SPI2_SDOCntl_SL                    0x00000040

    #define     BA_smSysCtl_SM_SPI2_SDOCntl_ST                 0x0248
    #define     B16smSysCtl_SM_SPI2_SDOCntl_ST                 0x0248
    #define   LSb32smSysCtl_SM_SPI2_SDOCntl_ST                    7
    #define   LSb16smSysCtl_SM_SPI2_SDOCntl_ST                    7
    #define       bsmSysCtl_SM_SPI2_SDOCntl_ST                 1
    #define   MSK32smSysCtl_SM_SPI2_SDOCntl_ST                    0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_SPI2_SDICntl                    0x024C

    #define     BA_smSysCtl_SM_SPI2_SDICntl_DS0                0x024C
    #define     B16smSysCtl_SM_SPI2_SDICntl_DS0                0x024C
    #define   LSb32smSysCtl_SM_SPI2_SDICntl_DS0                   0
    #define   LSb16smSysCtl_SM_SPI2_SDICntl_DS0                   0
    #define       bsmSysCtl_SM_SPI2_SDICntl_DS0                1
    #define   MSK32smSysCtl_SM_SPI2_SDICntl_DS0                   0x00000001

    #define     BA_smSysCtl_SM_SPI2_SDICntl_DS1                0x024C
    #define     B16smSysCtl_SM_SPI2_SDICntl_DS1                0x024C
    #define   LSb32smSysCtl_SM_SPI2_SDICntl_DS1                   1
    #define   LSb16smSysCtl_SM_SPI2_SDICntl_DS1                   1
    #define       bsmSysCtl_SM_SPI2_SDICntl_DS1                1
    #define   MSK32smSysCtl_SM_SPI2_SDICntl_DS1                   0x00000002

    #define     BA_smSysCtl_SM_SPI2_SDICntl_DS2                0x024C
    #define     B16smSysCtl_SM_SPI2_SDICntl_DS2                0x024C
    #define   LSb32smSysCtl_SM_SPI2_SDICntl_DS2                   2
    #define   LSb16smSysCtl_SM_SPI2_SDICntl_DS2                   2
    #define       bsmSysCtl_SM_SPI2_SDICntl_DS2                1
    #define   MSK32smSysCtl_SM_SPI2_SDICntl_DS2                   0x00000004

    #define     BA_smSysCtl_SM_SPI2_SDICntl_IE                 0x024C
    #define     B16smSysCtl_SM_SPI2_SDICntl_IE                 0x024C
    #define   LSb32smSysCtl_SM_SPI2_SDICntl_IE                    3
    #define   LSb16smSysCtl_SM_SPI2_SDICntl_IE                    3
    #define       bsmSysCtl_SM_SPI2_SDICntl_IE                 1
    #define   MSK32smSysCtl_SM_SPI2_SDICntl_IE                    0x00000008

    #define     BA_smSysCtl_SM_SPI2_SDICntl_PD                 0x024C
    #define     B16smSysCtl_SM_SPI2_SDICntl_PD                 0x024C
    #define   LSb32smSysCtl_SM_SPI2_SDICntl_PD                    4
    #define   LSb16smSysCtl_SM_SPI2_SDICntl_PD                    4
    #define       bsmSysCtl_SM_SPI2_SDICntl_PD                 1
    #define   MSK32smSysCtl_SM_SPI2_SDICntl_PD                    0x00000010

    #define     BA_smSysCtl_SM_SPI2_SDICntl_PU                 0x024C
    #define     B16smSysCtl_SM_SPI2_SDICntl_PU                 0x024C
    #define   LSb32smSysCtl_SM_SPI2_SDICntl_PU                    5
    #define   LSb16smSysCtl_SM_SPI2_SDICntl_PU                    5
    #define       bsmSysCtl_SM_SPI2_SDICntl_PU                 1
    #define   MSK32smSysCtl_SM_SPI2_SDICntl_PU                    0x00000020

    #define     BA_smSysCtl_SM_SPI2_SDICntl_SL                 0x024C
    #define     B16smSysCtl_SM_SPI2_SDICntl_SL                 0x024C
    #define   LSb32smSysCtl_SM_SPI2_SDICntl_SL                    6
    #define   LSb16smSysCtl_SM_SPI2_SDICntl_SL                    6
    #define       bsmSysCtl_SM_SPI2_SDICntl_SL                 1
    #define   MSK32smSysCtl_SM_SPI2_SDICntl_SL                    0x00000040

    #define     BA_smSysCtl_SM_SPI2_SDICntl_ST                 0x024C
    #define     B16smSysCtl_SM_SPI2_SDICntl_ST                 0x024C
    #define   LSb32smSysCtl_SM_SPI2_SDICntl_ST                    7
    #define   LSb16smSysCtl_SM_SPI2_SDICntl_ST                    7
    #define       bsmSysCtl_SM_SPI2_SDICntl_ST                 1
    #define   MSK32smSysCtl_SM_SPI2_SDICntl_ST                    0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_SPI2_SCLKCntl                   0x0250

    #define     BA_smSysCtl_SM_SPI2_SCLKCntl_DS0               0x0250
    #define     B16smSysCtl_SM_SPI2_SCLKCntl_DS0               0x0250
    #define   LSb32smSysCtl_SM_SPI2_SCLKCntl_DS0                  0
    #define   LSb16smSysCtl_SM_SPI2_SCLKCntl_DS0                  0
    #define       bsmSysCtl_SM_SPI2_SCLKCntl_DS0               1
    #define   MSK32smSysCtl_SM_SPI2_SCLKCntl_DS0                  0x00000001

    #define     BA_smSysCtl_SM_SPI2_SCLKCntl_DS1               0x0250
    #define     B16smSysCtl_SM_SPI2_SCLKCntl_DS1               0x0250
    #define   LSb32smSysCtl_SM_SPI2_SCLKCntl_DS1                  1
    #define   LSb16smSysCtl_SM_SPI2_SCLKCntl_DS1                  1
    #define       bsmSysCtl_SM_SPI2_SCLKCntl_DS1               1
    #define   MSK32smSysCtl_SM_SPI2_SCLKCntl_DS1                  0x00000002

    #define     BA_smSysCtl_SM_SPI2_SCLKCntl_DS2               0x0250
    #define     B16smSysCtl_SM_SPI2_SCLKCntl_DS2               0x0250
    #define   LSb32smSysCtl_SM_SPI2_SCLKCntl_DS2                  2
    #define   LSb16smSysCtl_SM_SPI2_SCLKCntl_DS2                  2
    #define       bsmSysCtl_SM_SPI2_SCLKCntl_DS2               1
    #define   MSK32smSysCtl_SM_SPI2_SCLKCntl_DS2                  0x00000004

    #define     BA_smSysCtl_SM_SPI2_SCLKCntl_IE                0x0250
    #define     B16smSysCtl_SM_SPI2_SCLKCntl_IE                0x0250
    #define   LSb32smSysCtl_SM_SPI2_SCLKCntl_IE                   3
    #define   LSb16smSysCtl_SM_SPI2_SCLKCntl_IE                   3
    #define       bsmSysCtl_SM_SPI2_SCLKCntl_IE                1
    #define   MSK32smSysCtl_SM_SPI2_SCLKCntl_IE                   0x00000008

    #define     BA_smSysCtl_SM_SPI2_SCLKCntl_PD                0x0250
    #define     B16smSysCtl_SM_SPI2_SCLKCntl_PD                0x0250
    #define   LSb32smSysCtl_SM_SPI2_SCLKCntl_PD                   4
    #define   LSb16smSysCtl_SM_SPI2_SCLKCntl_PD                   4
    #define       bsmSysCtl_SM_SPI2_SCLKCntl_PD                1
    #define   MSK32smSysCtl_SM_SPI2_SCLKCntl_PD                   0x00000010

    #define     BA_smSysCtl_SM_SPI2_SCLKCntl_PU                0x0250
    #define     B16smSysCtl_SM_SPI2_SCLKCntl_PU                0x0250
    #define   LSb32smSysCtl_SM_SPI2_SCLKCntl_PU                   5
    #define   LSb16smSysCtl_SM_SPI2_SCLKCntl_PU                   5
    #define       bsmSysCtl_SM_SPI2_SCLKCntl_PU                1
    #define   MSK32smSysCtl_SM_SPI2_SCLKCntl_PU                   0x00000020

    #define     BA_smSysCtl_SM_SPI2_SCLKCntl_SL                0x0250
    #define     B16smSysCtl_SM_SPI2_SCLKCntl_SL                0x0250
    #define   LSb32smSysCtl_SM_SPI2_SCLKCntl_SL                   6
    #define   LSb16smSysCtl_SM_SPI2_SCLKCntl_SL                   6
    #define       bsmSysCtl_SM_SPI2_SCLKCntl_SL                1
    #define   MSK32smSysCtl_SM_SPI2_SCLKCntl_SL                   0x00000040

    #define     BA_smSysCtl_SM_SPI2_SCLKCntl_ST                0x0250
    #define     B16smSysCtl_SM_SPI2_SCLKCntl_ST                0x0250
    #define   LSb32smSysCtl_SM_SPI2_SCLKCntl_ST                   7
    #define   LSb16smSysCtl_SM_SPI2_SCLKCntl_ST                   7
    #define       bsmSysCtl_SM_SPI2_SCLKCntl_ST                1
    #define   MSK32smSysCtl_SM_SPI2_SCLKCntl_ST                   0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_URT0_TXDCntl                    0x0254

    #define     BA_smSysCtl_SM_URT0_TXDCntl_DS0                0x0254
    #define     B16smSysCtl_SM_URT0_TXDCntl_DS0                0x0254
    #define   LSb32smSysCtl_SM_URT0_TXDCntl_DS0                   0
    #define   LSb16smSysCtl_SM_URT0_TXDCntl_DS0                   0
    #define       bsmSysCtl_SM_URT0_TXDCntl_DS0                1
    #define   MSK32smSysCtl_SM_URT0_TXDCntl_DS0                   0x00000001

    #define     BA_smSysCtl_SM_URT0_TXDCntl_DS1                0x0254
    #define     B16smSysCtl_SM_URT0_TXDCntl_DS1                0x0254
    #define   LSb32smSysCtl_SM_URT0_TXDCntl_DS1                   1
    #define   LSb16smSysCtl_SM_URT0_TXDCntl_DS1                   1
    #define       bsmSysCtl_SM_URT0_TXDCntl_DS1                1
    #define   MSK32smSysCtl_SM_URT0_TXDCntl_DS1                   0x00000002

    #define     BA_smSysCtl_SM_URT0_TXDCntl_DS2                0x0254
    #define     B16smSysCtl_SM_URT0_TXDCntl_DS2                0x0254
    #define   LSb32smSysCtl_SM_URT0_TXDCntl_DS2                   2
    #define   LSb16smSysCtl_SM_URT0_TXDCntl_DS2                   2
    #define       bsmSysCtl_SM_URT0_TXDCntl_DS2                1
    #define   MSK32smSysCtl_SM_URT0_TXDCntl_DS2                   0x00000004

    #define     BA_smSysCtl_SM_URT0_TXDCntl_DS3                0x0254
    #define     B16smSysCtl_SM_URT0_TXDCntl_DS3                0x0254
    #define   LSb32smSysCtl_SM_URT0_TXDCntl_DS3                   3
    #define   LSb16smSysCtl_SM_URT0_TXDCntl_DS3                   3
    #define       bsmSysCtl_SM_URT0_TXDCntl_DS3                1
    #define   MSK32smSysCtl_SM_URT0_TXDCntl_DS3                   0x00000008

    #define     BA_smSysCtl_SM_URT0_TXDCntl_IE                 0x0254
    #define     B16smSysCtl_SM_URT0_TXDCntl_IE                 0x0254
    #define   LSb32smSysCtl_SM_URT0_TXDCntl_IE                    4
    #define   LSb16smSysCtl_SM_URT0_TXDCntl_IE                    4
    #define       bsmSysCtl_SM_URT0_TXDCntl_IE                 1
    #define   MSK32smSysCtl_SM_URT0_TXDCntl_IE                    0x00000010

    #define     BA_smSysCtl_SM_URT0_TXDCntl_PE                 0x0254
    #define     B16smSysCtl_SM_URT0_TXDCntl_PE                 0x0254
    #define   LSb32smSysCtl_SM_URT0_TXDCntl_PE                    5
    #define   LSb16smSysCtl_SM_URT0_TXDCntl_PE                    5
    #define       bsmSysCtl_SM_URT0_TXDCntl_PE                 1
    #define   MSK32smSysCtl_SM_URT0_TXDCntl_PE                    0x00000020

    #define     BA_smSysCtl_SM_URT0_TXDCntl_PS                 0x0254
    #define     B16smSysCtl_SM_URT0_TXDCntl_PS                 0x0254
    #define   LSb32smSysCtl_SM_URT0_TXDCntl_PS                    6
    #define   LSb16smSysCtl_SM_URT0_TXDCntl_PS                    6
    #define       bsmSysCtl_SM_URT0_TXDCntl_PS                 1
    #define   MSK32smSysCtl_SM_URT0_TXDCntl_PS                    0x00000040

    #define     BA_smSysCtl_SM_URT0_TXDCntl_SL                 0x0254
    #define     B16smSysCtl_SM_URT0_TXDCntl_SL                 0x0254
    #define   LSb32smSysCtl_SM_URT0_TXDCntl_SL                    7
    #define   LSb16smSysCtl_SM_URT0_TXDCntl_SL                    7
    #define       bsmSysCtl_SM_URT0_TXDCntl_SL                 1
    #define   MSK32smSysCtl_SM_URT0_TXDCntl_SL                    0x00000080

    #define     BA_smSysCtl_SM_URT0_TXDCntl_SPU                0x0255
    #define     B16smSysCtl_SM_URT0_TXDCntl_SPU                0x0254
    #define   LSb32smSysCtl_SM_URT0_TXDCntl_SPU                   8
    #define   LSb16smSysCtl_SM_URT0_TXDCntl_SPU                   8
    #define       bsmSysCtl_SM_URT0_TXDCntl_SPU                1
    #define   MSK32smSysCtl_SM_URT0_TXDCntl_SPU                   0x00000100

    #define     BA_smSysCtl_SM_URT0_TXDCntl_ST                 0x0255
    #define     B16smSysCtl_SM_URT0_TXDCntl_ST                 0x0254
    #define   LSb32smSysCtl_SM_URT0_TXDCntl_ST                    9
    #define   LSb16smSysCtl_SM_URT0_TXDCntl_ST                    9
    #define       bsmSysCtl_SM_URT0_TXDCntl_ST                 1
    #define   MSK32smSysCtl_SM_URT0_TXDCntl_ST                    0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_smSysCtl_SM_URT0_RXDCntl                    0x0258

    #define     BA_smSysCtl_SM_URT0_RXDCntl_DS0                0x0258
    #define     B16smSysCtl_SM_URT0_RXDCntl_DS0                0x0258
    #define   LSb32smSysCtl_SM_URT0_RXDCntl_DS0                   0
    #define   LSb16smSysCtl_SM_URT0_RXDCntl_DS0                   0
    #define       bsmSysCtl_SM_URT0_RXDCntl_DS0                1
    #define   MSK32smSysCtl_SM_URT0_RXDCntl_DS0                   0x00000001

    #define     BA_smSysCtl_SM_URT0_RXDCntl_DS1                0x0258
    #define     B16smSysCtl_SM_URT0_RXDCntl_DS1                0x0258
    #define   LSb32smSysCtl_SM_URT0_RXDCntl_DS1                   1
    #define   LSb16smSysCtl_SM_URT0_RXDCntl_DS1                   1
    #define       bsmSysCtl_SM_URT0_RXDCntl_DS1                1
    #define   MSK32smSysCtl_SM_URT0_RXDCntl_DS1                   0x00000002

    #define     BA_smSysCtl_SM_URT0_RXDCntl_DS2                0x0258
    #define     B16smSysCtl_SM_URT0_RXDCntl_DS2                0x0258
    #define   LSb32smSysCtl_SM_URT0_RXDCntl_DS2                   2
    #define   LSb16smSysCtl_SM_URT0_RXDCntl_DS2                   2
    #define       bsmSysCtl_SM_URT0_RXDCntl_DS2                1
    #define   MSK32smSysCtl_SM_URT0_RXDCntl_DS2                   0x00000004

    #define     BA_smSysCtl_SM_URT0_RXDCntl_DS3                0x0258
    #define     B16smSysCtl_SM_URT0_RXDCntl_DS3                0x0258
    #define   LSb32smSysCtl_SM_URT0_RXDCntl_DS3                   3
    #define   LSb16smSysCtl_SM_URT0_RXDCntl_DS3                   3
    #define       bsmSysCtl_SM_URT0_RXDCntl_DS3                1
    #define   MSK32smSysCtl_SM_URT0_RXDCntl_DS3                   0x00000008

    #define     BA_smSysCtl_SM_URT0_RXDCntl_IE                 0x0258
    #define     B16smSysCtl_SM_URT0_RXDCntl_IE                 0x0258
    #define   LSb32smSysCtl_SM_URT0_RXDCntl_IE                    4
    #define   LSb16smSysCtl_SM_URT0_RXDCntl_IE                    4
    #define       bsmSysCtl_SM_URT0_RXDCntl_IE                 1
    #define   MSK32smSysCtl_SM_URT0_RXDCntl_IE                    0x00000010

    #define     BA_smSysCtl_SM_URT0_RXDCntl_PE                 0x0258
    #define     B16smSysCtl_SM_URT0_RXDCntl_PE                 0x0258
    #define   LSb32smSysCtl_SM_URT0_RXDCntl_PE                    5
    #define   LSb16smSysCtl_SM_URT0_RXDCntl_PE                    5
    #define       bsmSysCtl_SM_URT0_RXDCntl_PE                 1
    #define   MSK32smSysCtl_SM_URT0_RXDCntl_PE                    0x00000020

    #define     BA_smSysCtl_SM_URT0_RXDCntl_PS                 0x0258
    #define     B16smSysCtl_SM_URT0_RXDCntl_PS                 0x0258
    #define   LSb32smSysCtl_SM_URT0_RXDCntl_PS                    6
    #define   LSb16smSysCtl_SM_URT0_RXDCntl_PS                    6
    #define       bsmSysCtl_SM_URT0_RXDCntl_PS                 1
    #define   MSK32smSysCtl_SM_URT0_RXDCntl_PS                    0x00000040

    #define     BA_smSysCtl_SM_URT0_RXDCntl_SL                 0x0258
    #define     B16smSysCtl_SM_URT0_RXDCntl_SL                 0x0258
    #define   LSb32smSysCtl_SM_URT0_RXDCntl_SL                    7
    #define   LSb16smSysCtl_SM_URT0_RXDCntl_SL                    7
    #define       bsmSysCtl_SM_URT0_RXDCntl_SL                 1
    #define   MSK32smSysCtl_SM_URT0_RXDCntl_SL                    0x00000080

    #define     BA_smSysCtl_SM_URT0_RXDCntl_SPU                0x0259
    #define     B16smSysCtl_SM_URT0_RXDCntl_SPU                0x0258
    #define   LSb32smSysCtl_SM_URT0_RXDCntl_SPU                   8
    #define   LSb16smSysCtl_SM_URT0_RXDCntl_SPU                   8
    #define       bsmSysCtl_SM_URT0_RXDCntl_SPU                1
    #define   MSK32smSysCtl_SM_URT0_RXDCntl_SPU                   0x00000100

    #define     BA_smSysCtl_SM_URT0_RXDCntl_ST                 0x0259
    #define     B16smSysCtl_SM_URT0_RXDCntl_ST                 0x0258
    #define   LSb32smSysCtl_SM_URT0_RXDCntl_ST                    9
    #define   LSb16smSysCtl_SM_URT0_RXDCntl_ST                    9
    #define       bsmSysCtl_SM_URT0_RXDCntl_ST                 1
    #define   MSK32smSysCtl_SM_URT0_RXDCntl_ST                    0x00000200
    ///////////////////////////////////////////////////////////

    typedef struct SIE_smSysCtl {
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_ID_REV_ID(r32)                  _BFGET_(r32, 3, 0)
    #define   SET32smSysCtl_SM_ID_REV_ID(r32,v)                _BFSET_(r32, 3, 0,v)
    #define   GET16smSysCtl_SM_ID_REV_ID(r16)                  _BFGET_(r16, 3, 0)
    #define   SET16smSysCtl_SM_ID_REV_ID(r16,v)                _BFSET_(r16, 3, 0,v)

    #define   GET32smSysCtl_SM_ID_PART_ID(r32)                 _BFGET_(r32,19, 4)
    #define   SET32smSysCtl_SM_ID_PART_ID(r32,v)               _BFSET_(r32,19, 4,v)

    #define   GET32smSysCtl_SM_ID_MFC_ID(r32)                  _BFGET_(r32,31,20)
    #define   SET32smSysCtl_SM_ID_MFC_ID(r32,v)                _BFSET_(r32,31,20,v)
    #define   GET16smSysCtl_SM_ID_MFC_ID(r16)                  _BFGET_(r16,15, 4)
    #define   SET16smSysCtl_SM_ID_MFC_ID(r16,v)                _BFSET_(r16,15, 4,v)

    #define     w32smSysCtl_SM_ID                              {\
            UNSG32 uSM_ID_REV_ID                               :  4;\
            UNSG32 uSM_ID_PART_ID                              : 16;\
            UNSG32 uSM_ID_MFC_ID                               : 12;\
          }
    union { UNSG32 u32smSysCtl_SM_ID;
            struct w32smSysCtl_SM_ID;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_CPU_CTRL_CPU_RST_GO(r32)        _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_CPU_CTRL_CPU_RST_GO(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_CPU_CTRL_CPU_RST_GO(r16)        _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_CPU_CTRL_CPU_RST_GO(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_CPU_CTRL_CPU_VINITHI(r32)       _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_CPU_CTRL_CPU_VINITHI(r32,v)     _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_CPU_CTRL_CPU_VINITHI(r16)       _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_CPU_CTRL_CPU_VINITHI(r16,v)     _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_CPU_CTRL_CPU_INITRAM(r32)       _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_CPU_CTRL_CPU_INITRAM(r32,v)     _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_CPU_CTRL_CPU_INITRAM(r16)       _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_CPU_CTRL_CPU_INITRAM(r16,v)     _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_CPU_CTRL_CPU_BIGEND(r32)        _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_CPU_CTRL_CPU_BIGEND(r32,v)      _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_CPU_CTRL_CPU_BIGEND(r16)        _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_CPU_CTRL_CPU_BIGEND(r16,v)      _BFSET_(r16, 3, 3,v)

    #define     w32smSysCtl_SM_CPU_CTRL                        {\
            UNSG32 uSM_CPU_CTRL_CPU_RST_GO                     :  1;\
            UNSG32 uSM_CPU_CTRL_CPU_VINITHI                    :  1;\
            UNSG32 uSM_CPU_CTRL_CPU_INITRAM                    :  1;\
            UNSG32 uSM_CPU_CTRL_CPU_BIGEND                     :  1;\
            UNSG32 RSVDx4_b4                                   : 28;\
          }
    union { UNSG32 u32smSysCtl_SM_CPU_CTRL;
            struct w32smSysCtl_SM_CPU_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_RST_CTRL_SOC_RST_GO(r32)        _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_RST_CTRL_SOC_RST_GO(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_RST_CTRL_SOC_RST_GO(r16)        _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_RST_CTRL_SOC_RST_GO(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_RST_CTRL_APB_RST_GO(r32)        _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_RST_CTRL_APB_RST_GO(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_RST_CTRL_APB_RST_GO(r16)        _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_RST_CTRL_APB_RST_GO(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_RST_CTRL_SXBAR_RST_GO(r32)      _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_RST_CTRL_SXBAR_RST_GO(r32,v)    _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_RST_CTRL_SXBAR_RST_GO(r16)      _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_RST_CTRL_SXBAR_RST_GO(r16,v)    _BFSET_(r16, 2, 2,v)

    #define     w32smSysCtl_SM_RST_CTRL                        {\
            UNSG32 uSM_RST_CTRL_SOC_RST_GO                     :  1;\
            UNSG32 uSM_RST_CTRL_APB_RST_GO                     :  1;\
            UNSG32 uSM_RST_CTRL_SXBAR_RST_GO                   :  1;\
            UNSG32 RSVDx8_b3                                   : 29;\
          }
    union { UNSG32 u32smSysCtl_SM_RST_CTRL;
            struct w32smSysCtl_SM_RST_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_RST_STATUS_RST_WD_0(r32)        _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_RST_STATUS_RST_WD_0(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_RST_STATUS_RST_WD_0(r16)        _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_RST_STATUS_RST_WD_0(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_RST_STATUS_RST_WD_1(r32)        _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_RST_STATUS_RST_WD_1(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_RST_STATUS_RST_WD_1(r16)        _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_RST_STATUS_RST_WD_1(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_RST_STATUS_RST_WD_2(r32)        _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_RST_STATUS_RST_WD_2(r32,v)      _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_RST_STATUS_RST_WD_2(r16)        _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_RST_STATUS_RST_WD_2(r16,v)      _BFSET_(r16, 2, 2,v)

    #define     w32smSysCtl_SM_RST_STATUS                      {\
            UNSG32 uSM_RST_STATUS_RST_WD_0                     :  1;\
            UNSG32 uSM_RST_STATUS_RST_WD_1                     :  1;\
            UNSG32 uSM_RST_STATUS_RST_WD_2                     :  1;\
            UNSG32 RSVDxC_b3                                   : 29;\
          }
    union { UNSG32 u32smSysCtl_SM_RST_STATUS;
            struct w32smSysCtl_SM_RST_STATUS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_STRP_STATUS_BOOT_MODE(r32)      _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_STRP_STATUS_BOOT_MODE(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_STRP_STATUS_BOOT_MODE(r16)      _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_STRP_STATUS_BOOT_MODE(r16,v)    _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_STRP_STATUS_STRP_1(r32)         _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_STRP_STATUS_STRP_1(r32,v)       _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_STRP_STATUS_STRP_1(r16)         _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_STRP_STATUS_STRP_1(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_STRP_STATUS_STRP_2(r32)         _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_STRP_STATUS_STRP_2(r32,v)       _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_STRP_STATUS_STRP_2(r16)         _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_STRP_STATUS_STRP_2(r16,v)       _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_STRP_STATUS_STRP_3(r32)         _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_STRP_STATUS_STRP_3(r32,v)       _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_STRP_STATUS_STRP_3(r16)         _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_STRP_STATUS_STRP_3(r16,v)       _BFSET_(r16, 3, 3,v)

    #define     w32smSysCtl_SM_STRP_STATUS                     {\
            UNSG32 uSM_STRP_STATUS_BOOT_MODE                   :  1;\
            UNSG32 uSM_STRP_STATUS_STRP_1                      :  1;\
            UNSG32 uSM_STRP_STATUS_STRP_2                      :  1;\
            UNSG32 uSM_STRP_STATUS_STRP_3                      :  1;\
            UNSG32 RSVDx10_b4                                  : 28;\
          }
    union { UNSG32 u32smSysCtl_SM_STRP_STATUS;
            struct w32smSysCtl_SM_STRP_STATUS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_CTRL_ISO_EN(r32)                _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_CTRL_ISO_EN(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_CTRL_ISO_EN(r16)                _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_CTRL_ISO_EN(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_CTRL_SM2SOC_SW_INTR(r32)        _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_CTRL_SM2SOC_SW_INTR(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_CTRL_SM2SOC_SW_INTR(r16)        _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_CTRL_SM2SOC_SW_INTR(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_CTRL_SOC2SM_SW_INTR(r32)        _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_CTRL_SOC2SM_SW_INTR(r32,v)      _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_CTRL_SOC2SM_SW_INTR(r16)        _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_CTRL_SOC2SM_SW_INTR(r16,v)      _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_CTRL_ADC_ENCTR(r32)             _BFGET_(r32, 5, 3)
    #define   SET32smSysCtl_SM_CTRL_ADC_ENCTR(r32,v)           _BFSET_(r32, 5, 3,v)
    #define   GET16smSysCtl_SM_CTRL_ADC_ENCTR(r16)             _BFGET_(r16, 5, 3)
    #define   SET16smSysCtl_SM_CTRL_ADC_ENCTR(r16,v)           _BFSET_(r16, 5, 3,v)

    #define   GET32smSysCtl_SM_CTRL_ADC_SELIN(r32)             _BFGET_(r32, 8, 6)
    #define   SET32smSysCtl_SM_CTRL_ADC_SELIN(r32,v)           _BFSET_(r32, 8, 6,v)
    #define   GET16smSysCtl_SM_CTRL_ADC_SELIN(r16)             _BFGET_(r16, 8, 6)
    #define   SET16smSysCtl_SM_CTRL_ADC_SELIN(r16,v)           _BFSET_(r16, 8, 6,v)

    #define   GET32smSysCtl_SM_CTRL_ADC_EN(r32)                _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_CTRL_ADC_EN(r32,v)              _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_CTRL_ADC_EN(r16)                _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_CTRL_ADC_EN(r16,v)              _BFSET_(r16, 9, 9,v)

    #define   GET32smSysCtl_SM_CTRL_ADC_SEL_VREF(r32)          _BFGET_(r32,10,10)
    #define   SET32smSysCtl_SM_CTRL_ADC_SEL_VREF(r32,v)        _BFSET_(r32,10,10,v)
    #define   GET16smSysCtl_SM_CTRL_ADC_SEL_VREF(r16)          _BFGET_(r16,10,10)
    #define   SET16smSysCtl_SM_CTRL_ADC_SEL_VREF(r16,v)        _BFSET_(r16,10,10,v)

    #define   GET32smSysCtl_SM_CTRL_ADC_SELBG(r32)             _BFGET_(r32,11,11)
    #define   SET32smSysCtl_SM_CTRL_ADC_SELBG(r32,v)           _BFSET_(r32,11,11,v)
    #define   GET16smSysCtl_SM_CTRL_ADC_SELBG(r16)             _BFGET_(r16,11,11)
    #define   SET16smSysCtl_SM_CTRL_ADC_SELBG(r16,v)           _BFSET_(r16,11,11,v)

    #define   GET32smSysCtl_SM_CTRL_ADC_SELDIFF(r32)           _BFGET_(r32,12,12)
    #define   SET32smSysCtl_SM_CTRL_ADC_SELDIFF(r32,v)         _BFSET_(r32,12,12,v)
    #define   GET16smSysCtl_SM_CTRL_ADC_SELDIFF(r16)           _BFGET_(r16,12,12)
    #define   SET16smSysCtl_SM_CTRL_ADC_SELDIFF(r16,v)         _BFSET_(r16,12,12,v)

    #define   GET32smSysCtl_SM_CTRL_ADC_SELRES(r32)            _BFGET_(r32,14,13)
    #define   SET32smSysCtl_SM_CTRL_ADC_SELRES(r32,v)          _BFSET_(r32,14,13,v)
    #define   GET16smSysCtl_SM_CTRL_ADC_SELRES(r16)            _BFGET_(r16,14,13)
    #define   SET16smSysCtl_SM_CTRL_ADC_SELRES(r16,v)          _BFSET_(r16,14,13,v)

    #define   GET32smSysCtl_SM_CTRL_ADC_START(r32)             _BFGET_(r32,15,15)
    #define   SET32smSysCtl_SM_CTRL_ADC_START(r32,v)           _BFSET_(r32,15,15,v)
    #define   GET16smSysCtl_SM_CTRL_ADC_START(r16)             _BFGET_(r16,15,15)
    #define   SET16smSysCtl_SM_CTRL_ADC_START(r16,v)           _BFSET_(r16,15,15,v)

    #define   GET32smSysCtl_SM_CTRL_ADC_RESET(r32)             _BFGET_(r32,16,16)
    #define   SET32smSysCtl_SM_CTRL_ADC_RESET(r32,v)           _BFSET_(r32,16,16,v)
    #define   GET16smSysCtl_SM_CTRL_ADC_RESET(r16)             _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_CTRL_ADC_RESET(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_CTRL_ADC_CONT(r32)              _BFGET_(r32,17,17)
    #define   SET32smSysCtl_SM_CTRL_ADC_CONT(r32,v)            _BFSET_(r32,17,17,v)
    #define   GET16smSysCtl_SM_CTRL_ADC_CONT(r16)              _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_CTRL_ADC_CONT(r16,v)            _BFSET_(r16, 1, 1,v)

    #define     w32smSysCtl_SM_CTRL                            {\
            UNSG32 uSM_CTRL_ISO_EN                             :  1;\
            UNSG32 uSM_CTRL_SM2SOC_SW_INTR                     :  1;\
            UNSG32 uSM_CTRL_SOC2SM_SW_INTR                     :  1;\
            UNSG32 uSM_CTRL_ADC_ENCTR                          :  3;\
            UNSG32 uSM_CTRL_ADC_SELIN                          :  3;\
            UNSG32 uSM_CTRL_ADC_EN                             :  1;\
            UNSG32 uSM_CTRL_ADC_SEL_VREF                       :  1;\
            UNSG32 uSM_CTRL_ADC_SELBG                          :  1;\
            UNSG32 uSM_CTRL_ADC_SELDIFF                        :  1;\
            UNSG32 uSM_CTRL_ADC_SELRES                         :  2;\
            UNSG32 uSM_CTRL_ADC_START                          :  1;\
            UNSG32 uSM_CTRL_ADC_RESET                          :  1;\
            UNSG32 uSM_CTRL_ADC_CONT                           :  1;\
            UNSG32 RSVDx14_b18                                 : 14;\
          }
    union { UNSG32 u32smSysCtl_SM_CTRL;
            struct w32smSysCtl_SM_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_ADC_CTRL_ADC_DAT_LT(r32)        _BFGET_(r32, 4, 0)
    #define   SET32smSysCtl_SM_ADC_CTRL_ADC_DAT_LT(r32,v)      _BFSET_(r32, 4, 0,v)
    #define   GET16smSysCtl_SM_ADC_CTRL_ADC_DAT_LT(r16)        _BFGET_(r16, 4, 0)
    #define   SET16smSysCtl_SM_ADC_CTRL_ADC_DAT_LT(r16,v)      _BFSET_(r16, 4, 0,v)

    #define     w32smSysCtl_SM_ADC_CTRL                        {\
            UNSG32 uSM_ADC_CTRL_ADC_DAT_LT                     :  5;\
            UNSG32 RSVDx18_b5                                  : 27;\
          }
    union { UNSG32 u32smSysCtl_SM_ADC_CTRL;
            struct w32smSysCtl_SM_ADC_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_ADC_STATUS_DATA_RDY(r32)        _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_ADC_STATUS_DATA_RDY(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_ADC_STATUS_DATA_RDY(r16)        _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_ADC_STATUS_DATA_RDY(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_ADC_STATUS_INT_EN(r32)          _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_ADC_STATUS_INT_EN(r32,v)        _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_ADC_STATUS_INT_EN(r16)          _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_ADC_STATUS_INT_EN(r16,v)        _BFSET_(r16, 1, 1,v)

    #define     w32smSysCtl_SM_ADC_STATUS                      {\
            UNSG32 uSM_ADC_STATUS_DATA_RDY                     :  1;\
            UNSG32 uSM_ADC_STATUS_INT_EN                       :  1;\
            UNSG32 RSVDx1C_b2                                  : 30;\
          }
    union { UNSG32 u32smSysCtl_SM_ADC_STATUS;
            struct w32smSysCtl_SM_ADC_STATUS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_ADC_DATA_ADC_DATA(r32)          _BFGET_(r32,11, 0)
    #define   SET32smSysCtl_SM_ADC_DATA_ADC_DATA(r32,v)        _BFSET_(r32,11, 0,v)
    #define   GET16smSysCtl_SM_ADC_DATA_ADC_DATA(r16)          _BFGET_(r16,11, 0)
    #define   SET16smSysCtl_SM_ADC_DATA_ADC_DATA(r16,v)        _BFSET_(r16,11, 0,v)

    #define     w32smSysCtl_SM_ADC_DATA                        {\
            UNSG32 uSM_ADC_DATA_ADC_DATA                       : 12;\
            UNSG32 RSVDx20_b12                                 : 20;\
          }
    union { UNSG32 u32smSysCtl_SM_ADC_DATA;
            struct w32smSysCtl_SM_ADC_DATA;
          };
    ///////////////////////////////////////////////////////////
              SIE_TSEN                                         ie_TSEN;
    ///////////////////////////////////////////////////////////
              SIE_FEPHY                                        ie_FEPHY;
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_BOOT_STATUS_MODE(r32)           _BFGET_(r32,31, 0)
    #define   SET32smSysCtl_SM_BOOT_STATUS_MODE(r32,v)         _BFSET_(r32,31, 0,v)

    #define     w32smSysCtl_SM_BOOT_STATUS                     {\
            UNSG32 uSM_BOOT_STATUS_MODE                        : 32;\
          }
    union { UNSG32 u32smSysCtl_SM_BOOT_STATUS;
            struct w32smSysCtl_SM_BOOT_STATUS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_WDT_MASK_SM_RST(r32)            _BFGET_(r32, 2, 0)
    #define   SET32smSysCtl_SM_WDT_MASK_SM_RST(r32,v)          _BFSET_(r32, 2, 0,v)
    #define   GET16smSysCtl_SM_WDT_MASK_SM_RST(r16)            _BFGET_(r16, 2, 0)
    #define   SET16smSysCtl_SM_WDT_MASK_SM_RST(r16,v)          _BFSET_(r16, 2, 0,v)

    #define   GET32smSysCtl_SM_WDT_MASK_SOC_RST(r32)           _BFGET_(r32, 5, 3)
    #define   SET32smSysCtl_SM_WDT_MASK_SOC_RST(r32,v)         _BFSET_(r32, 5, 3,v)
    #define   GET16smSysCtl_SM_WDT_MASK_SOC_RST(r16)           _BFGET_(r16, 5, 3)
    #define   SET16smSysCtl_SM_WDT_MASK_SOC_RST(r16,v)         _BFSET_(r16, 5, 3,v)

    #define     w32smSysCtl_SM_WDT_MASK                        {\
            UNSG32 uSM_WDT_MASK_SM_RST                         :  3;\
            UNSG32 uSM_WDT_MASK_SOC_RST                        :  3;\
            UNSG32 RSVDx50_b6                                  : 26;\
          }
    union { UNSG32 u32smSysCtl_SM_WDT_MASK;
            struct w32smSysCtl_SM_WDT_MASK;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_POR_status_POR_VDDIO1P8_SM(r32)    _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_POR_status_POR_VDDIO1P8_SM(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_POR_status_POR_VDDIO1P8_SM(r16)    _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_POR_status_POR_VDDIO1P8_SM(r16,v)  _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_POR_status_POR_VDD_SM(r32)         _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_POR_status_POR_VDD_SM(r32,v)       _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_POR_status_POR_VDD_SM(r16)         _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_POR_status_POR_VDD_SM(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_POR_status_POR_VDDIO_SOC(r32)      _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_POR_status_POR_VDDIO_SOC(r32,v)    _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_POR_status_POR_VDDIO_SOC(r16)      _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_POR_status_POR_VDDIO_SOC(r16,v)    _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_POR_status_POR_VDDIO3P3_SOC(r32)   _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_POR_status_POR_VDDIO3P3_SOC(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_POR_status_POR_VDDIO3P3_SOC(r16)   _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_POR_status_POR_VDDIO3P3_SOC(r16,v) _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_POR_status_POR_VDD_SOC(r32)        _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_POR_status_POR_VDD_SOC(r32,v)      _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_POR_status_POR_VDD_SOC(r16)        _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_POR_status_POR_VDD_SOC(r16,v)      _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_POR_status_POR_VDD_CPU(r32)        _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_POR_status_POR_VDD_CPU(r32,v)      _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_POR_status_POR_VDD_CPU(r16)        _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_POR_status_POR_VDD_CPU(r16,v)      _BFSET_(r16, 5, 5,v)

    #define     w32smSysCtl_POR_status                         {\
            UNSG32 uPOR_status_POR_VDDIO1P8_SM                 :  1;\
            UNSG32 uPOR_status_POR_VDD_SM                      :  1;\
            UNSG32 uPOR_status_POR_VDDIO_SOC                   :  1;\
            UNSG32 uPOR_status_POR_VDDIO3P3_SOC                :  1;\
            UNSG32 uPOR_status_POR_VDD_SOC                     :  1;\
            UNSG32 uPOR_status_POR_VDD_CPU                     :  1;\
            UNSG32 RSVDx54_b6                                  : 26;\
          }
    union { UNSG32 u32smSysCtl_POR_status;
            struct w32smSysCtl_POR_status;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_TEST_ADC_TEST_FAIL(r32)         _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_TEST_ADC_TEST_FAIL(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_TEST_ADC_TEST_FAIL(r16)         _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_TEST_ADC_TEST_FAIL(r16,v)       _BFSET_(r16, 0, 0,v)

    #define     w32smSysCtl_SM_TEST                            {\
            UNSG32 uSM_TEST_ADC_TEST_FAIL                      :  1;\
            UNSG32 RSVDx58_b1                                  : 31;\
          }
    union { UNSG32 u32smSysCtl_SM_TEST;
            struct w32smSysCtl_SM_TEST;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_TEST_DATA0_ADC_DATA_HIGH(r32)   _BFGET_(r32,11, 0)
    #define   SET32smSysCtl_SM_TEST_DATA0_ADC_DATA_HIGH(r32,v) _BFSET_(r32,11, 0,v)
    #define   GET16smSysCtl_SM_TEST_DATA0_ADC_DATA_HIGH(r16)   _BFGET_(r16,11, 0)
    #define   SET16smSysCtl_SM_TEST_DATA0_ADC_DATA_HIGH(r16,v) _BFSET_(r16,11, 0,v)

    #define     w32smSysCtl_SM_TEST_DATA0                      {\
            UNSG32 uSM_TEST_DATA0_ADC_DATA_HIGH                : 12;\
            UNSG32 RSVDx5C_b12                                 : 20;\
          }
    union { UNSG32 u32smSysCtl_SM_TEST_DATA0;
            struct w32smSysCtl_SM_TEST_DATA0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_TEST_DATA1_ADC_DATA_LOW(r32)    _BFGET_(r32,11, 0)
    #define   SET32smSysCtl_SM_TEST_DATA1_ADC_DATA_LOW(r32,v)  _BFSET_(r32,11, 0,v)
    #define   GET16smSysCtl_SM_TEST_DATA1_ADC_DATA_LOW(r16)    _BFGET_(r16,11, 0)
    #define   SET16smSysCtl_SM_TEST_DATA1_ADC_DATA_LOW(r16,v)  _BFSET_(r16,11, 0,v)

    #define     w32smSysCtl_SM_TEST_DATA1                      {\
            UNSG32 uSM_TEST_DATA1_ADC_DATA_LOW                 : 12;\
            UNSG32 RSVDx60_b12                                 : 20;\
          }
    union { UNSG32 u32smSysCtl_SM_TEST_DATA1;
            struct w32smSysCtl_SM_TEST_DATA1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_PORT_SEL_CTRL_TW2(r32)          _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_PORT_SEL_CTRL_TW2(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_PORT_SEL_CTRL_TW2(r16)          _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_PORT_SEL_CTRL_TW2(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_PORT_SEL_CTRL_URT1(r32)         _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_PORT_SEL_CTRL_URT1(r32,v)       _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_PORT_SEL_CTRL_URT1(r16)         _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_PORT_SEL_CTRL_URT1(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_PORT_SEL_CTRL_FE_MDIO(r32)      _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_PORT_SEL_CTRL_FE_MDIO(r32,v)    _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_PORT_SEL_CTRL_FE_MDIO(r16)      _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_PORT_SEL_CTRL_FE_MDIO(r16,v)    _BFSET_(r16, 2, 2,v)

    #define     w32smSysCtl_SM_PORT_SEL_CTRL                   {\
            UNSG32 uSM_PORT_SEL_CTRL_TW2                       :  1;\
            UNSG32 uSM_PORT_SEL_CTRL_URT1                      :  1;\
            UNSG32 uSM_PORT_SEL_CTRL_FE_MDIO                   :  1;\
            UNSG32 RSVDx64_b3                                  : 29;\
          }
    union { UNSG32 u32smSysCtl_SM_PORT_SEL_CTRL;
            struct w32smSysCtl_SM_PORT_SEL_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_DUMMY_REG_REG0(r32)             _BFGET_(r32,31, 0)
    #define   SET32smSysCtl_SM_DUMMY_REG_REG0(r32,v)           _BFSET_(r32,31, 0,v)

    #define     w32smSysCtl_SM_DUMMY_REG                       {\
            UNSG32 uSM_DUMMY_REG_REG0                          : 32;\
          }
    union { UNSG32 u32smSysCtl_SM_DUMMY_REG;
            struct w32smSysCtl_SM_DUMMY_REG;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_POR_CTL_SOC_VDD1P8V_BYPASS(r32) _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_POR_CTL_SOC_VDD1P8V_BYPASS(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_POR_CTL_SOC_VDD1P8V_BYPASS(r16) _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_POR_CTL_SOC_VDD1P8V_BYPASS(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_POR_CTL_SM_VDD1P8V_BYPASS(r32)  _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_POR_CTL_SM_VDD1P8V_BYPASS(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_POR_CTL_SM_VDD1P8V_BYPASS(r16)  _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_POR_CTL_SM_VDD1P8V_BYPASS(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_POR_CTL_SOC_VDD3P3V_BYPASS(r32) _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_POR_CTL_SOC_VDD3P3V_BYPASS(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_POR_CTL_SOC_VDD3P3V_BYPASS(r16) _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_POR_CTL_SOC_VDD3P3V_BYPASS(r16,v) _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_PD(r32) _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_PD(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_PD(r16) _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_PD(r16,v) _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_VTH(r32) _BFGET_(r32, 5, 4)
    #define   SET32smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_VTH(r32,v) _BFSET_(r32, 5, 4,v)
    #define   GET16smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_VTH(r16) _BFGET_(r16, 5, 4)
    #define   SET16smSysCtl_SM_POR_CTL_POR_SOC_IO_1P8V_VTH(r16,v) _BFSET_(r16, 5, 4,v)

    #define   GET32smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_PD(r32)  _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_PD(r32,v) _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_PD(r16)  _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_PD(r16,v) _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_VTH(r32) _BFGET_(r32, 8, 7)
    #define   SET32smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_VTH(r32,v) _BFSET_(r32, 8, 7,v)
    #define   GET16smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_VTH(r16) _BFGET_(r16, 8, 7)
    #define   SET16smSysCtl_SM_POR_CTL_POR_SM_IO_1P8V_VTH(r16,v) _BFSET_(r16, 8, 7,v)

    #define   GET32smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_PD(r32) _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_PD(r32,v) _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_PD(r16) _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_PD(r16,v) _BFSET_(r16, 9, 9,v)

    #define   GET32smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_VTH(r32) _BFGET_(r32,11,10)
    #define   SET32smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_VTH(r32,v) _BFSET_(r32,11,10,v)
    #define   GET16smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_VTH(r16) _BFGET_(r16,11,10)
    #define   SET16smSysCtl_SM_POR_CTL_POR_SOC_IO_3P3V_VTH(r16,v) _BFSET_(r16,11,10,v)

    #define     w32smSysCtl_SM_POR_CTL                         {\
            UNSG32 uSM_POR_CTL_SOC_VDD1P8V_BYPASS              :  1;\
            UNSG32 uSM_POR_CTL_SM_VDD1P8V_BYPASS               :  1;\
            UNSG32 uSM_POR_CTL_SOC_VDD3P3V_BYPASS              :  1;\
            UNSG32 uSM_POR_CTL_POR_SOC_IO_1P8V_PD              :  1;\
            UNSG32 uSM_POR_CTL_POR_SOC_IO_1P8V_VTH             :  2;\
            UNSG32 uSM_POR_CTL_POR_SM_IO_1P8V_PD               :  1;\
            UNSG32 uSM_POR_CTL_POR_SM_IO_1P8V_VTH              :  2;\
            UNSG32 uSM_POR_CTL_POR_SOC_IO_3P3V_PD              :  1;\
            UNSG32 uSM_POR_CTL_POR_SOC_IO_3P3V_VTH             :  2;\
            UNSG32 RSVDx6C_b12                                 : 20;\
          }
    union { UNSG32 u32smSysCtl_SM_POR_CTL;
            struct w32smSysCtl_SM_POR_CTL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_PWR_OK_status(r32)              _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_PWR_OK_status(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_PWR_OK_status(r16)              _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_PWR_OK_status(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32smSysCtl_SM_PWR_OK                          {\
            UNSG32 uSM_PWR_OK_status                           :  1;\
            UNSG32 RSVDx70_b1                                  : 31;\
          }
    union { UNSG32 u32smSysCtl_SM_PWR_OK;
            struct w32smSysCtl_SM_PWR_OK;
          };
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAMPWR;
    ///////////////////////////////////////////////////////////
              SIE_SRAMRWTC                                     ie_SRAMWTC;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx84                                     [380];
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_smPinMuxCntlBus_SM_TW2_SCL(r32)    _BFGET_(r32, 2, 0)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_TW2_SCL(r32,v)  _BFSET_(r32, 2, 0,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_TW2_SCL(r16)    _BFGET_(r16, 2, 0)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_TW2_SCL(r16,v)  _BFSET_(r16, 2, 0,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_TW2_SDA(r32)    _BFGET_(r32, 5, 3)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_TW2_SDA(r32,v)  _BFSET_(r32, 5, 3,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_TW2_SDA(r16)    _BFGET_(r16, 5, 3)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_TW2_SDA(r16,v)  _BFSET_(r16, 5, 3,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_URT1_TXD(r32)   _BFGET_(r32, 8, 6)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_URT1_TXD(r32,v) _BFSET_(r32, 8, 6,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_URT1_TXD(r16)   _BFGET_(r16, 8, 6)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_URT1_TXD(r16,v) _BFSET_(r16, 8, 6,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_URT1_RXD(r32)   _BFGET_(r32,11, 9)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_URT1_RXD(r32,v) _BFSET_(r32,11, 9,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_URT1_RXD(r16)   _BFGET_(r16,11, 9)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_URT1_RXD(r16,v) _BFSET_(r16,11, 9,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD(r32) _BFGET_(r32,14,12)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD(r32,v) _BFSET_(r32,14,12,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD(r16) _BFGET_(r16,14,12)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_HPD(r16,v) _BFSET_(r16,14,12,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_CEC(r32) _BFGET_(r32,17,15)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_HDMI_TX_CEC(r32,v) _BFSET_(r32,17,15,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_TMS(r32)        _BFGET_(r32,20,18)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_TMS(r32,v)      _BFSET_(r32,20,18,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_TMS(r16)        _BFGET_(r16, 4, 2)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_TMS(r16,v)      _BFSET_(r16, 4, 2,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_TDI(r32)        _BFGET_(r32,23,21)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_TDI(r32,v)      _BFSET_(r32,23,21,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_TDI(r16)        _BFGET_(r16, 7, 5)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_TDI(r16,v)      _BFSET_(r16, 7, 5,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_TDO(r32)        _BFGET_(r32,26,24)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_TDO(r32,v)      _BFSET_(r32,26,24,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_TDO(r16)        _BFGET_(r16,10, 8)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_TDO(r16,v)      _BFSET_(r16,10, 8,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_TW3_SCL(r32)    _BFGET_(r32,29,27)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_TW3_SCL(r32,v)  _BFSET_(r32,29,27,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_TW3_SCL(r16)    _BFGET_(r16,13,11)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_TW3_SCL(r16,v)  _BFSET_(r16,13,11,v)

    #define     w32smSysCtl_smPinMuxCntlBus                    {\
            UNSG32 usmPinMuxCntlBus_SM_TW2_SCL                 :  3;\
            UNSG32 usmPinMuxCntlBus_SM_TW2_SDA                 :  3;\
            UNSG32 usmPinMuxCntlBus_SM_URT1_TXD                :  3;\
            UNSG32 usmPinMuxCntlBus_SM_URT1_RXD                :  3;\
            UNSG32 usmPinMuxCntlBus_SM_HDMI_TX_HPD             :  3;\
            UNSG32 usmPinMuxCntlBus_SM_HDMI_TX_CEC             :  3;\
            UNSG32 usmPinMuxCntlBus_SM_TMS                     :  3;\
            UNSG32 usmPinMuxCntlBus_SM_TDI                     :  3;\
            UNSG32 usmPinMuxCntlBus_SM_TDO                     :  3;\
            UNSG32 usmPinMuxCntlBus_SM_TW3_SCL                 :  3;\
            UNSG32 RSVDx200_b30                                :  2;\
          }
    union { UNSG32 u32smSysCtl_smPinMuxCntlBus;
            struct w32smSysCtl_smPinMuxCntlBus;
          };
    #define   GET32smSysCtl_smPinMuxCntlBus_SM_TW3_SDA(r32)    _BFGET_(r32, 2, 0)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_TW3_SDA(r32,v)  _BFSET_(r32, 2, 0,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_TW3_SDA(r16)    _BFGET_(r16, 2, 0)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_TW3_SDA(r16,v)  _BFSET_(r16, 2, 0,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n(r32)  _BFGET_(r32, 5, 3)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n(r32,v) _BFSET_(r32, 5, 3,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n(r16)  _BFGET_(r16, 5, 3)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS0n(r16,v) _BFSET_(r16, 5, 3,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n(r32)  _BFGET_(r32, 8, 6)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n(r32,v) _BFSET_(r32, 8, 6,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n(r16)  _BFGET_(r16, 8, 6)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS1n(r16,v) _BFSET_(r16, 8, 6,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n(r32)  _BFGET_(r32,11, 9)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n(r32,v) _BFSET_(r32,11, 9,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n(r16)  _BFGET_(r16,11, 9)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS2n(r16,v) _BFSET_(r16,11, 9,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n(r32)  _BFGET_(r32,14,12)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n(r32,v) _BFSET_(r32,14,12,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n(r16)  _BFGET_(r16,14,12)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SS3n(r16,v) _BFSET_(r16,14,12,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO(r32)   _BFGET_(r32,17,15)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SDO(r32,v) _BFSET_(r32,17,15,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI(r32)   _BFGET_(r32,20,18)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI(r32,v) _BFSET_(r32,20,18,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI(r16)   _BFGET_(r16, 4, 2)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SDI(r16,v) _BFSET_(r16, 4, 2,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK(r32)  _BFGET_(r32,23,21)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK(r32,v) _BFSET_(r32,23,21,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK(r16)  _BFGET_(r16, 7, 5)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_SPI2_SCLK(r16,v) _BFSET_(r16, 7, 5,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_URT0_TXD(r32)   _BFGET_(r32,26,24)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_URT0_TXD(r32,v) _BFSET_(r32,26,24,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_URT0_TXD(r16)   _BFGET_(r16,10, 8)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_URT0_TXD(r16,v) _BFSET_(r16,10, 8,v)

    #define   GET32smSysCtl_smPinMuxCntlBus_SM_URT0_RXD(r32)   _BFGET_(r32,29,27)
    #define   SET32smSysCtl_smPinMuxCntlBus_SM_URT0_RXD(r32,v) _BFSET_(r32,29,27,v)
    #define   GET16smSysCtl_smPinMuxCntlBus_SM_URT0_RXD(r16)   _BFGET_(r16,13,11)
    #define   SET16smSysCtl_smPinMuxCntlBus_SM_URT0_RXD(r16,v) _BFSET_(r16,13,11,v)

    #define     w32smSysCtl_smPinMuxCntlBus1                   {\
            UNSG32 usmPinMuxCntlBus_SM_TW3_SDA                 :  3;\
            UNSG32 usmPinMuxCntlBus_SM_SPI2_SS0n               :  3;\
            UNSG32 usmPinMuxCntlBus_SM_SPI2_SS1n               :  3;\
            UNSG32 usmPinMuxCntlBus_SM_SPI2_SS2n               :  3;\
            UNSG32 usmPinMuxCntlBus_SM_SPI2_SS3n               :  3;\
            UNSG32 usmPinMuxCntlBus_SM_SPI2_SDO                :  3;\
            UNSG32 usmPinMuxCntlBus_SM_SPI2_SDI                :  3;\
            UNSG32 usmPinMuxCntlBus_SM_SPI2_SCLK               :  3;\
            UNSG32 usmPinMuxCntlBus_SM_URT0_TXD                :  3;\
            UNSG32 usmPinMuxCntlBus_SM_URT0_RXD                :  3;\
            UNSG32 RSVDx204_b30                                :  2;\
          }
    union { UNSG32 u32smSysCtl_smPinMuxCntlBus1;
            struct w32smSysCtl_smPinMuxCntlBus1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_RCLKICntl_DS0(r32)              _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_RCLKICntl_DS0(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_RCLKICntl_DS0(r16)              _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_RCLKICntl_DS0(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_RCLKICntl_DS1(r32)              _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_RCLKICntl_DS1(r32,v)            _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_RCLKICntl_DS1(r16)              _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_RCLKICntl_DS1(r16,v)            _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_RCLKICntl_DS2(r32)              _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_RCLKICntl_DS2(r32,v)            _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_RCLKICntl_DS2(r16)              _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_RCLKICntl_DS2(r16,v)            _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_RCLKICntl_DS3(r32)              _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_RCLKICntl_DS3(r32,v)            _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_RCLKICntl_DS3(r16)              _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_RCLKICntl_DS3(r16,v)            _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_RCLKICntl_RD0(r32)              _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_RCLKICntl_RD0(r32,v)            _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_RCLKICntl_RD0(r16)              _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_RCLKICntl_RD0(r16,v)            _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_RCLKICntl_RD1(r32)              _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_RCLKICntl_RD1(r32,v)            _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_RCLKICntl_RD1(r16)              _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_RCLKICntl_RD1(r16,v)            _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_RCLKICntl_REF0(r32)             _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_RCLKICntl_REF0(r32,v)           _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_RCLKICntl_REF0(r16)             _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_RCLKICntl_REF0(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_RCLKICntl_REF1(r32)             _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_RCLKICntl_REF1(r32,v)           _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_RCLKICntl_REF1(r16)             _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_RCLKICntl_REF1(r16,v)           _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_RCLKICntl_XE(r32)               _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_RCLKICntl_XE(r32,v)             _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_RCLKICntl_XE(r16)               _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_RCLKICntl_XE(r16,v)             _BFSET_(r16, 8, 8,v)

    #define     w32smSysCtl_SM_RCLKICntl                       {\
            UNSG32 uSM_RCLKICntl_DS0                           :  1;\
            UNSG32 uSM_RCLKICntl_DS1                           :  1;\
            UNSG32 uSM_RCLKICntl_DS2                           :  1;\
            UNSG32 uSM_RCLKICntl_DS3                           :  1;\
            UNSG32 uSM_RCLKICntl_RD0                           :  1;\
            UNSG32 uSM_RCLKICntl_RD1                           :  1;\
            UNSG32 uSM_RCLKICntl_REF0                          :  1;\
            UNSG32 uSM_RCLKICntl_REF1                          :  1;\
            UNSG32 uSM_RCLKICntl_XE                            :  1;\
            UNSG32 RSVDx208_b9                                 : 23;\
          }
    union { UNSG32 u32smSysCtl_SM_RCLKICntl;
            struct w32smSysCtl_SM_RCLKICntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_TW2_SCLCntl_DS0(r32)            _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_TW2_SCLCntl_DS0(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_TW2_SCLCntl_DS0(r16)            _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_TW2_SCLCntl_DS0(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_TW2_SCLCntl_DS1(r32)            _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_TW2_SCLCntl_DS1(r32,v)          _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_TW2_SCLCntl_DS1(r16)            _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_TW2_SCLCntl_DS1(r16,v)          _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_TW2_SCLCntl_DS2(r32)            _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_TW2_SCLCntl_DS2(r32,v)          _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_TW2_SCLCntl_DS2(r16)            _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_TW2_SCLCntl_DS2(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_TW2_SCLCntl_DS3(r32)            _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_TW2_SCLCntl_DS3(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_TW2_SCLCntl_DS3(r16)            _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_TW2_SCLCntl_DS3(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_TW2_SCLCntl_IE(r32)             _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_TW2_SCLCntl_IE(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_TW2_SCLCntl_IE(r16)             _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_TW2_SCLCntl_IE(r16,v)           _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_TW2_SCLCntl_PE(r32)             _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_TW2_SCLCntl_PE(r32,v)           _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_TW2_SCLCntl_PE(r16)             _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_TW2_SCLCntl_PE(r16,v)           _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_TW2_SCLCntl_PS(r32)             _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_TW2_SCLCntl_PS(r32,v)           _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_TW2_SCLCntl_PS(r16)             _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_TW2_SCLCntl_PS(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_TW2_SCLCntl_SL(r32)             _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_TW2_SCLCntl_SL(r32,v)           _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_TW2_SCLCntl_SL(r16)             _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_TW2_SCLCntl_SL(r16,v)           _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_TW2_SCLCntl_SPU(r32)            _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_TW2_SCLCntl_SPU(r32,v)          _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_TW2_SCLCntl_SPU(r16)            _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_TW2_SCLCntl_SPU(r16,v)          _BFSET_(r16, 8, 8,v)

    #define   GET32smSysCtl_SM_TW2_SCLCntl_ST(r32)             _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_TW2_SCLCntl_ST(r32,v)           _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_TW2_SCLCntl_ST(r16)             _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_TW2_SCLCntl_ST(r16,v)           _BFSET_(r16, 9, 9,v)

    #define     w32smSysCtl_SM_TW2_SCLCntl                     {\
            UNSG32 uSM_TW2_SCLCntl_DS0                         :  1;\
            UNSG32 uSM_TW2_SCLCntl_DS1                         :  1;\
            UNSG32 uSM_TW2_SCLCntl_DS2                         :  1;\
            UNSG32 uSM_TW2_SCLCntl_DS3                         :  1;\
            UNSG32 uSM_TW2_SCLCntl_IE                          :  1;\
            UNSG32 uSM_TW2_SCLCntl_PE                          :  1;\
            UNSG32 uSM_TW2_SCLCntl_PS                          :  1;\
            UNSG32 uSM_TW2_SCLCntl_SL                          :  1;\
            UNSG32 uSM_TW2_SCLCntl_SPU                         :  1;\
            UNSG32 uSM_TW2_SCLCntl_ST                          :  1;\
            UNSG32 RSVDx20C_b10                                : 22;\
          }
    union { UNSG32 u32smSysCtl_SM_TW2_SCLCntl;
            struct w32smSysCtl_SM_TW2_SCLCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_TW2_SDACntl_DS0(r32)            _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_TW2_SDACntl_DS0(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_TW2_SDACntl_DS0(r16)            _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_TW2_SDACntl_DS0(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_TW2_SDACntl_DS1(r32)            _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_TW2_SDACntl_DS1(r32,v)          _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_TW2_SDACntl_DS1(r16)            _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_TW2_SDACntl_DS1(r16,v)          _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_TW2_SDACntl_DS2(r32)            _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_TW2_SDACntl_DS2(r32,v)          _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_TW2_SDACntl_DS2(r16)            _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_TW2_SDACntl_DS2(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_TW2_SDACntl_DS3(r32)            _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_TW2_SDACntl_DS3(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_TW2_SDACntl_DS3(r16)            _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_TW2_SDACntl_DS3(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_TW2_SDACntl_IE(r32)             _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_TW2_SDACntl_IE(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_TW2_SDACntl_IE(r16)             _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_TW2_SDACntl_IE(r16,v)           _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_TW2_SDACntl_PE(r32)             _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_TW2_SDACntl_PE(r32,v)           _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_TW2_SDACntl_PE(r16)             _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_TW2_SDACntl_PE(r16,v)           _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_TW2_SDACntl_PS(r32)             _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_TW2_SDACntl_PS(r32,v)           _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_TW2_SDACntl_PS(r16)             _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_TW2_SDACntl_PS(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_TW2_SDACntl_SL(r32)             _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_TW2_SDACntl_SL(r32,v)           _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_TW2_SDACntl_SL(r16)             _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_TW2_SDACntl_SL(r16,v)           _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_TW2_SDACntl_SPU(r32)            _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_TW2_SDACntl_SPU(r32,v)          _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_TW2_SDACntl_SPU(r16)            _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_TW2_SDACntl_SPU(r16,v)          _BFSET_(r16, 8, 8,v)

    #define   GET32smSysCtl_SM_TW2_SDACntl_ST(r32)             _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_TW2_SDACntl_ST(r32,v)           _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_TW2_SDACntl_ST(r16)             _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_TW2_SDACntl_ST(r16,v)           _BFSET_(r16, 9, 9,v)

    #define     w32smSysCtl_SM_TW2_SDACntl                     {\
            UNSG32 uSM_TW2_SDACntl_DS0                         :  1;\
            UNSG32 uSM_TW2_SDACntl_DS1                         :  1;\
            UNSG32 uSM_TW2_SDACntl_DS2                         :  1;\
            UNSG32 uSM_TW2_SDACntl_DS3                         :  1;\
            UNSG32 uSM_TW2_SDACntl_IE                          :  1;\
            UNSG32 uSM_TW2_SDACntl_PE                          :  1;\
            UNSG32 uSM_TW2_SDACntl_PS                          :  1;\
            UNSG32 uSM_TW2_SDACntl_SL                          :  1;\
            UNSG32 uSM_TW2_SDACntl_SPU                         :  1;\
            UNSG32 uSM_TW2_SDACntl_ST                          :  1;\
            UNSG32 RSVDx210_b10                                : 22;\
          }
    union { UNSG32 u32smSysCtl_SM_TW2_SDACntl;
            struct w32smSysCtl_SM_TW2_SDACntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_URT1_TXDCntl_DS0(r32)           _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_URT1_TXDCntl_DS0(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_URT1_TXDCntl_DS0(r16)           _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_URT1_TXDCntl_DS0(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_URT1_TXDCntl_DS1(r32)           _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_URT1_TXDCntl_DS1(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_URT1_TXDCntl_DS1(r16)           _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_URT1_TXDCntl_DS1(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_URT1_TXDCntl_DS2(r32)           _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_URT1_TXDCntl_DS2(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_URT1_TXDCntl_DS2(r16)           _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_URT1_TXDCntl_DS2(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_URT1_TXDCntl_DS3(r32)           _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_URT1_TXDCntl_DS3(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_URT1_TXDCntl_DS3(r16)           _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_URT1_TXDCntl_DS3(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_URT1_TXDCntl_IE(r32)            _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_URT1_TXDCntl_IE(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_URT1_TXDCntl_IE(r16)            _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_URT1_TXDCntl_IE(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_URT1_TXDCntl_PE(r32)            _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_URT1_TXDCntl_PE(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_URT1_TXDCntl_PE(r16)            _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_URT1_TXDCntl_PE(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_URT1_TXDCntl_PS(r32)            _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_URT1_TXDCntl_PS(r32,v)          _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_URT1_TXDCntl_PS(r16)            _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_URT1_TXDCntl_PS(r16,v)          _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_URT1_TXDCntl_SL(r32)            _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_URT1_TXDCntl_SL(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_URT1_TXDCntl_SL(r16)            _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_URT1_TXDCntl_SL(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_URT1_TXDCntl_SPU(r32)           _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_URT1_TXDCntl_SPU(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_URT1_TXDCntl_SPU(r16)           _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_URT1_TXDCntl_SPU(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32smSysCtl_SM_URT1_TXDCntl_ST(r32)            _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_URT1_TXDCntl_ST(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_URT1_TXDCntl_ST(r16)            _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_URT1_TXDCntl_ST(r16,v)          _BFSET_(r16, 9, 9,v)

    #define     w32smSysCtl_SM_URT1_TXDCntl                    {\
            UNSG32 uSM_URT1_TXDCntl_DS0                        :  1;\
            UNSG32 uSM_URT1_TXDCntl_DS1                        :  1;\
            UNSG32 uSM_URT1_TXDCntl_DS2                        :  1;\
            UNSG32 uSM_URT1_TXDCntl_DS3                        :  1;\
            UNSG32 uSM_URT1_TXDCntl_IE                         :  1;\
            UNSG32 uSM_URT1_TXDCntl_PE                         :  1;\
            UNSG32 uSM_URT1_TXDCntl_PS                         :  1;\
            UNSG32 uSM_URT1_TXDCntl_SL                         :  1;\
            UNSG32 uSM_URT1_TXDCntl_SPU                        :  1;\
            UNSG32 uSM_URT1_TXDCntl_ST                         :  1;\
            UNSG32 RSVDx214_b10                                : 22;\
          }
    union { UNSG32 u32smSysCtl_SM_URT1_TXDCntl;
            struct w32smSysCtl_SM_URT1_TXDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_URT1_RXDCntl_DS0(r32)           _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_URT1_RXDCntl_DS0(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_URT1_RXDCntl_DS0(r16)           _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_URT1_RXDCntl_DS0(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_URT1_RXDCntl_DS1(r32)           _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_URT1_RXDCntl_DS1(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_URT1_RXDCntl_DS1(r16)           _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_URT1_RXDCntl_DS1(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_URT1_RXDCntl_DS2(r32)           _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_URT1_RXDCntl_DS2(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_URT1_RXDCntl_DS2(r16)           _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_URT1_RXDCntl_DS2(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_URT1_RXDCntl_DS3(r32)           _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_URT1_RXDCntl_DS3(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_URT1_RXDCntl_DS3(r16)           _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_URT1_RXDCntl_DS3(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_URT1_RXDCntl_IE(r32)            _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_URT1_RXDCntl_IE(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_URT1_RXDCntl_IE(r16)            _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_URT1_RXDCntl_IE(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_URT1_RXDCntl_PE(r32)            _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_URT1_RXDCntl_PE(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_URT1_RXDCntl_PE(r16)            _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_URT1_RXDCntl_PE(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_URT1_RXDCntl_PS(r32)            _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_URT1_RXDCntl_PS(r32,v)          _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_URT1_RXDCntl_PS(r16)            _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_URT1_RXDCntl_PS(r16,v)          _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_URT1_RXDCntl_SL(r32)            _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_URT1_RXDCntl_SL(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_URT1_RXDCntl_SL(r16)            _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_URT1_RXDCntl_SL(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_URT1_RXDCntl_SPU(r32)           _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_URT1_RXDCntl_SPU(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_URT1_RXDCntl_SPU(r16)           _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_URT1_RXDCntl_SPU(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32smSysCtl_SM_URT1_RXDCntl_ST(r32)            _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_URT1_RXDCntl_ST(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_URT1_RXDCntl_ST(r16)            _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_URT1_RXDCntl_ST(r16,v)          _BFSET_(r16, 9, 9,v)

    #define     w32smSysCtl_SM_URT1_RXDCntl                    {\
            UNSG32 uSM_URT1_RXDCntl_DS0                        :  1;\
            UNSG32 uSM_URT1_RXDCntl_DS1                        :  1;\
            UNSG32 uSM_URT1_RXDCntl_DS2                        :  1;\
            UNSG32 uSM_URT1_RXDCntl_DS3                        :  1;\
            UNSG32 uSM_URT1_RXDCntl_IE                         :  1;\
            UNSG32 uSM_URT1_RXDCntl_PE                         :  1;\
            UNSG32 uSM_URT1_RXDCntl_PS                         :  1;\
            UNSG32 uSM_URT1_RXDCntl_SL                         :  1;\
            UNSG32 uSM_URT1_RXDCntl_SPU                        :  1;\
            UNSG32 uSM_URT1_RXDCntl_ST                         :  1;\
            UNSG32 RSVDx218_b10                                : 22;\
          }
    union { UNSG32 u32smSysCtl_SM_URT1_RXDCntl;
            struct w32smSysCtl_SM_URT1_RXDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_HDMI_TX_HPDCntl_DS0(r32)        _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_HDMI_TX_HPDCntl_DS0(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_HDMI_TX_HPDCntl_DS0(r16)        _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_HDMI_TX_HPDCntl_DS0(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_HDMI_TX_HPDCntl_DS1(r32)        _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_HDMI_TX_HPDCntl_DS1(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_HDMI_TX_HPDCntl_DS1(r16)        _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_HDMI_TX_HPDCntl_DS1(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_HDMI_TX_HPDCntl_DS2(r32)        _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_HDMI_TX_HPDCntl_DS2(r32,v)      _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_HDMI_TX_HPDCntl_DS2(r16)        _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_HDMI_TX_HPDCntl_DS2(r16,v)      _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_HDMI_TX_HPDCntl_DS3(r32)        _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_HDMI_TX_HPDCntl_DS3(r32,v)      _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_HDMI_TX_HPDCntl_DS3(r16)        _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_HDMI_TX_HPDCntl_DS3(r16,v)      _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_HDMI_TX_HPDCntl_IE(r32)         _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_HDMI_TX_HPDCntl_IE(r32,v)       _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_HDMI_TX_HPDCntl_IE(r16)         _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_HDMI_TX_HPDCntl_IE(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_HDMI_TX_HPDCntl_PE(r32)         _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_HDMI_TX_HPDCntl_PE(r32,v)       _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_HDMI_TX_HPDCntl_PE(r16)         _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_HDMI_TX_HPDCntl_PE(r16,v)       _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_HDMI_TX_HPDCntl_PS(r32)         _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_HDMI_TX_HPDCntl_PS(r32,v)       _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_HDMI_TX_HPDCntl_PS(r16)         _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_HDMI_TX_HPDCntl_PS(r16,v)       _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_HDMI_TX_HPDCntl_SL(r32)         _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_HDMI_TX_HPDCntl_SL(r32,v)       _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_HDMI_TX_HPDCntl_SL(r16)         _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_HDMI_TX_HPDCntl_SL(r16,v)       _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_HDMI_TX_HPDCntl_SPU(r32)        _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_HDMI_TX_HPDCntl_SPU(r32,v)      _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_HDMI_TX_HPDCntl_SPU(r16)        _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_HDMI_TX_HPDCntl_SPU(r16,v)      _BFSET_(r16, 8, 8,v)

    #define   GET32smSysCtl_SM_HDMI_TX_HPDCntl_ST(r32)         _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_HDMI_TX_HPDCntl_ST(r32,v)       _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_HDMI_TX_HPDCntl_ST(r16)         _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_HDMI_TX_HPDCntl_ST(r16,v)       _BFSET_(r16, 9, 9,v)

    #define     w32smSysCtl_SM_HDMI_TX_HPDCntl                 {\
            UNSG32 uSM_HDMI_TX_HPDCntl_DS0                     :  1;\
            UNSG32 uSM_HDMI_TX_HPDCntl_DS1                     :  1;\
            UNSG32 uSM_HDMI_TX_HPDCntl_DS2                     :  1;\
            UNSG32 uSM_HDMI_TX_HPDCntl_DS3                     :  1;\
            UNSG32 uSM_HDMI_TX_HPDCntl_IE                      :  1;\
            UNSG32 uSM_HDMI_TX_HPDCntl_PE                      :  1;\
            UNSG32 uSM_HDMI_TX_HPDCntl_PS                      :  1;\
            UNSG32 uSM_HDMI_TX_HPDCntl_SL                      :  1;\
            UNSG32 uSM_HDMI_TX_HPDCntl_SPU                     :  1;\
            UNSG32 uSM_HDMI_TX_HPDCntl_ST                      :  1;\
            UNSG32 RSVDx21C_b10                                : 22;\
          }
    union { UNSG32 u32smSysCtl_SM_HDMI_TX_HPDCntl;
            struct w32smSysCtl_SM_HDMI_TX_HPDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_HDMI_TX_CECCntl_DS0(r32)        _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_HDMI_TX_CECCntl_DS0(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_HDMI_TX_CECCntl_DS0(r16)        _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_HDMI_TX_CECCntl_DS0(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_HDMI_TX_CECCntl_DS1(r32)        _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_HDMI_TX_CECCntl_DS1(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_HDMI_TX_CECCntl_DS1(r16)        _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_HDMI_TX_CECCntl_DS1(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_HDMI_TX_CECCntl_DS2(r32)        _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_HDMI_TX_CECCntl_DS2(r32,v)      _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_HDMI_TX_CECCntl_DS2(r16)        _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_HDMI_TX_CECCntl_DS2(r16,v)      _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_HDMI_TX_CECCntl_DS3(r32)        _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_HDMI_TX_CECCntl_DS3(r32,v)      _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_HDMI_TX_CECCntl_DS3(r16)        _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_HDMI_TX_CECCntl_DS3(r16,v)      _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_HDMI_TX_CECCntl_IE(r32)         _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_HDMI_TX_CECCntl_IE(r32,v)       _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_HDMI_TX_CECCntl_IE(r16)         _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_HDMI_TX_CECCntl_IE(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_HDMI_TX_CECCntl_PE(r32)         _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_HDMI_TX_CECCntl_PE(r32,v)       _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_HDMI_TX_CECCntl_PE(r16)         _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_HDMI_TX_CECCntl_PE(r16,v)       _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_HDMI_TX_CECCntl_PS(r32)         _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_HDMI_TX_CECCntl_PS(r32,v)       _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_HDMI_TX_CECCntl_PS(r16)         _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_HDMI_TX_CECCntl_PS(r16,v)       _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_HDMI_TX_CECCntl_SL(r32)         _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_HDMI_TX_CECCntl_SL(r32,v)       _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_HDMI_TX_CECCntl_SL(r16)         _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_HDMI_TX_CECCntl_SL(r16,v)       _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_HDMI_TX_CECCntl_SPU(r32)        _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_HDMI_TX_CECCntl_SPU(r32,v)      _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_HDMI_TX_CECCntl_SPU(r16)        _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_HDMI_TX_CECCntl_SPU(r16,v)      _BFSET_(r16, 8, 8,v)

    #define   GET32smSysCtl_SM_HDMI_TX_CECCntl_ST(r32)         _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_HDMI_TX_CECCntl_ST(r32,v)       _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_HDMI_TX_CECCntl_ST(r16)         _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_HDMI_TX_CECCntl_ST(r16,v)       _BFSET_(r16, 9, 9,v)

    #define     w32smSysCtl_SM_HDMI_TX_CECCntl                 {\
            UNSG32 uSM_HDMI_TX_CECCntl_DS0                     :  1;\
            UNSG32 uSM_HDMI_TX_CECCntl_DS1                     :  1;\
            UNSG32 uSM_HDMI_TX_CECCntl_DS2                     :  1;\
            UNSG32 uSM_HDMI_TX_CECCntl_DS3                     :  1;\
            UNSG32 uSM_HDMI_TX_CECCntl_IE                      :  1;\
            UNSG32 uSM_HDMI_TX_CECCntl_PE                      :  1;\
            UNSG32 uSM_HDMI_TX_CECCntl_PS                      :  1;\
            UNSG32 uSM_HDMI_TX_CECCntl_SL                      :  1;\
            UNSG32 uSM_HDMI_TX_CECCntl_SPU                     :  1;\
            UNSG32 uSM_HDMI_TX_CECCntl_ST                      :  1;\
            UNSG32 RSVDx220_b10                                : 22;\
          }
    union { UNSG32 u32smSysCtl_SM_HDMI_TX_CECCntl;
            struct w32smSysCtl_SM_HDMI_TX_CECCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_TMSCntl_DS0(r32)                _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_TMSCntl_DS0(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_TMSCntl_DS0(r16)                _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_TMSCntl_DS0(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_TMSCntl_DS1(r32)                _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_TMSCntl_DS1(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_TMSCntl_DS1(r16)                _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_TMSCntl_DS1(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_TMSCntl_DS2(r32)                _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_TMSCntl_DS2(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_TMSCntl_DS2(r16)                _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_TMSCntl_DS2(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_TMSCntl_IE(r32)                 _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_TMSCntl_IE(r32,v)               _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_TMSCntl_IE(r16)                 _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_TMSCntl_IE(r16,v)               _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_TMSCntl_PD(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_TMSCntl_PD(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_TMSCntl_PD(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_TMSCntl_PD(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_TMSCntl_PU(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_TMSCntl_PU(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_TMSCntl_PU(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_TMSCntl_PU(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_TMSCntl_SL(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_TMSCntl_SL(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_TMSCntl_SL(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_TMSCntl_SL(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_TMSCntl_ST(r32)                 _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_TMSCntl_ST(r32,v)               _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_TMSCntl_ST(r16)                 _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_TMSCntl_ST(r16,v)               _BFSET_(r16, 7, 7,v)

    #define     w32smSysCtl_SM_TMSCntl                         {\
            UNSG32 uSM_TMSCntl_DS0                             :  1;\
            UNSG32 uSM_TMSCntl_DS1                             :  1;\
            UNSG32 uSM_TMSCntl_DS2                             :  1;\
            UNSG32 uSM_TMSCntl_IE                              :  1;\
            UNSG32 uSM_TMSCntl_PD                              :  1;\
            UNSG32 uSM_TMSCntl_PU                              :  1;\
            UNSG32 uSM_TMSCntl_SL                              :  1;\
            UNSG32 uSM_TMSCntl_ST                              :  1;\
            UNSG32 RSVDx224_b8                                 : 24;\
          }
    union { UNSG32 u32smSysCtl_SM_TMSCntl;
            struct w32smSysCtl_SM_TMSCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_TDICntl_DS0(r32)                _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_TDICntl_DS0(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_TDICntl_DS0(r16)                _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_TDICntl_DS0(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_TDICntl_DS1(r32)                _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_TDICntl_DS1(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_TDICntl_DS1(r16)                _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_TDICntl_DS1(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_TDICntl_DS2(r32)                _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_TDICntl_DS2(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_TDICntl_DS2(r16)                _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_TDICntl_DS2(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_TDICntl_IE(r32)                 _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_TDICntl_IE(r32,v)               _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_TDICntl_IE(r16)                 _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_TDICntl_IE(r16,v)               _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_TDICntl_PD(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_TDICntl_PD(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_TDICntl_PD(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_TDICntl_PD(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_TDICntl_PU(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_TDICntl_PU(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_TDICntl_PU(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_TDICntl_PU(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_TDICntl_SL(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_TDICntl_SL(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_TDICntl_SL(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_TDICntl_SL(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_TDICntl_ST(r32)                 _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_TDICntl_ST(r32,v)               _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_TDICntl_ST(r16)                 _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_TDICntl_ST(r16,v)               _BFSET_(r16, 7, 7,v)

    #define     w32smSysCtl_SM_TDICntl                         {\
            UNSG32 uSM_TDICntl_DS0                             :  1;\
            UNSG32 uSM_TDICntl_DS1                             :  1;\
            UNSG32 uSM_TDICntl_DS2                             :  1;\
            UNSG32 uSM_TDICntl_IE                              :  1;\
            UNSG32 uSM_TDICntl_PD                              :  1;\
            UNSG32 uSM_TDICntl_PU                              :  1;\
            UNSG32 uSM_TDICntl_SL                              :  1;\
            UNSG32 uSM_TDICntl_ST                              :  1;\
            UNSG32 RSVDx228_b8                                 : 24;\
          }
    union { UNSG32 u32smSysCtl_SM_TDICntl;
            struct w32smSysCtl_SM_TDICntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_TDOCntl_DS0(r32)                _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_TDOCntl_DS0(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_TDOCntl_DS0(r16)                _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_TDOCntl_DS0(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_TDOCntl_DS1(r32)                _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_TDOCntl_DS1(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_TDOCntl_DS1(r16)                _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_TDOCntl_DS1(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_TDOCntl_DS2(r32)                _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_TDOCntl_DS2(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_TDOCntl_DS2(r16)                _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_TDOCntl_DS2(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_TDOCntl_IE(r32)                 _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_TDOCntl_IE(r32,v)               _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_TDOCntl_IE(r16)                 _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_TDOCntl_IE(r16,v)               _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_TDOCntl_PD(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_TDOCntl_PD(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_TDOCntl_PD(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_TDOCntl_PD(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_TDOCntl_PU(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_TDOCntl_PU(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_TDOCntl_PU(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_TDOCntl_PU(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_TDOCntl_SL(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_TDOCntl_SL(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_TDOCntl_SL(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_TDOCntl_SL(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_TDOCntl_ST(r32)                 _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_TDOCntl_ST(r32,v)               _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_TDOCntl_ST(r16)                 _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_TDOCntl_ST(r16,v)               _BFSET_(r16, 7, 7,v)

    #define     w32smSysCtl_SM_TDOCntl                         {\
            UNSG32 uSM_TDOCntl_DS0                             :  1;\
            UNSG32 uSM_TDOCntl_DS1                             :  1;\
            UNSG32 uSM_TDOCntl_DS2                             :  1;\
            UNSG32 uSM_TDOCntl_IE                              :  1;\
            UNSG32 uSM_TDOCntl_PD                              :  1;\
            UNSG32 uSM_TDOCntl_PU                              :  1;\
            UNSG32 uSM_TDOCntl_SL                              :  1;\
            UNSG32 uSM_TDOCntl_ST                              :  1;\
            UNSG32 RSVDx22C_b8                                 : 24;\
          }
    union { UNSG32 u32smSysCtl_SM_TDOCntl;
            struct w32smSysCtl_SM_TDOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_TW3_SCLCntl_DS0(r32)            _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_TW3_SCLCntl_DS0(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_TW3_SCLCntl_DS0(r16)            _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_TW3_SCLCntl_DS0(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_TW3_SCLCntl_DS1(r32)            _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_TW3_SCLCntl_DS1(r32,v)          _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_TW3_SCLCntl_DS1(r16)            _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_TW3_SCLCntl_DS1(r16,v)          _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_TW3_SCLCntl_DS2(r32)            _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_TW3_SCLCntl_DS2(r32,v)          _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_TW3_SCLCntl_DS2(r16)            _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_TW3_SCLCntl_DS2(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_TW3_SCLCntl_DS3(r32)            _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_TW3_SCLCntl_DS3(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_TW3_SCLCntl_DS3(r16)            _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_TW3_SCLCntl_DS3(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_TW3_SCLCntl_IE(r32)             _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_TW3_SCLCntl_IE(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_TW3_SCLCntl_IE(r16)             _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_TW3_SCLCntl_IE(r16,v)           _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_TW3_SCLCntl_PE(r32)             _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_TW3_SCLCntl_PE(r32,v)           _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_TW3_SCLCntl_PE(r16)             _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_TW3_SCLCntl_PE(r16,v)           _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_TW3_SCLCntl_PS(r32)             _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_TW3_SCLCntl_PS(r32,v)           _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_TW3_SCLCntl_PS(r16)             _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_TW3_SCLCntl_PS(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_TW3_SCLCntl_SL(r32)             _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_TW3_SCLCntl_SL(r32,v)           _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_TW3_SCLCntl_SL(r16)             _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_TW3_SCLCntl_SL(r16,v)           _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_TW3_SCLCntl_SPU(r32)            _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_TW3_SCLCntl_SPU(r32,v)          _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_TW3_SCLCntl_SPU(r16)            _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_TW3_SCLCntl_SPU(r16,v)          _BFSET_(r16, 8, 8,v)

    #define   GET32smSysCtl_SM_TW3_SCLCntl_ST(r32)             _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_TW3_SCLCntl_ST(r32,v)           _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_TW3_SCLCntl_ST(r16)             _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_TW3_SCLCntl_ST(r16,v)           _BFSET_(r16, 9, 9,v)

    #define     w32smSysCtl_SM_TW3_SCLCntl                     {\
            UNSG32 uSM_TW3_SCLCntl_DS0                         :  1;\
            UNSG32 uSM_TW3_SCLCntl_DS1                         :  1;\
            UNSG32 uSM_TW3_SCLCntl_DS2                         :  1;\
            UNSG32 uSM_TW3_SCLCntl_DS3                         :  1;\
            UNSG32 uSM_TW3_SCLCntl_IE                          :  1;\
            UNSG32 uSM_TW3_SCLCntl_PE                          :  1;\
            UNSG32 uSM_TW3_SCLCntl_PS                          :  1;\
            UNSG32 uSM_TW3_SCLCntl_SL                          :  1;\
            UNSG32 uSM_TW3_SCLCntl_SPU                         :  1;\
            UNSG32 uSM_TW3_SCLCntl_ST                          :  1;\
            UNSG32 RSVDx230_b10                                : 22;\
          }
    union { UNSG32 u32smSysCtl_SM_TW3_SCLCntl;
            struct w32smSysCtl_SM_TW3_SCLCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_TW3_SDACntl_DS0(r32)            _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_TW3_SDACntl_DS0(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_TW3_SDACntl_DS0(r16)            _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_TW3_SDACntl_DS0(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_TW3_SDACntl_DS1(r32)            _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_TW3_SDACntl_DS1(r32,v)          _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_TW3_SDACntl_DS1(r16)            _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_TW3_SDACntl_DS1(r16,v)          _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_TW3_SDACntl_DS2(r32)            _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_TW3_SDACntl_DS2(r32,v)          _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_TW3_SDACntl_DS2(r16)            _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_TW3_SDACntl_DS2(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_TW3_SDACntl_DS3(r32)            _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_TW3_SDACntl_DS3(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_TW3_SDACntl_DS3(r16)            _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_TW3_SDACntl_DS3(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_TW3_SDACntl_IE(r32)             _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_TW3_SDACntl_IE(r32,v)           _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_TW3_SDACntl_IE(r16)             _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_TW3_SDACntl_IE(r16,v)           _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_TW3_SDACntl_PE(r32)             _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_TW3_SDACntl_PE(r32,v)           _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_TW3_SDACntl_PE(r16)             _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_TW3_SDACntl_PE(r16,v)           _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_TW3_SDACntl_PS(r32)             _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_TW3_SDACntl_PS(r32,v)           _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_TW3_SDACntl_PS(r16)             _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_TW3_SDACntl_PS(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_TW3_SDACntl_SL(r32)             _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_TW3_SDACntl_SL(r32,v)           _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_TW3_SDACntl_SL(r16)             _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_TW3_SDACntl_SL(r16,v)           _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_TW3_SDACntl_SPU(r32)            _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_TW3_SDACntl_SPU(r32,v)          _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_TW3_SDACntl_SPU(r16)            _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_TW3_SDACntl_SPU(r16,v)          _BFSET_(r16, 8, 8,v)

    #define   GET32smSysCtl_SM_TW3_SDACntl_ST(r32)             _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_TW3_SDACntl_ST(r32,v)           _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_TW3_SDACntl_ST(r16)             _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_TW3_SDACntl_ST(r16,v)           _BFSET_(r16, 9, 9,v)

    #define     w32smSysCtl_SM_TW3_SDACntl                     {\
            UNSG32 uSM_TW3_SDACntl_DS0                         :  1;\
            UNSG32 uSM_TW3_SDACntl_DS1                         :  1;\
            UNSG32 uSM_TW3_SDACntl_DS2                         :  1;\
            UNSG32 uSM_TW3_SDACntl_DS3                         :  1;\
            UNSG32 uSM_TW3_SDACntl_IE                          :  1;\
            UNSG32 uSM_TW3_SDACntl_PE                          :  1;\
            UNSG32 uSM_TW3_SDACntl_PS                          :  1;\
            UNSG32 uSM_TW3_SDACntl_SL                          :  1;\
            UNSG32 uSM_TW3_SDACntl_SPU                         :  1;\
            UNSG32 uSM_TW3_SDACntl_ST                          :  1;\
            UNSG32 RSVDx234_b10                                : 22;\
          }
    union { UNSG32 u32smSysCtl_SM_TW3_SDACntl;
            struct w32smSysCtl_SM_TW3_SDACntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_SPI2_SS0nCntl_DS0(r32)          _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_SPI2_SS0nCntl_DS0(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_SPI2_SS0nCntl_DS0(r16)          _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_SPI2_SS0nCntl_DS0(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_SPI2_SS0nCntl_DS1(r32)          _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_SPI2_SS0nCntl_DS1(r32,v)        _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_SPI2_SS0nCntl_DS1(r16)          _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_SPI2_SS0nCntl_DS1(r16,v)        _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_SPI2_SS0nCntl_DS2(r32)          _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_SPI2_SS0nCntl_DS2(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_SPI2_SS0nCntl_DS2(r16)          _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_SPI2_SS0nCntl_DS2(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_SPI2_SS0nCntl_IE(r32)           _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_SPI2_SS0nCntl_IE(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_SPI2_SS0nCntl_IE(r16)           _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_SPI2_SS0nCntl_IE(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_SPI2_SS0nCntl_PD(r32)           _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_SPI2_SS0nCntl_PD(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_SPI2_SS0nCntl_PD(r16)           _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_SPI2_SS0nCntl_PD(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_SPI2_SS0nCntl_PU(r32)           _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_SPI2_SS0nCntl_PU(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_SPI2_SS0nCntl_PU(r16)           _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_SPI2_SS0nCntl_PU(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_SPI2_SS0nCntl_SL(r32)           _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_SPI2_SS0nCntl_SL(r32,v)         _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_SPI2_SS0nCntl_SL(r16)           _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_SPI2_SS0nCntl_SL(r16,v)         _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_SPI2_SS0nCntl_ST(r32)           _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_SPI2_SS0nCntl_ST(r32,v)         _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_SPI2_SS0nCntl_ST(r16)           _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_SPI2_SS0nCntl_ST(r16,v)         _BFSET_(r16, 7, 7,v)

    #define     w32smSysCtl_SM_SPI2_SS0nCntl                   {\
            UNSG32 uSM_SPI2_SS0nCntl_DS0                       :  1;\
            UNSG32 uSM_SPI2_SS0nCntl_DS1                       :  1;\
            UNSG32 uSM_SPI2_SS0nCntl_DS2                       :  1;\
            UNSG32 uSM_SPI2_SS0nCntl_IE                        :  1;\
            UNSG32 uSM_SPI2_SS0nCntl_PD                        :  1;\
            UNSG32 uSM_SPI2_SS0nCntl_PU                        :  1;\
            UNSG32 uSM_SPI2_SS0nCntl_SL                        :  1;\
            UNSG32 uSM_SPI2_SS0nCntl_ST                        :  1;\
            UNSG32 RSVDx238_b8                                 : 24;\
          }
    union { UNSG32 u32smSysCtl_SM_SPI2_SS0nCntl;
            struct w32smSysCtl_SM_SPI2_SS0nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_SPI2_SS1nCntl_DS0(r32)          _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_SPI2_SS1nCntl_DS0(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_SPI2_SS1nCntl_DS0(r16)          _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_SPI2_SS1nCntl_DS0(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_SPI2_SS1nCntl_DS1(r32)          _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_SPI2_SS1nCntl_DS1(r32,v)        _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_SPI2_SS1nCntl_DS1(r16)          _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_SPI2_SS1nCntl_DS1(r16,v)        _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_SPI2_SS1nCntl_DS2(r32)          _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_SPI2_SS1nCntl_DS2(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_SPI2_SS1nCntl_DS2(r16)          _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_SPI2_SS1nCntl_DS2(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_SPI2_SS1nCntl_IE(r32)           _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_SPI2_SS1nCntl_IE(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_SPI2_SS1nCntl_IE(r16)           _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_SPI2_SS1nCntl_IE(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_SPI2_SS1nCntl_PD(r32)           _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_SPI2_SS1nCntl_PD(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_SPI2_SS1nCntl_PD(r16)           _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_SPI2_SS1nCntl_PD(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_SPI2_SS1nCntl_PU(r32)           _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_SPI2_SS1nCntl_PU(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_SPI2_SS1nCntl_PU(r16)           _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_SPI2_SS1nCntl_PU(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_SPI2_SS1nCntl_SL(r32)           _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_SPI2_SS1nCntl_SL(r32,v)         _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_SPI2_SS1nCntl_SL(r16)           _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_SPI2_SS1nCntl_SL(r16,v)         _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_SPI2_SS1nCntl_ST(r32)           _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_SPI2_SS1nCntl_ST(r32,v)         _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_SPI2_SS1nCntl_ST(r16)           _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_SPI2_SS1nCntl_ST(r16,v)         _BFSET_(r16, 7, 7,v)

    #define     w32smSysCtl_SM_SPI2_SS1nCntl                   {\
            UNSG32 uSM_SPI2_SS1nCntl_DS0                       :  1;\
            UNSG32 uSM_SPI2_SS1nCntl_DS1                       :  1;\
            UNSG32 uSM_SPI2_SS1nCntl_DS2                       :  1;\
            UNSG32 uSM_SPI2_SS1nCntl_IE                        :  1;\
            UNSG32 uSM_SPI2_SS1nCntl_PD                        :  1;\
            UNSG32 uSM_SPI2_SS1nCntl_PU                        :  1;\
            UNSG32 uSM_SPI2_SS1nCntl_SL                        :  1;\
            UNSG32 uSM_SPI2_SS1nCntl_ST                        :  1;\
            UNSG32 RSVDx23C_b8                                 : 24;\
          }
    union { UNSG32 u32smSysCtl_SM_SPI2_SS1nCntl;
            struct w32smSysCtl_SM_SPI2_SS1nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_SPI2_SS2nCntl_DS0(r32)          _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_SPI2_SS2nCntl_DS0(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_SPI2_SS2nCntl_DS0(r16)          _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_SPI2_SS2nCntl_DS0(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_SPI2_SS2nCntl_DS1(r32)          _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_SPI2_SS2nCntl_DS1(r32,v)        _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_SPI2_SS2nCntl_DS1(r16)          _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_SPI2_SS2nCntl_DS1(r16,v)        _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_SPI2_SS2nCntl_DS2(r32)          _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_SPI2_SS2nCntl_DS2(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_SPI2_SS2nCntl_DS2(r16)          _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_SPI2_SS2nCntl_DS2(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_SPI2_SS2nCntl_IE(r32)           _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_SPI2_SS2nCntl_IE(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_SPI2_SS2nCntl_IE(r16)           _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_SPI2_SS2nCntl_IE(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_SPI2_SS2nCntl_PD(r32)           _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_SPI2_SS2nCntl_PD(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_SPI2_SS2nCntl_PD(r16)           _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_SPI2_SS2nCntl_PD(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_SPI2_SS2nCntl_PU(r32)           _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_SPI2_SS2nCntl_PU(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_SPI2_SS2nCntl_PU(r16)           _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_SPI2_SS2nCntl_PU(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_SPI2_SS2nCntl_SL(r32)           _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_SPI2_SS2nCntl_SL(r32,v)         _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_SPI2_SS2nCntl_SL(r16)           _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_SPI2_SS2nCntl_SL(r16,v)         _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_SPI2_SS2nCntl_ST(r32)           _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_SPI2_SS2nCntl_ST(r32,v)         _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_SPI2_SS2nCntl_ST(r16)           _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_SPI2_SS2nCntl_ST(r16,v)         _BFSET_(r16, 7, 7,v)

    #define     w32smSysCtl_SM_SPI2_SS2nCntl                   {\
            UNSG32 uSM_SPI2_SS2nCntl_DS0                       :  1;\
            UNSG32 uSM_SPI2_SS2nCntl_DS1                       :  1;\
            UNSG32 uSM_SPI2_SS2nCntl_DS2                       :  1;\
            UNSG32 uSM_SPI2_SS2nCntl_IE                        :  1;\
            UNSG32 uSM_SPI2_SS2nCntl_PD                        :  1;\
            UNSG32 uSM_SPI2_SS2nCntl_PU                        :  1;\
            UNSG32 uSM_SPI2_SS2nCntl_SL                        :  1;\
            UNSG32 uSM_SPI2_SS2nCntl_ST                        :  1;\
            UNSG32 RSVDx240_b8                                 : 24;\
          }
    union { UNSG32 u32smSysCtl_SM_SPI2_SS2nCntl;
            struct w32smSysCtl_SM_SPI2_SS2nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_SPI2_SS3nCntl_DS0(r32)          _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_SPI2_SS3nCntl_DS0(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_SPI2_SS3nCntl_DS0(r16)          _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_SPI2_SS3nCntl_DS0(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_SPI2_SS3nCntl_DS1(r32)          _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_SPI2_SS3nCntl_DS1(r32,v)        _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_SPI2_SS3nCntl_DS1(r16)          _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_SPI2_SS3nCntl_DS1(r16,v)        _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_SPI2_SS3nCntl_DS2(r32)          _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_SPI2_SS3nCntl_DS2(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_SPI2_SS3nCntl_DS2(r16)          _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_SPI2_SS3nCntl_DS2(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_SPI2_SS3nCntl_IE(r32)           _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_SPI2_SS3nCntl_IE(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_SPI2_SS3nCntl_IE(r16)           _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_SPI2_SS3nCntl_IE(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_SPI2_SS3nCntl_PD(r32)           _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_SPI2_SS3nCntl_PD(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_SPI2_SS3nCntl_PD(r16)           _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_SPI2_SS3nCntl_PD(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_SPI2_SS3nCntl_PU(r32)           _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_SPI2_SS3nCntl_PU(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_SPI2_SS3nCntl_PU(r16)           _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_SPI2_SS3nCntl_PU(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_SPI2_SS3nCntl_SL(r32)           _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_SPI2_SS3nCntl_SL(r32,v)         _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_SPI2_SS3nCntl_SL(r16)           _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_SPI2_SS3nCntl_SL(r16,v)         _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_SPI2_SS3nCntl_ST(r32)           _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_SPI2_SS3nCntl_ST(r32,v)         _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_SPI2_SS3nCntl_ST(r16)           _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_SPI2_SS3nCntl_ST(r16,v)         _BFSET_(r16, 7, 7,v)

    #define     w32smSysCtl_SM_SPI2_SS3nCntl                   {\
            UNSG32 uSM_SPI2_SS3nCntl_DS0                       :  1;\
            UNSG32 uSM_SPI2_SS3nCntl_DS1                       :  1;\
            UNSG32 uSM_SPI2_SS3nCntl_DS2                       :  1;\
            UNSG32 uSM_SPI2_SS3nCntl_IE                        :  1;\
            UNSG32 uSM_SPI2_SS3nCntl_PD                        :  1;\
            UNSG32 uSM_SPI2_SS3nCntl_PU                        :  1;\
            UNSG32 uSM_SPI2_SS3nCntl_SL                        :  1;\
            UNSG32 uSM_SPI2_SS3nCntl_ST                        :  1;\
            UNSG32 RSVDx244_b8                                 : 24;\
          }
    union { UNSG32 u32smSysCtl_SM_SPI2_SS3nCntl;
            struct w32smSysCtl_SM_SPI2_SS3nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_SPI2_SDOCntl_DS0(r32)           _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_SPI2_SDOCntl_DS0(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_SPI2_SDOCntl_DS0(r16)           _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_SPI2_SDOCntl_DS0(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_SPI2_SDOCntl_DS1(r32)           _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_SPI2_SDOCntl_DS1(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_SPI2_SDOCntl_DS1(r16)           _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_SPI2_SDOCntl_DS1(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_SPI2_SDOCntl_DS2(r32)           _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_SPI2_SDOCntl_DS2(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_SPI2_SDOCntl_DS2(r16)           _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_SPI2_SDOCntl_DS2(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_SPI2_SDOCntl_IE(r32)            _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_SPI2_SDOCntl_IE(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_SPI2_SDOCntl_IE(r16)            _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_SPI2_SDOCntl_IE(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_SPI2_SDOCntl_PD(r32)            _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_SPI2_SDOCntl_PD(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_SPI2_SDOCntl_PD(r16)            _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_SPI2_SDOCntl_PD(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_SPI2_SDOCntl_PU(r32)            _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_SPI2_SDOCntl_PU(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_SPI2_SDOCntl_PU(r16)            _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_SPI2_SDOCntl_PU(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_SPI2_SDOCntl_SL(r32)            _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_SPI2_SDOCntl_SL(r32,v)          _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_SPI2_SDOCntl_SL(r16)            _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_SPI2_SDOCntl_SL(r16,v)          _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_SPI2_SDOCntl_ST(r32)            _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_SPI2_SDOCntl_ST(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_SPI2_SDOCntl_ST(r16)            _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_SPI2_SDOCntl_ST(r16,v)          _BFSET_(r16, 7, 7,v)

    #define     w32smSysCtl_SM_SPI2_SDOCntl                    {\
            UNSG32 uSM_SPI2_SDOCntl_DS0                        :  1;\
            UNSG32 uSM_SPI2_SDOCntl_DS1                        :  1;\
            UNSG32 uSM_SPI2_SDOCntl_DS2                        :  1;\
            UNSG32 uSM_SPI2_SDOCntl_IE                         :  1;\
            UNSG32 uSM_SPI2_SDOCntl_PD                         :  1;\
            UNSG32 uSM_SPI2_SDOCntl_PU                         :  1;\
            UNSG32 uSM_SPI2_SDOCntl_SL                         :  1;\
            UNSG32 uSM_SPI2_SDOCntl_ST                         :  1;\
            UNSG32 RSVDx248_b8                                 : 24;\
          }
    union { UNSG32 u32smSysCtl_SM_SPI2_SDOCntl;
            struct w32smSysCtl_SM_SPI2_SDOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_SPI2_SDICntl_DS0(r32)           _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_SPI2_SDICntl_DS0(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_SPI2_SDICntl_DS0(r16)           _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_SPI2_SDICntl_DS0(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_SPI2_SDICntl_DS1(r32)           _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_SPI2_SDICntl_DS1(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_SPI2_SDICntl_DS1(r16)           _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_SPI2_SDICntl_DS1(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_SPI2_SDICntl_DS2(r32)           _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_SPI2_SDICntl_DS2(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_SPI2_SDICntl_DS2(r16)           _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_SPI2_SDICntl_DS2(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_SPI2_SDICntl_IE(r32)            _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_SPI2_SDICntl_IE(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_SPI2_SDICntl_IE(r16)            _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_SPI2_SDICntl_IE(r16,v)          _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_SPI2_SDICntl_PD(r32)            _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_SPI2_SDICntl_PD(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_SPI2_SDICntl_PD(r16)            _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_SPI2_SDICntl_PD(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_SPI2_SDICntl_PU(r32)            _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_SPI2_SDICntl_PU(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_SPI2_SDICntl_PU(r16)            _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_SPI2_SDICntl_PU(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_SPI2_SDICntl_SL(r32)            _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_SPI2_SDICntl_SL(r32,v)          _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_SPI2_SDICntl_SL(r16)            _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_SPI2_SDICntl_SL(r16,v)          _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_SPI2_SDICntl_ST(r32)            _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_SPI2_SDICntl_ST(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_SPI2_SDICntl_ST(r16)            _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_SPI2_SDICntl_ST(r16,v)          _BFSET_(r16, 7, 7,v)

    #define     w32smSysCtl_SM_SPI2_SDICntl                    {\
            UNSG32 uSM_SPI2_SDICntl_DS0                        :  1;\
            UNSG32 uSM_SPI2_SDICntl_DS1                        :  1;\
            UNSG32 uSM_SPI2_SDICntl_DS2                        :  1;\
            UNSG32 uSM_SPI2_SDICntl_IE                         :  1;\
            UNSG32 uSM_SPI2_SDICntl_PD                         :  1;\
            UNSG32 uSM_SPI2_SDICntl_PU                         :  1;\
            UNSG32 uSM_SPI2_SDICntl_SL                         :  1;\
            UNSG32 uSM_SPI2_SDICntl_ST                         :  1;\
            UNSG32 RSVDx24C_b8                                 : 24;\
          }
    union { UNSG32 u32smSysCtl_SM_SPI2_SDICntl;
            struct w32smSysCtl_SM_SPI2_SDICntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_SPI2_SCLKCntl_DS0(r32)          _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_SPI2_SCLKCntl_DS0(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_SPI2_SCLKCntl_DS0(r16)          _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_SPI2_SCLKCntl_DS0(r16,v)        _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_SPI2_SCLKCntl_DS1(r32)          _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_SPI2_SCLKCntl_DS1(r32,v)        _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_SPI2_SCLKCntl_DS1(r16)          _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_SPI2_SCLKCntl_DS1(r16,v)        _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_SPI2_SCLKCntl_DS2(r32)          _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_SPI2_SCLKCntl_DS2(r32,v)        _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_SPI2_SCLKCntl_DS2(r16)          _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_SPI2_SCLKCntl_DS2(r16,v)        _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_SPI2_SCLKCntl_IE(r32)           _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_SPI2_SCLKCntl_IE(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_SPI2_SCLKCntl_IE(r16)           _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_SPI2_SCLKCntl_IE(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_SPI2_SCLKCntl_PD(r32)           _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_SPI2_SCLKCntl_PD(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_SPI2_SCLKCntl_PD(r16)           _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_SPI2_SCLKCntl_PD(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_SPI2_SCLKCntl_PU(r32)           _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_SPI2_SCLKCntl_PU(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_SPI2_SCLKCntl_PU(r16)           _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_SPI2_SCLKCntl_PU(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_SPI2_SCLKCntl_SL(r32)           _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_SPI2_SCLKCntl_SL(r32,v)         _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_SPI2_SCLKCntl_SL(r16)           _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_SPI2_SCLKCntl_SL(r16,v)         _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_SPI2_SCLKCntl_ST(r32)           _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_SPI2_SCLKCntl_ST(r32,v)         _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_SPI2_SCLKCntl_ST(r16)           _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_SPI2_SCLKCntl_ST(r16,v)         _BFSET_(r16, 7, 7,v)

    #define     w32smSysCtl_SM_SPI2_SCLKCntl                   {\
            UNSG32 uSM_SPI2_SCLKCntl_DS0                       :  1;\
            UNSG32 uSM_SPI2_SCLKCntl_DS1                       :  1;\
            UNSG32 uSM_SPI2_SCLKCntl_DS2                       :  1;\
            UNSG32 uSM_SPI2_SCLKCntl_IE                        :  1;\
            UNSG32 uSM_SPI2_SCLKCntl_PD                        :  1;\
            UNSG32 uSM_SPI2_SCLKCntl_PU                        :  1;\
            UNSG32 uSM_SPI2_SCLKCntl_SL                        :  1;\
            UNSG32 uSM_SPI2_SCLKCntl_ST                        :  1;\
            UNSG32 RSVDx250_b8                                 : 24;\
          }
    union { UNSG32 u32smSysCtl_SM_SPI2_SCLKCntl;
            struct w32smSysCtl_SM_SPI2_SCLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_URT0_TXDCntl_DS0(r32)           _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_URT0_TXDCntl_DS0(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_URT0_TXDCntl_DS0(r16)           _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_URT0_TXDCntl_DS0(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_URT0_TXDCntl_DS1(r32)           _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_URT0_TXDCntl_DS1(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_URT0_TXDCntl_DS1(r16)           _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_URT0_TXDCntl_DS1(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_URT0_TXDCntl_DS2(r32)           _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_URT0_TXDCntl_DS2(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_URT0_TXDCntl_DS2(r16)           _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_URT0_TXDCntl_DS2(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_URT0_TXDCntl_DS3(r32)           _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_URT0_TXDCntl_DS3(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_URT0_TXDCntl_DS3(r16)           _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_URT0_TXDCntl_DS3(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_URT0_TXDCntl_IE(r32)            _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_URT0_TXDCntl_IE(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_URT0_TXDCntl_IE(r16)            _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_URT0_TXDCntl_IE(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_URT0_TXDCntl_PE(r32)            _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_URT0_TXDCntl_PE(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_URT0_TXDCntl_PE(r16)            _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_URT0_TXDCntl_PE(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_URT0_TXDCntl_PS(r32)            _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_URT0_TXDCntl_PS(r32,v)          _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_URT0_TXDCntl_PS(r16)            _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_URT0_TXDCntl_PS(r16,v)          _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_URT0_TXDCntl_SL(r32)            _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_URT0_TXDCntl_SL(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_URT0_TXDCntl_SL(r16)            _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_URT0_TXDCntl_SL(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_URT0_TXDCntl_SPU(r32)           _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_URT0_TXDCntl_SPU(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_URT0_TXDCntl_SPU(r16)           _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_URT0_TXDCntl_SPU(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32smSysCtl_SM_URT0_TXDCntl_ST(r32)            _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_URT0_TXDCntl_ST(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_URT0_TXDCntl_ST(r16)            _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_URT0_TXDCntl_ST(r16,v)          _BFSET_(r16, 9, 9,v)

    #define     w32smSysCtl_SM_URT0_TXDCntl                    {\
            UNSG32 uSM_URT0_TXDCntl_DS0                        :  1;\
            UNSG32 uSM_URT0_TXDCntl_DS1                        :  1;\
            UNSG32 uSM_URT0_TXDCntl_DS2                        :  1;\
            UNSG32 uSM_URT0_TXDCntl_DS3                        :  1;\
            UNSG32 uSM_URT0_TXDCntl_IE                         :  1;\
            UNSG32 uSM_URT0_TXDCntl_PE                         :  1;\
            UNSG32 uSM_URT0_TXDCntl_PS                         :  1;\
            UNSG32 uSM_URT0_TXDCntl_SL                         :  1;\
            UNSG32 uSM_URT0_TXDCntl_SPU                        :  1;\
            UNSG32 uSM_URT0_TXDCntl_ST                         :  1;\
            UNSG32 RSVDx254_b10                                : 22;\
          }
    union { UNSG32 u32smSysCtl_SM_URT0_TXDCntl;
            struct w32smSysCtl_SM_URT0_TXDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32smSysCtl_SM_URT0_RXDCntl_DS0(r32)           _BFGET_(r32, 0, 0)
    #define   SET32smSysCtl_SM_URT0_RXDCntl_DS0(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16smSysCtl_SM_URT0_RXDCntl_DS0(r16)           _BFGET_(r16, 0, 0)
    #define   SET16smSysCtl_SM_URT0_RXDCntl_DS0(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32smSysCtl_SM_URT0_RXDCntl_DS1(r32)           _BFGET_(r32, 1, 1)
    #define   SET32smSysCtl_SM_URT0_RXDCntl_DS1(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16smSysCtl_SM_URT0_RXDCntl_DS1(r16)           _BFGET_(r16, 1, 1)
    #define   SET16smSysCtl_SM_URT0_RXDCntl_DS1(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32smSysCtl_SM_URT0_RXDCntl_DS2(r32)           _BFGET_(r32, 2, 2)
    #define   SET32smSysCtl_SM_URT0_RXDCntl_DS2(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16smSysCtl_SM_URT0_RXDCntl_DS2(r16)           _BFGET_(r16, 2, 2)
    #define   SET16smSysCtl_SM_URT0_RXDCntl_DS2(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32smSysCtl_SM_URT0_RXDCntl_DS3(r32)           _BFGET_(r32, 3, 3)
    #define   SET32smSysCtl_SM_URT0_RXDCntl_DS3(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16smSysCtl_SM_URT0_RXDCntl_DS3(r16)           _BFGET_(r16, 3, 3)
    #define   SET16smSysCtl_SM_URT0_RXDCntl_DS3(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32smSysCtl_SM_URT0_RXDCntl_IE(r32)            _BFGET_(r32, 4, 4)
    #define   SET32smSysCtl_SM_URT0_RXDCntl_IE(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16smSysCtl_SM_URT0_RXDCntl_IE(r16)            _BFGET_(r16, 4, 4)
    #define   SET16smSysCtl_SM_URT0_RXDCntl_IE(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32smSysCtl_SM_URT0_RXDCntl_PE(r32)            _BFGET_(r32, 5, 5)
    #define   SET32smSysCtl_SM_URT0_RXDCntl_PE(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16smSysCtl_SM_URT0_RXDCntl_PE(r16)            _BFGET_(r16, 5, 5)
    #define   SET16smSysCtl_SM_URT0_RXDCntl_PE(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32smSysCtl_SM_URT0_RXDCntl_PS(r32)            _BFGET_(r32, 6, 6)
    #define   SET32smSysCtl_SM_URT0_RXDCntl_PS(r32,v)          _BFSET_(r32, 6, 6,v)
    #define   GET16smSysCtl_SM_URT0_RXDCntl_PS(r16)            _BFGET_(r16, 6, 6)
    #define   SET16smSysCtl_SM_URT0_RXDCntl_PS(r16,v)          _BFSET_(r16, 6, 6,v)

    #define   GET32smSysCtl_SM_URT0_RXDCntl_SL(r32)            _BFGET_(r32, 7, 7)
    #define   SET32smSysCtl_SM_URT0_RXDCntl_SL(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16smSysCtl_SM_URT0_RXDCntl_SL(r16)            _BFGET_(r16, 7, 7)
    #define   SET16smSysCtl_SM_URT0_RXDCntl_SL(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32smSysCtl_SM_URT0_RXDCntl_SPU(r32)           _BFGET_(r32, 8, 8)
    #define   SET32smSysCtl_SM_URT0_RXDCntl_SPU(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16smSysCtl_SM_URT0_RXDCntl_SPU(r16)           _BFGET_(r16, 8, 8)
    #define   SET16smSysCtl_SM_URT0_RXDCntl_SPU(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32smSysCtl_SM_URT0_RXDCntl_ST(r32)            _BFGET_(r32, 9, 9)
    #define   SET32smSysCtl_SM_URT0_RXDCntl_ST(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16smSysCtl_SM_URT0_RXDCntl_ST(r16)            _BFGET_(r16, 9, 9)
    #define   SET16smSysCtl_SM_URT0_RXDCntl_ST(r16,v)          _BFSET_(r16, 9, 9,v)

    #define     w32smSysCtl_SM_URT0_RXDCntl                    {\
            UNSG32 uSM_URT0_RXDCntl_DS0                        :  1;\
            UNSG32 uSM_URT0_RXDCntl_DS1                        :  1;\
            UNSG32 uSM_URT0_RXDCntl_DS2                        :  1;\
            UNSG32 uSM_URT0_RXDCntl_DS3                        :  1;\
            UNSG32 uSM_URT0_RXDCntl_IE                         :  1;\
            UNSG32 uSM_URT0_RXDCntl_PE                         :  1;\
            UNSG32 uSM_URT0_RXDCntl_PS                         :  1;\
            UNSG32 uSM_URT0_RXDCntl_SL                         :  1;\
            UNSG32 uSM_URT0_RXDCntl_SPU                        :  1;\
            UNSG32 uSM_URT0_RXDCntl_ST                         :  1;\
            UNSG32 RSVDx258_b10                                : 22;\
          }
    union { UNSG32 u32smSysCtl_SM_URT0_RXDCntl;
            struct w32smSysCtl_SM_URT0_RXDCntl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_smSysCtl;

    typedef union  T32smSysCtl_SM_ID
          { UNSG32 u32;
            struct w32smSysCtl_SM_ID;
                 } T32smSysCtl_SM_ID;
    typedef union  T32smSysCtl_SM_CPU_CTRL
          { UNSG32 u32;
            struct w32smSysCtl_SM_CPU_CTRL;
                 } T32smSysCtl_SM_CPU_CTRL;
    typedef union  T32smSysCtl_SM_RST_CTRL
          { UNSG32 u32;
            struct w32smSysCtl_SM_RST_CTRL;
                 } T32smSysCtl_SM_RST_CTRL;
    typedef union  T32smSysCtl_SM_RST_STATUS
          { UNSG32 u32;
            struct w32smSysCtl_SM_RST_STATUS;
                 } T32smSysCtl_SM_RST_STATUS;
    typedef union  T32smSysCtl_SM_STRP_STATUS
          { UNSG32 u32;
            struct w32smSysCtl_SM_STRP_STATUS;
                 } T32smSysCtl_SM_STRP_STATUS;
    typedef union  T32smSysCtl_SM_CTRL
          { UNSG32 u32;
            struct w32smSysCtl_SM_CTRL;
                 } T32smSysCtl_SM_CTRL;
    typedef union  T32smSysCtl_SM_ADC_CTRL
          { UNSG32 u32;
            struct w32smSysCtl_SM_ADC_CTRL;
                 } T32smSysCtl_SM_ADC_CTRL;
    typedef union  T32smSysCtl_SM_ADC_STATUS
          { UNSG32 u32;
            struct w32smSysCtl_SM_ADC_STATUS;
                 } T32smSysCtl_SM_ADC_STATUS;
    typedef union  T32smSysCtl_SM_ADC_DATA
          { UNSG32 u32;
            struct w32smSysCtl_SM_ADC_DATA;
                 } T32smSysCtl_SM_ADC_DATA;
    typedef union  T32smSysCtl_SM_BOOT_STATUS
          { UNSG32 u32;
            struct w32smSysCtl_SM_BOOT_STATUS;
                 } T32smSysCtl_SM_BOOT_STATUS;
    typedef union  T32smSysCtl_SM_WDT_MASK
          { UNSG32 u32;
            struct w32smSysCtl_SM_WDT_MASK;
                 } T32smSysCtl_SM_WDT_MASK;
    typedef union  T32smSysCtl_POR_status
          { UNSG32 u32;
            struct w32smSysCtl_POR_status;
                 } T32smSysCtl_POR_status;
    typedef union  T32smSysCtl_SM_TEST
          { UNSG32 u32;
            struct w32smSysCtl_SM_TEST;
                 } T32smSysCtl_SM_TEST;
    typedef union  T32smSysCtl_SM_TEST_DATA0
          { UNSG32 u32;
            struct w32smSysCtl_SM_TEST_DATA0;
                 } T32smSysCtl_SM_TEST_DATA0;
    typedef union  T32smSysCtl_SM_TEST_DATA1
          { UNSG32 u32;
            struct w32smSysCtl_SM_TEST_DATA1;
                 } T32smSysCtl_SM_TEST_DATA1;
    typedef union  T32smSysCtl_SM_PORT_SEL_CTRL
          { UNSG32 u32;
            struct w32smSysCtl_SM_PORT_SEL_CTRL;
                 } T32smSysCtl_SM_PORT_SEL_CTRL;
    typedef union  T32smSysCtl_SM_DUMMY_REG
          { UNSG32 u32;
            struct w32smSysCtl_SM_DUMMY_REG;
                 } T32smSysCtl_SM_DUMMY_REG;
    typedef union  T32smSysCtl_SM_POR_CTL
          { UNSG32 u32;
            struct w32smSysCtl_SM_POR_CTL;
                 } T32smSysCtl_SM_POR_CTL;
    typedef union  T32smSysCtl_SM_PWR_OK
          { UNSG32 u32;
            struct w32smSysCtl_SM_PWR_OK;
                 } T32smSysCtl_SM_PWR_OK;
    typedef union  T32smSysCtl_smPinMuxCntlBus
          { UNSG32 u32;
            struct w32smSysCtl_smPinMuxCntlBus;
                 } T32smSysCtl_smPinMuxCntlBus;
    typedef union  T32smSysCtl_smPinMuxCntlBus1
          { UNSG32 u32;
            struct w32smSysCtl_smPinMuxCntlBus1;
                 } T32smSysCtl_smPinMuxCntlBus1;
    typedef union  T32smSysCtl_SM_RCLKICntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_RCLKICntl;
                 } T32smSysCtl_SM_RCLKICntl;
    typedef union  T32smSysCtl_SM_TW2_SCLCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_TW2_SCLCntl;
                 } T32smSysCtl_SM_TW2_SCLCntl;
    typedef union  T32smSysCtl_SM_TW2_SDACntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_TW2_SDACntl;
                 } T32smSysCtl_SM_TW2_SDACntl;
    typedef union  T32smSysCtl_SM_URT1_TXDCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_URT1_TXDCntl;
                 } T32smSysCtl_SM_URT1_TXDCntl;
    typedef union  T32smSysCtl_SM_URT1_RXDCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_URT1_RXDCntl;
                 } T32smSysCtl_SM_URT1_RXDCntl;
    typedef union  T32smSysCtl_SM_HDMI_TX_HPDCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_HDMI_TX_HPDCntl;
                 } T32smSysCtl_SM_HDMI_TX_HPDCntl;
    typedef union  T32smSysCtl_SM_HDMI_TX_CECCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_HDMI_TX_CECCntl;
                 } T32smSysCtl_SM_HDMI_TX_CECCntl;
    typedef union  T32smSysCtl_SM_TMSCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_TMSCntl;
                 } T32smSysCtl_SM_TMSCntl;
    typedef union  T32smSysCtl_SM_TDICntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_TDICntl;
                 } T32smSysCtl_SM_TDICntl;
    typedef union  T32smSysCtl_SM_TDOCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_TDOCntl;
                 } T32smSysCtl_SM_TDOCntl;
    typedef union  T32smSysCtl_SM_TW3_SCLCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_TW3_SCLCntl;
                 } T32smSysCtl_SM_TW3_SCLCntl;
    typedef union  T32smSysCtl_SM_TW3_SDACntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_TW3_SDACntl;
                 } T32smSysCtl_SM_TW3_SDACntl;
    typedef union  T32smSysCtl_SM_SPI2_SS0nCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_SPI2_SS0nCntl;
                 } T32smSysCtl_SM_SPI2_SS0nCntl;
    typedef union  T32smSysCtl_SM_SPI2_SS1nCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_SPI2_SS1nCntl;
                 } T32smSysCtl_SM_SPI2_SS1nCntl;
    typedef union  T32smSysCtl_SM_SPI2_SS2nCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_SPI2_SS2nCntl;
                 } T32smSysCtl_SM_SPI2_SS2nCntl;
    typedef union  T32smSysCtl_SM_SPI2_SS3nCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_SPI2_SS3nCntl;
                 } T32smSysCtl_SM_SPI2_SS3nCntl;
    typedef union  T32smSysCtl_SM_SPI2_SDOCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_SPI2_SDOCntl;
                 } T32smSysCtl_SM_SPI2_SDOCntl;
    typedef union  T32smSysCtl_SM_SPI2_SDICntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_SPI2_SDICntl;
                 } T32smSysCtl_SM_SPI2_SDICntl;
    typedef union  T32smSysCtl_SM_SPI2_SCLKCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_SPI2_SCLKCntl;
                 } T32smSysCtl_SM_SPI2_SCLKCntl;
    typedef union  T32smSysCtl_SM_URT0_TXDCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_URT0_TXDCntl;
                 } T32smSysCtl_SM_URT0_TXDCntl;
    typedef union  T32smSysCtl_SM_URT0_RXDCntl
          { UNSG32 u32;
            struct w32smSysCtl_SM_URT0_RXDCntl;
                 } T32smSysCtl_SM_URT0_RXDCntl;
    ///////////////////////////////////////////////////////////

    typedef union  TsmSysCtl_SM_ID
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_ID;
                   };
                 } TsmSysCtl_SM_ID;
    typedef union  TsmSysCtl_SM_CPU_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_CPU_CTRL;
                   };
                 } TsmSysCtl_SM_CPU_CTRL;
    typedef union  TsmSysCtl_SM_RST_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_RST_CTRL;
                   };
                 } TsmSysCtl_SM_RST_CTRL;
    typedef union  TsmSysCtl_SM_RST_STATUS
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_RST_STATUS;
                   };
                 } TsmSysCtl_SM_RST_STATUS;
    typedef union  TsmSysCtl_SM_STRP_STATUS
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_STRP_STATUS;
                   };
                 } TsmSysCtl_SM_STRP_STATUS;
    typedef union  TsmSysCtl_SM_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_CTRL;
                   };
                 } TsmSysCtl_SM_CTRL;
    typedef union  TsmSysCtl_SM_ADC_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_ADC_CTRL;
                   };
                 } TsmSysCtl_SM_ADC_CTRL;
    typedef union  TsmSysCtl_SM_ADC_STATUS
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_ADC_STATUS;
                   };
                 } TsmSysCtl_SM_ADC_STATUS;
    typedef union  TsmSysCtl_SM_ADC_DATA
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_ADC_DATA;
                   };
                 } TsmSysCtl_SM_ADC_DATA;
    typedef union  TsmSysCtl_SM_BOOT_STATUS
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_BOOT_STATUS;
                   };
                 } TsmSysCtl_SM_BOOT_STATUS;
    typedef union  TsmSysCtl_SM_WDT_MASK
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_WDT_MASK;
                   };
                 } TsmSysCtl_SM_WDT_MASK;
    typedef union  TsmSysCtl_POR_status
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_POR_status;
                   };
                 } TsmSysCtl_POR_status;
    typedef union  TsmSysCtl_SM_TEST
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_TEST;
                   };
                 } TsmSysCtl_SM_TEST;
    typedef union  TsmSysCtl_SM_TEST_DATA0
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_TEST_DATA0;
                   };
                 } TsmSysCtl_SM_TEST_DATA0;
    typedef union  TsmSysCtl_SM_TEST_DATA1
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_TEST_DATA1;
                   };
                 } TsmSysCtl_SM_TEST_DATA1;
    typedef union  TsmSysCtl_SM_PORT_SEL_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_PORT_SEL_CTRL;
                   };
                 } TsmSysCtl_SM_PORT_SEL_CTRL;
    typedef union  TsmSysCtl_SM_DUMMY_REG
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_DUMMY_REG;
                   };
                 } TsmSysCtl_SM_DUMMY_REG;
    typedef union  TsmSysCtl_SM_POR_CTL
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_POR_CTL;
                   };
                 } TsmSysCtl_SM_POR_CTL;
    typedef union  TsmSysCtl_SM_PWR_OK
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_PWR_OK;
                   };
                 } TsmSysCtl_SM_PWR_OK;
    typedef union  TsmSysCtl_smPinMuxCntlBus
          { UNSG32 u32[2];
            struct {
            struct w32smSysCtl_smPinMuxCntlBus;
            struct w32smSysCtl_smPinMuxCntlBus1;
                   };
                 } TsmSysCtl_smPinMuxCntlBus;
    typedef union  TsmSysCtl_SM_RCLKICntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_RCLKICntl;
                   };
                 } TsmSysCtl_SM_RCLKICntl;
    typedef union  TsmSysCtl_SM_TW2_SCLCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_TW2_SCLCntl;
                   };
                 } TsmSysCtl_SM_TW2_SCLCntl;
    typedef union  TsmSysCtl_SM_TW2_SDACntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_TW2_SDACntl;
                   };
                 } TsmSysCtl_SM_TW2_SDACntl;
    typedef union  TsmSysCtl_SM_URT1_TXDCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_URT1_TXDCntl;
                   };
                 } TsmSysCtl_SM_URT1_TXDCntl;
    typedef union  TsmSysCtl_SM_URT1_RXDCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_URT1_RXDCntl;
                   };
                 } TsmSysCtl_SM_URT1_RXDCntl;
    typedef union  TsmSysCtl_SM_HDMI_TX_HPDCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_HDMI_TX_HPDCntl;
                   };
                 } TsmSysCtl_SM_HDMI_TX_HPDCntl;
    typedef union  TsmSysCtl_SM_HDMI_TX_CECCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_HDMI_TX_CECCntl;
                   };
                 } TsmSysCtl_SM_HDMI_TX_CECCntl;
    typedef union  TsmSysCtl_SM_TMSCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_TMSCntl;
                   };
                 } TsmSysCtl_SM_TMSCntl;
    typedef union  TsmSysCtl_SM_TDICntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_TDICntl;
                   };
                 } TsmSysCtl_SM_TDICntl;
    typedef union  TsmSysCtl_SM_TDOCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_TDOCntl;
                   };
                 } TsmSysCtl_SM_TDOCntl;
    typedef union  TsmSysCtl_SM_TW3_SCLCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_TW3_SCLCntl;
                   };
                 } TsmSysCtl_SM_TW3_SCLCntl;
    typedef union  TsmSysCtl_SM_TW3_SDACntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_TW3_SDACntl;
                   };
                 } TsmSysCtl_SM_TW3_SDACntl;
    typedef union  TsmSysCtl_SM_SPI2_SS0nCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_SPI2_SS0nCntl;
                   };
                 } TsmSysCtl_SM_SPI2_SS0nCntl;
    typedef union  TsmSysCtl_SM_SPI2_SS1nCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_SPI2_SS1nCntl;
                   };
                 } TsmSysCtl_SM_SPI2_SS1nCntl;
    typedef union  TsmSysCtl_SM_SPI2_SS2nCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_SPI2_SS2nCntl;
                   };
                 } TsmSysCtl_SM_SPI2_SS2nCntl;
    typedef union  TsmSysCtl_SM_SPI2_SS3nCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_SPI2_SS3nCntl;
                   };
                 } TsmSysCtl_SM_SPI2_SS3nCntl;
    typedef union  TsmSysCtl_SM_SPI2_SDOCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_SPI2_SDOCntl;
                   };
                 } TsmSysCtl_SM_SPI2_SDOCntl;
    typedef union  TsmSysCtl_SM_SPI2_SDICntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_SPI2_SDICntl;
                   };
                 } TsmSysCtl_SM_SPI2_SDICntl;
    typedef union  TsmSysCtl_SM_SPI2_SCLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_SPI2_SCLKCntl;
                   };
                 } TsmSysCtl_SM_SPI2_SCLKCntl;
    typedef union  TsmSysCtl_SM_URT0_TXDCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_URT0_TXDCntl;
                   };
                 } TsmSysCtl_SM_URT0_TXDCntl;
    typedef union  TsmSysCtl_SM_URT0_RXDCntl
          { UNSG32 u32[1];
            struct {
            struct w32smSysCtl_SM_URT0_RXDCntl;
                   };
                 } TsmSysCtl_SM_URT0_RXDCntl;

    ///////////////////////////////////////////////////////////
     SIGN32 smSysCtl_drvrd(SIE_smSysCtl *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 smSysCtl_drvwr(SIE_smSysCtl *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void smSysCtl_reset(SIE_smSysCtl *p);
     SIGN32 smSysCtl_cmp  (SIE_smSysCtl *p, SIE_smSysCtl *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define smSysCtl_check(p,pie,pfx,hLOG) smSysCtl_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define smSysCtl_print(p,    pfx,hLOG) smSysCtl_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: smSysCtl
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SM_MEMMAP                                (4,4)
///     # # ----------------------------------------------------------
///               : ITCM_BASE          0x0
///               : ITCM_SIZE          0x18000
///               : ITCM_DEC_BIT       0x11
///               : SSRAM_BASE         0x10000000
///               : SSRAM_SIZE         0x1000
///               : SSRAM_DEC_BIT      0xC
///               : SMAPB_BASE         0x40000000
///               : SMAPB_SIZE         0x10000
///               : SMAPB_DEC_BIT      0x10
///               : CEC_BASE           0x40010000
///               : CEC_SIZE           0x800
///               : CEC_DEC_BIT        0xB
///               : SMREG_BASE         0x40011000
///               : SMREG_SIZE         0x400
///               : SMREG_DEC_BIT      0xA
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       0B, bits:       0b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SM_MEMMAP
#define h_SM_MEMMAP (){}

    #define        SM_MEMMAP_ITCM_BASE                         0x0
    #define        SM_MEMMAP_ITCM_SIZE                         0x18000
    #define        SM_MEMMAP_ITCM_DEC_BIT                      0x11
    #define        SM_MEMMAP_SSRAM_BASE                        0x10000000
    #define        SM_MEMMAP_SSRAM_SIZE                        0x1000
    #define        SM_MEMMAP_SSRAM_DEC_BIT                     0xC
    #define        SM_MEMMAP_SMAPB_BASE                        0x40000000
    #define        SM_MEMMAP_SMAPB_SIZE                        0x10000
    #define        SM_MEMMAP_SMAPB_DEC_BIT                     0x10
    #define        SM_MEMMAP_CEC_BASE                          0x40010000
    #define        SM_MEMMAP_CEC_SIZE                          0x800
    #define        SM_MEMMAP_CEC_DEC_BIT                       0xB
    #define        SM_MEMMAP_SMREG_BASE                        0x40011000
    #define        SM_MEMMAP_SMREG_SIZE                        0x400
    #define        SM_MEMMAP_SMREG_DEC_BIT                     0xA
    ///////////////////////////////////////////////////////////

#endif
//////
/// ENDOFINTERFACE: SM_MEMMAP
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SM_IRQ                                   (4,4)
///     # # ----------------------------------------------------------
///               : WDT_0              0x0
///               : WDT_1              0x1
///               : WDT_2              0x2
///               : RSVD0              0x3
///               : GPIO_1             0x4
///               : SSI                0x5
///               : I2C_0              0x6
///               : I2C_1              0x7
///               : UART_0             0x8
///               : UART_1             0x9
///               : ADC_TEST_FAIL      0xA
///               : GPIO_0             0xB
///               : ADC                0xC
///               : SOC2SMSWInt        0xD
///               : TSEN               0xE
///               : RSVD2              0xF
///               : CEC                0x10
///               : FIFO_Intr_en       0x11
///               : RSVD3              0x12
///               : HPD                0x13
///               : HPD_INV            0x14
///               : Timer0_Intr0       0x15
///               : Timer1_Intr0       0x16
///               : Timer1_Intr1       0x17
///               : Timer1_Intr2       0x18
///               : Timer1_Intr3       0x19
///               : Timer1_Intr4       0x1A
///               : Timer1_Intr5       0x1B
///               : Timer1_Intr6       0x1C
///               : Timer1_Intr7       0x1D
///               : INT_SMI_INT_N      0x1E
///               : INT_SMI_MGP_INT_N  0x1F
///               : INT_SMI_EXMGP_INT_N 0x20
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       0B, bits:       0b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SM_IRQ
#define h_SM_IRQ (){}

    #define        SM_IRQ_WDT_0                                0x0
    #define        SM_IRQ_WDT_1                                0x1
    #define        SM_IRQ_WDT_2                                0x2
    #define        SM_IRQ_RSVD0                                0x3
    #define        SM_IRQ_GPIO_1                               0x4
    #define        SM_IRQ_SSI                                  0x5
    #define        SM_IRQ_I2C_0                                0x6
    #define        SM_IRQ_I2C_1                                0x7
    #define        SM_IRQ_UART_0                               0x8
    #define        SM_IRQ_UART_1                               0x9
    #define        SM_IRQ_ADC_TEST_FAIL                        0xA
    #define        SM_IRQ_GPIO_0                               0xB
    #define        SM_IRQ_ADC                                  0xC
    #define        SM_IRQ_SOC2SMSWInt                          0xD
    #define        SM_IRQ_TSEN                                 0xE
    #define        SM_IRQ_RSVD2                                0xF
    #define        SM_IRQ_CEC                                  0x10
    #define        SM_IRQ_FIFO_Intr_en                         0x11
    #define        SM_IRQ_RSVD3                                0x12
    #define        SM_IRQ_HPD                                  0x13
    #define        SM_IRQ_HPD_INV                              0x14
    #define        SM_IRQ_Timer0_Intr0                         0x15
    #define        SM_IRQ_Timer1_Intr0                         0x16
    #define        SM_IRQ_Timer1_Intr1                         0x17
    #define        SM_IRQ_Timer1_Intr2                         0x18
    #define        SM_IRQ_Timer1_Intr3                         0x19
    #define        SM_IRQ_Timer1_Intr4                         0x1A
    #define        SM_IRQ_Timer1_Intr5                         0x1B
    #define        SM_IRQ_Timer1_Intr6                         0x1C
    #define        SM_IRQ_Timer1_Intr7                         0x1D
    #define        SM_IRQ_INT_SMI_INT_N                        0x1E
    #define        SM_IRQ_INT_SMI_MGP_INT_N                    0x1F
    #define        SM_IRQ_INT_SMI_EXMGP_INT_N                  0x20
    ///////////////////////////////////////////////////////////

#endif
//////
/// ENDOFINTERFACE: SM_IRQ
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SM_APB                                   (4,4)
///     # # ----------------------------------------------------------
///               : ICTL_0             0x0
///               : ICTL_1             0x1000
///               : ICTL_2             0x2000
///               : WDT_0              0x3000
///               : WDT_1              0x4000
///               : WDT_2              0x5000
///               : TIMERS_0           0x6000
///               : TIMERS_1           0x7000
///               : GPIO_0             0x8000
///               : SSI                0xA000
///               : I2C_0              0xB000
///               : I2C_1              0xC000
///               : UART_0             0xD000
///               : UART_1             0xE000
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       0B, bits:       0b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SM_APB
#define h_SM_APB (){}

    #define        SM_APB_ICTL_0                               0x0
    #define        SM_APB_ICTL_1                               0x1000
    #define        SM_APB_ICTL_2                               0x2000
    #define        SM_APB_WDT_0                                0x3000
    #define        SM_APB_WDT_1                                0x4000
    #define        SM_APB_WDT_2                                0x5000
    #define        SM_APB_TIMERS_0                             0x6000
    #define        SM_APB_TIMERS_1                             0x7000
    #define        SM_APB_GPIO_0                               0x8000
    #define        SM_APB_SSI                                  0xA000
    #define        SM_APB_I2C_0                                0xB000
    #define        SM_APB_I2C_1                                0xC000
    #define        SM_APB_UART_0                               0xD000
    #define        SM_APB_UART_1                               0xE000
    ///////////////////////////////////////////////////////////

#endif
//////
/// ENDOFINTERFACE: SM_APB
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SOC_SM_MEMMAP                            (4,4)
///     # # ----------------------------------------------------------
///               : ITCM_BASE          0xF7F80000
///               : ITCM_SIZE          0x18000
///               : ITCM_DEC_BIT       0x11
///               : SMAPB_BASE         0xF7FC0000
///               : SMAPB_SIZE         0x10000
///               : SMAPB_DEC_BIT      0x10
///               : SSRAM_BASE         0xF7FD0000
///               : SSRAM_SIZE         0x1000
///               : SSRAM_DEC_BIT      0xC
///               : CEC_BASE           0xF7FE1000
///               : CEC_SIZE           0x800
///               : CEC_DEC_BIT        0xB
///               : SMREG_BASE         0xF7FE2000
///               : SMREG_SIZE         0x400
///               : SMREG_DEC_BIT      0xA
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       0B, bits:       0b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SOC_SM_MEMMAP
#define h_SOC_SM_MEMMAP (){}

    #define        SOC_SM_MEMMAP_ITCM_BASE                     0xF7F80000
    #define        SOC_SM_MEMMAP_ITCM_SIZE                     0x18000
    #define        SOC_SM_MEMMAP_ITCM_DEC_BIT                  0x11
    #define        SOC_SM_MEMMAP_SMAPB_BASE                    0xF7FC0000
    #define        SOC_SM_MEMMAP_SMAPB_SIZE                    0x10000
    #define        SOC_SM_MEMMAP_SMAPB_DEC_BIT                 0x10
    #define        SOC_SM_MEMMAP_SSRAM_BASE                    0xF7FD0000
    #define        SOC_SM_MEMMAP_SSRAM_SIZE                    0x1000
    #define        SOC_SM_MEMMAP_SSRAM_DEC_BIT                 0xC
    #define        SOC_SM_MEMMAP_CEC_BASE                      0xF7FE1000
    #define        SOC_SM_MEMMAP_CEC_SIZE                      0x800
    #define        SOC_SM_MEMMAP_CEC_DEC_BIT                   0xB
    #define        SOC_SM_MEMMAP_SMREG_BASE                    0xF7FE2000
    #define        SOC_SM_MEMMAP_SMREG_SIZE                    0x400
    #define        SOC_SM_MEMMAP_SMREG_DEC_BIT                 0xA
    ///////////////////////////////////////////////////////////

#endif
//////
/// ENDOFINTERFACE: SOC_SM_MEMMAP
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: SysMgr.h
////////////////////////////////////////////////////////////

