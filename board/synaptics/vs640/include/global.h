//////
/// don't edit! auto-generated by docc: global.h
////////////////////////////////////////////////////////////
#ifndef global_h
#define global_h (){}


#include "ctypes.h"

#pragma pack(1)
#ifdef __cplusplus
  extern "C" {
#endif

#ifndef _DOCC_H_BITOPS_
#define _DOCC_H_BITOPS_ (){}

    #define _bSETMASK_(b)                                      ((b)<32 ? (1<<((b)&31)) : 0)
    #define _NSETMASK_(msb,lsb)                                (_bSETMASK_((msb)+1)-_bSETMASK_(lsb))
    #define _bCLRMASK_(b)                                      (~_bSETMASK_(b))
    #define _NCLRMASK_(msb,lsb)                                (~_NSETMASK_(msb,lsb))
    #define _BFGET_(r,msb,lsb)                                 (_NSETMASK_((msb)-(lsb),0)&((r)>>(lsb)))
    #define _BFSET_(r,msb,lsb,v)                               do{ (r)&=_NCLRMASK_(msb,lsb); (r)|=_NSETMASK_(msb,lsb)&((v)<<(lsb)); }while(0)

#endif



//////
///
/// $INTERFACE abipll                  biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrlA                (P-)
///               ###
///               * PLL Control
///               ###
///               %unsigned 1  RESET                     0x0
///                                    ###
///                                    * PLL Internal Reset Active High
///                                    ###
///               %unsigned 1  BYPASS                    0x0
///                                    ###
///                                    * PLL Bypass Enable Active High
///                                    ###
///               %unsigned 1  NEWDIV                    0x0
///                                    ###
///                                    * Fractional Divide Input Control
///                                    ###
///               %unsigned 3  RANGE                     0x2
///                                    ###
///                                    * PLL Filter Range
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x00004 ctrlB                (P-)
///               %unsigned 4  SSMF                      0x0
///                                    ###
///                                    * Spread Spectrum Modulation Frequency
///                                    ###
///               %unsigned 3  SSMD                      0x0
///                                    ###
///                                    * Spread Spectrum Modulation Depth
///                                    ###
///               %unsigned 1  SSE_RSVD                  0x0
///                                    ###
///                                    * Spread Spectrum Reserve Bit
///                                    ###
///               %unsigned 1  SSE                       0x0
///                                    ###
///                                    * Enables Spread Spectrum Mode Active High
///                                    ###
///               %unsigned 1  SSDS                      0x0
///                                    ###
///                                    * Spread Spectrum Down Spread Center Spread
///                                    ###
///               %%        22         # Stuffing bits...
///     @ 0x00008 ctrlC                (P-)
///               %unsigned 6  DIVR                      0x1
///                                    ###
///                                    * Reference Divider
///                                    ###
///               %%        26         # Stuffing bits...
///     @ 0x0000C ctrlD                (P-)
///               %unsigned 9  DIVFI                     0x1F
///                                    ###
///                                    * Integer Divider
///                                    ###
///               %%        23         # Stuffing bits...
///     @ 0x00010 ctrlE                (P-)
///               %unsigned 24 DIVFF                     0x0
///                                    ###
///                                    * Fractional Divider Control
///                                    ###
///               %%        8          # Stuffing bits...
///     @ 0x00014 ctrlF                (P-)
///               %unsigned 5  DIVQ                      0x1
///                                    ###
///                                    * Output Divider Control for PLLOUT
///                                    ###
///               %%        27         # Stuffing bits...
///     @ 0x00018 ctrlG                (P-)
///               %unsigned 3  DIVQF                     0x3
///                                    ###
///                                    * Output Divider Control for PLLOUTF
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x0001C status               (R-)
///               ###
///               * PLL status register
///               ###
///               %unsigned 1  LOCK
///                                    ###
///                                    * Output. Lock detection
///                                    ###
///               %unsigned 1  DIVACK
///                                    ###
///                                    * Fractional Divide Hand-shake signal
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      32B, bits:      65b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_abipll
#define h_abipll (){}

    #define     RA_abipll_ctrlA                                0x0000

    #define     BA_abipll_ctrlA_RESET                          0x0000
    #define     B16abipll_ctrlA_RESET                          0x0000
    #define   LSb32abipll_ctrlA_RESET                             0
    #define   LSb16abipll_ctrlA_RESET                             0
    #define       babipll_ctrlA_RESET                          1
    #define   MSK32abipll_ctrlA_RESET                             0x00000001

    #define     BA_abipll_ctrlA_BYPASS                         0x0000
    #define     B16abipll_ctrlA_BYPASS                         0x0000
    #define   LSb32abipll_ctrlA_BYPASS                            1
    #define   LSb16abipll_ctrlA_BYPASS                            1
    #define       babipll_ctrlA_BYPASS                         1
    #define   MSK32abipll_ctrlA_BYPASS                            0x00000002

    #define     BA_abipll_ctrlA_NEWDIV                         0x0000
    #define     B16abipll_ctrlA_NEWDIV                         0x0000
    #define   LSb32abipll_ctrlA_NEWDIV                            2
    #define   LSb16abipll_ctrlA_NEWDIV                            2
    #define       babipll_ctrlA_NEWDIV                         1
    #define   MSK32abipll_ctrlA_NEWDIV                            0x00000004

    #define     BA_abipll_ctrlA_RANGE                          0x0000
    #define     B16abipll_ctrlA_RANGE                          0x0000
    #define   LSb32abipll_ctrlA_RANGE                             3
    #define   LSb16abipll_ctrlA_RANGE                             3
    #define       babipll_ctrlA_RANGE                          3
    #define   MSK32abipll_ctrlA_RANGE                             0x00000038
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlB                                0x0004

    #define     BA_abipll_ctrlB_SSMF                           0x0004
    #define     B16abipll_ctrlB_SSMF                           0x0004
    #define   LSb32abipll_ctrlB_SSMF                              0
    #define   LSb16abipll_ctrlB_SSMF                              0
    #define       babipll_ctrlB_SSMF                           4
    #define   MSK32abipll_ctrlB_SSMF                              0x0000000F

    #define     BA_abipll_ctrlB_SSMD                           0x0004
    #define     B16abipll_ctrlB_SSMD                           0x0004
    #define   LSb32abipll_ctrlB_SSMD                              4
    #define   LSb16abipll_ctrlB_SSMD                              4
    #define       babipll_ctrlB_SSMD                           3
    #define   MSK32abipll_ctrlB_SSMD                              0x00000070

    #define     BA_abipll_ctrlB_SSE_RSVD                       0x0004
    #define     B16abipll_ctrlB_SSE_RSVD                       0x0004
    #define   LSb32abipll_ctrlB_SSE_RSVD                          7
    #define   LSb16abipll_ctrlB_SSE_RSVD                          7
    #define       babipll_ctrlB_SSE_RSVD                       1
    #define   MSK32abipll_ctrlB_SSE_RSVD                          0x00000080

    #define     BA_abipll_ctrlB_SSE                            0x0005
    #define     B16abipll_ctrlB_SSE                            0x0004
    #define   LSb32abipll_ctrlB_SSE                               8
    #define   LSb16abipll_ctrlB_SSE                               8
    #define       babipll_ctrlB_SSE                            1
    #define   MSK32abipll_ctrlB_SSE                               0x00000100

    #define     BA_abipll_ctrlB_SSDS                           0x0005
    #define     B16abipll_ctrlB_SSDS                           0x0004
    #define   LSb32abipll_ctrlB_SSDS                              9
    #define   LSb16abipll_ctrlB_SSDS                              9
    #define       babipll_ctrlB_SSDS                           1
    #define   MSK32abipll_ctrlB_SSDS                              0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlC                                0x0008

    #define     BA_abipll_ctrlC_DIVR                           0x0008
    #define     B16abipll_ctrlC_DIVR                           0x0008
    #define   LSb32abipll_ctrlC_DIVR                              0
    #define   LSb16abipll_ctrlC_DIVR                              0
    #define       babipll_ctrlC_DIVR                           6
    #define   MSK32abipll_ctrlC_DIVR                              0x0000003F
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlD                                0x000C

    #define     BA_abipll_ctrlD_DIVFI                          0x000C
    #define     B16abipll_ctrlD_DIVFI                          0x000C
    #define   LSb32abipll_ctrlD_DIVFI                             0
    #define   LSb16abipll_ctrlD_DIVFI                             0
    #define       babipll_ctrlD_DIVFI                          9
    #define   MSK32abipll_ctrlD_DIVFI                             0x000001FF
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlE                                0x0010

    #define     BA_abipll_ctrlE_DIVFF                          0x0010
    #define     B16abipll_ctrlE_DIVFF                          0x0010
    #define   LSb32abipll_ctrlE_DIVFF                             0
    #define   LSb16abipll_ctrlE_DIVFF                             0
    #define       babipll_ctrlE_DIVFF                          24
    #define   MSK32abipll_ctrlE_DIVFF                             0x00FFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlF                                0x0014

    #define     BA_abipll_ctrlF_DIVQ                           0x0014
    #define     B16abipll_ctrlF_DIVQ                           0x0014
    #define   LSb32abipll_ctrlF_DIVQ                              0
    #define   LSb16abipll_ctrlF_DIVQ                              0
    #define       babipll_ctrlF_DIVQ                           5
    #define   MSK32abipll_ctrlF_DIVQ                              0x0000001F
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_ctrlG                                0x0018

    #define     BA_abipll_ctrlG_DIVQF                          0x0018
    #define     B16abipll_ctrlG_DIVQF                          0x0018
    #define   LSb32abipll_ctrlG_DIVQF                             0
    #define   LSb16abipll_ctrlG_DIVQF                             0
    #define       babipll_ctrlG_DIVQF                          3
    #define   MSK32abipll_ctrlG_DIVQF                             0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_abipll_status                               0x001C

    #define     BA_abipll_status_LOCK                          0x001C
    #define     B16abipll_status_LOCK                          0x001C
    #define   LSb32abipll_status_LOCK                             0
    #define   LSb16abipll_status_LOCK                             0
    #define       babipll_status_LOCK                          1
    #define   MSK32abipll_status_LOCK                             0x00000001

    #define     BA_abipll_status_DIVACK                        0x001C
    #define     B16abipll_status_DIVACK                        0x001C
    #define   LSb32abipll_status_DIVACK                           1
    #define   LSb16abipll_status_DIVACK                           1
    #define       babipll_status_DIVACK                        1
    #define   MSK32abipll_status_DIVACK                           0x00000002
    ///////////////////////////////////////////////////////////

    typedef struct SIE_abipll {
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlA_RESET(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32abipll_ctrlA_RESET(r32,v)                   _BFSET_(r32, 0, 0,v)
    #define   GET16abipll_ctrlA_RESET(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16abipll_ctrlA_RESET(r16,v)                   _BFSET_(r16, 0, 0,v)

    #define   GET32abipll_ctrlA_BYPASS(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32abipll_ctrlA_BYPASS(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16abipll_ctrlA_BYPASS(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16abipll_ctrlA_BYPASS(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32abipll_ctrlA_NEWDIV(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32abipll_ctrlA_NEWDIV(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16abipll_ctrlA_NEWDIV(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16abipll_ctrlA_NEWDIV(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32abipll_ctrlA_RANGE(r32)                     _BFGET_(r32, 5, 3)
    #define   SET32abipll_ctrlA_RANGE(r32,v)                   _BFSET_(r32, 5, 3,v)
    #define   GET16abipll_ctrlA_RANGE(r16)                     _BFGET_(r16, 5, 3)
    #define   SET16abipll_ctrlA_RANGE(r16,v)                   _BFSET_(r16, 5, 3,v)

    #define     w32abipll_ctrlA                                {\
            UNSG32 uctrlA_RESET                                :  1;\
            UNSG32 uctrlA_BYPASS                               :  1;\
            UNSG32 uctrlA_NEWDIV                               :  1;\
            UNSG32 uctrlA_RANGE                                :  3;\
            UNSG32 RSVDx0_b6                                   : 26;\
          }
    union { UNSG32 u32abipll_ctrlA;
            struct w32abipll_ctrlA;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlB_SSMF(r32)                      _BFGET_(r32, 3, 0)
    #define   SET32abipll_ctrlB_SSMF(r32,v)                    _BFSET_(r32, 3, 0,v)
    #define   GET16abipll_ctrlB_SSMF(r16)                      _BFGET_(r16, 3, 0)
    #define   SET16abipll_ctrlB_SSMF(r16,v)                    _BFSET_(r16, 3, 0,v)

    #define   GET32abipll_ctrlB_SSMD(r32)                      _BFGET_(r32, 6, 4)
    #define   SET32abipll_ctrlB_SSMD(r32,v)                    _BFSET_(r32, 6, 4,v)
    #define   GET16abipll_ctrlB_SSMD(r16)                      _BFGET_(r16, 6, 4)
    #define   SET16abipll_ctrlB_SSMD(r16,v)                    _BFSET_(r16, 6, 4,v)

    #define   GET32abipll_ctrlB_SSE_RSVD(r32)                  _BFGET_(r32, 7, 7)
    #define   SET32abipll_ctrlB_SSE_RSVD(r32,v)                _BFSET_(r32, 7, 7,v)
    #define   GET16abipll_ctrlB_SSE_RSVD(r16)                  _BFGET_(r16, 7, 7)
    #define   SET16abipll_ctrlB_SSE_RSVD(r16,v)                _BFSET_(r16, 7, 7,v)

    #define   GET32abipll_ctrlB_SSE(r32)                       _BFGET_(r32, 8, 8)
    #define   SET32abipll_ctrlB_SSE(r32,v)                     _BFSET_(r32, 8, 8,v)
    #define   GET16abipll_ctrlB_SSE(r16)                       _BFGET_(r16, 8, 8)
    #define   SET16abipll_ctrlB_SSE(r16,v)                     _BFSET_(r16, 8, 8,v)

    #define   GET32abipll_ctrlB_SSDS(r32)                      _BFGET_(r32, 9, 9)
    #define   SET32abipll_ctrlB_SSDS(r32,v)                    _BFSET_(r32, 9, 9,v)
    #define   GET16abipll_ctrlB_SSDS(r16)                      _BFGET_(r16, 9, 9)
    #define   SET16abipll_ctrlB_SSDS(r16,v)                    _BFSET_(r16, 9, 9,v)

    #define     w32abipll_ctrlB                                {\
            UNSG32 uctrlB_SSMF                                 :  4;\
            UNSG32 uctrlB_SSMD                                 :  3;\
            UNSG32 uctrlB_SSE_RSVD                             :  1;\
            UNSG32 uctrlB_SSE                                  :  1;\
            UNSG32 uctrlB_SSDS                                 :  1;\
            UNSG32 RSVDx4_b10                                  : 22;\
          }
    union { UNSG32 u32abipll_ctrlB;
            struct w32abipll_ctrlB;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlC_DIVR(r32)                      _BFGET_(r32, 5, 0)
    #define   SET32abipll_ctrlC_DIVR(r32,v)                    _BFSET_(r32, 5, 0,v)
    #define   GET16abipll_ctrlC_DIVR(r16)                      _BFGET_(r16, 5, 0)
    #define   SET16abipll_ctrlC_DIVR(r16,v)                    _BFSET_(r16, 5, 0,v)

    #define     w32abipll_ctrlC                                {\
            UNSG32 uctrlC_DIVR                                 :  6;\
            UNSG32 RSVDx8_b6                                   : 26;\
          }
    union { UNSG32 u32abipll_ctrlC;
            struct w32abipll_ctrlC;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlD_DIVFI(r32)                     _BFGET_(r32, 8, 0)
    #define   SET32abipll_ctrlD_DIVFI(r32,v)                   _BFSET_(r32, 8, 0,v)
    #define   GET16abipll_ctrlD_DIVFI(r16)                     _BFGET_(r16, 8, 0)
    #define   SET16abipll_ctrlD_DIVFI(r16,v)                   _BFSET_(r16, 8, 0,v)

    #define     w32abipll_ctrlD                                {\
            UNSG32 uctrlD_DIVFI                                :  9;\
            UNSG32 RSVDxC_b9                                   : 23;\
          }
    union { UNSG32 u32abipll_ctrlD;
            struct w32abipll_ctrlD;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlE_DIVFF(r32)                     _BFGET_(r32,23, 0)
    #define   SET32abipll_ctrlE_DIVFF(r32,v)                   _BFSET_(r32,23, 0,v)

    #define     w32abipll_ctrlE                                {\
            UNSG32 uctrlE_DIVFF                                : 24;\
            UNSG32 RSVDx10_b24                                 :  8;\
          }
    union { UNSG32 u32abipll_ctrlE;
            struct w32abipll_ctrlE;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlF_DIVQ(r32)                      _BFGET_(r32, 4, 0)
    #define   SET32abipll_ctrlF_DIVQ(r32,v)                    _BFSET_(r32, 4, 0,v)
    #define   GET16abipll_ctrlF_DIVQ(r16)                      _BFGET_(r16, 4, 0)
    #define   SET16abipll_ctrlF_DIVQ(r16,v)                    _BFSET_(r16, 4, 0,v)

    #define     w32abipll_ctrlF                                {\
            UNSG32 uctrlF_DIVQ                                 :  5;\
            UNSG32 RSVDx14_b5                                  : 27;\
          }
    union { UNSG32 u32abipll_ctrlF;
            struct w32abipll_ctrlF;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_ctrlG_DIVQF(r32)                     _BFGET_(r32, 2, 0)
    #define   SET32abipll_ctrlG_DIVQF(r32,v)                   _BFSET_(r32, 2, 0,v)
    #define   GET16abipll_ctrlG_DIVQF(r16)                     _BFGET_(r16, 2, 0)
    #define   SET16abipll_ctrlG_DIVQF(r16,v)                   _BFSET_(r16, 2, 0,v)

    #define     w32abipll_ctrlG                                {\
            UNSG32 uctrlG_DIVQF                                :  3;\
            UNSG32 RSVDx18_b3                                  : 29;\
          }
    union { UNSG32 u32abipll_ctrlG;
            struct w32abipll_ctrlG;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32abipll_status_LOCK(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32abipll_status_LOCK(r32,v)                   _BFSET_(r32, 0, 0,v)
    #define   GET16abipll_status_LOCK(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16abipll_status_LOCK(r16,v)                   _BFSET_(r16, 0, 0,v)

    #define   GET32abipll_status_DIVACK(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32abipll_status_DIVACK(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16abipll_status_DIVACK(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16abipll_status_DIVACK(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define     w32abipll_status                               {\
            UNSG32 ustatus_LOCK                                :  1;\
            UNSG32 ustatus_DIVACK                              :  1;\
            UNSG32 RSVDx1C_b2                                  : 30;\
          }
    union { UNSG32 u32abipll_status;
            struct w32abipll_status;
          };
    ///////////////////////////////////////////////////////////
    } SIE_abipll;

    typedef union  T32abipll_ctrlA
          { UNSG32 u32;
            struct w32abipll_ctrlA;
                 } T32abipll_ctrlA;
    typedef union  T32abipll_ctrlB
          { UNSG32 u32;
            struct w32abipll_ctrlB;
                 } T32abipll_ctrlB;
    typedef union  T32abipll_ctrlC
          { UNSG32 u32;
            struct w32abipll_ctrlC;
                 } T32abipll_ctrlC;
    typedef union  T32abipll_ctrlD
          { UNSG32 u32;
            struct w32abipll_ctrlD;
                 } T32abipll_ctrlD;
    typedef union  T32abipll_ctrlE
          { UNSG32 u32;
            struct w32abipll_ctrlE;
                 } T32abipll_ctrlE;
    typedef union  T32abipll_ctrlF
          { UNSG32 u32;
            struct w32abipll_ctrlF;
                 } T32abipll_ctrlF;
    typedef union  T32abipll_ctrlG
          { UNSG32 u32;
            struct w32abipll_ctrlG;
                 } T32abipll_ctrlG;
    typedef union  T32abipll_status
          { UNSG32 u32;
            struct w32abipll_status;
                 } T32abipll_status;
    ///////////////////////////////////////////////////////////

    typedef union  Tabipll_ctrlA
          { UNSG32 u32[1];
            struct {
            struct w32abipll_ctrlA;
                   };
                 } Tabipll_ctrlA;
    typedef union  Tabipll_ctrlB
          { UNSG32 u32[1];
            struct {
            struct w32abipll_ctrlB;
                   };
                 } Tabipll_ctrlB;
    typedef union  Tabipll_ctrlC
          { UNSG32 u32[1];
            struct {
            struct w32abipll_ctrlC;
                   };
                 } Tabipll_ctrlC;
    typedef union  Tabipll_ctrlD
          { UNSG32 u32[1];
            struct {
            struct w32abipll_ctrlD;
                   };
                 } Tabipll_ctrlD;
    typedef union  Tabipll_ctrlE
          { UNSG32 u32[1];
            struct {
            struct w32abipll_ctrlE;
                   };
                 } Tabipll_ctrlE;
    typedef union  Tabipll_ctrlF
          { UNSG32 u32[1];
            struct {
            struct w32abipll_ctrlF;
                   };
                 } Tabipll_ctrlF;
    typedef union  Tabipll_ctrlG
          { UNSG32 u32[1];
            struct {
            struct w32abipll_ctrlG;
                   };
                 } Tabipll_ctrlG;
    typedef union  Tabipll_status
          { UNSG32 u32[1];
            struct {
            struct w32abipll_status;
                   };
                 } Tabipll_status;

    ///////////////////////////////////////////////////////////
     SIGN32 abipll_drvrd(SIE_abipll *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 abipll_drvwr(SIE_abipll *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void abipll_reset(SIE_abipll *p);
     SIGN32 abipll_cmp  (SIE_abipll *p, SIE_abipll *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define abipll_check(p,pie,pfx,hLOG) abipll_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define abipll_print(p,    pfx,hLOG) abipll_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: abipll
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE pwrOff                                   (4,4)
///     ###
///     * Register for the Power domain which is OFF by default
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Power Domain Control Register
///               ###
///               %unsigned 1  iso_eN                    0x0
///                                    : enable                    0x0
///                                    : disable                   0x1
///                                                 ###
///                                                 * Isolation control bit. Active low
///                                                 * 0 : Isolation is enabled
///                                                 * 1 : Isolation is disabled (default)
///                                                 ###
///               %unsigned 2  pwrSwitchCtrl             0x0
///                                    : PWROFF                    0x0
///                                    : PWRON                     0x3
///                                                 ###
///                                                 * Power Switch control
///                                                 * Bit 1 : SLP1B
///                                                 * Bit 0 : SLP2B
///                                                 * SLP1B SLP2B
///                                                 * 0               X               Switch is turned off
///                                                 * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                                 * 1               1               PMOS switch is fully turned on to reduce Ron
///                                                 ###
///               %unsigned 1  pwrDomainRstN             0x0
///                                    : enable                    0x0
///                                    : disable                   0x1
///                                                 ###
///                                                 * Power Domain Reset. Active low.
///                                                 * 0 : Reset the power domain
///                                                 * 1:   De-assert the reset for the power domain
///                                                 ###
///               %%        28         # Stuffing bits...
///     @ 0x00004 status               (R-)
///               %unsigned 2  pwrStatus
///                                    ###
///                                    * Power domain Status output from the power domain module
///                                    * Bit 1 : SLP1B
///                                    * Bit 0 : SLP2B
///                                    * SLP1B SLP2B
///                                    * 0               X               Switch is turned off
///                                    * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                    * 1               1               PMOS switch is fully turned on to reduce Ron
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:       6b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_pwrOff
#define h_pwrOff (){}

    #define     RA_pwrOff_ctrl                                 0x0000

    #define     BA_pwrOff_ctrl_iso_eN                          0x0000
    #define     B16pwrOff_ctrl_iso_eN                          0x0000
    #define   LSb32pwrOff_ctrl_iso_eN                             0
    #define   LSb16pwrOff_ctrl_iso_eN                             0
    #define       bpwrOff_ctrl_iso_eN                          1
    #define   MSK32pwrOff_ctrl_iso_eN                             0x00000001
    #define        pwrOff_ctrl_iso_eN_enable                                0x0
    #define        pwrOff_ctrl_iso_eN_disable                               0x1

    #define     BA_pwrOff_ctrl_pwrSwitchCtrl                   0x0000
    #define     B16pwrOff_ctrl_pwrSwitchCtrl                   0x0000
    #define   LSb32pwrOff_ctrl_pwrSwitchCtrl                      1
    #define   LSb16pwrOff_ctrl_pwrSwitchCtrl                      1
    #define       bpwrOff_ctrl_pwrSwitchCtrl                   2
    #define   MSK32pwrOff_ctrl_pwrSwitchCtrl                      0x00000006
    #define        pwrOff_ctrl_pwrSwitchCtrl_PWROFF                         0x0
    #define        pwrOff_ctrl_pwrSwitchCtrl_PWRON                          0x3

    #define     BA_pwrOff_ctrl_pwrDomainRstN                   0x0000
    #define     B16pwrOff_ctrl_pwrDomainRstN                   0x0000
    #define   LSb32pwrOff_ctrl_pwrDomainRstN                      3
    #define   LSb16pwrOff_ctrl_pwrDomainRstN                      3
    #define       bpwrOff_ctrl_pwrDomainRstN                   1
    #define   MSK32pwrOff_ctrl_pwrDomainRstN                      0x00000008
    #define        pwrOff_ctrl_pwrDomainRstN_enable                         0x0
    #define        pwrOff_ctrl_pwrDomainRstN_disable                        0x1
    ///////////////////////////////////////////////////////////
    #define     RA_pwrOff_status                               0x0004

    #define     BA_pwrOff_status_pwrStatus                     0x0004
    #define     B16pwrOff_status_pwrStatus                     0x0004
    #define   LSb32pwrOff_status_pwrStatus                        0
    #define   LSb16pwrOff_status_pwrStatus                        0
    #define       bpwrOff_status_pwrStatus                     2
    #define   MSK32pwrOff_status_pwrStatus                        0x00000003
    ///////////////////////////////////////////////////////////

    typedef struct SIE_pwrOff {
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOff_ctrl_iso_eN(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32pwrOff_ctrl_iso_eN(r32,v)                   _BFSET_(r32, 0, 0,v)
    #define   GET16pwrOff_ctrl_iso_eN(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16pwrOff_ctrl_iso_eN(r16,v)                   _BFSET_(r16, 0, 0,v)

    #define   GET32pwrOff_ctrl_pwrSwitchCtrl(r32)              _BFGET_(r32, 2, 1)
    #define   SET32pwrOff_ctrl_pwrSwitchCtrl(r32,v)            _BFSET_(r32, 2, 1,v)
    #define   GET16pwrOff_ctrl_pwrSwitchCtrl(r16)              _BFGET_(r16, 2, 1)
    #define   SET16pwrOff_ctrl_pwrSwitchCtrl(r16,v)            _BFSET_(r16, 2, 1,v)

    #define   GET32pwrOff_ctrl_pwrDomainRstN(r32)              _BFGET_(r32, 3, 3)
    #define   SET32pwrOff_ctrl_pwrDomainRstN(r32,v)            _BFSET_(r32, 3, 3,v)
    #define   GET16pwrOff_ctrl_pwrDomainRstN(r16)              _BFGET_(r16, 3, 3)
    #define   SET16pwrOff_ctrl_pwrDomainRstN(r16,v)            _BFSET_(r16, 3, 3,v)

    #define     w32pwrOff_ctrl                                 {\
            UNSG32 uctrl_iso_eN                                :  1;\
            UNSG32 uctrl_pwrSwitchCtrl                         :  2;\
            UNSG32 uctrl_pwrDomainRstN                         :  1;\
            UNSG32 RSVDx0_b4                                   : 28;\
          }
    union { UNSG32 u32pwrOff_ctrl;
            struct w32pwrOff_ctrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOff_status_pwrStatus(r32)                _BFGET_(r32, 1, 0)
    #define   SET32pwrOff_status_pwrStatus(r32,v)              _BFSET_(r32, 1, 0,v)
    #define   GET16pwrOff_status_pwrStatus(r16)                _BFGET_(r16, 1, 0)
    #define   SET16pwrOff_status_pwrStatus(r16,v)              _BFSET_(r16, 1, 0,v)

    #define     w32pwrOff_status                               {\
            UNSG32 ustatus_pwrStatus                           :  2;\
            UNSG32 RSVDx4_b2                                   : 30;\
          }
    union { UNSG32 u32pwrOff_status;
            struct w32pwrOff_status;
          };
    ///////////////////////////////////////////////////////////
    } SIE_pwrOff;

    typedef union  T32pwrOff_ctrl
          { UNSG32 u32;
            struct w32pwrOff_ctrl;
                 } T32pwrOff_ctrl;
    typedef union  T32pwrOff_status
          { UNSG32 u32;
            struct w32pwrOff_status;
                 } T32pwrOff_status;
    ///////////////////////////////////////////////////////////

    typedef union  TpwrOff_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32pwrOff_ctrl;
                   };
                 } TpwrOff_ctrl;
    typedef union  TpwrOff_status
          { UNSG32 u32[1];
            struct {
            struct w32pwrOff_status;
                   };
                 } TpwrOff_status;

    ///////////////////////////////////////////////////////////
     SIGN32 pwrOff_drvrd(SIE_pwrOff *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 pwrOff_drvwr(SIE_pwrOff *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void pwrOff_reset(SIE_pwrOff *p);
     SIGN32 pwrOff_cmp  (SIE_pwrOff *p, SIE_pwrOff *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define pwrOff_check(p,pie,pfx,hLOG) pwrOff_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define pwrOff_print(p,    pfx,hLOG) pwrOff_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: pwrOff
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE pwrOn                                    (4,4)
///     ###
///     * Register for the Power domain which is ON by default
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Power Domain Control Register
///               ###
///               %unsigned 1  iso_eN                    0x1
///                                    : enable                    0x0
///                                    : disable                   0x1
///                                                 ###
///                                                 * Isolation control bit. Active low
///                                                 * 0 : Isolation is enabled
///                                                 * 1 : Isolation is disabled (default)
///                                                 ###
///               %unsigned 2  pwrSwitchCtrl             0x3
///                                    ###
///                                    * Power Switch control
///                                    * Bit 1 : SLP1B
///                                    * Bit 0 : SLP2B
///                                    * SLP1B SLP2B
///                                    * 0               X               Switch is turned off
///                                    * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                    * 1               1               PMOS switch is fully turned on to reduce Ron
///                                    ###
///               %unsigned 1  pwrDomainRstN             0x1
///                                    ###
///                                    * Power Domain Reset. Active low.
///                                    * 0 : Reset the power domain
///                                    * 1:   De-assert the reset for the power domain
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00004 status               (R-)
///               %unsigned 2  pwrStatus
///                                    ###
///                                    * Power domain Status output from the power domain module
///                                    * Bit 1 : SLP1B
///                                    * Bit 0 : SLP2B
///                                    * SLP1B SLP2B
///                                    * 0               X               Switch is turned off
///                                    * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                    * 1               1               PMOS switch is fully turned on to reduce Ron
///                                    ###
///               %%        30         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:       6b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_pwrOn
#define h_pwrOn (){}

    #define     RA_pwrOn_ctrl                                  0x0000

    #define     BA_pwrOn_ctrl_iso_eN                           0x0000
    #define     B16pwrOn_ctrl_iso_eN                           0x0000
    #define   LSb32pwrOn_ctrl_iso_eN                              0
    #define   LSb16pwrOn_ctrl_iso_eN                              0
    #define       bpwrOn_ctrl_iso_eN                           1
    #define   MSK32pwrOn_ctrl_iso_eN                              0x00000001
    #define        pwrOn_ctrl_iso_eN_enable                                 0x0
    #define        pwrOn_ctrl_iso_eN_disable                                0x1

    #define     BA_pwrOn_ctrl_pwrSwitchCtrl                    0x0000
    #define     B16pwrOn_ctrl_pwrSwitchCtrl                    0x0000
    #define   LSb32pwrOn_ctrl_pwrSwitchCtrl                       1
    #define   LSb16pwrOn_ctrl_pwrSwitchCtrl                       1
    #define       bpwrOn_ctrl_pwrSwitchCtrl                    2
    #define   MSK32pwrOn_ctrl_pwrSwitchCtrl                       0x00000006

    #define     BA_pwrOn_ctrl_pwrDomainRstN                    0x0000
    #define     B16pwrOn_ctrl_pwrDomainRstN                    0x0000
    #define   LSb32pwrOn_ctrl_pwrDomainRstN                       3
    #define   LSb16pwrOn_ctrl_pwrDomainRstN                       3
    #define       bpwrOn_ctrl_pwrDomainRstN                    1
    #define   MSK32pwrOn_ctrl_pwrDomainRstN                       0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_pwrOn_status                                0x0004

    #define     BA_pwrOn_status_pwrStatus                      0x0004
    #define     B16pwrOn_status_pwrStatus                      0x0004
    #define   LSb32pwrOn_status_pwrStatus                         0
    #define   LSb16pwrOn_status_pwrStatus                         0
    #define       bpwrOn_status_pwrStatus                      2
    #define   MSK32pwrOn_status_pwrStatus                         0x00000003
    ///////////////////////////////////////////////////////////

    typedef struct SIE_pwrOn {
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOn_ctrl_iso_eN(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32pwrOn_ctrl_iso_eN(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16pwrOn_ctrl_iso_eN(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16pwrOn_ctrl_iso_eN(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define   GET32pwrOn_ctrl_pwrSwitchCtrl(r32)               _BFGET_(r32, 2, 1)
    #define   SET32pwrOn_ctrl_pwrSwitchCtrl(r32,v)             _BFSET_(r32, 2, 1,v)
    #define   GET16pwrOn_ctrl_pwrSwitchCtrl(r16)               _BFGET_(r16, 2, 1)
    #define   SET16pwrOn_ctrl_pwrSwitchCtrl(r16,v)             _BFSET_(r16, 2, 1,v)

    #define   GET32pwrOn_ctrl_pwrDomainRstN(r32)               _BFGET_(r32, 3, 3)
    #define   SET32pwrOn_ctrl_pwrDomainRstN(r32,v)             _BFSET_(r32, 3, 3,v)
    #define   GET16pwrOn_ctrl_pwrDomainRstN(r16)               _BFGET_(r16, 3, 3)
    #define   SET16pwrOn_ctrl_pwrDomainRstN(r16,v)             _BFSET_(r16, 3, 3,v)

    #define     w32pwrOn_ctrl                                  {\
            UNSG32 uctrl_iso_eN                                :  1;\
            UNSG32 uctrl_pwrSwitchCtrl                         :  2;\
            UNSG32 uctrl_pwrDomainRstN                         :  1;\
            UNSG32 RSVDx0_b4                                   : 28;\
          }
    union { UNSG32 u32pwrOn_ctrl;
            struct w32pwrOn_ctrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOn_status_pwrStatus(r32)                 _BFGET_(r32, 1, 0)
    #define   SET32pwrOn_status_pwrStatus(r32,v)               _BFSET_(r32, 1, 0,v)
    #define   GET16pwrOn_status_pwrStatus(r16)                 _BFGET_(r16, 1, 0)
    #define   SET16pwrOn_status_pwrStatus(r16,v)               _BFSET_(r16, 1, 0,v)

    #define     w32pwrOn_status                                {\
            UNSG32 ustatus_pwrStatus                           :  2;\
            UNSG32 RSVDx4_b2                                   : 30;\
          }
    union { UNSG32 u32pwrOn_status;
            struct w32pwrOn_status;
          };
    ///////////////////////////////////////////////////////////
    } SIE_pwrOn;

    typedef union  T32pwrOn_ctrl
          { UNSG32 u32;
            struct w32pwrOn_ctrl;
                 } T32pwrOn_ctrl;
    typedef union  T32pwrOn_status
          { UNSG32 u32;
            struct w32pwrOn_status;
                 } T32pwrOn_status;
    ///////////////////////////////////////////////////////////

    typedef union  TpwrOn_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32pwrOn_ctrl;
                   };
                 } TpwrOn_ctrl;
    typedef union  TpwrOn_status
          { UNSG32 u32[1];
            struct {
            struct w32pwrOn_status;
                   };
                 } TpwrOn_status;

    ///////////////////////////////////////////////////////////
     SIGN32 pwrOn_drvrd(SIE_pwrOn *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 pwrOn_drvwr(SIE_pwrOn *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void pwrOn_reset(SIE_pwrOn *p);
     SIGN32 pwrOn_cmp  (SIE_pwrOn *p, SIE_pwrOn *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define pwrOn_check(p,pie,pfx,hLOG) pwrOn_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define pwrOn_print(p,    pfx,hLOG) pwrOn_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: pwrOn
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE pwrOn_iso                                (4,4)
///     ###
///     * Register for the Power domain which is ON by default
///     ###
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Power Domain Control Register
///               ###
///               %unsigned 1  iso_eN                    0x0
///                                    : enable                    0x0
///                                    : disable                   0x1
///                                                 ###
///                                                 * Isolation control bit. Active low
///                                                 * 0 : Isolation is enabled
///                                                 * 1 : Isolation is disabled (default)
///                                                 ###
///               %unsigned 2  pwrSwitchCtrl             0x3
///                                    ###
///                                    * Power Switch control
///                                    * Bit 1 : SLP1B
///                                    * Bit 0 : SLP2B
///                                    * SLP1B SLP2B
///                                    * 0               X               Switch is turned off
///                                    * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                    * 1               1               PMOS switch is fully turned on to reduce Ron
///                                    ###
///               %unsigned 1  pwrDomainRstN             0x0
///                                    ###
///                                    * Power Domain Reset. Active low.
///                                    * 0 : Reset the power domain
///                                    * 1:   De-assert the reset for the power domain
///                                    ###
///               %%        28         # Stuffing bits...
///     @ 0x00004 status               (R-)
///               %unsigned 2  pwrStatus
///                                    ###
///                                    * Power domain Status output from the power domain module
///                                    * Bit 1 : SLP1B
///                                    * Bit 0 : SLP2B
///                                    * SLP1B SLP2B
///                                    * 0               X               Switch is turned off
///                                    * 1               0               PMOS switch in current mirror configuration. Constant current charging to limit in-rush current
///                                    * 1               1               PMOS switch is fully turned on to reduce Ron
///                                    ###
///               %unsigned 1  IP_IDLE
///                                    ###
///                                    * Indication from IP that it is idle and can be powered down.
///                                    * 1: Idle
///                                    * 0: Busy
///                                    ###
///               %%        29         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       8B, bits:       7b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_pwrOn_iso
#define h_pwrOn_iso (){}

    #define     RA_pwrOn_iso_ctrl                              0x0000

    #define     BA_pwrOn_iso_ctrl_iso_eN                       0x0000
    #define     B16pwrOn_iso_ctrl_iso_eN                       0x0000
    #define   LSb32pwrOn_iso_ctrl_iso_eN                          0
    #define   LSb16pwrOn_iso_ctrl_iso_eN                          0
    #define       bpwrOn_iso_ctrl_iso_eN                       1
    #define   MSK32pwrOn_iso_ctrl_iso_eN                          0x00000001
    #define        pwrOn_iso_ctrl_iso_eN_enable                             0x0
    #define        pwrOn_iso_ctrl_iso_eN_disable                            0x1

    #define     BA_pwrOn_iso_ctrl_pwrSwitchCtrl                0x0000
    #define     B16pwrOn_iso_ctrl_pwrSwitchCtrl                0x0000
    #define   LSb32pwrOn_iso_ctrl_pwrSwitchCtrl                   1
    #define   LSb16pwrOn_iso_ctrl_pwrSwitchCtrl                   1
    #define       bpwrOn_iso_ctrl_pwrSwitchCtrl                2
    #define   MSK32pwrOn_iso_ctrl_pwrSwitchCtrl                   0x00000006

    #define     BA_pwrOn_iso_ctrl_pwrDomainRstN                0x0000
    #define     B16pwrOn_iso_ctrl_pwrDomainRstN                0x0000
    #define   LSb32pwrOn_iso_ctrl_pwrDomainRstN                   3
    #define   LSb16pwrOn_iso_ctrl_pwrDomainRstN                   3
    #define       bpwrOn_iso_ctrl_pwrDomainRstN                1
    #define   MSK32pwrOn_iso_ctrl_pwrDomainRstN                   0x00000008
    ///////////////////////////////////////////////////////////
    #define     RA_pwrOn_iso_status                            0x0004

    #define     BA_pwrOn_iso_status_pwrStatus                  0x0004
    #define     B16pwrOn_iso_status_pwrStatus                  0x0004
    #define   LSb32pwrOn_iso_status_pwrStatus                     0
    #define   LSb16pwrOn_iso_status_pwrStatus                     0
    #define       bpwrOn_iso_status_pwrStatus                  2
    #define   MSK32pwrOn_iso_status_pwrStatus                     0x00000003

    #define     BA_pwrOn_iso_status_IP_IDLE                    0x0004
    #define     B16pwrOn_iso_status_IP_IDLE                    0x0004
    #define   LSb32pwrOn_iso_status_IP_IDLE                       2
    #define   LSb16pwrOn_iso_status_IP_IDLE                       2
    #define       bpwrOn_iso_status_IP_IDLE                    1
    #define   MSK32pwrOn_iso_status_IP_IDLE                       0x00000004
    ///////////////////////////////////////////////////////////

    typedef struct SIE_pwrOn_iso {
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOn_iso_ctrl_iso_eN(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32pwrOn_iso_ctrl_iso_eN(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16pwrOn_iso_ctrl_iso_eN(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16pwrOn_iso_ctrl_iso_eN(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32pwrOn_iso_ctrl_pwrSwitchCtrl(r32)           _BFGET_(r32, 2, 1)
    #define   SET32pwrOn_iso_ctrl_pwrSwitchCtrl(r32,v)         _BFSET_(r32, 2, 1,v)
    #define   GET16pwrOn_iso_ctrl_pwrSwitchCtrl(r16)           _BFGET_(r16, 2, 1)
    #define   SET16pwrOn_iso_ctrl_pwrSwitchCtrl(r16,v)         _BFSET_(r16, 2, 1,v)

    #define   GET32pwrOn_iso_ctrl_pwrDomainRstN(r32)           _BFGET_(r32, 3, 3)
    #define   SET32pwrOn_iso_ctrl_pwrDomainRstN(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16pwrOn_iso_ctrl_pwrDomainRstN(r16)           _BFGET_(r16, 3, 3)
    #define   SET16pwrOn_iso_ctrl_pwrDomainRstN(r16,v)         _BFSET_(r16, 3, 3,v)

    #define     w32pwrOn_iso_ctrl                              {\
            UNSG32 uctrl_iso_eN                                :  1;\
            UNSG32 uctrl_pwrSwitchCtrl                         :  2;\
            UNSG32 uctrl_pwrDomainRstN                         :  1;\
            UNSG32 RSVDx0_b4                                   : 28;\
          }
    union { UNSG32 u32pwrOn_iso_ctrl;
            struct w32pwrOn_iso_ctrl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32pwrOn_iso_status_pwrStatus(r32)             _BFGET_(r32, 1, 0)
    #define   SET32pwrOn_iso_status_pwrStatus(r32,v)           _BFSET_(r32, 1, 0,v)
    #define   GET16pwrOn_iso_status_pwrStatus(r16)             _BFGET_(r16, 1, 0)
    #define   SET16pwrOn_iso_status_pwrStatus(r16,v)           _BFSET_(r16, 1, 0,v)

    #define   GET32pwrOn_iso_status_IP_IDLE(r32)               _BFGET_(r32, 2, 2)
    #define   SET32pwrOn_iso_status_IP_IDLE(r32,v)             _BFSET_(r32, 2, 2,v)
    #define   GET16pwrOn_iso_status_IP_IDLE(r16)               _BFGET_(r16, 2, 2)
    #define   SET16pwrOn_iso_status_IP_IDLE(r16,v)             _BFSET_(r16, 2, 2,v)

    #define     w32pwrOn_iso_status                            {\
            UNSG32 ustatus_pwrStatus                           :  2;\
            UNSG32 ustatus_IP_IDLE                             :  1;\
            UNSG32 RSVDx4_b3                                   : 29;\
          }
    union { UNSG32 u32pwrOn_iso_status;
            struct w32pwrOn_iso_status;
          };
    ///////////////////////////////////////////////////////////
    } SIE_pwrOn_iso;

    typedef union  T32pwrOn_iso_ctrl
          { UNSG32 u32;
            struct w32pwrOn_iso_ctrl;
                 } T32pwrOn_iso_ctrl;
    typedef union  T32pwrOn_iso_status
          { UNSG32 u32;
            struct w32pwrOn_iso_status;
                 } T32pwrOn_iso_status;
    ///////////////////////////////////////////////////////////

    typedef union  TpwrOn_iso_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32pwrOn_iso_ctrl;
                   };
                 } TpwrOn_iso_ctrl;
    typedef union  TpwrOn_iso_status
          { UNSG32 u32[1];
            struct {
            struct w32pwrOn_iso_status;
                   };
                 } TpwrOn_iso_status;

    ///////////////////////////////////////////////////////////
     SIGN32 pwrOn_iso_drvrd(SIE_pwrOn_iso *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 pwrOn_iso_drvwr(SIE_pwrOn_iso *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void pwrOn_iso_reset(SIE_pwrOn_iso *p);
     SIGN32 pwrOn_iso_cmp  (SIE_pwrOn_iso *p, SIE_pwrOn_iso *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define pwrOn_iso_check(p,pie,pfx,hLOG) pwrOn_iso_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define pwrOn_iso_print(p,    pfx,hLOG) pwrOn_iso_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: pwrOn_iso
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SRAMPWR                                  (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  SD                        0x0
///                                    : ON                        0x0
///                                    : SHUTDWN                   0x1
///                                                 ###
///                                                 * Shut down mode achieves highest leakage reduction without data retention
///                                                 ###
///               %unsigned 1  DSLP                      0x0
///                                    : ON                        0x0
///                                    : DEEPSLP                   0x1
///                                                 ###
///                                                 * Deep sleep mode powers down the most of peripheral circuit for leakage reduction and retains memory
///                                                 * array content with lower voltage
///                                                 ###
///               %unsigned 1  SLP                       0x0
///                                    : ON                        0x0
///                                    : SLEEP                     0x1
///                                                 ###
///                                                 * Sleep mode powers down most peripheral circuit for leakage reduction with data retention
///                                                 ###
///               %%        29         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:       3b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SRAMPWR
#define h_SRAMPWR (){}

    #define     RA_SRAMPWR_ctrl                                0x0000

    #define     BA_SRAMPWR_ctrl_SD                             0x0000
    #define     B16SRAMPWR_ctrl_SD                             0x0000
    #define   LSb32SRAMPWR_ctrl_SD                                0
    #define   LSb16SRAMPWR_ctrl_SD                                0
    #define       bSRAMPWR_ctrl_SD                             1
    #define   MSK32SRAMPWR_ctrl_SD                                0x00000001
    #define        SRAMPWR_ctrl_SD_ON                                       0x0
    #define        SRAMPWR_ctrl_SD_SHUTDWN                                  0x1

    #define     BA_SRAMPWR_ctrl_DSLP                           0x0000
    #define     B16SRAMPWR_ctrl_DSLP                           0x0000
    #define   LSb32SRAMPWR_ctrl_DSLP                              1
    #define   LSb16SRAMPWR_ctrl_DSLP                              1
    #define       bSRAMPWR_ctrl_DSLP                           1
    #define   MSK32SRAMPWR_ctrl_DSLP                              0x00000002
    #define        SRAMPWR_ctrl_DSLP_ON                                     0x0
    #define        SRAMPWR_ctrl_DSLP_DEEPSLP                                0x1

    #define     BA_SRAMPWR_ctrl_SLP                            0x0000
    #define     B16SRAMPWR_ctrl_SLP                            0x0000
    #define   LSb32SRAMPWR_ctrl_SLP                               2
    #define   LSb16SRAMPWR_ctrl_SLP                               2
    #define       bSRAMPWR_ctrl_SLP                            1
    #define   MSK32SRAMPWR_ctrl_SLP                               0x00000004
    #define        SRAMPWR_ctrl_SLP_ON                                      0x0
    #define        SRAMPWR_ctrl_SLP_SLEEP                                   0x1
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SRAMPWR {
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMPWR_ctrl_SD(r32)                        _BFGET_(r32, 0, 0)
    #define   SET32SRAMPWR_ctrl_SD(r32,v)                      _BFSET_(r32, 0, 0,v)
    #define   GET16SRAMPWR_ctrl_SD(r16)                        _BFGET_(r16, 0, 0)
    #define   SET16SRAMPWR_ctrl_SD(r16,v)                      _BFSET_(r16, 0, 0,v)

    #define   GET32SRAMPWR_ctrl_DSLP(r32)                      _BFGET_(r32, 1, 1)
    #define   SET32SRAMPWR_ctrl_DSLP(r32,v)                    _BFSET_(r32, 1, 1,v)
    #define   GET16SRAMPWR_ctrl_DSLP(r16)                      _BFGET_(r16, 1, 1)
    #define   SET16SRAMPWR_ctrl_DSLP(r16,v)                    _BFSET_(r16, 1, 1,v)

    #define   GET32SRAMPWR_ctrl_SLP(r32)                       _BFGET_(r32, 2, 2)
    #define   SET32SRAMPWR_ctrl_SLP(r32,v)                     _BFSET_(r32, 2, 2,v)
    #define   GET16SRAMPWR_ctrl_SLP(r16)                       _BFGET_(r16, 2, 2)
    #define   SET16SRAMPWR_ctrl_SLP(r16,v)                     _BFSET_(r16, 2, 2,v)

    #define     w32SRAMPWR_ctrl                                {\
            UNSG32 uctrl_SD                                    :  1;\
            UNSG32 uctrl_DSLP                                  :  1;\
            UNSG32 uctrl_SLP                                   :  1;\
            UNSG32 RSVDx0_b3                                   : 29;\
          }
    union { UNSG32 u32SRAMPWR_ctrl;
            struct w32SRAMPWR_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SRAMPWR;

    typedef union  T32SRAMPWR_ctrl
          { UNSG32 u32;
            struct w32SRAMPWR_ctrl;
                 } T32SRAMPWR_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TSRAMPWR_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32SRAMPWR_ctrl;
                   };
                 } TSRAMPWR_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 SRAMPWR_drvrd(SIE_SRAMPWR *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SRAMPWR_drvwr(SIE_SRAMPWR *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SRAMPWR_reset(SIE_SRAMPWR *p);
     SIGN32 SRAMPWR_cmp  (SIE_SRAMPWR *p, SIE_SRAMPWR *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SRAMPWR_check(p,pie,pfx,hLOG) SRAMPWR_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SRAMPWR_print(p,    pfx,hLOG) SRAMPWR_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SRAMPWR
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SRAMRWTC                                 (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl0                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  RF1P                      0x5
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  UHDRF1P                   0x9
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL[3:2] = 10 (default)
///                                    ###
///               %unsigned 8  RF2P                      0x35
///                                    ###
///                                    * RCT [1:0] = 01 (default)
///                                    * WCT [3:2] = 01 (default)
///                                    * KP[6:4]      = 011 (default)
///                                    * Bit7 not used
///                                    ###
///               %unsigned 8  UHDRF2P                   0x1
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL [3:2] = 00 (default)
///                                    * MTSEL [5:4] = 00 (default)
///                                    * Bit 7 and 8 not used
///                                    ###
///               %unsigned 8  UHDRF2P_ULVT              0x15
///                                    ###
///                                    * RTSEL [1:0] = 01 (default)
///                                    * WTSEL [3:2] = 01 (default)
///                                    * MTSEL [5:4] = 01 (default)
///                                    * Bit 7 and 8 not used
///                                    ###
///     @ 0x00004 ctrl1                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  SHDMBSR1P                 0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHDSBSR1P                 0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SHCMBSR1P_SSEG            0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SHCMBSR1P_USEG            0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHCSBSR1P                 0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 4  SHCSBSR1P_CUSTM           0xD
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 11 (default)
///                                    ###
///               %unsigned 4  SPSRAM_WT0                0x1
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  SPSRAM_WT1                0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///     @ 0x00008 ctrl2                (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 4  L1CACHE                   0x0
///                                    ###
///                                    * MCR[1:0] = 00 (default)
///                                    * MCW[3:2] = 00 (default)
///                                    ###
///               %unsigned 4  DPSR2P                    0x5
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * WTSEL[3:2] = 01 (default)
///                                    ###
///               %unsigned 8  ROM                       0x15
///                                    ###
///                                    * RTSEL[1:0] = 01 (default)
///                                    * PTSEL[3:2] = 01 (default)
///                                    * TRB[5:4]: 01
///                                    * TM[6]: 0
///                                    * Bit 7 not used
///                                    ###
///               %%        16         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      12B, bits:      80b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SRAMRWTC
#define h_SRAMRWTC (){}

    #define     RA_SRAMRWTC_ctrl0                              0x0000

    #define     BA_SRAMRWTC_ctrl0_RF1P                         0x0000
    #define     B16SRAMRWTC_ctrl0_RF1P                         0x0000
    #define   LSb32SRAMRWTC_ctrl0_RF1P                            0
    #define   LSb16SRAMRWTC_ctrl0_RF1P                            0
    #define       bSRAMRWTC_ctrl0_RF1P                         4
    #define   MSK32SRAMRWTC_ctrl0_RF1P                            0x0000000F

    #define     BA_SRAMRWTC_ctrl0_UHDRF1P                      0x0000
    #define     B16SRAMRWTC_ctrl0_UHDRF1P                      0x0000
    #define   LSb32SRAMRWTC_ctrl0_UHDRF1P                         4
    #define   LSb16SRAMRWTC_ctrl0_UHDRF1P                         4
    #define       bSRAMRWTC_ctrl0_UHDRF1P                      4
    #define   MSK32SRAMRWTC_ctrl0_UHDRF1P                         0x000000F0

    #define     BA_SRAMRWTC_ctrl0_RF2P                         0x0001
    #define     B16SRAMRWTC_ctrl0_RF2P                         0x0000
    #define   LSb32SRAMRWTC_ctrl0_RF2P                            8
    #define   LSb16SRAMRWTC_ctrl0_RF2P                            8
    #define       bSRAMRWTC_ctrl0_RF2P                         8
    #define   MSK32SRAMRWTC_ctrl0_RF2P                            0x0000FF00

    #define     BA_SRAMRWTC_ctrl0_UHDRF2P                      0x0002
    #define     B16SRAMRWTC_ctrl0_UHDRF2P                      0x0002
    #define   LSb32SRAMRWTC_ctrl0_UHDRF2P                         16
    #define   LSb16SRAMRWTC_ctrl0_UHDRF2P                         0
    #define       bSRAMRWTC_ctrl0_UHDRF2P                      8
    #define   MSK32SRAMRWTC_ctrl0_UHDRF2P                         0x00FF0000

    #define     BA_SRAMRWTC_ctrl0_UHDRF2P_ULVT                 0x0003
    #define     B16SRAMRWTC_ctrl0_UHDRF2P_ULVT                 0x0002
    #define   LSb32SRAMRWTC_ctrl0_UHDRF2P_ULVT                    24
    #define   LSb16SRAMRWTC_ctrl0_UHDRF2P_ULVT                    8
    #define       bSRAMRWTC_ctrl0_UHDRF2P_ULVT                 8
    #define   MSK32SRAMRWTC_ctrl0_UHDRF2P_ULVT                    0xFF000000
    ///////////////////////////////////////////////////////////
    #define     RA_SRAMRWTC_ctrl1                              0x0004

    #define     BA_SRAMRWTC_ctrl1_SHDMBSR1P                    0x0004
    #define     B16SRAMRWTC_ctrl1_SHDMBSR1P                    0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHDMBSR1P                       0
    #define   LSb16SRAMRWTC_ctrl1_SHDMBSR1P                       0
    #define       bSRAMRWTC_ctrl1_SHDMBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHDMBSR1P                       0x0000000F

    #define     BA_SRAMRWTC_ctrl1_SHDSBSR1P                    0x0004
    #define     B16SRAMRWTC_ctrl1_SHDSBSR1P                    0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHDSBSR1P                       4
    #define   LSb16SRAMRWTC_ctrl1_SHDSBSR1P                       4
    #define       bSRAMRWTC_ctrl1_SHDSBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHDSBSR1P                       0x000000F0

    #define     BA_SRAMRWTC_ctrl1_SHCMBSR1P_SSEG               0x0005
    #define     B16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG               0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  8
    #define   LSb16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  8
    #define       bSRAMRWTC_ctrl1_SHCMBSR1P_SSEG               4
    #define   MSK32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG                  0x00000F00

    #define     BA_SRAMRWTC_ctrl1_SHCMBSR1P_USEG               0x0005
    #define     B16SRAMRWTC_ctrl1_SHCMBSR1P_USEG               0x0004
    #define   LSb32SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  12
    #define   LSb16SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  12
    #define       bSRAMRWTC_ctrl1_SHCMBSR1P_USEG               4
    #define   MSK32SRAMRWTC_ctrl1_SHCMBSR1P_USEG                  0x0000F000

    #define     BA_SRAMRWTC_ctrl1_SHCSBSR1P                    0x0006
    #define     B16SRAMRWTC_ctrl1_SHCSBSR1P                    0x0006
    #define   LSb32SRAMRWTC_ctrl1_SHCSBSR1P                       16
    #define   LSb16SRAMRWTC_ctrl1_SHCSBSR1P                       0
    #define       bSRAMRWTC_ctrl1_SHCSBSR1P                    4
    #define   MSK32SRAMRWTC_ctrl1_SHCSBSR1P                       0x000F0000

    #define     BA_SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              0x0006
    #define     B16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              0x0006
    #define   LSb32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 20
    #define   LSb16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 4
    #define       bSRAMRWTC_ctrl1_SHCSBSR1P_CUSTM              4
    #define   MSK32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM                 0x00F00000

    #define     BA_SRAMRWTC_ctrl1_SPSRAM_WT0                   0x0007
    #define     B16SRAMRWTC_ctrl1_SPSRAM_WT0                   0x0006
    #define   LSb32SRAMRWTC_ctrl1_SPSRAM_WT0                      24
    #define   LSb16SRAMRWTC_ctrl1_SPSRAM_WT0                      8
    #define       bSRAMRWTC_ctrl1_SPSRAM_WT0                   4
    #define   MSK32SRAMRWTC_ctrl1_SPSRAM_WT0                      0x0F000000

    #define     BA_SRAMRWTC_ctrl1_SPSRAM_WT1                   0x0007
    #define     B16SRAMRWTC_ctrl1_SPSRAM_WT1                   0x0006
    #define   LSb32SRAMRWTC_ctrl1_SPSRAM_WT1                      28
    #define   LSb16SRAMRWTC_ctrl1_SPSRAM_WT1                      12
    #define       bSRAMRWTC_ctrl1_SPSRAM_WT1                   4
    #define   MSK32SRAMRWTC_ctrl1_SPSRAM_WT1                      0xF0000000
    ///////////////////////////////////////////////////////////
    #define     RA_SRAMRWTC_ctrl2                              0x0008

    #define     BA_SRAMRWTC_ctrl2_L1CACHE                      0x0008
    #define     B16SRAMRWTC_ctrl2_L1CACHE                      0x0008
    #define   LSb32SRAMRWTC_ctrl2_L1CACHE                         0
    #define   LSb16SRAMRWTC_ctrl2_L1CACHE                         0
    #define       bSRAMRWTC_ctrl2_L1CACHE                      4
    #define   MSK32SRAMRWTC_ctrl2_L1CACHE                         0x0000000F

    #define     BA_SRAMRWTC_ctrl2_DPSR2P                       0x0008
    #define     B16SRAMRWTC_ctrl2_DPSR2P                       0x0008
    #define   LSb32SRAMRWTC_ctrl2_DPSR2P                          4
    #define   LSb16SRAMRWTC_ctrl2_DPSR2P                          4
    #define       bSRAMRWTC_ctrl2_DPSR2P                       4
    #define   MSK32SRAMRWTC_ctrl2_DPSR2P                          0x000000F0

    #define     BA_SRAMRWTC_ctrl2_ROM                          0x0009
    #define     B16SRAMRWTC_ctrl2_ROM                          0x0008
    #define   LSb32SRAMRWTC_ctrl2_ROM                             8
    #define   LSb16SRAMRWTC_ctrl2_ROM                             8
    #define       bSRAMRWTC_ctrl2_ROM                          8
    #define   MSK32SRAMRWTC_ctrl2_ROM                             0x0000FF00
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SRAMRWTC {
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl0_RF1P(r32)                    _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl0_RF1P(r32,v)                  _BFSET_(r32, 3, 0,v)
    #define   GET16SRAMRWTC_ctrl0_RF1P(r16)                    _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl0_RF1P(r16,v)                  _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF1P(r32)                 _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl0_UHDRF1P(r32,v)               _BFSET_(r32, 7, 4,v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF1P(r16)                 _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl0_UHDRF1P(r16,v)               _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl0_RF2P(r32)                    _BFGET_(r32,15, 8)
    #define   SET32SRAMRWTC_ctrl0_RF2P(r32,v)                  _BFSET_(r32,15, 8,v)
    #define   GET16SRAMRWTC_ctrl0_RF2P(r16)                    _BFGET_(r16,15, 8)
    #define   SET16SRAMRWTC_ctrl0_RF2P(r16,v)                  _BFSET_(r16,15, 8,v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF2P(r32)                 _BFGET_(r32,23,16)
    #define   SET32SRAMRWTC_ctrl0_UHDRF2P(r32,v)               _BFSET_(r32,23,16,v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF2P(r16)                 _BFGET_(r16, 7, 0)
    #define   SET16SRAMRWTC_ctrl0_UHDRF2P(r16,v)               _BFSET_(r16, 7, 0,v)

    #define   GET32SRAMRWTC_ctrl0_UHDRF2P_ULVT(r32)            _BFGET_(r32,31,24)
    #define   SET32SRAMRWTC_ctrl0_UHDRF2P_ULVT(r32,v)          _BFSET_(r32,31,24,v)
    #define   GET16SRAMRWTC_ctrl0_UHDRF2P_ULVT(r16)            _BFGET_(r16,15, 8)
    #define   SET16SRAMRWTC_ctrl0_UHDRF2P_ULVT(r16,v)          _BFSET_(r16,15, 8,v)

    #define     w32SRAMRWTC_ctrl0                              {\
            UNSG32 uctrl0_RF1P                                 :  4;\
            UNSG32 uctrl0_UHDRF1P                              :  4;\
            UNSG32 uctrl0_RF2P                                 :  8;\
            UNSG32 uctrl0_UHDRF2P                              :  8;\
            UNSG32 uctrl0_UHDRF2P_ULVT                         :  8;\
          }
    union { UNSG32 u32SRAMRWTC_ctrl0;
            struct w32SRAMRWTC_ctrl0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl1_SHDMBSR1P(r32)               _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl1_SHDMBSR1P(r32,v)             _BFSET_(r32, 3, 0,v)
    #define   GET16SRAMRWTC_ctrl1_SHDMBSR1P(r16)               _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl1_SHDMBSR1P(r16,v)             _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl1_SHDSBSR1P(r32)               _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl1_SHDSBSR1P(r32,v)             _BFSET_(r32, 7, 4,v)
    #define   GET16SRAMRWTC_ctrl1_SHDSBSR1P(r16)               _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl1_SHDSBSR1P(r16,v)             _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r32)          _BFGET_(r32,11, 8)
    #define   SET32SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r32,v)        _BFSET_(r32,11, 8,v)
    #define   GET16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r16)          _BFGET_(r16,11, 8)
    #define   SET16SRAMRWTC_ctrl1_SHCMBSR1P_SSEG(r16,v)        _BFSET_(r16,11, 8,v)

    #define   GET32SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r32)          _BFGET_(r32,15,12)
    #define   SET32SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r32,v)        _BFSET_(r32,15,12,v)
    #define   GET16SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r16)          _BFGET_(r16,15,12)
    #define   SET16SRAMRWTC_ctrl1_SHCMBSR1P_USEG(r16,v)        _BFSET_(r16,15,12,v)

    #define   GET32SRAMRWTC_ctrl1_SHCSBSR1P(r32)               _BFGET_(r32,19,16)
    #define   SET32SRAMRWTC_ctrl1_SHCSBSR1P(r32,v)             _BFSET_(r32,19,16,v)
    #define   GET16SRAMRWTC_ctrl1_SHCSBSR1P(r16)               _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl1_SHCSBSR1P(r16,v)             _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r32)         _BFGET_(r32,23,20)
    #define   SET32SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r32,v)       _BFSET_(r32,23,20,v)
    #define   GET16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r16)         _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl1_SHCSBSR1P_CUSTM(r16,v)       _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl1_SPSRAM_WT0(r32)              _BFGET_(r32,27,24)
    #define   SET32SRAMRWTC_ctrl1_SPSRAM_WT0(r32,v)            _BFSET_(r32,27,24,v)
    #define   GET16SRAMRWTC_ctrl1_SPSRAM_WT0(r16)              _BFGET_(r16,11, 8)
    #define   SET16SRAMRWTC_ctrl1_SPSRAM_WT0(r16,v)            _BFSET_(r16,11, 8,v)

    #define   GET32SRAMRWTC_ctrl1_SPSRAM_WT1(r32)              _BFGET_(r32,31,28)
    #define   SET32SRAMRWTC_ctrl1_SPSRAM_WT1(r32,v)            _BFSET_(r32,31,28,v)
    #define   GET16SRAMRWTC_ctrl1_SPSRAM_WT1(r16)              _BFGET_(r16,15,12)
    #define   SET16SRAMRWTC_ctrl1_SPSRAM_WT1(r16,v)            _BFSET_(r16,15,12,v)

    #define     w32SRAMRWTC_ctrl1                              {\
            UNSG32 uctrl1_SHDMBSR1P                            :  4;\
            UNSG32 uctrl1_SHDSBSR1P                            :  4;\
            UNSG32 uctrl1_SHCMBSR1P_SSEG                       :  4;\
            UNSG32 uctrl1_SHCMBSR1P_USEG                       :  4;\
            UNSG32 uctrl1_SHCSBSR1P                            :  4;\
            UNSG32 uctrl1_SHCSBSR1P_CUSTM                      :  4;\
            UNSG32 uctrl1_SPSRAM_WT0                           :  4;\
            UNSG32 uctrl1_SPSRAM_WT1                           :  4;\
          }
    union { UNSG32 u32SRAMRWTC_ctrl1;
            struct w32SRAMRWTC_ctrl1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32SRAMRWTC_ctrl2_L1CACHE(r32)                 _BFGET_(r32, 3, 0)
    #define   SET32SRAMRWTC_ctrl2_L1CACHE(r32,v)               _BFSET_(r32, 3, 0,v)
    #define   GET16SRAMRWTC_ctrl2_L1CACHE(r16)                 _BFGET_(r16, 3, 0)
    #define   SET16SRAMRWTC_ctrl2_L1CACHE(r16,v)               _BFSET_(r16, 3, 0,v)

    #define   GET32SRAMRWTC_ctrl2_DPSR2P(r32)                  _BFGET_(r32, 7, 4)
    #define   SET32SRAMRWTC_ctrl2_DPSR2P(r32,v)                _BFSET_(r32, 7, 4,v)
    #define   GET16SRAMRWTC_ctrl2_DPSR2P(r16)                  _BFGET_(r16, 7, 4)
    #define   SET16SRAMRWTC_ctrl2_DPSR2P(r16,v)                _BFSET_(r16, 7, 4,v)

    #define   GET32SRAMRWTC_ctrl2_ROM(r32)                     _BFGET_(r32,15, 8)
    #define   SET32SRAMRWTC_ctrl2_ROM(r32,v)                   _BFSET_(r32,15, 8,v)
    #define   GET16SRAMRWTC_ctrl2_ROM(r16)                     _BFGET_(r16,15, 8)
    #define   SET16SRAMRWTC_ctrl2_ROM(r16,v)                   _BFSET_(r16,15, 8,v)

    #define     w32SRAMRWTC_ctrl2                              {\
            UNSG32 uctrl2_L1CACHE                              :  4;\
            UNSG32 uctrl2_DPSR2P                               :  4;\
            UNSG32 uctrl2_ROM                                  :  8;\
            UNSG32 RSVDx8_b16                                  : 16;\
          }
    union { UNSG32 u32SRAMRWTC_ctrl2;
            struct w32SRAMRWTC_ctrl2;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SRAMRWTC;

    typedef union  T32SRAMRWTC_ctrl0
          { UNSG32 u32;
            struct w32SRAMRWTC_ctrl0;
                 } T32SRAMRWTC_ctrl0;
    typedef union  T32SRAMRWTC_ctrl1
          { UNSG32 u32;
            struct w32SRAMRWTC_ctrl1;
                 } T32SRAMRWTC_ctrl1;
    typedef union  T32SRAMRWTC_ctrl2
          { UNSG32 u32;
            struct w32SRAMRWTC_ctrl2;
                 } T32SRAMRWTC_ctrl2;
    ///////////////////////////////////////////////////////////

    typedef union  TSRAMRWTC_ctrl0
          { UNSG32 u32[1];
            struct {
            struct w32SRAMRWTC_ctrl0;
                   };
                 } TSRAMRWTC_ctrl0;
    typedef union  TSRAMRWTC_ctrl1
          { UNSG32 u32[1];
            struct {
            struct w32SRAMRWTC_ctrl1;
                   };
                 } TSRAMRWTC_ctrl1;
    typedef union  TSRAMRWTC_ctrl2
          { UNSG32 u32[1];
            struct {
            struct w32SRAMRWTC_ctrl2;
                   };
                 } TSRAMRWTC_ctrl2;

    ///////////////////////////////////////////////////////////
     SIGN32 SRAMRWTC_drvrd(SIE_SRAMRWTC *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SRAMRWTC_drvwr(SIE_SRAMRWTC *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SRAMRWTC_reset(SIE_SRAMRWTC *p);
     SIGN32 SRAMRWTC_cmp  (SIE_SRAMRWTC *p, SIE_SRAMRWTC *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SRAMRWTC_check(p,pie,pfx,hLOG) SRAMRWTC_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SRAMRWTC_print(p,    pfx,hLOG) SRAMRWTC_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SRAMRWTC
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD1                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL0 PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x0
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider  (default) for Divide by 1
///                                                 * 1: Use Divider
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 * Note: Not used for Divide by 1
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD1
#define h_clkD1 (){}

    #define     RA_clkD1_ctrl                                  0x0000

    #define     BA_clkD1_ctrl_ClkEn                            0x0000
    #define     B16clkD1_ctrl_ClkEn                            0x0000
    #define   LSb32clkD1_ctrl_ClkEn                               0
    #define   LSb16clkD1_ctrl_ClkEn                               0
    #define       bclkD1_ctrl_ClkEn                            1
    #define   MSK32clkD1_ctrl_ClkEn                               0x00000001
    #define        clkD1_ctrl_ClkEn_enable                                  0x1
    #define        clkD1_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD1_ctrl_ClkPllSel                        0x0000
    #define     B16clkD1_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD1_ctrl_ClkPllSel                           1
    #define   LSb16clkD1_ctrl_ClkPllSel                           1
    #define       bclkD1_ctrl_ClkPllSel                        3
    #define   MSK32clkD1_ctrl_ClkPllSel                           0x0000000E
    #define        clkD1_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD1_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD1_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD1_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD1_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD1_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD1_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD1_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD1_ctrl_ClkPllSwitch                        4
    #define       bclkD1_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD1_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD1_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD1_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD1_ctrl_ClkSwitch                        0x0000
    #define     B16clkD1_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD1_ctrl_ClkSwitch                           5
    #define   LSb16clkD1_ctrl_ClkSwitch                           5
    #define       bclkD1_ctrl_ClkSwitch                        1
    #define   MSK32clkD1_ctrl_ClkSwitch                           0x00000020
    #define        clkD1_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD1_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD1_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD1_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD1_ctrl_ClkD3Switch                         6
    #define   LSb16clkD1_ctrl_ClkD3Switch                         6
    #define       bclkD1_ctrl_ClkD3Switch                      1
    #define   MSK32clkD1_ctrl_ClkD3Switch                         0x00000040
    #define        clkD1_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD1_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD1_ctrl_ClkSel                           0x0000
    #define     B16clkD1_ctrl_ClkSel                           0x0000
    #define   LSb32clkD1_ctrl_ClkSel                              7
    #define   LSb16clkD1_ctrl_ClkSel                              7
    #define       bclkD1_ctrl_ClkSel                           3
    #define   MSK32clkD1_ctrl_ClkSel                              0x00000380
    #define        clkD1_ctrl_ClkSel_d2                                     0x1
    #define        clkD1_ctrl_ClkSel_d4                                     0x2
    #define        clkD1_ctrl_ClkSel_d6                                     0x3
    #define        clkD1_ctrl_ClkSel_d8                                     0x4
    #define        clkD1_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD1 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD1_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD1_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD1_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD1_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD1_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD1_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD1_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD1_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD1_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD1_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD1_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD1_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD1_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD1_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD1_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD1_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD1_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD1_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD1_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD1_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD1_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD1_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD1_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD1_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD1_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD1_ctrl;
            struct w32clkD1_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD1;

    typedef union  T32clkD1_ctrl
          { UNSG32 u32;
            struct w32clkD1_ctrl;
                 } T32clkD1_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD1_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD1_ctrl;
                   };
                 } TclkD1_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD1_drvrd(SIE_clkD1 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD1_drvwr(SIE_clkD1 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD1_reset(SIE_clkD1 *p);
     SIGN32 clkD1_cmp  (SIE_clkD1 *p, SIE_clkD1 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD1_check(p,pie,pfx,hLOG) clkD1_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD1_print(p,    pfx,hLOG) clkD1_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD1
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD2                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL0 PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                    : d24                       0x6
///                                    : d48                       0x7
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6:  Divide by 24
///                                                 * 7:  Divide by 48
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD2
#define h_clkD2 (){}

    #define     RA_clkD2_ctrl                                  0x0000

    #define     BA_clkD2_ctrl_ClkEn                            0x0000
    #define     B16clkD2_ctrl_ClkEn                            0x0000
    #define   LSb32clkD2_ctrl_ClkEn                               0
    #define   LSb16clkD2_ctrl_ClkEn                               0
    #define       bclkD2_ctrl_ClkEn                            1
    #define   MSK32clkD2_ctrl_ClkEn                               0x00000001
    #define        clkD2_ctrl_ClkEn_enable                                  0x1
    #define        clkD2_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD2_ctrl_ClkPllSel                        0x0000
    #define     B16clkD2_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD2_ctrl_ClkPllSel                           1
    #define   LSb16clkD2_ctrl_ClkPllSel                           1
    #define       bclkD2_ctrl_ClkPllSel                        3
    #define   MSK32clkD2_ctrl_ClkPllSel                           0x0000000E
    #define        clkD2_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD2_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD2_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD2_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD2_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD2_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD2_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD2_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD2_ctrl_ClkPllSwitch                        4
    #define       bclkD2_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD2_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD2_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD2_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD2_ctrl_ClkSwitch                        0x0000
    #define     B16clkD2_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD2_ctrl_ClkSwitch                           5
    #define   LSb16clkD2_ctrl_ClkSwitch                           5
    #define       bclkD2_ctrl_ClkSwitch                        1
    #define   MSK32clkD2_ctrl_ClkSwitch                           0x00000020
    #define        clkD2_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD2_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD2_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD2_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD2_ctrl_ClkD3Switch                         6
    #define   LSb16clkD2_ctrl_ClkD3Switch                         6
    #define       bclkD2_ctrl_ClkD3Switch                      1
    #define   MSK32clkD2_ctrl_ClkD3Switch                         0x00000040
    #define        clkD2_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD2_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD2_ctrl_ClkSel                           0x0000
    #define     B16clkD2_ctrl_ClkSel                           0x0000
    #define   LSb32clkD2_ctrl_ClkSel                              7
    #define   LSb16clkD2_ctrl_ClkSel                              7
    #define       bclkD2_ctrl_ClkSel                           3
    #define   MSK32clkD2_ctrl_ClkSel                              0x00000380
    #define        clkD2_ctrl_ClkSel_d2                                     0x1
    #define        clkD2_ctrl_ClkSel_d4                                     0x2
    #define        clkD2_ctrl_ClkSel_d6                                     0x3
    #define        clkD2_ctrl_ClkSel_d8                                     0x4
    #define        clkD2_ctrl_ClkSel_d12                                    0x5
    #define        clkD2_ctrl_ClkSel_d24                                    0x6
    #define        clkD2_ctrl_ClkSel_d48                                    0x7
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD2 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD2_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD2_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD2_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD2_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD2_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD2_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD2_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD2_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD2_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD2_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD2_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD2_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD2_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD2_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD2_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD2_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD2_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD2_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD2_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD2_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD2_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD2_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD2_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD2_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD2_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD2_ctrl;
            struct w32clkD2_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD2;

    typedef union  T32clkD2_ctrl
          { UNSG32 u32;
            struct w32clkD2_ctrl;
                 } T32clkD2_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD2_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD2_ctrl;
                   };
                 } TclkD2_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD2_drvrd(SIE_clkD2 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD2_drvwr(SIE_clkD2 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD2_reset(SIE_clkD2 *p);
     SIGN32 clkD2_cmp  (SIE_clkD2 *p, SIE_clkD2 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD2_check(p,pie,pfx,hLOG) clkD2_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD2_print(p,    pfx,hLOG) clkD2_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD2
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD3                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL0 PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x1
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                    : d24                       0x6
///                                    : d48                       0x7
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6:  Divide by 24
///                                                 * 7:  Divide by 48
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD3
#define h_clkD3 (){}

    #define     RA_clkD3_ctrl                                  0x0000

    #define     BA_clkD3_ctrl_ClkEn                            0x0000
    #define     B16clkD3_ctrl_ClkEn                            0x0000
    #define   LSb32clkD3_ctrl_ClkEn                               0
    #define   LSb16clkD3_ctrl_ClkEn                               0
    #define       bclkD3_ctrl_ClkEn                            1
    #define   MSK32clkD3_ctrl_ClkEn                               0x00000001
    #define        clkD3_ctrl_ClkEn_enable                                  0x1
    #define        clkD3_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD3_ctrl_ClkPllSel                        0x0000
    #define     B16clkD3_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD3_ctrl_ClkPllSel                           1
    #define   LSb16clkD3_ctrl_ClkPllSel                           1
    #define       bclkD3_ctrl_ClkPllSel                        3
    #define   MSK32clkD3_ctrl_ClkPllSel                           0x0000000E
    #define        clkD3_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD3_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD3_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD3_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD3_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD3_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD3_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD3_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD3_ctrl_ClkPllSwitch                        4
    #define       bclkD3_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD3_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD3_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD3_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD3_ctrl_ClkSwitch                        0x0000
    #define     B16clkD3_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD3_ctrl_ClkSwitch                           5
    #define   LSb16clkD3_ctrl_ClkSwitch                           5
    #define       bclkD3_ctrl_ClkSwitch                        1
    #define   MSK32clkD3_ctrl_ClkSwitch                           0x00000020
    #define        clkD3_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD3_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD3_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD3_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD3_ctrl_ClkD3Switch                         6
    #define   LSb16clkD3_ctrl_ClkD3Switch                         6
    #define       bclkD3_ctrl_ClkD3Switch                      1
    #define   MSK32clkD3_ctrl_ClkD3Switch                         0x00000040
    #define        clkD3_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD3_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD3_ctrl_ClkSel                           0x0000
    #define     B16clkD3_ctrl_ClkSel                           0x0000
    #define   LSb32clkD3_ctrl_ClkSel                              7
    #define   LSb16clkD3_ctrl_ClkSel                              7
    #define       bclkD3_ctrl_ClkSel                           3
    #define   MSK32clkD3_ctrl_ClkSel                              0x00000380
    #define        clkD3_ctrl_ClkSel_d2                                     0x1
    #define        clkD3_ctrl_ClkSel_d4                                     0x2
    #define        clkD3_ctrl_ClkSel_d6                                     0x3
    #define        clkD3_ctrl_ClkSel_d8                                     0x4
    #define        clkD3_ctrl_ClkSel_d12                                    0x5
    #define        clkD3_ctrl_ClkSel_d24                                    0x6
    #define        clkD3_ctrl_ClkSel_d48                                    0x7
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD3 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD3_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD3_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD3_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD3_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD3_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD3_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD3_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD3_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD3_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD3_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD3_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD3_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD3_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD3_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD3_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD3_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD3_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD3_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD3_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD3_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD3_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD3_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD3_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD3_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD3_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD3_ctrl;
            struct w32clkD3_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD3;

    typedef union  T32clkD3_ctrl
          { UNSG32 u32;
            struct w32clkD3_ctrl;
                 } T32clkD3_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD3_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD3_ctrl;
                   };
                 } TclkD3_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD3_drvrd(SIE_clkD3 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD3_drvwr(SIE_clkD3 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD3_reset(SIE_clkD3 *p);
     SIGN32 clkD3_cmp  (SIE_clkD3 *p, SIE_clkD3 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD3_check(p,pie,pfx,hLOG) clkD3_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD3_print(p,    pfx,hLOG) clkD3_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD3
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD4                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL0 PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x2
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD4
#define h_clkD4 (){}

    #define     RA_clkD4_ctrl                                  0x0000

    #define     BA_clkD4_ctrl_ClkEn                            0x0000
    #define     B16clkD4_ctrl_ClkEn                            0x0000
    #define   LSb32clkD4_ctrl_ClkEn                               0
    #define   LSb16clkD4_ctrl_ClkEn                               0
    #define       bclkD4_ctrl_ClkEn                            1
    #define   MSK32clkD4_ctrl_ClkEn                               0x00000001
    #define        clkD4_ctrl_ClkEn_enable                                  0x1
    #define        clkD4_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD4_ctrl_ClkPllSel                        0x0000
    #define     B16clkD4_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD4_ctrl_ClkPllSel                           1
    #define   LSb16clkD4_ctrl_ClkPllSel                           1
    #define       bclkD4_ctrl_ClkPllSel                        3
    #define   MSK32clkD4_ctrl_ClkPllSel                           0x0000000E
    #define        clkD4_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD4_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD4_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD4_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD4_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD4_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD4_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD4_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD4_ctrl_ClkPllSwitch                        4
    #define       bclkD4_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD4_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD4_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD4_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD4_ctrl_ClkSwitch                        0x0000
    #define     B16clkD4_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD4_ctrl_ClkSwitch                           5
    #define   LSb16clkD4_ctrl_ClkSwitch                           5
    #define       bclkD4_ctrl_ClkSwitch                        1
    #define   MSK32clkD4_ctrl_ClkSwitch                           0x00000020
    #define        clkD4_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD4_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD4_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD4_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD4_ctrl_ClkD3Switch                         6
    #define   LSb16clkD4_ctrl_ClkD3Switch                         6
    #define       bclkD4_ctrl_ClkD3Switch                      1
    #define   MSK32clkD4_ctrl_ClkD3Switch                         0x00000040
    #define        clkD4_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD4_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD4_ctrl_ClkSel                           0x0000
    #define     B16clkD4_ctrl_ClkSel                           0x0000
    #define   LSb32clkD4_ctrl_ClkSel                              7
    #define   LSb16clkD4_ctrl_ClkSel                              7
    #define       bclkD4_ctrl_ClkSel                           3
    #define   MSK32clkD4_ctrl_ClkSel                              0x00000380
    #define        clkD4_ctrl_ClkSel_d2                                     0x1
    #define        clkD4_ctrl_ClkSel_d4                                     0x2
    #define        clkD4_ctrl_ClkSel_d6                                     0x3
    #define        clkD4_ctrl_ClkSel_d8                                     0x4
    #define        clkD4_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD4 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD4_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD4_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD4_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD4_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD4_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD4_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD4_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD4_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD4_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD4_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD4_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD4_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD4_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD4_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD4_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD4_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD4_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD4_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD4_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD4_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD4_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD4_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD4_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD4_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD4_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD4_ctrl;
            struct w32clkD4_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD4;

    typedef union  T32clkD4_ctrl
          { UNSG32 u32;
            struct w32clkD4_ctrl;
                 } T32clkD4_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD4_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD4_ctrl;
                   };
                 } TclkD4_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD4_drvrd(SIE_clkD4 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD4_drvwr(SIE_clkD4 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD4_reset(SIE_clkD4 *p);
     SIGN32 clkD4_cmp  (SIE_clkD4 *p, SIE_clkD4 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD4_check(p,pie,pfx,hLOG) clkD4_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD4_print(p,    pfx,hLOG) clkD4_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD4
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD6                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL0 PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x3
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD6
#define h_clkD6 (){}

    #define     RA_clkD6_ctrl                                  0x0000

    #define     BA_clkD6_ctrl_ClkEn                            0x0000
    #define     B16clkD6_ctrl_ClkEn                            0x0000
    #define   LSb32clkD6_ctrl_ClkEn                               0
    #define   LSb16clkD6_ctrl_ClkEn                               0
    #define       bclkD6_ctrl_ClkEn                            1
    #define   MSK32clkD6_ctrl_ClkEn                               0x00000001
    #define        clkD6_ctrl_ClkEn_enable                                  0x1
    #define        clkD6_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD6_ctrl_ClkPllSel                        0x0000
    #define     B16clkD6_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD6_ctrl_ClkPllSel                           1
    #define   LSb16clkD6_ctrl_ClkPllSel                           1
    #define       bclkD6_ctrl_ClkPllSel                        3
    #define   MSK32clkD6_ctrl_ClkPllSel                           0x0000000E
    #define        clkD6_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD6_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD6_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD6_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD6_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD6_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD6_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD6_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD6_ctrl_ClkPllSwitch                        4
    #define       bclkD6_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD6_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD6_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD6_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD6_ctrl_ClkSwitch                        0x0000
    #define     B16clkD6_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD6_ctrl_ClkSwitch                           5
    #define   LSb16clkD6_ctrl_ClkSwitch                           5
    #define       bclkD6_ctrl_ClkSwitch                        1
    #define   MSK32clkD6_ctrl_ClkSwitch                           0x00000020
    #define        clkD6_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD6_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD6_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD6_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD6_ctrl_ClkD3Switch                         6
    #define   LSb16clkD6_ctrl_ClkD3Switch                         6
    #define       bclkD6_ctrl_ClkD3Switch                      1
    #define   MSK32clkD6_ctrl_ClkD3Switch                         0x00000040
    #define        clkD6_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD6_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD6_ctrl_ClkSel                           0x0000
    #define     B16clkD6_ctrl_ClkSel                           0x0000
    #define   LSb32clkD6_ctrl_ClkSel                              7
    #define   LSb16clkD6_ctrl_ClkSel                              7
    #define       bclkD6_ctrl_ClkSel                           3
    #define   MSK32clkD6_ctrl_ClkSel                              0x00000380
    #define        clkD6_ctrl_ClkSel_d2                                     0x1
    #define        clkD6_ctrl_ClkSel_d4                                     0x2
    #define        clkD6_ctrl_ClkSel_d6                                     0x3
    #define        clkD6_ctrl_ClkSel_d8                                     0x4
    #define        clkD6_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD6 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD6_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD6_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD6_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD6_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD6_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD6_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD6_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD6_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD6_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD6_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD6_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD6_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD6_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD6_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD6_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD6_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD6_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD6_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD6_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD6_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD6_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD6_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD6_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD6_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD6_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD6_ctrl;
            struct w32clkD6_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD6;

    typedef union  T32clkD6_ctrl
          { UNSG32 u32;
            struct w32clkD6_ctrl;
                 } T32clkD6_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD6_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD6_ctrl;
                   };
                 } TclkD6_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD6_drvrd(SIE_clkD6 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD6_drvwr(SIE_clkD6 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD6_reset(SIE_clkD6 *p);
     SIGN32 clkD6_cmp  (SIE_clkD6 *p, SIE_clkD6 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD6_check(p,pie,pfx,hLOG) clkD6_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD6_print(p,    pfx,hLOG) clkD6_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD6
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD8                                    (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL0 PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x4
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD8
#define h_clkD8 (){}

    #define     RA_clkD8_ctrl                                  0x0000

    #define     BA_clkD8_ctrl_ClkEn                            0x0000
    #define     B16clkD8_ctrl_ClkEn                            0x0000
    #define   LSb32clkD8_ctrl_ClkEn                               0
    #define   LSb16clkD8_ctrl_ClkEn                               0
    #define       bclkD8_ctrl_ClkEn                            1
    #define   MSK32clkD8_ctrl_ClkEn                               0x00000001
    #define        clkD8_ctrl_ClkEn_enable                                  0x1
    #define        clkD8_ctrl_ClkEn_disable                                 0x0

    #define     BA_clkD8_ctrl_ClkPllSel                        0x0000
    #define     B16clkD8_ctrl_ClkPllSel                        0x0000
    #define   LSb32clkD8_ctrl_ClkPllSel                           1
    #define   LSb16clkD8_ctrl_ClkPllSel                           1
    #define       bclkD8_ctrl_ClkPllSel                        3
    #define   MSK32clkD8_ctrl_ClkPllSel                           0x0000000E
    #define        clkD8_ctrl_ClkPllSel_CLKSRC0                             0x0
    #define        clkD8_ctrl_ClkPllSel_CLKSRC1                             0x1
    #define        clkD8_ctrl_ClkPllSel_CLKSRC2                             0x2
    #define        clkD8_ctrl_ClkPllSel_CLKSRC3                             0x3
    #define        clkD8_ctrl_ClkPllSel_CLKSRC4                             0x4

    #define     BA_clkD8_ctrl_ClkPllSwitch                     0x0000
    #define     B16clkD8_ctrl_ClkPllSwitch                     0x0000
    #define   LSb32clkD8_ctrl_ClkPllSwitch                        4
    #define   LSb16clkD8_ctrl_ClkPllSwitch                        4
    #define       bclkD8_ctrl_ClkPllSwitch                     1
    #define   MSK32clkD8_ctrl_ClkPllSwitch                        0x00000010
    #define        clkD8_ctrl_ClkPllSwitch_SYSPLL                           0x0
    #define        clkD8_ctrl_ClkPllSwitch_ALTPLL                           0x1

    #define     BA_clkD8_ctrl_ClkSwitch                        0x0000
    #define     B16clkD8_ctrl_ClkSwitch                        0x0000
    #define   LSb32clkD8_ctrl_ClkSwitch                           5
    #define   LSb16clkD8_ctrl_ClkSwitch                           5
    #define       bclkD8_ctrl_ClkSwitch                        1
    #define   MSK32clkD8_ctrl_ClkSwitch                           0x00000020
    #define        clkD8_ctrl_ClkSwitch_SrcClk                              0x0
    #define        clkD8_ctrl_ClkSwitch_DivClk                              0x1

    #define     BA_clkD8_ctrl_ClkD3Switch                      0x0000
    #define     B16clkD8_ctrl_ClkD3Switch                      0x0000
    #define   LSb32clkD8_ctrl_ClkD3Switch                         6
    #define   LSb16clkD8_ctrl_ClkD3Switch                         6
    #define       bclkD8_ctrl_ClkD3Switch                      1
    #define   MSK32clkD8_ctrl_ClkD3Switch                         0x00000040
    #define        clkD8_ctrl_ClkD3Switch_NonDiv3Clk                        0x0
    #define        clkD8_ctrl_ClkD3Switch_Div3Clk                           0x1

    #define     BA_clkD8_ctrl_ClkSel                           0x0000
    #define     B16clkD8_ctrl_ClkSel                           0x0000
    #define   LSb32clkD8_ctrl_ClkSel                              7
    #define   LSb16clkD8_ctrl_ClkSel                              7
    #define       bclkD8_ctrl_ClkSel                           3
    #define   MSK32clkD8_ctrl_ClkSel                              0x00000380
    #define        clkD8_ctrl_ClkSel_d2                                     0x1
    #define        clkD8_ctrl_ClkSel_d4                                     0x2
    #define        clkD8_ctrl_ClkSel_d6                                     0x3
    #define        clkD8_ctrl_ClkSel_d8                                     0x4
    #define        clkD8_ctrl_ClkSel_d12                                    0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD8 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD8_ctrl_ClkEn(r32)                       _BFGET_(r32, 0, 0)
    #define   SET32clkD8_ctrl_ClkEn(r32,v)                     _BFSET_(r32, 0, 0,v)
    #define   GET16clkD8_ctrl_ClkEn(r16)                       _BFGET_(r16, 0, 0)
    #define   SET16clkD8_ctrl_ClkEn(r16,v)                     _BFSET_(r16, 0, 0,v)

    #define   GET32clkD8_ctrl_ClkPllSel(r32)                   _BFGET_(r32, 3, 1)
    #define   SET32clkD8_ctrl_ClkPllSel(r32,v)                 _BFSET_(r32, 3, 1,v)
    #define   GET16clkD8_ctrl_ClkPllSel(r16)                   _BFGET_(r16, 3, 1)
    #define   SET16clkD8_ctrl_ClkPllSel(r16,v)                 _BFSET_(r16, 3, 1,v)

    #define   GET32clkD8_ctrl_ClkPllSwitch(r32)                _BFGET_(r32, 4, 4)
    #define   SET32clkD8_ctrl_ClkPllSwitch(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16clkD8_ctrl_ClkPllSwitch(r16)                _BFGET_(r16, 4, 4)
    #define   SET16clkD8_ctrl_ClkPllSwitch(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32clkD8_ctrl_ClkSwitch(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32clkD8_ctrl_ClkSwitch(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16clkD8_ctrl_ClkSwitch(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16clkD8_ctrl_ClkSwitch(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32clkD8_ctrl_ClkD3Switch(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32clkD8_ctrl_ClkD3Switch(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16clkD8_ctrl_ClkD3Switch(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16clkD8_ctrl_ClkD3Switch(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32clkD8_ctrl_ClkSel(r32)                      _BFGET_(r32, 9, 7)
    #define   SET32clkD8_ctrl_ClkSel(r32,v)                    _BFSET_(r32, 9, 7,v)
    #define   GET16clkD8_ctrl_ClkSel(r16)                      _BFGET_(r16, 9, 7)
    #define   SET16clkD8_ctrl_ClkSel(r16,v)                    _BFSET_(r16, 9, 7,v)

    #define     w32clkD8_ctrl                                  {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD8_ctrl;
            struct w32clkD8_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD8;

    typedef union  T32clkD8_ctrl
          { UNSG32 u32;
            struct w32clkD8_ctrl;
                 } T32clkD8_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD8_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD8_ctrl;
                   };
                 } TclkD8_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD8_drvrd(SIE_clkD8 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD8_drvwr(SIE_clkD8 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD8_reset(SIE_clkD8 *p);
     SIGN32 clkD8_cmp  (SIE_clkD8 *p, SIE_clkD8 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD8_check(p,pie,pfx,hLOG) clkD8_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD8_print(p,    pfx,hLOG) clkD8_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD8
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD12                                   (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL0 PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x5
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD12
#define h_clkD12 (){}

    #define     RA_clkD12_ctrl                                 0x0000

    #define     BA_clkD12_ctrl_ClkEn                           0x0000
    #define     B16clkD12_ctrl_ClkEn                           0x0000
    #define   LSb32clkD12_ctrl_ClkEn                              0
    #define   LSb16clkD12_ctrl_ClkEn                              0
    #define       bclkD12_ctrl_ClkEn                           1
    #define   MSK32clkD12_ctrl_ClkEn                              0x00000001
    #define        clkD12_ctrl_ClkEn_enable                                 0x1
    #define        clkD12_ctrl_ClkEn_disable                                0x0

    #define     BA_clkD12_ctrl_ClkPllSel                       0x0000
    #define     B16clkD12_ctrl_ClkPllSel                       0x0000
    #define   LSb32clkD12_ctrl_ClkPllSel                          1
    #define   LSb16clkD12_ctrl_ClkPllSel                          1
    #define       bclkD12_ctrl_ClkPllSel                       3
    #define   MSK32clkD12_ctrl_ClkPllSel                          0x0000000E
    #define        clkD12_ctrl_ClkPllSel_CLKSRC0                            0x0
    #define        clkD12_ctrl_ClkPllSel_CLKSRC1                            0x1
    #define        clkD12_ctrl_ClkPllSel_CLKSRC2                            0x2
    #define        clkD12_ctrl_ClkPllSel_CLKSRC3                            0x3
    #define        clkD12_ctrl_ClkPllSel_CLKSRC4                            0x4

    #define     BA_clkD12_ctrl_ClkPllSwitch                    0x0000
    #define     B16clkD12_ctrl_ClkPllSwitch                    0x0000
    #define   LSb32clkD12_ctrl_ClkPllSwitch                       4
    #define   LSb16clkD12_ctrl_ClkPllSwitch                       4
    #define       bclkD12_ctrl_ClkPllSwitch                    1
    #define   MSK32clkD12_ctrl_ClkPllSwitch                       0x00000010
    #define        clkD12_ctrl_ClkPllSwitch_SYSPLL                          0x0
    #define        clkD12_ctrl_ClkPllSwitch_ALTPLL                          0x1

    #define     BA_clkD12_ctrl_ClkSwitch                       0x0000
    #define     B16clkD12_ctrl_ClkSwitch                       0x0000
    #define   LSb32clkD12_ctrl_ClkSwitch                          5
    #define   LSb16clkD12_ctrl_ClkSwitch                          5
    #define       bclkD12_ctrl_ClkSwitch                       1
    #define   MSK32clkD12_ctrl_ClkSwitch                          0x00000020
    #define        clkD12_ctrl_ClkSwitch_SrcClk                             0x0
    #define        clkD12_ctrl_ClkSwitch_DivClk                             0x1

    #define     BA_clkD12_ctrl_ClkD3Switch                     0x0000
    #define     B16clkD12_ctrl_ClkD3Switch                     0x0000
    #define   LSb32clkD12_ctrl_ClkD3Switch                        6
    #define   LSb16clkD12_ctrl_ClkD3Switch                        6
    #define       bclkD12_ctrl_ClkD3Switch                     1
    #define   MSK32clkD12_ctrl_ClkD3Switch                        0x00000040
    #define        clkD12_ctrl_ClkD3Switch_NonDiv3Clk                       0x0
    #define        clkD12_ctrl_ClkD3Switch_Div3Clk                          0x1

    #define     BA_clkD12_ctrl_ClkSel                          0x0000
    #define     B16clkD12_ctrl_ClkSel                          0x0000
    #define   LSb32clkD12_ctrl_ClkSel                             7
    #define   LSb16clkD12_ctrl_ClkSel                             7
    #define       bclkD12_ctrl_ClkSel                          3
    #define   MSK32clkD12_ctrl_ClkSel                             0x00000380
    #define        clkD12_ctrl_ClkSel_d2                                    0x1
    #define        clkD12_ctrl_ClkSel_d4                                    0x2
    #define        clkD12_ctrl_ClkSel_d6                                    0x3
    #define        clkD12_ctrl_ClkSel_d8                                    0x4
    #define        clkD12_ctrl_ClkSel_d12                                   0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD12 {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD12_ctrl_ClkEn(r32)                      _BFGET_(r32, 0, 0)
    #define   SET32clkD12_ctrl_ClkEn(r32,v)                    _BFSET_(r32, 0, 0,v)
    #define   GET16clkD12_ctrl_ClkEn(r16)                      _BFGET_(r16, 0, 0)
    #define   SET16clkD12_ctrl_ClkEn(r16,v)                    _BFSET_(r16, 0, 0,v)

    #define   GET32clkD12_ctrl_ClkPllSel(r32)                  _BFGET_(r32, 3, 1)
    #define   SET32clkD12_ctrl_ClkPllSel(r32,v)                _BFSET_(r32, 3, 1,v)
    #define   GET16clkD12_ctrl_ClkPllSel(r16)                  _BFGET_(r16, 3, 1)
    #define   SET16clkD12_ctrl_ClkPllSel(r16,v)                _BFSET_(r16, 3, 1,v)

    #define   GET32clkD12_ctrl_ClkPllSwitch(r32)               _BFGET_(r32, 4, 4)
    #define   SET32clkD12_ctrl_ClkPllSwitch(r32,v)             _BFSET_(r32, 4, 4,v)
    #define   GET16clkD12_ctrl_ClkPllSwitch(r16)               _BFGET_(r16, 4, 4)
    #define   SET16clkD12_ctrl_ClkPllSwitch(r16,v)             _BFSET_(r16, 4, 4,v)

    #define   GET32clkD12_ctrl_ClkSwitch(r32)                  _BFGET_(r32, 5, 5)
    #define   SET32clkD12_ctrl_ClkSwitch(r32,v)                _BFSET_(r32, 5, 5,v)
    #define   GET16clkD12_ctrl_ClkSwitch(r16)                  _BFGET_(r16, 5, 5)
    #define   SET16clkD12_ctrl_ClkSwitch(r16,v)                _BFSET_(r16, 5, 5,v)

    #define   GET32clkD12_ctrl_ClkD3Switch(r32)                _BFGET_(r32, 6, 6)
    #define   SET32clkD12_ctrl_ClkD3Switch(r32,v)              _BFSET_(r32, 6, 6,v)
    #define   GET16clkD12_ctrl_ClkD3Switch(r16)                _BFGET_(r16, 6, 6)
    #define   SET16clkD12_ctrl_ClkD3Switch(r16,v)              _BFSET_(r16, 6, 6,v)

    #define   GET32clkD12_ctrl_ClkSel(r32)                     _BFGET_(r32, 9, 7)
    #define   SET32clkD12_ctrl_ClkSel(r32,v)                   _BFSET_(r32, 9, 7,v)
    #define   GET16clkD12_ctrl_ClkSel(r16)                     _BFGET_(r16, 9, 7)
    #define   SET16clkD12_ctrl_ClkSel(r16,v)                   _BFSET_(r16, 9, 7,v)

    #define     w32clkD12_ctrl                                 {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD12_ctrl;
            struct w32clkD12_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD12;

    typedef union  T32clkD12_ctrl
          { UNSG32 u32;
            struct w32clkD12_ctrl;
                 } T32clkD12_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD12_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD12_ctrl;
                   };
                 } TclkD12_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD12_drvrd(SIE_clkD12 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD12_drvwr(SIE_clkD12 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD12_reset(SIE_clkD12 *p);
     SIGN32 clkD12_cmp  (SIE_clkD12 *p, SIE_clkD12 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD12_check(p,pie,pfx,hLOG) clkD12_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD12_print(p,    pfx,hLOG) clkD12_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD12
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE clkD12_ENOFF                             (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x0
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = SYSPLL1 PLLOUTF
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SYSPLL0 PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x5
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_clkD12_ENOFF
#define h_clkD12_ENOFF (){}

    #define     RA_clkD12_ENOFF_ctrl                           0x0000

    #define     BA_clkD12_ENOFF_ctrl_ClkEn                     0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkEn                     0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkEn                        0
    #define   LSb16clkD12_ENOFF_ctrl_ClkEn                        0
    #define       bclkD12_ENOFF_ctrl_ClkEn                     1
    #define   MSK32clkD12_ENOFF_ctrl_ClkEn                        0x00000001
    #define        clkD12_ENOFF_ctrl_ClkEn_enable                           0x1
    #define        clkD12_ENOFF_ctrl_ClkEn_disable                          0x0

    #define     BA_clkD12_ENOFF_ctrl_ClkPllSel                 0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkPllSel                 0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkPllSel                    1
    #define   LSb16clkD12_ENOFF_ctrl_ClkPllSel                    1
    #define       bclkD12_ENOFF_ctrl_ClkPllSel                 3
    #define   MSK32clkD12_ENOFF_ctrl_ClkPllSel                    0x0000000E
    #define        clkD12_ENOFF_ctrl_ClkPllSel_CLKSRC0                      0x0
    #define        clkD12_ENOFF_ctrl_ClkPllSel_CLKSRC1                      0x1
    #define        clkD12_ENOFF_ctrl_ClkPllSel_CLKSRC2                      0x2
    #define        clkD12_ENOFF_ctrl_ClkPllSel_CLKSRC3                      0x3
    #define        clkD12_ENOFF_ctrl_ClkPllSel_CLKSRC4                      0x4

    #define     BA_clkD12_ENOFF_ctrl_ClkPllSwitch              0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkPllSwitch              0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkPllSwitch                 4
    #define   LSb16clkD12_ENOFF_ctrl_ClkPllSwitch                 4
    #define       bclkD12_ENOFF_ctrl_ClkPllSwitch              1
    #define   MSK32clkD12_ENOFF_ctrl_ClkPllSwitch                 0x00000010
    #define        clkD12_ENOFF_ctrl_ClkPllSwitch_SYSPLL                    0x0
    #define        clkD12_ENOFF_ctrl_ClkPllSwitch_ALTPLL                    0x1

    #define     BA_clkD12_ENOFF_ctrl_ClkSwitch                 0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkSwitch                 0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkSwitch                    5
    #define   LSb16clkD12_ENOFF_ctrl_ClkSwitch                    5
    #define       bclkD12_ENOFF_ctrl_ClkSwitch                 1
    #define   MSK32clkD12_ENOFF_ctrl_ClkSwitch                    0x00000020
    #define        clkD12_ENOFF_ctrl_ClkSwitch_SrcClk                       0x0
    #define        clkD12_ENOFF_ctrl_ClkSwitch_DivClk                       0x1

    #define     BA_clkD12_ENOFF_ctrl_ClkD3Switch               0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkD3Switch               0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkD3Switch                  6
    #define   LSb16clkD12_ENOFF_ctrl_ClkD3Switch                  6
    #define       bclkD12_ENOFF_ctrl_ClkD3Switch               1
    #define   MSK32clkD12_ENOFF_ctrl_ClkD3Switch                  0x00000040
    #define        clkD12_ENOFF_ctrl_ClkD3Switch_NonDiv3Clk                 0x0
    #define        clkD12_ENOFF_ctrl_ClkD3Switch_Div3Clk                    0x1

    #define     BA_clkD12_ENOFF_ctrl_ClkSel                    0x0000
    #define     B16clkD12_ENOFF_ctrl_ClkSel                    0x0000
    #define   LSb32clkD12_ENOFF_ctrl_ClkSel                       7
    #define   LSb16clkD12_ENOFF_ctrl_ClkSel                       7
    #define       bclkD12_ENOFF_ctrl_ClkSel                    3
    #define   MSK32clkD12_ENOFF_ctrl_ClkSel                       0x00000380
    #define        clkD12_ENOFF_ctrl_ClkSel_d2                              0x1
    #define        clkD12_ENOFF_ctrl_ClkSel_d4                              0x2
    #define        clkD12_ENOFF_ctrl_ClkSel_d6                              0x3
    #define        clkD12_ENOFF_ctrl_ClkSel_d8                              0x4
    #define        clkD12_ENOFF_ctrl_ClkSel_d12                             0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_clkD12_ENOFF {
    ///////////////////////////////////////////////////////////
    #define   GET32clkD12_ENOFF_ctrl_ClkEn(r32)                _BFGET_(r32, 0, 0)
    #define   SET32clkD12_ENOFF_ctrl_ClkEn(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16clkD12_ENOFF_ctrl_ClkEn(r16)                _BFGET_(r16, 0, 0)
    #define   SET16clkD12_ENOFF_ctrl_ClkEn(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32clkD12_ENOFF_ctrl_ClkPllSel(r32)            _BFGET_(r32, 3, 1)
    #define   SET32clkD12_ENOFF_ctrl_ClkPllSel(r32,v)          _BFSET_(r32, 3, 1,v)
    #define   GET16clkD12_ENOFF_ctrl_ClkPllSel(r16)            _BFGET_(r16, 3, 1)
    #define   SET16clkD12_ENOFF_ctrl_ClkPllSel(r16,v)          _BFSET_(r16, 3, 1,v)

    #define   GET32clkD12_ENOFF_ctrl_ClkPllSwitch(r32)         _BFGET_(r32, 4, 4)
    #define   SET32clkD12_ENOFF_ctrl_ClkPllSwitch(r32,v)       _BFSET_(r32, 4, 4,v)
    #define   GET16clkD12_ENOFF_ctrl_ClkPllSwitch(r16)         _BFGET_(r16, 4, 4)
    #define   SET16clkD12_ENOFF_ctrl_ClkPllSwitch(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32clkD12_ENOFF_ctrl_ClkSwitch(r32)            _BFGET_(r32, 5, 5)
    #define   SET32clkD12_ENOFF_ctrl_ClkSwitch(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16clkD12_ENOFF_ctrl_ClkSwitch(r16)            _BFGET_(r16, 5, 5)
    #define   SET16clkD12_ENOFF_ctrl_ClkSwitch(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32clkD12_ENOFF_ctrl_ClkD3Switch(r32)          _BFGET_(r32, 6, 6)
    #define   SET32clkD12_ENOFF_ctrl_ClkD3Switch(r32,v)        _BFSET_(r32, 6, 6,v)
    #define   GET16clkD12_ENOFF_ctrl_ClkD3Switch(r16)          _BFGET_(r16, 6, 6)
    #define   SET16clkD12_ENOFF_ctrl_ClkD3Switch(r16,v)        _BFSET_(r16, 6, 6,v)

    #define   GET32clkD12_ENOFF_ctrl_ClkSel(r32)               _BFGET_(r32, 9, 7)
    #define   SET32clkD12_ENOFF_ctrl_ClkSel(r32,v)             _BFSET_(r32, 9, 7,v)
    #define   GET16clkD12_ENOFF_ctrl_ClkSel(r16)               _BFGET_(r16, 9, 7)
    #define   SET16clkD12_ENOFF_ctrl_ClkSel(r16,v)             _BFSET_(r16, 9, 7,v)

    #define     w32clkD12_ENOFF_ctrl                           {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32clkD12_ENOFF_ctrl;
            struct w32clkD12_ENOFF_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_clkD12_ENOFF;

    typedef union  T32clkD12_ENOFF_ctrl
          { UNSG32 u32;
            struct w32clkD12_ENOFF_ctrl;
                 } T32clkD12_ENOFF_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TclkD12_ENOFF_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32clkD12_ENOFF_ctrl;
                   };
                 } TclkD12_ENOFF_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 clkD12_ENOFF_drvrd(SIE_clkD12_ENOFF *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 clkD12_ENOFF_drvwr(SIE_clkD12_ENOFF *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void clkD12_ENOFF_reset(SIE_clkD12_ENOFF *p);
     SIGN32 clkD12_ENOFF_cmp  (SIE_clkD12_ENOFF *p, SIE_clkD12_ENOFF *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define clkD12_ENOFF_check(p,pie,pfx,hLOG) clkD12_ENOFF_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define clkD12_ENOFF_print(p,    pfx,hLOG) clkD12_ENOFF_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: clkD12_ENOFF
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SISSClkD2                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = AVPLL1 PLLOUT
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SIPLL PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                    : d24                       0x6
///                                    : d48                       0x7
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6:  Divide by 24
///                                                 * 7:  Divide by 48
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SISSClkD2
#define h_SISSClkD2 (){}

    #define     RA_SISSClkD2_ctrl                              0x0000

    #define     BA_SISSClkD2_ctrl_ClkEn                        0x0000
    #define     B16SISSClkD2_ctrl_ClkEn                        0x0000
    #define   LSb32SISSClkD2_ctrl_ClkEn                           0
    #define   LSb16SISSClkD2_ctrl_ClkEn                           0
    #define       bSISSClkD2_ctrl_ClkEn                        1
    #define   MSK32SISSClkD2_ctrl_ClkEn                           0x00000001
    #define        SISSClkD2_ctrl_ClkEn_enable                              0x1
    #define        SISSClkD2_ctrl_ClkEn_disable                             0x0

    #define     BA_SISSClkD2_ctrl_ClkPllSel                    0x0000
    #define     B16SISSClkD2_ctrl_ClkPllSel                    0x0000
    #define   LSb32SISSClkD2_ctrl_ClkPllSel                       1
    #define   LSb16SISSClkD2_ctrl_ClkPllSel                       1
    #define       bSISSClkD2_ctrl_ClkPllSel                    3
    #define   MSK32SISSClkD2_ctrl_ClkPllSel                       0x0000000E
    #define        SISSClkD2_ctrl_ClkPllSel_CLKSRC0                         0x0
    #define        SISSClkD2_ctrl_ClkPllSel_CLKSRC1                         0x1
    #define        SISSClkD2_ctrl_ClkPllSel_CLKSRC2                         0x2
    #define        SISSClkD2_ctrl_ClkPllSel_CLKSRC3                         0x3
    #define        SISSClkD2_ctrl_ClkPllSel_CLKSRC4                         0x4

    #define     BA_SISSClkD2_ctrl_ClkPllSwitch                 0x0000
    #define     B16SISSClkD2_ctrl_ClkPllSwitch                 0x0000
    #define   LSb32SISSClkD2_ctrl_ClkPllSwitch                    4
    #define   LSb16SISSClkD2_ctrl_ClkPllSwitch                    4
    #define       bSISSClkD2_ctrl_ClkPllSwitch                 1
    #define   MSK32SISSClkD2_ctrl_ClkPllSwitch                    0x00000010
    #define        SISSClkD2_ctrl_ClkPllSwitch_SYSPLL                       0x0
    #define        SISSClkD2_ctrl_ClkPllSwitch_ALTPLL                       0x1

    #define     BA_SISSClkD2_ctrl_ClkSwitch                    0x0000
    #define     B16SISSClkD2_ctrl_ClkSwitch                    0x0000
    #define   LSb32SISSClkD2_ctrl_ClkSwitch                       5
    #define   LSb16SISSClkD2_ctrl_ClkSwitch                       5
    #define       bSISSClkD2_ctrl_ClkSwitch                    1
    #define   MSK32SISSClkD2_ctrl_ClkSwitch                       0x00000020
    #define        SISSClkD2_ctrl_ClkSwitch_SrcClk                          0x0
    #define        SISSClkD2_ctrl_ClkSwitch_DivClk                          0x1

    #define     BA_SISSClkD2_ctrl_ClkD3Switch                  0x0000
    #define     B16SISSClkD2_ctrl_ClkD3Switch                  0x0000
    #define   LSb32SISSClkD2_ctrl_ClkD3Switch                     6
    #define   LSb16SISSClkD2_ctrl_ClkD3Switch                     6
    #define       bSISSClkD2_ctrl_ClkD3Switch                  1
    #define   MSK32SISSClkD2_ctrl_ClkD3Switch                     0x00000040
    #define        SISSClkD2_ctrl_ClkD3Switch_NonDiv3Clk                    0x0
    #define        SISSClkD2_ctrl_ClkD3Switch_Div3Clk                       0x1

    #define     BA_SISSClkD2_ctrl_ClkSel                       0x0000
    #define     B16SISSClkD2_ctrl_ClkSel                       0x0000
    #define   LSb32SISSClkD2_ctrl_ClkSel                          7
    #define   LSb16SISSClkD2_ctrl_ClkSel                          7
    #define       bSISSClkD2_ctrl_ClkSel                       3
    #define   MSK32SISSClkD2_ctrl_ClkSel                          0x00000380
    #define        SISSClkD2_ctrl_ClkSel_d2                                 0x1
    #define        SISSClkD2_ctrl_ClkSel_d4                                 0x2
    #define        SISSClkD2_ctrl_ClkSel_d6                                 0x3
    #define        SISSClkD2_ctrl_ClkSel_d8                                 0x4
    #define        SISSClkD2_ctrl_ClkSel_d12                                0x5
    #define        SISSClkD2_ctrl_ClkSel_d24                                0x6
    #define        SISSClkD2_ctrl_ClkSel_d48                                0x7
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SISSClkD2 {
    ///////////////////////////////////////////////////////////
    #define   GET32SISSClkD2_ctrl_ClkEn(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32SISSClkD2_ctrl_ClkEn(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16SISSClkD2_ctrl_ClkEn(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16SISSClkD2_ctrl_ClkEn(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32SISSClkD2_ctrl_ClkPllSel(r32)               _BFGET_(r32, 3, 1)
    #define   SET32SISSClkD2_ctrl_ClkPllSel(r32,v)             _BFSET_(r32, 3, 1,v)
    #define   GET16SISSClkD2_ctrl_ClkPllSel(r16)               _BFGET_(r16, 3, 1)
    #define   SET16SISSClkD2_ctrl_ClkPllSel(r16,v)             _BFSET_(r16, 3, 1,v)

    #define   GET32SISSClkD2_ctrl_ClkPllSwitch(r32)            _BFGET_(r32, 4, 4)
    #define   SET32SISSClkD2_ctrl_ClkPllSwitch(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16SISSClkD2_ctrl_ClkPllSwitch(r16)            _BFGET_(r16, 4, 4)
    #define   SET16SISSClkD2_ctrl_ClkPllSwitch(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32SISSClkD2_ctrl_ClkSwitch(r32)               _BFGET_(r32, 5, 5)
    #define   SET32SISSClkD2_ctrl_ClkSwitch(r32,v)             _BFSET_(r32, 5, 5,v)
    #define   GET16SISSClkD2_ctrl_ClkSwitch(r16)               _BFGET_(r16, 5, 5)
    #define   SET16SISSClkD2_ctrl_ClkSwitch(r16,v)             _BFSET_(r16, 5, 5,v)

    #define   GET32SISSClkD2_ctrl_ClkD3Switch(r32)             _BFGET_(r32, 6, 6)
    #define   SET32SISSClkD2_ctrl_ClkD3Switch(r32,v)           _BFSET_(r32, 6, 6,v)
    #define   GET16SISSClkD2_ctrl_ClkD3Switch(r16)             _BFGET_(r16, 6, 6)
    #define   SET16SISSClkD2_ctrl_ClkD3Switch(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32SISSClkD2_ctrl_ClkSel(r32)                  _BFGET_(r32, 9, 7)
    #define   SET32SISSClkD2_ctrl_ClkSel(r32,v)                _BFSET_(r32, 9, 7,v)
    #define   GET16SISSClkD2_ctrl_ClkSel(r16)                  _BFGET_(r16, 9, 7)
    #define   SET16SISSClkD2_ctrl_ClkSel(r16,v)                _BFSET_(r16, 9, 7,v)

    #define     w32SISSClkD2_ctrl                              {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32SISSClkD2_ctrl;
            struct w32SISSClkD2_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SISSClkD2;

    typedef union  T32SISSClkD2_ctrl
          { UNSG32 u32;
            struct w32SISSClkD2_ctrl;
                 } T32SISSClkD2_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TSISSClkD2_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32SISSClkD2_ctrl;
                   };
                 } TSISSClkD2_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 SISSClkD2_drvrd(SIE_SISSClkD2 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SISSClkD2_drvwr(SIE_SISSClkD2 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SISSClkD2_reset(SIE_SISSClkD2 *p);
     SIGN32 SISSClkD2_cmp  (SIE_SISSClkD2 *p, SIE_SISSClkD2 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SISSClkD2_check(p,pie,pfx,hLOG) SISSClkD2_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SISSClkD2_print(p,    pfx,hLOG) SISSClkD2_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SISSClkD2
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SISSClkD3                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = AVPLL1 PLLOUT
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SIPLL PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x1
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x1
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                    : d24                       0x6
///                                    : d48                       0x7
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6:  Divide by 24
///                                                 * 7:  Divide by 48
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SISSClkD3
#define h_SISSClkD3 (){}

    #define     RA_SISSClkD3_ctrl                              0x0000

    #define     BA_SISSClkD3_ctrl_ClkEn                        0x0000
    #define     B16SISSClkD3_ctrl_ClkEn                        0x0000
    #define   LSb32SISSClkD3_ctrl_ClkEn                           0
    #define   LSb16SISSClkD3_ctrl_ClkEn                           0
    #define       bSISSClkD3_ctrl_ClkEn                        1
    #define   MSK32SISSClkD3_ctrl_ClkEn                           0x00000001
    #define        SISSClkD3_ctrl_ClkEn_enable                              0x1
    #define        SISSClkD3_ctrl_ClkEn_disable                             0x0

    #define     BA_SISSClkD3_ctrl_ClkPllSel                    0x0000
    #define     B16SISSClkD3_ctrl_ClkPllSel                    0x0000
    #define   LSb32SISSClkD3_ctrl_ClkPllSel                       1
    #define   LSb16SISSClkD3_ctrl_ClkPllSel                       1
    #define       bSISSClkD3_ctrl_ClkPllSel                    3
    #define   MSK32SISSClkD3_ctrl_ClkPllSel                       0x0000000E
    #define        SISSClkD3_ctrl_ClkPllSel_CLKSRC0                         0x0
    #define        SISSClkD3_ctrl_ClkPllSel_CLKSRC1                         0x1
    #define        SISSClkD3_ctrl_ClkPllSel_CLKSRC2                         0x2
    #define        SISSClkD3_ctrl_ClkPllSel_CLKSRC3                         0x3
    #define        SISSClkD3_ctrl_ClkPllSel_CLKSRC4                         0x4

    #define     BA_SISSClkD3_ctrl_ClkPllSwitch                 0x0000
    #define     B16SISSClkD3_ctrl_ClkPllSwitch                 0x0000
    #define   LSb32SISSClkD3_ctrl_ClkPllSwitch                    4
    #define   LSb16SISSClkD3_ctrl_ClkPllSwitch                    4
    #define       bSISSClkD3_ctrl_ClkPllSwitch                 1
    #define   MSK32SISSClkD3_ctrl_ClkPllSwitch                    0x00000010
    #define        SISSClkD3_ctrl_ClkPllSwitch_SYSPLL                       0x0
    #define        SISSClkD3_ctrl_ClkPllSwitch_ALTPLL                       0x1

    #define     BA_SISSClkD3_ctrl_ClkSwitch                    0x0000
    #define     B16SISSClkD3_ctrl_ClkSwitch                    0x0000
    #define   LSb32SISSClkD3_ctrl_ClkSwitch                       5
    #define   LSb16SISSClkD3_ctrl_ClkSwitch                       5
    #define       bSISSClkD3_ctrl_ClkSwitch                    1
    #define   MSK32SISSClkD3_ctrl_ClkSwitch                       0x00000020
    #define        SISSClkD3_ctrl_ClkSwitch_SrcClk                          0x0
    #define        SISSClkD3_ctrl_ClkSwitch_DivClk                          0x1

    #define     BA_SISSClkD3_ctrl_ClkD3Switch                  0x0000
    #define     B16SISSClkD3_ctrl_ClkD3Switch                  0x0000
    #define   LSb32SISSClkD3_ctrl_ClkD3Switch                     6
    #define   LSb16SISSClkD3_ctrl_ClkD3Switch                     6
    #define       bSISSClkD3_ctrl_ClkD3Switch                  1
    #define   MSK32SISSClkD3_ctrl_ClkD3Switch                     0x00000040
    #define        SISSClkD3_ctrl_ClkD3Switch_NonDiv3Clk                    0x0
    #define        SISSClkD3_ctrl_ClkD3Switch_Div3Clk                       0x1

    #define     BA_SISSClkD3_ctrl_ClkSel                       0x0000
    #define     B16SISSClkD3_ctrl_ClkSel                       0x0000
    #define   LSb32SISSClkD3_ctrl_ClkSel                          7
    #define   LSb16SISSClkD3_ctrl_ClkSel                          7
    #define       bSISSClkD3_ctrl_ClkSel                       3
    #define   MSK32SISSClkD3_ctrl_ClkSel                          0x00000380
    #define        SISSClkD3_ctrl_ClkSel_d2                                 0x1
    #define        SISSClkD3_ctrl_ClkSel_d4                                 0x2
    #define        SISSClkD3_ctrl_ClkSel_d6                                 0x3
    #define        SISSClkD3_ctrl_ClkSel_d8                                 0x4
    #define        SISSClkD3_ctrl_ClkSel_d12                                0x5
    #define        SISSClkD3_ctrl_ClkSel_d24                                0x6
    #define        SISSClkD3_ctrl_ClkSel_d48                                0x7
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SISSClkD3 {
    ///////////////////////////////////////////////////////////
    #define   GET32SISSClkD3_ctrl_ClkEn(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32SISSClkD3_ctrl_ClkEn(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16SISSClkD3_ctrl_ClkEn(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16SISSClkD3_ctrl_ClkEn(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32SISSClkD3_ctrl_ClkPllSel(r32)               _BFGET_(r32, 3, 1)
    #define   SET32SISSClkD3_ctrl_ClkPllSel(r32,v)             _BFSET_(r32, 3, 1,v)
    #define   GET16SISSClkD3_ctrl_ClkPllSel(r16)               _BFGET_(r16, 3, 1)
    #define   SET16SISSClkD3_ctrl_ClkPllSel(r16,v)             _BFSET_(r16, 3, 1,v)

    #define   GET32SISSClkD3_ctrl_ClkPllSwitch(r32)            _BFGET_(r32, 4, 4)
    #define   SET32SISSClkD3_ctrl_ClkPllSwitch(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16SISSClkD3_ctrl_ClkPllSwitch(r16)            _BFGET_(r16, 4, 4)
    #define   SET16SISSClkD3_ctrl_ClkPllSwitch(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32SISSClkD3_ctrl_ClkSwitch(r32)               _BFGET_(r32, 5, 5)
    #define   SET32SISSClkD3_ctrl_ClkSwitch(r32,v)             _BFSET_(r32, 5, 5,v)
    #define   GET16SISSClkD3_ctrl_ClkSwitch(r16)               _BFGET_(r16, 5, 5)
    #define   SET16SISSClkD3_ctrl_ClkSwitch(r16,v)             _BFSET_(r16, 5, 5,v)

    #define   GET32SISSClkD3_ctrl_ClkD3Switch(r32)             _BFGET_(r32, 6, 6)
    #define   SET32SISSClkD3_ctrl_ClkD3Switch(r32,v)           _BFSET_(r32, 6, 6,v)
    #define   GET16SISSClkD3_ctrl_ClkD3Switch(r16)             _BFGET_(r16, 6, 6)
    #define   SET16SISSClkD3_ctrl_ClkD3Switch(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32SISSClkD3_ctrl_ClkSel(r32)                  _BFGET_(r32, 9, 7)
    #define   SET32SISSClkD3_ctrl_ClkSel(r32,v)                _BFSET_(r32, 9, 7,v)
    #define   GET16SISSClkD3_ctrl_ClkSel(r16)                  _BFGET_(r16, 9, 7)
    #define   SET16SISSClkD3_ctrl_ClkSel(r16,v)                _BFSET_(r16, 9, 7,v)

    #define     w32SISSClkD3_ctrl                              {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32SISSClkD3_ctrl;
            struct w32SISSClkD3_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SISSClkD3;

    typedef union  T32SISSClkD3_ctrl
          { UNSG32 u32;
            struct w32SISSClkD3_ctrl;
                 } T32SISSClkD3_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TSISSClkD3_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32SISSClkD3_ctrl;
                   };
                 } TSISSClkD3_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 SISSClkD3_drvrd(SIE_SISSClkD3 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SISSClkD3_drvwr(SIE_SISSClkD3 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SISSClkD3_reset(SIE_SISSClkD3 *p);
     SIGN32 SISSClkD3_cmp  (SIE_SISSClkD3 *p, SIE_SISSClkD3 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SISSClkD3_check(p,pie,pfx,hLOG) SISSClkD3_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SISSClkD3_print(p,    pfx,hLOG) SISSClkD3_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SISSClkD3
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE SISSClkD4                                (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ctrl                 (P-)
///               ###
///               * Control register
///               ###
///               %unsigned 1  ClkEn                     0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 *  Clock enable register
///                                                 * 0:  Disable
///                                                 * 1:  Enable (default)
///                                                 ###
///               %unsigned 3  ClkPllSel                 0x4
///                                    : CLKSRC0                   0x0
///                                    : CLKSRC1                   0x1
///                                    : CLKSRC2                   0x2
///                                    : CLKSRC3                   0x3
///                                    : CLKSRC4                   0x4
///                                                 ###
///                                                 * Clock source selection
///                                                 * 0: CLKSRC0 = SYSPLL0 PLLOUT
///                                                 * 1: CLKSRC1 = SIPLL PLLOUT
///                                                 * 2: CLKSRC2 = SYSPLL1 PLLOUT
///                                                 * 3: CLKSRC3 = AVPLL0 PLLOUT
///                                                 * 4: CLKSRC4 = AVPLL1 PLLOUT
///                                                 * 5-7: Reserved
///                                                 ###
///               %unsigned 1  ClkPllSwitch              0x0
///                                    : SYSPLL                    0x0
///                                    : ALTPLL                    0x1
///                                                 ###
///                                                 * Switch to select between SYSPLL or AVPLL as a clock source
///                                                 * 0:  SIPLL PLLOUTF (default)
///                                                 * 1:  ALTPLL (selected output of ClkPllSel mux)
///                                                 ###
///               %unsigned 1  ClkSwitch                 0x1
///                                    : SrcClk                    0x0
///                                    : DivClk                    0x1
///                                                 ###
///                                                 * Clock divider switch select
///                                                 * 0: No divider
///                                                 * 1: Use Divider  (default)
///                                                 ###
///               %unsigned 1  ClkD3Switch               0x0
///                                    : NonDiv3Clk                0x0
///                                    : Div3Clk                   0x1
///                                                 ###
///                                                 *  Divide by 3 clock  switch
///                                                 * 0:  No Divide by 3  (default)
///                                                 * 1:  Use Divide by 3
///                                                 ###
///               %unsigned 3  ClkSel                    0x2
///                                    : d2                        0x1
///                                    : d4                        0x2
///                                    : d6                        0x3
///                                    : d8                        0x4
///                                    : d12                       0x5
///                                                 ###
///                                                 * Clock divider  Selection
///                                                 * 0:  Reserved
///                                                 * 1:  Divide by 2 ( default)
///                                                 * 2:  Divide by 4
///                                                 * 3:  Divide by 6
///                                                 * 4:  Divide by 8
///                                                 * 5:  Divide by 12
///                                                 * 6-7:  Reserved
///                                                 ###
///               %%        22         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:       4B, bits:      10b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_SISSClkD4
#define h_SISSClkD4 (){}

    #define     RA_SISSClkD4_ctrl                              0x0000

    #define     BA_SISSClkD4_ctrl_ClkEn                        0x0000
    #define     B16SISSClkD4_ctrl_ClkEn                        0x0000
    #define   LSb32SISSClkD4_ctrl_ClkEn                           0
    #define   LSb16SISSClkD4_ctrl_ClkEn                           0
    #define       bSISSClkD4_ctrl_ClkEn                        1
    #define   MSK32SISSClkD4_ctrl_ClkEn                           0x00000001
    #define        SISSClkD4_ctrl_ClkEn_enable                              0x1
    #define        SISSClkD4_ctrl_ClkEn_disable                             0x0

    #define     BA_SISSClkD4_ctrl_ClkPllSel                    0x0000
    #define     B16SISSClkD4_ctrl_ClkPllSel                    0x0000
    #define   LSb32SISSClkD4_ctrl_ClkPllSel                       1
    #define   LSb16SISSClkD4_ctrl_ClkPllSel                       1
    #define       bSISSClkD4_ctrl_ClkPllSel                    3
    #define   MSK32SISSClkD4_ctrl_ClkPllSel                       0x0000000E
    #define        SISSClkD4_ctrl_ClkPllSel_CLKSRC0                         0x0
    #define        SISSClkD4_ctrl_ClkPllSel_CLKSRC1                         0x1
    #define        SISSClkD4_ctrl_ClkPllSel_CLKSRC2                         0x2
    #define        SISSClkD4_ctrl_ClkPllSel_CLKSRC3                         0x3
    #define        SISSClkD4_ctrl_ClkPllSel_CLKSRC4                         0x4

    #define     BA_SISSClkD4_ctrl_ClkPllSwitch                 0x0000
    #define     B16SISSClkD4_ctrl_ClkPllSwitch                 0x0000
    #define   LSb32SISSClkD4_ctrl_ClkPllSwitch                    4
    #define   LSb16SISSClkD4_ctrl_ClkPllSwitch                    4
    #define       bSISSClkD4_ctrl_ClkPllSwitch                 1
    #define   MSK32SISSClkD4_ctrl_ClkPllSwitch                    0x00000010
    #define        SISSClkD4_ctrl_ClkPllSwitch_SYSPLL                       0x0
    #define        SISSClkD4_ctrl_ClkPllSwitch_ALTPLL                       0x1

    #define     BA_SISSClkD4_ctrl_ClkSwitch                    0x0000
    #define     B16SISSClkD4_ctrl_ClkSwitch                    0x0000
    #define   LSb32SISSClkD4_ctrl_ClkSwitch                       5
    #define   LSb16SISSClkD4_ctrl_ClkSwitch                       5
    #define       bSISSClkD4_ctrl_ClkSwitch                    1
    #define   MSK32SISSClkD4_ctrl_ClkSwitch                       0x00000020
    #define        SISSClkD4_ctrl_ClkSwitch_SrcClk                          0x0
    #define        SISSClkD4_ctrl_ClkSwitch_DivClk                          0x1

    #define     BA_SISSClkD4_ctrl_ClkD3Switch                  0x0000
    #define     B16SISSClkD4_ctrl_ClkD3Switch                  0x0000
    #define   LSb32SISSClkD4_ctrl_ClkD3Switch                     6
    #define   LSb16SISSClkD4_ctrl_ClkD3Switch                     6
    #define       bSISSClkD4_ctrl_ClkD3Switch                  1
    #define   MSK32SISSClkD4_ctrl_ClkD3Switch                     0x00000040
    #define        SISSClkD4_ctrl_ClkD3Switch_NonDiv3Clk                    0x0
    #define        SISSClkD4_ctrl_ClkD3Switch_Div3Clk                       0x1

    #define     BA_SISSClkD4_ctrl_ClkSel                       0x0000
    #define     B16SISSClkD4_ctrl_ClkSel                       0x0000
    #define   LSb32SISSClkD4_ctrl_ClkSel                          7
    #define   LSb16SISSClkD4_ctrl_ClkSel                          7
    #define       bSISSClkD4_ctrl_ClkSel                       3
    #define   MSK32SISSClkD4_ctrl_ClkSel                          0x00000380
    #define        SISSClkD4_ctrl_ClkSel_d2                                 0x1
    #define        SISSClkD4_ctrl_ClkSel_d4                                 0x2
    #define        SISSClkD4_ctrl_ClkSel_d6                                 0x3
    #define        SISSClkD4_ctrl_ClkSel_d8                                 0x4
    #define        SISSClkD4_ctrl_ClkSel_d12                                0x5
    ///////////////////////////////////////////////////////////

    typedef struct SIE_SISSClkD4 {
    ///////////////////////////////////////////////////////////
    #define   GET32SISSClkD4_ctrl_ClkEn(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32SISSClkD4_ctrl_ClkEn(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16SISSClkD4_ctrl_ClkEn(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16SISSClkD4_ctrl_ClkEn(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32SISSClkD4_ctrl_ClkPllSel(r32)               _BFGET_(r32, 3, 1)
    #define   SET32SISSClkD4_ctrl_ClkPllSel(r32,v)             _BFSET_(r32, 3, 1,v)
    #define   GET16SISSClkD4_ctrl_ClkPllSel(r16)               _BFGET_(r16, 3, 1)
    #define   SET16SISSClkD4_ctrl_ClkPllSel(r16,v)             _BFSET_(r16, 3, 1,v)

    #define   GET32SISSClkD4_ctrl_ClkPllSwitch(r32)            _BFGET_(r32, 4, 4)
    #define   SET32SISSClkD4_ctrl_ClkPllSwitch(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16SISSClkD4_ctrl_ClkPllSwitch(r16)            _BFGET_(r16, 4, 4)
    #define   SET16SISSClkD4_ctrl_ClkPllSwitch(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32SISSClkD4_ctrl_ClkSwitch(r32)               _BFGET_(r32, 5, 5)
    #define   SET32SISSClkD4_ctrl_ClkSwitch(r32,v)             _BFSET_(r32, 5, 5,v)
    #define   GET16SISSClkD4_ctrl_ClkSwitch(r16)               _BFGET_(r16, 5, 5)
    #define   SET16SISSClkD4_ctrl_ClkSwitch(r16,v)             _BFSET_(r16, 5, 5,v)

    #define   GET32SISSClkD4_ctrl_ClkD3Switch(r32)             _BFGET_(r32, 6, 6)
    #define   SET32SISSClkD4_ctrl_ClkD3Switch(r32,v)           _BFSET_(r32, 6, 6,v)
    #define   GET16SISSClkD4_ctrl_ClkD3Switch(r16)             _BFGET_(r16, 6, 6)
    #define   SET16SISSClkD4_ctrl_ClkD3Switch(r16,v)           _BFSET_(r16, 6, 6,v)

    #define   GET32SISSClkD4_ctrl_ClkSel(r32)                  _BFGET_(r32, 9, 7)
    #define   SET32SISSClkD4_ctrl_ClkSel(r32,v)                _BFSET_(r32, 9, 7,v)
    #define   GET16SISSClkD4_ctrl_ClkSel(r16)                  _BFGET_(r16, 9, 7)
    #define   SET16SISSClkD4_ctrl_ClkSel(r16,v)                _BFSET_(r16, 9, 7,v)

    #define     w32SISSClkD4_ctrl                              {\
            UNSG32 uctrl_ClkEn                                 :  1;\
            UNSG32 uctrl_ClkPllSel                             :  3;\
            UNSG32 uctrl_ClkPllSwitch                          :  1;\
            UNSG32 uctrl_ClkSwitch                             :  1;\
            UNSG32 uctrl_ClkD3Switch                           :  1;\
            UNSG32 uctrl_ClkSel                                :  3;\
            UNSG32 RSVDx0_b10                                  : 22;\
          }
    union { UNSG32 u32SISSClkD4_ctrl;
            struct w32SISSClkD4_ctrl;
          };
    ///////////////////////////////////////////////////////////
    } SIE_SISSClkD4;

    typedef union  T32SISSClkD4_ctrl
          { UNSG32 u32;
            struct w32SISSClkD4_ctrl;
                 } T32SISSClkD4_ctrl;
    ///////////////////////////////////////////////////////////

    typedef union  TSISSClkD4_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32SISSClkD4_ctrl;
                   };
                 } TSISSClkD4_ctrl;

    ///////////////////////////////////////////////////////////
     SIGN32 SISSClkD4_drvrd(SIE_SISSClkD4 *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 SISSClkD4_drvwr(SIE_SISSClkD4 *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void SISSClkD4_reset(SIE_SISSClkD4 *p);
     SIGN32 SISSClkD4_cmp  (SIE_SISSClkD4 *p, SIE_SISSClkD4 *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define SISSClkD4_check(p,pie,pfx,hLOG) SISSClkD4_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define SISSClkD4_print(p,    pfx,hLOG) SISSClkD4_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: SISSClkD4
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE PERIF                   biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 PHY_DBG_CTRL         (P)
///               %unsigned 3  perif_dbg_sel             0x0
///                                    ###
///                                    * 3'b000 : usb3Top debug bus
///                                    * 3'b001 : usb OTG debug bus
///                                    * 3'b010: PCIe debug bus
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00004 IP_CTRL              (P)
///               %unsigned 1  RGMII_TXC_90DEG_SEL       0x0
///                                    ###
///                                    * 0: Same clock as internal clock to TXC
///                                    * 1:  90 deg phase shifted clock from internal clock on to TXC
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00008 GETH_RGMII_CTRL      (P)
///               %unsigned 1  IFC_SEL                   0x1
///                                    ###
///                                    * 1 - RGMII Interfae Active
///                                    * 0 - RMII Interface Active
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x0000C SDIO_SIG_CTRL        (P)
///               %unsigned 1  SDIO_CDn_SW_CTRL          0x0
///                                    ###
///                                    * 0: CDn software control is 0 and input Pin value will be passed
///                                    * to controller
///                                    * 1:  CDn value will be force to 1
///                                    ###
///               %unsigned 1  SDIO_WP_SW_CTRL           0x0
///                                    ###
///                                    * 0: WP software control is 0 and input Pin value will be passed
///                                    * to controller
///                                    * 1:  WP value will be force to 1
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00010 RSERVED_CTRL0        (P)
///               ###
///               * Not used, may be used for ECOs
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 32 ctrl                      0x0
///                                    ###
///                                    * Not used.
///                                    ###
///     @ 0x00014 SDIO_TST_CTL         (P)
///               %unsigned 1  SDIO_PHY_TST_INTF_SEL     0x0
///                                    ###
///                                    * This bit is used to select the test interface (SOC_GPIO[69:64])
///                                    * on to SDIO PHY clock and Data.
///                                    ###
///               %unsigned 1  SDIO_PHY_TST_PAD_MODE     0x0
///                                    ###
///                                    * This bit is used to select the pad mode when Test interface is
///                                    * selected
///                                    ###
///               %unsigned 1  SDIO_PHY_TST_DLOUT_EN     0x0
///                                    ###
///                                    * This bit is used to select the delay outputs on SDIO PHY during
///                                    * test interface selection
///                                    ###
///               %%        29         # Stuffing bits...
///     @ 0x00018 EMMC_TST_CTL         (P)
///               %unsigned 1  EMMC_PHY_TST_INTF_SEL     0x0
///                                    ###
///                                    * This bit is used to select the test interface (SOC_GPIO[81:70])
///                                    * on to EMMC PHY clock and Data.
///                                    ###
///               %unsigned 1  EMMC_PHY_TST_PAD_MODE     0x0
///                                    ###
///                                    * This bit is used to select the pad mode when Test interface is
///                                    * selected
///                                    ###
///               %unsigned 1  EMMC_PHY_TST_DLOUT_EN     0x0
///                                    ###
///                                    * This bit is used to select the delay outputs on EMMC PHY during
///                                    * test interface selection
///                                    ###
///               %unsigned 1  EMMC_PHY_TST_LBT_RESETN   0x0
///                                    ###
///                                    * This bit is used to reset the EMMC Loop back test circuit
///                                    ###
///               %%        28         # Stuffing bits...
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:      28B, bits:      46b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_PERIF
#define h_PERIF (){}

    #define     RA_PERIF_PHY_DBG_CTRL                          0x0000

    #define     BA_PERIF_PHY_DBG_CTRL_perif_dbg_sel            0x0000
    #define     B16PERIF_PHY_DBG_CTRL_perif_dbg_sel            0x0000
    #define   LSb32PERIF_PHY_DBG_CTRL_perif_dbg_sel               0
    #define   LSb16PERIF_PHY_DBG_CTRL_perif_dbg_sel               0
    #define       bPERIF_PHY_DBG_CTRL_perif_dbg_sel            3
    #define   MSK32PERIF_PHY_DBG_CTRL_perif_dbg_sel               0x00000007
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_IP_CTRL                               0x0004

    #define     BA_PERIF_IP_CTRL_RGMII_TXC_90DEG_SEL           0x0004
    #define     B16PERIF_IP_CTRL_RGMII_TXC_90DEG_SEL           0x0004
    #define   LSb32PERIF_IP_CTRL_RGMII_TXC_90DEG_SEL              0
    #define   LSb16PERIF_IP_CTRL_RGMII_TXC_90DEG_SEL              0
    #define       bPERIF_IP_CTRL_RGMII_TXC_90DEG_SEL           1
    #define   MSK32PERIF_IP_CTRL_RGMII_TXC_90DEG_SEL              0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_GETH_RGMII_CTRL                       0x0008

    #define     BA_PERIF_GETH_RGMII_CTRL_IFC_SEL               0x0008
    #define     B16PERIF_GETH_RGMII_CTRL_IFC_SEL               0x0008
    #define   LSb32PERIF_GETH_RGMII_CTRL_IFC_SEL                  0
    #define   LSb16PERIF_GETH_RGMII_CTRL_IFC_SEL                  0
    #define       bPERIF_GETH_RGMII_CTRL_IFC_SEL               1
    #define   MSK32PERIF_GETH_RGMII_CTRL_IFC_SEL                  0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_SDIO_SIG_CTRL                         0x000C

    #define     BA_PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL        0x000C
    #define     B16PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL        0x000C
    #define   LSb32PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL           0
    #define   LSb16PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL           0
    #define       bPERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL        1
    #define   MSK32PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL           0x00000001

    #define     BA_PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL         0x000C
    #define     B16PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL         0x000C
    #define   LSb32PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL            1
    #define   LSb16PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL            1
    #define       bPERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL         1
    #define   MSK32PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL            0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_RSERVED_CTRL0                         0x0010

    #define     BA_PERIF_RSERVED_CTRL0_ctrl                    0x0010
    #define     B16PERIF_RSERVED_CTRL0_ctrl                    0x0010
    #define   LSb32PERIF_RSERVED_CTRL0_ctrl                       0
    #define   LSb16PERIF_RSERVED_CTRL0_ctrl                       0
    #define       bPERIF_RSERVED_CTRL0_ctrl                    32
    #define   MSK32PERIF_RSERVED_CTRL0_ctrl                       0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_SDIO_TST_CTL                          0x0014

    #define     BA_PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL    0x0014
    #define     B16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL    0x0014
    #define   LSb32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL       0
    #define   LSb16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL       0
    #define       bPERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL    1
    #define   MSK32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL       0x00000001

    #define     BA_PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE    0x0014
    #define     B16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE    0x0014
    #define   LSb32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE       1
    #define   LSb16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE       1
    #define       bPERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE    1
    #define   MSK32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE       0x00000002

    #define     BA_PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN    0x0014
    #define     B16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN    0x0014
    #define   LSb32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN       2
    #define   LSb16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN       2
    #define       bPERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN    1
    #define   MSK32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN       0x00000004
    ///////////////////////////////////////////////////////////
    #define     RA_PERIF_EMMC_TST_CTL                          0x0018

    #define     BA_PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL    0x0018
    #define     B16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL    0x0018
    #define   LSb32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL       0
    #define   LSb16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL       0
    #define       bPERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL    1
    #define   MSK32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL       0x00000001

    #define     BA_PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE    0x0018
    #define     B16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE    0x0018
    #define   LSb32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE       1
    #define   LSb16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE       1
    #define       bPERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE    1
    #define   MSK32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE       0x00000002

    #define     BA_PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN    0x0018
    #define     B16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN    0x0018
    #define   LSb32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN       2
    #define   LSb16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN       2
    #define       bPERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN    1
    #define   MSK32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN       0x00000004

    #define     BA_PERIF_EMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN  0x0018
    #define     B16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN  0x0018
    #define   LSb32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN     3
    #define   LSb16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN     3
    #define       bPERIF_EMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN  1
    #define   MSK32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN     0x00000008
    ///////////////////////////////////////////////////////////

    typedef struct SIE_PERIF {
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_PHY_DBG_CTRL_perif_dbg_sel(r32)       _BFGET_(r32, 2, 0)
    #define   SET32PERIF_PHY_DBG_CTRL_perif_dbg_sel(r32,v)     _BFSET_(r32, 2, 0,v)
    #define   GET16PERIF_PHY_DBG_CTRL_perif_dbg_sel(r16)       _BFGET_(r16, 2, 0)
    #define   SET16PERIF_PHY_DBG_CTRL_perif_dbg_sel(r16,v)     _BFSET_(r16, 2, 0,v)

    #define     w32PERIF_PHY_DBG_CTRL                          {\
            UNSG32 uPHY_DBG_CTRL_perif_dbg_sel                 :  3;\
            UNSG32 RSVDx0_b3                                   : 29;\
          }
    union { UNSG32 u32PERIF_PHY_DBG_CTRL;
            struct w32PERIF_PHY_DBG_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_IP_CTRL_RGMII_TXC_90DEG_SEL(r32)      _BFGET_(r32, 0, 0)
    #define   SET32PERIF_IP_CTRL_RGMII_TXC_90DEG_SEL(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16PERIF_IP_CTRL_RGMII_TXC_90DEG_SEL(r16)      _BFGET_(r16, 0, 0)
    #define   SET16PERIF_IP_CTRL_RGMII_TXC_90DEG_SEL(r16,v)    _BFSET_(r16, 0, 0,v)

    #define     w32PERIF_IP_CTRL                               {\
            UNSG32 uIP_CTRL_RGMII_TXC_90DEG_SEL                :  1;\
            UNSG32 RSVDx4_b1                                   : 31;\
          }
    union { UNSG32 u32PERIF_IP_CTRL;
            struct w32PERIF_IP_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_GETH_RGMII_CTRL_IFC_SEL(r32)          _BFGET_(r32, 0, 0)
    #define   SET32PERIF_GETH_RGMII_CTRL_IFC_SEL(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16PERIF_GETH_RGMII_CTRL_IFC_SEL(r16)          _BFGET_(r16, 0, 0)
    #define   SET16PERIF_GETH_RGMII_CTRL_IFC_SEL(r16,v)        _BFSET_(r16, 0, 0,v)

    #define     w32PERIF_GETH_RGMII_CTRL                       {\
            UNSG32 uGETH_RGMII_CTRL_IFC_SEL                    :  1;\
            UNSG32 RSVDx8_b1                                   : 31;\
          }
    union { UNSG32 u32PERIF_GETH_RGMII_CTRL;
            struct w32PERIF_GETH_RGMII_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL(r32)   _BFGET_(r32, 0, 0)
    #define   SET32PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL(r16)   _BFGET_(r16, 0, 0)
    #define   SET16PERIF_SDIO_SIG_CTRL_SDIO_CDn_SW_CTRL(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL(r32)    _BFGET_(r32, 1, 1)
    #define   SET32PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL(r32,v)  _BFSET_(r32, 1, 1,v)
    #define   GET16PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL(r16)    _BFGET_(r16, 1, 1)
    #define   SET16PERIF_SDIO_SIG_CTRL_SDIO_WP_SW_CTRL(r16,v)  _BFSET_(r16, 1, 1,v)

    #define     w32PERIF_SDIO_SIG_CTRL                         {\
            UNSG32 uSDIO_SIG_CTRL_SDIO_CDn_SW_CTRL             :  1;\
            UNSG32 uSDIO_SIG_CTRL_SDIO_WP_SW_CTRL              :  1;\
            UNSG32 RSVDxC_b2                                   : 30;\
          }
    union { UNSG32 u32PERIF_SDIO_SIG_CTRL;
            struct w32PERIF_SDIO_SIG_CTRL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_RSERVED_CTRL0_ctrl(r32)               _BFGET_(r32,31, 0)
    #define   SET32PERIF_RSERVED_CTRL0_ctrl(r32,v)             _BFSET_(r32,31, 0,v)

    #define     w32PERIF_RSERVED_CTRL0                         {\
            UNSG32 uRSERVED_CTRL0_ctrl                         : 32;\
          }
    union { UNSG32 u32PERIF_RSERVED_CTRL0;
            struct w32PERIF_RSERVED_CTRL0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL(r32) _BFGET_(r32, 0, 0)
    #define   SET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL(r16) _BFGET_(r16, 0, 0)
    #define   SET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE(r32) _BFGET_(r32, 1, 1)
    #define   SET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE(r16) _BFGET_(r16, 1, 1)
    #define   SET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN(r32) _BFGET_(r32, 2, 2)
    #define   SET32PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN(r16) _BFGET_(r16, 2, 2)
    #define   SET16PERIF_SDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN(r16,v) _BFSET_(r16, 2, 2,v)

    #define     w32PERIF_SDIO_TST_CTL                          {\
            UNSG32 uSDIO_TST_CTL_SDIO_PHY_TST_INTF_SEL         :  1;\
            UNSG32 uSDIO_TST_CTL_SDIO_PHY_TST_PAD_MODE         :  1;\
            UNSG32 uSDIO_TST_CTL_SDIO_PHY_TST_DLOUT_EN         :  1;\
            UNSG32 RSVDx14_b3                                  : 29;\
          }
    union { UNSG32 u32PERIF_SDIO_TST_CTL;
            struct w32PERIF_SDIO_TST_CTL;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL(r32) _BFGET_(r32, 0, 0)
    #define   SET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL(r16) _BFGET_(r16, 0, 0)
    #define   SET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE(r32) _BFGET_(r32, 1, 1)
    #define   SET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE(r16) _BFGET_(r16, 1, 1)
    #define   SET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN(r32) _BFGET_(r32, 2, 2)
    #define   SET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN(r16) _BFGET_(r16, 2, 2)
    #define   SET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN(r16,v) _BFSET_(r16, 2, 2,v)

    #define   GET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN(r32) _BFGET_(r32, 3, 3)
    #define   SET32PERIF_EMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN(r16) _BFGET_(r16, 3, 3)
    #define   SET16PERIF_EMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN(r16,v) _BFSET_(r16, 3, 3,v)

    #define     w32PERIF_EMMC_TST_CTL                          {\
            UNSG32 uEMMC_TST_CTL_EMMC_PHY_TST_INTF_SEL         :  1;\
            UNSG32 uEMMC_TST_CTL_EMMC_PHY_TST_PAD_MODE         :  1;\
            UNSG32 uEMMC_TST_CTL_EMMC_PHY_TST_DLOUT_EN         :  1;\
            UNSG32 uEMMC_TST_CTL_EMMC_PHY_TST_LBT_RESETN       :  1;\
            UNSG32 RSVDx18_b4                                  : 28;\
          }
    union { UNSG32 u32PERIF_EMMC_TST_CTL;
            struct w32PERIF_EMMC_TST_CTL;
          };
    ///////////////////////////////////////////////////////////
    } SIE_PERIF;

    typedef union  T32PERIF_PHY_DBG_CTRL
          { UNSG32 u32;
            struct w32PERIF_PHY_DBG_CTRL;
                 } T32PERIF_PHY_DBG_CTRL;
    typedef union  T32PERIF_IP_CTRL
          { UNSG32 u32;
            struct w32PERIF_IP_CTRL;
                 } T32PERIF_IP_CTRL;
    typedef union  T32PERIF_GETH_RGMII_CTRL
          { UNSG32 u32;
            struct w32PERIF_GETH_RGMII_CTRL;
                 } T32PERIF_GETH_RGMII_CTRL;
    typedef union  T32PERIF_SDIO_SIG_CTRL
          { UNSG32 u32;
            struct w32PERIF_SDIO_SIG_CTRL;
                 } T32PERIF_SDIO_SIG_CTRL;
    typedef union  T32PERIF_RSERVED_CTRL0
          { UNSG32 u32;
            struct w32PERIF_RSERVED_CTRL0;
                 } T32PERIF_RSERVED_CTRL0;
    typedef union  T32PERIF_SDIO_TST_CTL
          { UNSG32 u32;
            struct w32PERIF_SDIO_TST_CTL;
                 } T32PERIF_SDIO_TST_CTL;
    typedef union  T32PERIF_EMMC_TST_CTL
          { UNSG32 u32;
            struct w32PERIF_EMMC_TST_CTL;
                 } T32PERIF_EMMC_TST_CTL;
    ///////////////////////////////////////////////////////////

    typedef union  TPERIF_PHY_DBG_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32PERIF_PHY_DBG_CTRL;
                   };
                 } TPERIF_PHY_DBG_CTRL;
    typedef union  TPERIF_IP_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32PERIF_IP_CTRL;
                   };
                 } TPERIF_IP_CTRL;
    typedef union  TPERIF_GETH_RGMII_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32PERIF_GETH_RGMII_CTRL;
                   };
                 } TPERIF_GETH_RGMII_CTRL;
    typedef union  TPERIF_SDIO_SIG_CTRL
          { UNSG32 u32[1];
            struct {
            struct w32PERIF_SDIO_SIG_CTRL;
                   };
                 } TPERIF_SDIO_SIG_CTRL;
    typedef union  TPERIF_RSERVED_CTRL0
          { UNSG32 u32[1];
            struct {
            struct w32PERIF_RSERVED_CTRL0;
                   };
                 } TPERIF_RSERVED_CTRL0;
    typedef union  TPERIF_SDIO_TST_CTL
          { UNSG32 u32[1];
            struct {
            struct w32PERIF_SDIO_TST_CTL;
                   };
                 } TPERIF_SDIO_TST_CTL;
    typedef union  TPERIF_EMMC_TST_CTL
          { UNSG32 u32[1];
            struct {
            struct w32PERIF_EMMC_TST_CTL;
                   };
                 } TPERIF_EMMC_TST_CTL;

    ///////////////////////////////////////////////////////////
     SIGN32 PERIF_drvrd(SIE_PERIF *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 PERIF_drvwr(SIE_PERIF *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void PERIF_reset(SIE_PERIF *p);
     SIGN32 PERIF_cmp  (SIE_PERIF *p, SIE_PERIF *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define PERIF_check(p,pie,pfx,hLOG) PERIF_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define PERIF_print(p,    pfx,hLOG) PERIF_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: PERIF
////////////////////////////////////////////////////////////

//////
///
/// $INTERFACE Gbl                     biu              (4,4)
///     # # ----------------------------------------------------------
///     @ 0x00000 ProductId            (RNB-)
///               ###
///               * Product ID register
///               ###
///               %unsigned 32 Id
///                                    ###
///                                    * Product ID:
///                                    * [31:28] : Revision Id (0x0)/P
///                                    * [27:12] : Part Number  (0x0680)
///                                    * [11:1] : Manufacture Id (0x588)
///                                    * [0] : Reserved  (0x1)
///                                    ###
///     @ 0x00004 ProductId_ext        (RNB-)
///               ###
///               * Product ID Extension
///               ###
///               %unsigned 8  ID_EXT
///                                    ###
///                                    * ID extension value
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00008 INT_ID               (RNB-)
///               ###
///               * **INTERNAL_ONLY**
///               * Internal ID register
///               ###
///               %unsigned 8  VALUE
///                                    ###
///                                    * Internal ID
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x0000C bootStrap            (R-)
///               ###
///               * Boot Strap Register (Read Only).  Boot straps are latched on
///               * Power On and stored in this register.
///               * This register can be reset only by PAD reset.
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 16 softwareStrap
///                                    ###
///                                    * Straps for software usage
///                                    * BG4CT use the first 4 of them
///                                    ###
///               %unsigned 2  bootSrc
///                                    : ROM_SPI_BOOT              0x0
///                                    : ROM_NAND_BOOT             0x1
///                                    : ROM_EMMC_BOOT             0x2
///                                    : ROM_SPI_DIRECT_BOOT       0x3
///                                                 ###
///                                                 * CPU boot source
///                                                 * 00: ROM boot from SPI
///                                                 * 01: NAND Boot Not used in BG7 (Dolphin)
///                                                 * 10: ROM boot from EMMC
///                                                 * 11: Direct boot from SPI (Only available when ENG_EN=1)
///                                                 * Note: When direct boot from SPI (SPI clear boot), pwrCntlByps
///                                                 * and cpuRstByps should be set to 1
///                                                 ###
///               %unsigned 1  cpuRstByps
///                                    : CPU_INT_RST_BYPS          0x1
///                                    : CPU_INT_RST_EN            0x0
///                                                 ###
///                                                 * CPU reset bypass strap
///                                                 * 1: Bypass reset logic inside CPU partition
///                                                 * 0: Enable reset logic inside CPU partition
///                                                 ###
///               %unsigned 1  pllPwrDown
///                                    : PWR_DOWN                  0x1
///                                    : PWR_UP                    0x0
///                                                 ###
///                                                 * PLL Power Down
///                                                 * SYS/MEM/CPU PLL Power Down
///                                                 * 1: Power Down
///                                                 * 0: Power UP
///                                                 ###
///               %unsigned 1  sysPll_0Byps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * SYSPLL Bypass
///                                                 * 0:  No Bypass
///                                                 * 1:  System PLL Bypassed
///                                                 ###
///               %unsigned 1  sysPll_1Byps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * SYSPLL Bypass
///                                                 * 0:  No Bypass
///                                                 * 1:  System PLL Bypassed
///                                                 ###
///               %unsigned 1  reserve
///                                    ###
///                                    * Reserved
///                                    ###
///               %unsigned 1  memPllByps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * MEMPLL Bypass indicator
///                                                 * 0:  No Bypass
///                                                 * 1:  Memory PLL Bypassed
///                                                 ###
///               %unsigned 1  cpuPllByps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * CPUPLL Bypass indicator
///                                                 * 0:  No Bypass
///                                                 * 1:  CPUPLL Bypassed
///                                                 ###
///               %unsigned 1  ENG_EN
///                                    : PRODUCTION_MODE           0x0
///                                    : DEVELOPE_MODE             0x1
///                                                 ###
///                                                 * Production or development mode. This is not a boot strap bit.
///                                                 * It's a bonding option and only read by AHB.
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  LEGACY_BOOT
///                                    : FAST_BOOT_MODE            0x0
///                                    : LEGACY_BOOT_MODE          0x1
///                                                 ###
///                                                 * Pll lock and reset wait time reduced from 20ms to 2ms.
///                                                 ###
///               %unsigned 1  avPll_0Byps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * AVPLL0 Bypass
///                                                 * 0:  No Bypass
///                                                 * 1:  AVPLL0 Bypassed
///                                                 ###
///               %unsigned 1  avPll_1Byps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * AVPLL1 Bypass
///                                                 * 0:  No Bypass
///                                                 * 1:  AVPLL1 Bypassed
///                                                 ###
///               %%        3          # Stuffing bits...
///     @ 0x00010 bootStrapEn          (P)
///               ###
///               * Boot Strap Enable register
///               * This register provides the option to over write the Bootstraps
///               * using CPU register write
///               ###
///               %unsigned 1  cpuRstBypsEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * CPU Reset Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  pllPwrDownEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * PLL Power Down Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  sysPLL_0BypsEn            0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 *  System PLL0 Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  memPLLBypsEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * Memory PLL Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  cpuPLLBypsEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * CPU PLL Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  legacyBootEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 * Legacy Boot Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  sysPLL_1BypsEn            0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 *  System PLL1 Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  reserve                   0x1
///                                    ###
///                                    *  Reserved
///                                    ###
///               %unsigned 1  avPLL_0BypsEn             0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 *  AVIO PLL0 Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %unsigned 1  avPLL_1BypsEn             0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 *  AVIO PLL1 Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %%        22         # Stuffing bits...
///     @ 0x00014 pkgSel               (R-)
///               ###
///               * package select register (read only)
///               * identify different package
///               ###
///               %unsigned 1  DDR32bit
///                                    ###
///                                    * Form pad PKG_SEL_0
///                                    * 0: 64 bit DDR
///                                    * 1: 32 bit DDR
///                                    * bit 1 reserved
///                                    ###
///               %unsigned 1  reserved
///                                    ###
///                                    * Form pad PKG_SEL_1
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x00018                      (W-)
///     #         # Stuffing bytes...
///               %% 320
///     @ 0x00040 chipCntl             (P-)
///               ###
///               * Misc Chip Control bits
///               ###
///               %unsigned 3  DBG_SEL                   0x0
///                                    ###
///                                    * Debug bus selection.
///                                    * 1: VXGDbg[15:0]
///                                    * 2: NPU_Debug[7:0]
///                                    * 3: ispDebugBus[15:0]
///                                    * 4:perifTop_dbg_bus[15:0]
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 3  PLL_PADDBG_SEL            0x0
///                                    ###
///                                    * Debug selection for PLLOUT from one of the 4 PLL
///                                    * 0: SYSPLL0 PLLOUT
///                                    * 1: SYSPLL1 PLLOUT
///                                    * 2: SIPLL PLLOUT
///                                    * 3: AVPLL1 PLLOUT
///                                    * 4: AVPLL1 PLLOUT
///                                    * *INTERNAL_ONLY**
///                                    ###
///               %unsigned 1  TW1_SEL                   0x0
///                                    ###
///                                    * Selecting TW1 between available A & B ports
///                                    * 0: TW1A selected
///                                    * 1: TW1B Selected
///                                    ###
///               %unsigned 1  URT2_PORT_SEL             0x0
///                                    ###
///                                    * Selecting TW1 between available A & B ports
///                                    * 0: URT2A selected
///                                    * 1: URT2B selected
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00044 stsCntl              (P-)
///               ###
///               * Serial Transport Stream Control
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  sts0TwoWire               0x0
///                                    ###
///                                    * 0: STS 0 Three/Four wire. Valid is connected from Pad
///                                    * 1:STS 0 Two Wire. Valid is forced to 1
///                                    ###
///               %unsigned 1  sts1TwoWire               0x0
///                                    ###
///                                    * 0: STS 1 Three/Four wire. Valid is connected from Pad
///                                    * 1:STS 1 Two Wire. Valid is forced to 1
///                                    ###
///               %unsigned 1  sts2TwoWire               0x1
///                                    ###
///                                    * 0: STS 2 Three wire. Valid is connected from Pad
///                                    * 1:STS 2 Two Wire. Valid is forced to 1
///                                    ###
///               %unsigned 1  sts3TwoWire               0x1
///                                    ###
///                                    * 0: STS 3 Three wire. Valid is connected from Pad
///                                    * 1:STS 3 Two Wire. Valid is forced to 1
///                                    ###
///               %unsigned 1  sts4TwoWire               0x1
///                                    ###
///                                    * 0: STS 4 Three wire. Valid is connected from Pad
///                                    * 1:STS 4 Two Wire. Valid is forced to 1
///                                    ###
///               %unsigned 1  sts5TwoWire               0x1
///                                    ###
///                                    * 0: STS 5 Three wire. Valid is connected from Pad
///                                    * 1:STS 3 Two Wire. Valid is forced to 1
///                                    * Reserved for Future Use
///                                    ###
///               %unsigned 1  sts6TwoWire               0x1
///                                    ###
///                                    * 0: STS 6 Three wire. Valid is connected from Pad
///                                    * 1:STS 6 Two Wire. Valid is forced to 1
///                                    * Reserved for Future Use
///                                    ###
///               %unsigned 1  sts7TwoWire               0x1
///                                    ###
///                                    * 0: STS 7 Three wire. Valid is connected from Pad
///                                    * 1:STS 7 Two Wire. Valid is forced to 1
///                                    ###
///               %%        24         # Stuffing bits...
///     @ 0x00048                      (W-)
///     #         # Stuffing bytes...
///               %% 448
///     @ 0x00080 sw_generic0          (P-)
///               ###
///               * Generic software register.
///               ###
///               %unsigned 32 swReg0                    0x0
///     @ 0x00084 sw_generic1          (P-)
///               ###
///               * Generic software register.
///               ###
///               %unsigned 32 swReg1                    0x0
///     @ 0x00088 sw_generic2          (P-)
///               ###
///               * Generic software register.
///               ###
///               %unsigned 32 swReg2                    0x0
///     @ 0x0008C sw_generic3          (P-)
///               ###
///               * Generic software register. This register can be reset only by
///               * PAD reset.
///               ###
///               %unsigned 32 swReg3                    0x0
///     @ 0x00090                      (W-)
///     #         # Stuffing bytes...
///               %% 896
///     @ 0x00100                      (P)
///     # 0x00100 RWTC_SOC
///               $SRAMRWTC            RWTC_SOC          REG
///     @ 0x0010C                      (P)
///     # 0x0010C SRAM_PWR_EMMC
///               $SRAMPWR             SRAM_PWR_EMMC     REG
///                                    ###
///                                    * Sram power control for emmc
///                                    ###
///     @ 0x00110                      (P)
///     # 0x00110 SRAM_PWR_SDIO
///               $SRAMPWR             SRAM_PWR_SDIO     REG
///                                    ###
///                                    * Sram power control for sdio
///                                    ###
///     @ 0x00114                      (P)
///     # 0x00114 SRAM_PWR_USB2
///               $SRAMPWR             SRAM_PWR_USB2     REG
///                                    ###
///                                    * Sram power control for usb2
///                                    ###
///     @ 0x00118                      (P)
///     # 0x00118 SRAM_PWR_USB3
///               $SRAMPWR             SRAM_PWR_USB3     REG
///                                    ###
///                                    * Sram power control for usb3
///                                    ###
///     @ 0x0011C                      (P)
///     # 0x0011C SRAM_PWR_PCIE
///               $SRAMPWR             SRAM_PWR_PCIE     REG
///                                    ###
///                                    * Sram power control for pcie
///                                    ###
///     @ 0x00120                      (P)
///     # 0x00120 SRAM_PWR_GFX3D
///               $SRAMPWR             SRAM_PWR_GFX3D    REG
///                                    ###
///                                    * Sram power control for gfx3d
///                                    ###
///     @ 0x00124                      (P)
///     # 0x00124 SRAM_PWR_V4G
///               $SRAMPWR             SRAM_PWR_V4G      REG
///                                    ###
///                                    * Sram power control for v4g
///                                    ###
///     @ 0x00128                      (P)
///     # 0x00128 SRAM_PWR_H1
///               $SRAMPWR             SRAM_PWR_H1       REG
///                                    ###
///                                    * Sram power control for h1
///                                    ###
///     @ 0x0012C                      (P)
///     # 0x0012C SRAM_PWR_OVP
///               $SRAMPWR             SRAM_PWR_OVP      REG
///                                    ###
///                                    * Sram power control for ovp
///                                    ###
///     @ 0x00130                      (P)
///     # 0x00130 SRAM_PWR_GE
///               $SRAMPWR             SRAM_PWR_GE       REG
///                                    ###
///                                    * Sram power control for GE
///                                    ###
///     @ 0x00134                      (P)
///     # 0x00134 SRAM_PWR_PB
///               $SRAMPWR             SRAM_PWR_PB       REG
///                                    ###
///                                    * Sram power control for PB
///                                    ###
///     @ 0x00138                      (P)
///     # 0x00138 SRAM_PWR_NPU
///               $SRAMPWR             SRAM_PWR_NPU      REG
///                                    ###
///                                    * Sram power control for NPU
///                                    ###
///     @ 0x0013C                      (P)
///     # 0x0013C SRAM_PWR_MC
///               $SRAMPWR             SRAM_PWR_MC       REG
///                                    ###
///                                    * Sram power control for MC
///                                    ###
///     @ 0x00140                      (P)
///     # 0x00140 SRAM_PWR_ALM0
///               $SRAMPWR             SRAM_PWR_ALM0     REG
///                                    ###
///                                    * Sram power control for GEOXBAR ALM
///                                    ###
///     @ 0x00144                      (P)
///     # 0x00144 SRAM_PWR_ALM1
///               $SRAMPWR             SRAM_PWR_ALM1     REG
///                                    ###
///                                    * Sram power control for VNXBAR ALM
///                                    ###
///     @ 0x00148                      (P)
///     # 0x00148 SRAM_PWR_DSP0
///               $SRAMPWR             SRAM_PWR_DSP0     REG
///                                    ###
///                                    * Sram power control for DSP0
///                                    ###
///     @ 0x0014C                      (P)
///     # 0x0014C SRAM_PWR_DSP1
///               $SRAMPWR             SRAM_PWR_DSP1     REG
///                                    ###
///                                    * Sram power control for DSP1
///                                    ###
///     @ 0x00150                      (W-)
///     #         # Stuffing bytes...
///               %% 576
///     @ 0x00198 FPGAR                (R-)
///               ###
///               * FPGA Revision ID Read only register
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 32 FPGAR                     0xB3A9FA72
///                                    ###
///                                    * FPGA Revision ID register
///                                    ###
///     @ 0x0019C FPGARW               (P)
///               ###
///               * FPGA General Purpose RW register
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 32 FPGARW                    0x0
///                                    ###
///                                    * FPGA General purpose RW register
///                                    * PLL Control Region
///                                    ###
///     @ 0x001A0                      (W-)
///     #         # Stuffing bytes...
///               %% 768
///     @ 0x00200                      (P)
///     # 0x00200 sysPll_0
///               $abipll              sysPll_0          REG
///     @ 0x00220                      (P)
///     # 0x00220 sysPll_1
///               $abipll              sysPll_1          REG
///                                    ###
///                                    * Clock and Reset Control Region
///                                    ###
///     @ 0x00240                      (W-)
///     #         # Stuffing bytes...
///               %% 7680
///     @ 0x00600 ResetTrigger         (P-)
///               ###
///               * Software reset trigger register. Using this register software
///               * can reset particular module of the chip. Writing 1 to this
///               * register will trigger 16 reference clock (640ns) reset to the
///               * corresponding module (except for PCIe for PCIe user has all the
///               * reset duration control so writing 1 will trigger the reset and
///               * writing 0 will de-assert the reset).
///               * In the following register:
///               * 0  :  No Reset
///               * 1  :  Reset
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 1  chipReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in the chip.
///                                                 * Note: When this bit is set then there is no reset sequence
///                                                 * followed to de-assert the reset to CPU in the end as done in
///                                                 * case of boot-up. So using this bit is not suggested as CPU will
///                                                 * come out of the reset earlier than modules which are running on
///                                                 * slow clocks as compared to CPU.
///                                                 * *INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  socDdrSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset memory controller
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %%        30         # Stuffing bits...
///     @ 0x00604 ResetStatus          (RW-)
///               ###
///               * Reset Status register indicates whether reset is triggered or
///               * not to the corresponding module.
///               * 0 : Reset not issued
///               * 1 : Reset issued
///               * Note: Software need to write 0 to clear this register.
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 1  ChipResetStatus           0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 *  **INTERNAL_ONLY**
///                                                 ###
///               %unsigned 1  socDdrSyncResetStatus     0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Memory controller reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        30         # Stuffing bits...
///     @ 0x00608                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x0060C WDTResetStatus       (RW-)
///               %unsigned 1  wd0Status                 0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Watch dog timer 0 reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  wd1Status                 0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Watch dog timer 1 reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  wd2Status                 0x0
///                                    : asserted                  0x1
///                                    : deasserted                0x0
///                                                 ###
///                                                 * Watch dog timer  2 reset status
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        29         # Stuffing bits...
///     @ 0x00610                      (W-)
///     #         # Stuffing bytes...
///               %% 128
///     @ 0x00620 avioReset            (P-)
///               ###
///               * AVIO 3D reset register
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in AVIO
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00624 avioResetStatus      (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of AVIO
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00628 gethRgmiiRstn        (P-)
///               ###
///               * rgmi reset register
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in Graphics 3D module
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x0062C gethRgmiiResetStatus (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of Graphics 3D
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00630 gfx3DReset           (P-)
///               ###
///               * Graphics 3D reset register
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in Graphics 3D module
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00634 gfx3DResetStatus     (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of Graphics 3D
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00638                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x00640 decoderReset         (P-)
///               ###
///               * Video decoder reset register
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in Video decoder module
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00644 decoderResetStatus   (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of Video decoder
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00648                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x00650 encoderReset         (P-)
///               ###
///               * Video encoder reset register
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in Video decoder module
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00654 encoderResetStatus   (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of Video encoder
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00658                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x00660 ovpReset             (P-)
///               ###
///               * offline video processing reset register
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in offline video processing
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00664 ovpResetStatus       (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of offline video processing
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00668                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x00670 almGeoxbarGRstn      (P-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in GEOXBAR ALM
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00674 almGeoxbarResetStatus (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of GEOXBAR ALM
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00678 almVnxbarGRstn       (P-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset all registers in VNXBAR ALM
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x0067C almVnxbarResetStatus (RW-)
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of VNXBAR ALM
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x00680 perifReset           (P-)
///               ###
///               * perif reset register
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset whole Peripheral unit
///                                                 * 0: No Reset
///                                                 * 1: Reset
///                                                 ###
///               %unsigned 1  ahbApbSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset Peripheral AHB-APB module (includes GPIO, Two wire
///                                                 * Serial interface, Interrupt controller, Timers and SPI)
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  sdioSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral SDIO module
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  reserved0                 0x0
///                                    ###
///                                    * reserved0
///                                    ###
///               %unsigned 1  reserved1                 0x0
///                                    ###
///                                    * reserved1
///                                    ###
///               %unsigned 1  reserved2                 0x0
///                                    ###
///                                    * reserved2
///                                    ###
///               %unsigned 1  reserved3                 0x0
///                                    ###
///                                    * reserved3
///                                    ###
///               %unsigned 1  reserved4                 0x0
///                                    ###
///                                    * reserved4
///                                    ###
///               %unsigned 1  reserved5                 0x0
///                                    ###
///                                    * reserved5
///                                    ###
///               %unsigned 1  usb0SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral USB0 module
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  usb3SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset peripheral USB3P0 module
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  emmcSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset emmc
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  pBridgeSyncReset          0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset pBridge
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  reserved6                 0x0
///                                    ###
///                                    * reserved6
///                                    ###
///               %%        18         # Stuffing bits...
///     @ 0x00684 perifResetStatus     (RW-)
///               ###
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 1  SyncReset                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of whole Peripheral unit
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  ahbApbSyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of Peripheral AHB-APB module (includes GPIO, Two
///                                                 * wire Serial interface, Interrupt controller, Timers and SPI)
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  sdioSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of peripheral  SDIO module
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  reserved0                 0x0
///                                    ###
///                                    * reserved0
///                                    ###
///               %unsigned 1  reserved1                 0x0
///                                    ###
///                                    * reserved1
///                                    ###
///               %unsigned 1  reserved2                 0x0
///                                    ###
///                                    * reserved2
///                                    ###
///               %unsigned 1  reserved3                 0x0
///                                    ###
///                                    * reserved3
///                                    ###
///               %unsigned 1  reserved4                 0x0
///                                    ###
///                                    * reserved4
///                                    ###
///               %unsigned 1  reserved5                 0x0
///                                    ###
///                                    * reserved5
///                                    ###
///               %unsigned 1  usb0SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of peripheral USB0 module
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  usb3SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of peripheral USB3P0 module
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  emmcSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status for emmc
///                                                 * 0  :  Reset not asserted
///                                                 * 1  :  Reset asserted
///                                                 ###
///               %unsigned 1  pBridgeSyncReset          0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status for pBridge
///                                                 * 0  :  Reset not asserted
///                                                 * 1  :  Reset asserted
///                                                 ###
///               %unsigned 1  tsioSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status for tsio
///                                                 * 0  :  Reset not asserted
///                                                 * 1  :  Reset asserted
///                                                 ###
///               %unsigned 1  reserved6                 0x0
///                                    ###
///                                    * reserved6
///                                    ###
///               %%        17         # Stuffing bits...
///     @ 0x00688 perifStickyResetN    (P-)
///               ###
///               * sticky reset bits. Active low.
///               * 0:  Reset
///               * 1:  No Reset
///               ###
///               %unsigned 1  usb3PhyRstn               0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 *  usb3Phy Reset
///                                                 * 0 : Reset
///                                                 * 1 :  No Reset
///                                                 ###
///               %unsigned 1  pcie0Rstn                 0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 *  PCIE Module Reset
///                                                 * 0 : Reset
///                                                 * 1 :  No Reset
///                                                 ###
///               %unsigned 1  usb0PhyRstn               0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * USB0 PHY Rstn
///                                                 ###
///               %unsigned 1  usb0CoreRstn              0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * USB0 Core Rstn
///                                                 ###
///               %unsigned 1  usb0MahbRstn              0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * USB0 Mahb Rstn
///                                                 ###
///               %unsigned 1  pciePhyRstn               0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * pice Phy Rstn
///                                                 ###
///               %unsigned 1  usimRstn                  0x1
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * uSim Rstn
///                                                 ###
///               %%        25         # Stuffing bits...
///     @ 0x0068C apbPerifResetTrigger (P-)
///               ###
///               * Software reset trigger register. Using this register software
///               * can reset particular apbPerif module.
///               * 0  :  No Reset
///               * 1  :  Reset
///               ###
///               %unsigned 1  uart0SyncReset            0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  reserved0                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c0SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c1SyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  spiSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  timer0SyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  timer1SyncReset           0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %%        25         # Stuffing bits...
///     @ 0x00690 apbPerifResetStatus  (P-)
///               ###
///               * Reset Status register indicates whether reset is triggered or
///               * not to the corresponding module.
///               * 0 : Reset not issued
///               * 1 : Reset issued
///               * Note: Software need to write 0 to clear this register.
///               ###
///               %unsigned 1  uart0SyncResetStatus      0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  reserved0                 0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c0SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c1SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  i2c2SyncResetStatus       0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  spiSyncResetStatus        0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  timer0SyncResetStatus     0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %unsigned 1  timer1SyncResetStatus     0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///               %%        24         # Stuffing bits...
///     @ 0x00694 topStickyResetN      (P-)
///               ###
///               * sticky reset bits. Active low.
///               * 0:  Reset
///               * 1:  No Reset
///               ###
///               %unsigned 1  npuGRstn                  0x1
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * NPU GRstn
///                                                 ###
///               %unsigned 1  dsp0CoreRstn              0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * Consolidated DSP0 wrapper reset. Resets the wrapper registers
///                                                 * and also controls the BReset and DReset of the HiFi4 processor0
///                                                 ###
///               %unsigned 1  dsp0CfgRstn               0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * DSP0 config bus Reset. This is the BReset of the HiFi4
///                                                 * processor0
///                                                 ###
///               %unsigned 1  dsp0DebugRstn             0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * DSP0 debug Reset. This is the DReset of the HiFi4 processor0
///                                                 ###
///               %unsigned 1  dsp1CoreRstn              0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * Consolidated DSP1 wrapper reset. Resets the wrapper registers
///                                                 * and also controls the BReset and DReset of the HiFi4 processor1
///                                                 ###
///               %unsigned 1  dsp1CfgRstn               0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * DSP1 config bus Reset. This is the BReset of the HiFi4
///                                                 * processor1
///                                                 ###
///               %unsigned 1  dsp1DebugRstn             0x0
///                                    : asserted                  0x0
///                                    : deasserted                0x1
///                                                 ###
///                                                 * DSP1 debug Reset. This is the DReset of the HiFi4 processor1
///                                                 ###
///               %%        25         # Stuffing bits...
///     @ 0x00698                      (W-)
///     #         # Stuffing bytes...
///               %% 832
///     @ 0x00700 clkEnable            (P-)
///               ###
///               * Clock enable register provides the option to switch clocks OFF
///               * for power saving.
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new register bit at the end.
///               ###
///               %unsigned 1  usb0CoreClkEn             0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * USB0 Core Clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  sdioSysClkEn              0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * SDIO AXI clock  enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  pcie0SysClkEn             0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * pcie AXI clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  emmcSysClkEn              0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * EMMC AXI clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  pBridgeCoreClkEn          0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Pbridge module clock enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  npuAxiClkEn               0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Npu AXI clock  enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  gethRgmiiSysClkEn         0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * Rgmii sys clk enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  gfxAxiClkEn               0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * GFX AXI clock  enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %unsigned 1  usbOtgClkEn               0x1
///                                    : enable                    0x1
///                                    : disable                   0x0
///                                                 ###
///                                                 * USB OTG clock  enable register
///                                                 * 0 : disable
///                                                 * 1 : enable
///                                                 ###
///               %%        23         # Stuffing bits...
///     @ 0x00704                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00710 ClkSwitch            (P-)
///               ###
///               * Clock Switch register. This register is used to select clock
///               * between:
///               * PLL clock or reference clock  (PLL Bypass option)
///               ###
///               %unsigned 1  sysPLL_0SWBypass          0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * System PLL Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 ###
///               %unsigned 1  sysPLL_1SWBypass          0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * System PLL Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 ###
///               %unsigned 1  reserve                   0x0
///                                    ###
///                                    * reserved
///                                    ###
///               %unsigned 1  memPLLSWBypass            0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * Memory PLL Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 ###
///               %unsigned 1  cpuPLLSWBypass            0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * CPU PLL Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 ###
///               %unsigned 1  avPLL_0SWBypass           0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * AVIO PLL0 Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 ###
///               %unsigned 1  avPLL_1SWBypass           0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * AVIO PLL1 Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 * Following are control registers for clock generation logics in
///                                                 * global.
///                                                 * They can select different pll source, set different diver and
///                                                 * turn on/off the clocks
///                                                 * fast reference clock for cpu and ddr
///                                                 * Provide fast backup clock from syspll to cpu and ddr when cpupll
///                                                 * or mempll is down for re-configuration
///                                                 ###
///               %%        25         # Stuffing bits...
///     @ 0x00714                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00720                      (P)
///     # 0x00720 cpufastRefClk
///               $clkD2               cpufastRefClk     REG
///                                    ###
///                                    * Fast backup clock for cpu when cpupll is bypass
///                                    ###
///     @ 0x00724                      (P)
///     # 0x00724 memfastRefClk
///               $clkD1               memfastRefClk     REG
///                                    ###
///                                    * Fast backup clock for mc5 when mempll is bypass
///                                    * System bus clock
///                                    ###
///     @ 0x00728                      (W-)
///     #         # Stuffing bytes...
///               %% 192
///     @ 0x00740                      (P)
///     # 0x00740 cfgClk
///               $clkD8               cfgClk            REG
///                                    ###
///                                    * System AHB Clock
///                                    ###
///     @ 0x00744                      (P)
///     # 0x00744 perifSysClk
///               $clkD3               perifSysClk       REG
///                                    ###
///                                    * System AXI Clock
///                                    * used by perif zsp dxbar cxbar mcxbar
///                                    ###
///     @ 0x00748                      (P)
///     # 0x00748 atbClk
///               $clkD8               atbClk            REG
///                                    ###
///                                    * ATB (CoreSight) Clock
///                                    * goes to v4g bcm and cpu_ss
///                                    * VPU clocks
///                                    ###
///     @ 0x0074C                      (P)
///     # 0x0074C decoderClk
///               $clkD1               decoderClk        REG
///                                    ###
///                                    * V4G core clock and AXI bus clock
///                                    * Goes to V4G and MCXBAR
///                                    ###
///     @ 0x00750                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x00754                      (P)
///     # 0x00754 encoderClk
///               $clkD3               encoderClk        REG
///                                    ###
///                                    * Hantro H1 encoder core and AXI clock
///                                    * Goes to H1 and MCXBAR
///                                    ###
///     @ 0x00758                      (P)
///     # 0x00758 ovpCoreClk
///               $clkD3               ovpCoreClk        REG
///                                    ###
///                                    * OVP core and AXI clock
///                                    * Goes to OVP and MCXBAR
///                                    * GPU Clock
///                                    ###
///     @ 0x0075C                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x00760                      (P)
///     # 0x00760 gfx3DCoreClk
///               $clkD2               gfx3DCoreClk      REG
///                                    ###
///                                    * GFX3D Core Clk
///                                    ###
///     @ 0x00764                      (P)
///     # 0x00764 gfx3DSysClk
///               $clkD2               gfx3DSysClk       REG
///                                    ###
///                                    * GFX3D GCXBAR AXI Clock
///                                    * AVIO Clock
///                                    ###
///     @ 0x00768                      (W-)
///     #         # Stuffing bytes...
///               %% 64
///     @ 0x00770                      (P)
///     # 0x00770 avioSysClk
///               $clkD2               avioSysClk        REG
///                                    ###
///                                    * AVIO AXI Clock
///                                    ###
///     @ 0x00774                      (P)
///     # 0x00774 vppSysClk
///               $clkD2               vppSysClk         REG
///                                    ###
///                                    * AVIO VPP Clock
///                                    ###
///     @ 0x00778                      (P)
///     # 0x00778 esmClk
///               $clkD8               esmClk            REG
///                                    ###
///                                    * esm Clock
///                                    ###
///     @ 0x0077C                      (P)
///     # 0x0077C avioBiuClk
///               $clkD4               avioBiuClk        REG
///                                    ###
///                                    * AVIO Biu Clock
///                                    ###
///     @ 0x00780                      (P)
///     # 0x00780 vipPipeClk
///               $clkD2               vipPipeClk        REG
///                                    ###
///                                    * AVIO vip pipe clock
///                                    ###
///     @ 0x00784                      (P)
///     # 0x00784 avioFpll400_clk
///               $clkD2               avioFpll400_clk   REG
///                                    ###
///                                    * Avio Fpll400 clock
///                                    * Perif Clock
///                                    ###
///     @ 0x00788                      (W-)
///     #         # Stuffing bytes...
///               %% 192
///     @ 0x007A0                      (P)
///     # 0x007A0 apbCoreClk
///               $clkD4               apbCoreClk        REG
///                                    ###
///                                    * APB perif clock for TWI, SPI, etc.
///                                    * SDIO and EMMC
///                                    ###
///     @ 0x007A4                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x007B0                      (P)
///     # 0x007B0 emmcClk
///               $clkD4               emmcClk           REG
///                                    ###
///                                    * emmc controller core Clock
///                                    ###
///     @ 0x007B4                      (P)
///     # 0x007B4 sd0Clk
///               $clkD4               sd0Clk            REG
///                                    ###
///                                    * SDIO0 controller core Clock
///                                    * PerifTestClock125m Group0
///                                    ###
///     @ 0x007B8                      (W-)
///     #         # Stuffing bytes...
///               %% 320
///     @ 0x007E0                      (P)
///     # 0x007E0 perifTestClk125mGroup0
///               $clkD12_ENOFF        perifTestClk125mGroup0 REG
///                                    ###
///                                    * Periftestclock125m group0
///                                    * USB
///                                    ###
///     @ 0x007E4                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x007F0                      (P)
///     # 0x007F0 usb2TestClk
///               $clkD12_ENOFF        usb2TestClk       REG
///                                    ###
///                                    * Usb2 test clock shared by USBOTG and USBHOST
///                                    ###
///     @ 0x007F4                      (P)
///     # 0x007F4 perifTestClk250mGroup0
///               $clkD12_ENOFF        perifTestClk250mGroup0 REG
///                                    ###
///                                    * perif test clock
///                                    ###
///     @ 0x007F8                      (P)
///     # 0x007F8 usb3CoreClk
///               $clkD2               usb3CoreClk       REG
///                                    ###
///                                    * Usb3 Core clock used for core as well as axi interface
///                                    * NAND
///                                    ###
///     @ 0x007FC                      (P)
///     # 0x007FC npuClk
///               $clkD2               npuClk            REG
///                                    ###
///                                    * NPU clock.
///                                    ###
///     @ 0x00800                      (P)
///     # 0x00800 hdmiRxrefClk
///               $clkD4               hdmiRxrefClk      REG
///                                    ###
///                                    * hdmirxrefclk
///                                    ###
///     @ 0x00804                      (P)
///     # 0x00804 usb2TestClk480mGroup0
///               $clkD12_ENOFF        usb2TestClk480mGroup0 REG
///                                    ###
///                                    * usb2TestClk480mGroup0
///                                    ###
///     @ 0x00808                      (P)
///     # 0x00808 usb2TestClk480mGroup1
///               $clkD12_ENOFF        usb2TestClk480mGroup1 REG
///                                    ###
///                                    * usb2TestClk480mGroup1
///                                    ###
///     @ 0x0080C                      (P)
///     # 0x0080C usb2TestClk480mGroup2
///               $clkD12_ENOFF        usb2TestClk480mGroup2 REG
///                                    ###
///                                    * usb2TestClk480mGroup2
///                                    ###
///     @ 0x00810                      (P)
///     # 0x00810 usb2TestClk100mGroup0
///               $clkD12_ENOFF        usb2TestClk100mGroup0 REG
///                                    ###
///                                    * usb2TestClk100mGroup0
///                                    ###
///     @ 0x00814                      (P)
///     # 0x00814 usb2TestClk100mGroup1
///               $clkD12_ENOFF        usb2TestClk100mGroup1 REG
///                                    ###
///                                    * usb2TestClk100mGroup1
///                                    ###
///     @ 0x00818                      (P)
///     # 0x00818 usb2TestClk100mGroup2
///               $clkD12_ENOFF        usb2TestClk100mGroup2 REG
///                                    ###
///                                    * usb2TestClk100mGroup2
///                                    ###
///     @ 0x0081C                      (P)
///     # 0x0081C usb2TestClk100mGroup3
///               $clkD12_ENOFF        usb2TestClk100mGroup3 REG
///                                    ###
///                                    * usb2TestClk100mGroup3
///                                    ###
///     @ 0x00820                      (P)
///     # 0x00820 usb2TestClk100mGroup4
///               $clkD12_ENOFF        usb2TestClk100mGroup4 REG
///                                    ###
///                                    * usb2TestClk100mGroup4
///                                    ###
///     @ 0x00824                      (P)
///     # 0x00824 perifTestClk200mGroup0
///               $clkD12_ENOFF        perifTestClk200mGroup0 REG
///                                    ###
///                                    * perifTestClk200mGroup0
///                                    ###
///     @ 0x00828                      (P)
///     # 0x00828 perifTestClk200mGroup1
///               $clkD12_ENOFF        perifTestClk200mGroup1 REG
///                                    ###
///                                    * perifTestClk200mGroup1
///                                    ###
///     @ 0x0082C                      (P)
///     # 0x0082C perifTestClk500mGroup0
///               $clkD12_ENOFF        perifTestClk500mGroup0 REG
///                                    ###
///                                    * perifTestClk500mGroup0
///                                    ###
///     @ 0x00830                      (P)
///     # 0x00830 aioSysClk
///               $clkD4               aioSysClk         REG
///                                    ###
///                                    * aioSysClk
///                                    ###
///     @ 0x00834                      (P)
///     # 0x00834 usimClk
///               $clkD2               usimClk           REG
///                                    ###
///                                    * usimClk
///                                    ###
///     @ 0x00838                      (P)
///     # 0x00838 perifTestClk50mGroup0
///               $clkD12_ENOFF        perifTestClk50mGroup0 REG
///                                    ###
///                                    * perifTestClk50mGroup0
///                                    ###
///     @ 0x0083C                      (P)
///     # 0x0083C dspSysClk
///               $clkD2               dspSysClk         REG
///                                    ###
///                                    * DSP_SS Bus clk
///                                    ###
///     @ 0x00840                      (P)
///     # 0x00840 dsp0Clk
///               $clkD3               dsp0Clk           REG
///                                    ###
///                                    * DSP0 clk
///                                    ###
///     @ 0x00844                      (P)
///     # 0x00844 dsp1Clk
///               $clkD3               dsp1Clk           REG
///                                    ###
///                                    * DSP1 clk
///                                    ###
///     @ 0x00848                      (P)
///     # 0x00848 vnSysClk
///               $clkD2               vnSysClk          REG
///                                    ###
///                                    * VNXBAR system clock.
///                                    * MISC Register Control Region
///                                    ###
///     @ 0x0084C                      (W-)
///     #         # Stuffing bytes...
///               %% 1440
///     @ 0x00900 SECURE_SCAN_EN       (RW)
///               ###
///               * Enable secure scan, should write 1 to it immediately during
///               * boot up to disable scan
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  SET                       0x0
///                                    ###
///                                    * 1: scan is disabled
///                                    * 0: scan is enabled
///                                    * Delay information from the DLL
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00904                      (W-)
///     #         # Stuffing bytes...
///               %% 160
///     @ 0x00918 gfx3DDisRamClkGate   (P-)
///               ###
///               * **INTERNAL_ONLY**
///               ###
///               %unsigned 1  drcg                      0x0
///                                    : drcgActive                0x1
///                                    : drcgInactive              0x0
///                                                 ###
///                                                 * Disable RAM clock gating in Graphics 3D when in BIST mode.
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x0091C                      (W-)
///     #         # Stuffing bytes...
///               %% 544
///     @ 0x00960 gic400_ctrl          (P-)
///               %unsigned 1  cgfsdisable               0x0
///                                    ###
///                                    * GIC400 secure disable control
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x00964                      (W-)
///     #         # Stuffing bytes...
///               %% 96
///     @ 0x00970 GFX_CTRL_0           (P)
///               ###
///               * Not used. May be used for any ECOs.
///               * *INTERNAL_ONLY**
///               ###
///               %unsigned 1  timer_enable              0x0
///               %%        31         # Stuffing bits...
///     @ 0x00974 GFX_CTRL_1           (P)
///               ###
///               * Used
///               ###
///               %unsigned 1  timer_load                0x0
///               %unsigned 1  timer_halt                0x0
///               %%        30         # Stuffing bits...
///     @ 0x00978 GFX_CTRL_2           (P)
///               ###
///               * used.
///               ###
///               %unsigned 32 timer_value_lsb           0x0
///     @ 0x0097C GFX_CTRL_3           (P)
///               ###
///               * used
///               ###
///               %unsigned 32 timer_value_msb           0x0
///     @ 0x00980 GFX_TIMER_VALUE      (RNB-)
///               %unsigned 32 timer_binary_value_lsb
///     # 0x00984 GFX_TIMER_VALUE1
///               %unsigned 32 timer_binary_value_msb
///     @ 0x00988                      (W-)
///     #         # Stuffing bytes...
///               %% 32
///     @ 0x0098C GFX_STATUS           (R-)
///               %unsigned 1  gfx3d_idle
///               %%        31         # Stuffing bits...
///     @ 0x00990 USBOTG_REFCLK_CTRL0  (P)
///               %unsigned 32 divval                    0x14
///                                    ###
///                                    * These bits control the USB OTG PLL REF Clock Divider
///                                    * Note: Only even values are allowed to get 50% duty cycle
///                                    ###
///     @ 0x00994 USBOTG_REFCLK_CTRL1  (P)
///               %unsigned 32 lowcnt                    0xA
///                                    ###
///                                    * Half Cycle period counter for USB OTG REF Clock divider
///                                    ###
///     @ 0x00998 USIMCLK_MUX          (P)
///               %unsigned 1  globalClksel              0x1
///                                    ###
///                                    * Select usimClk
///                                    * 0: STS1_CLK or STS6_CLK
///                                    * 1: global clock
///                                    ###
///               %unsigned 1  STS6Clksel                0x0
///                                    ###
///                                    * Select usimClk
///                                    * 0: STS1_CLK (come from the pinMux input)
///                                    * 1: STS6_CLK (come from the pinMux input)
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x0099C REFCLK_SWITCH        (P-)
///               %unsigned 1  cfgClkSwt2refClk          0x0
///                                    : cfgClk                    0x0
///                                    : refClk                    0x1
///                                                 ###
///                                                 * cfgClk bypass
///                                                 * 0: use cfgClk
///                                                 * 1: use refClk
///                                                 ###
///               %unsigned 1  perifSysClkSwt2refClk     0x0
///                                    : sysClk                    0x0
///                                    : refClk                    0x1
///                                                 ###
///                                                 * sysClk bypass
///                                                 * 0: use sysClk
///                                                 * 1: use refClk
///                                                 ###
///               %%        30         # Stuffing bits...
///     @ 0x009A0 DSP0_Control         (P)
///               %unsigned 1  RunStall                  0x1
///                                    ###
///                                    * When set, causes the HiFi4 processor0 to stall.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x009A4 DSP0_Status          (R-)
///               %unsigned 1  PWaitMode                 0x0
///                                    ###
///                                    * Reflects the state of the PWaitMode output from the HiFi4 DSP0.
///                                    * When high, indicates that the DSP0 is in a sleep state,
///                                    * Resulting from a WAITI instruction.
///                                    ###
///               %unsigned 1  XOCDMode                  0x0
///                                    ###
///                                    * Indicates that the DSP1 is in debug mode and permit Invasv
///                                    * debug.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x009A8 DSP0_SECCTRL0        (RW)
///               %unsigned 32 ALTRESETVEC               0x0
///                                    ###
///                                    * If the DSPWRP_STATVECTORSEL effect, it would provide an
///                                    * alternate reset vector address to the DSP0.
///                                    * It must be configured before the de-assert DSP0’s rest at least
///                                    * 10 cycles.
///                                    ###
///     @ 0x009AC DSP0_SECCTRL1        (RW)
///               %unsigned 1  DSP_STATVECTORSEL         0x0
///                                    ###
///                                    * Select between one of the two stationary vector bases.
///                                    * 0:default, 1: alternative
///                                    * It must be configured before the de-assert DSP1’s rest at least
///                                    * 10 cycles
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x009B0 DSP0_PRID            (P)
///               %unsigned 16 Prid                      0x272
///                                    ###
///                                    * The PRID is not only used for JTAG, it is also potentially used
///                                    * in DSP code to differentiate two DSPs
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x009B4 DSP1_Control         (P)
///               %unsigned 1  RunStall                  0x1
///                                    ###
///                                    * When set, causes the HiFi4 processor1 to stall.
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x009B8 DSP1_Status          (R-)
///               %unsigned 1  PWaitMode                 0x0
///                                    ###
///                                    * Reflects the state of the PWaitMode output from the HiFi4 DSP1.
///                                    * When high, indicates that the DSP1 is in a sleep state,
///                                    * Resulting from a WAITI instruction.
///                                    ###
///               %unsigned 1  XOCDMode                  0x0
///                                    ###
///                                    * Indicates that the DSP1 is in debug mode and permit Invasv
///                                    * debug.
///                                    ###
///               %%        30         # Stuffing bits...
///     @ 0x009BC DSP1_SECCTRL0        (RW)
///               %unsigned 32 ALTRESETVEC               0x0
///                                    ###
///                                    * If the DSPWRP_STATVECTORSEL effect, it would provide an
///                                    * alternate reset vector address to the DSP1.
///                                    * It must be configured before the de-assert DSP1’s rest at least
///                                    * 10 cycles.
///                                    ###
///     @ 0x009C0 DSP1_SECCTRL1        (RW)
///               %unsigned 1  DSP_STATVECTORSEL         0x0
///                                    ###
///                                    * Select between one of the two stationary vector bases.
///                                    * 0:default, 1: alternative
///                                    * It must be configured before the de-assert DSP1’s rest at least
///                                    * 10 cycles
///                                    ###
///               %%        31         # Stuffing bits...
///     @ 0x009C4 DSP1_PRID            (P)
///               %unsigned 16 Prid                      0x1272
///                                    ###
///                                    * The PRID is not only used for JTAG, it is also potentially used
///                                    * in DSP code to differentiate two DSPs
///                                    ###
///               %%        16         # Stuffing bits...
///     @ 0x009C8                      (W-)
///     #         # Stuffing bytes...
///               %% 448
///     @ 0x00A00                      (P)
///     # 0x00A00 PERIF
///               $PERIF               PERIF             REG
///                                    ###
///                                    * PAD Control Region
///                                    * The below are the Pad Control Registers starting at 32KB
///                                    * boundary.  Please do not change this offset and add any
///                                    * register that is needed before this.
///                                    ###
///     @ 0x00A1C                      (W-)
///     #         # Stuffing bytes...
///               %% 241440
///     @ 0x08000 pinMuxCntlBus        (P-)
///               %unsigned 3  GPIO_A2                   0x0
///                                    ###
///                                    * pinMuxCntlBus[0*3+2:0*3]	 pinMux Control for GPIO_A[2]
///                                    ###
///                                    : MODE_0                    0x0
///               %unsigned 3  GPIO_A1                   0x0
///                                    ###
///                                    * pinMuxCntlBus[1*3+2:1*3]	 pinMux Control for GPIO_A[1]
///                                    ###
///                                    : MODE_0                    0x0
///               %unsigned 3  GPIO_A0                   0x0
///                                    ###
///                                    * pinMuxCntlBus[2*3+2:2*3]	 pinMux Control for GPIO_A[0]
///                                    ###
///                                    : MODE_0                    0x0
///               %unsigned 3  STS0_CLK                  0x0
///                                    ###
///                                    * pinMuxCntlBus[3*3+2:3*3]	 pinMux Control for STS0_CLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %unsigned 3  STS0_SOP                  0x0
///                                    ###
///                                    * pinMuxCntlBus[4*3+2:4*3]	 pinMux Control for STS0_SOP
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %unsigned 3  STS0_SD                   0x0
///                                    ###
///                                    * pinMuxCntlBus[5*3+2:5*3]	 pinMux Control for STS0_SD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %unsigned 3  STS0_VALD                 0x0
///                                    ###
///                                    * pinMuxCntlBus[6*3+2:6*3]	 pinMux Control for STS0_VALD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %unsigned 3  STS1_CLK                  0x0
///                                    ###
///                                    * pinMuxCntlBus[7*3+2:7*3]	 pinMux Control for STS1_CLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_7                    0x7
///               %unsigned 3  STS1_SOP                  0x0
///                                    ###
///                                    * pinMuxCntlBus[8*3+2:8*3]	 pinMux Control for STS1_SOP
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  STS1_SD                   0x0
///                                    ###
///                                    * pinMuxCntlBus[9*3+2:9*3]	 pinMux Control for STS1_SD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_7                    0x7
///               %%        2          # Stuffing bits...
///     # 0x08004 pinMuxCntlBus1
///               %unsigned 3  STS1_VALD                 0x0
///                                    ###
///                                    * pinMuxCntlBus[10*3+2:10*3]	 pinMux Control for STS1_VALD
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI1_SS0n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[11*3+2:11*3]	 pinMux Control for SPI1_SS0n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SPI1_SS1n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[12*3+2:12*3]	 pinMux Control for SPI1_SS1n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_4                    0x4
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI1_SS2n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[13*3+2:13*3]	 pinMux Control for SPI1_SS2n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_4                    0x4
///                                    : MODE_5                    0x5
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI1_SS3n                 0x0
///                                    ###
///                                    * pinMuxCntlBus[14*3+2:14*3]	 pinMux Control for SPI1_SS3n
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_5                    0x5
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI1_SDO                  0x0
///                                    ###
///                                    * pinMuxCntlBus[15*3+2:15*3]	 pinMux Control for SPI1_SDO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SPI1_SCLK                 0x0
///                                    ###
///                                    * pinMuxCntlBus[16*3+2:16*3]	 pinMux Control for SPI1_SCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  SPI1_SDI                  0x0
///                                    ###
///                                    * pinMuxCntlBus[17*3+2:17*3]	 pinMux Control for SPI1_SDI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  TW0_SCL                   0x0
///                                    ###
///                                    * pinMuxCntlBus[18*3+2:18*3]	 pinMux Control for TW0_SCL
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  TW0_SDA                   0x0
///                                    ###
///                                    * pinMuxCntlBus[19*3+2:19*3]	 pinMux Control for TW0_SDA
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %%        2          # Stuffing bits...
///     # 0x08008 pinMuxCntlBus2
///               %unsigned 3  USB2_DRV_VBUS             0x0
///                                    ###
///                                    * pinMuxCntlBus[20*3+2:20*3]	 pinMux Control for USB2_DRV_VBUS
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SDIO0_CDn                 0x0
///                                    ###
///                                    * pinMuxCntlBus[21*3+2:21*3]	 pinMux Control for SDIO0_CDn
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///               %unsigned 3  SDIO0_WP                  0x0
///                                    ###
///                                    * pinMuxCntlBus[22*3+2:22*3]	 pinMux Control for SDIO0_WP
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///               %unsigned 3  SCRD0_CRD_PRES            0x0
///                                    ###
///                                    * pinMuxCntlBus[23*3+2:23*3]	 pinMux Control for SCRD0_CRD_PRES
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  SCRD0_RST                 0x0
///                                    ###
///                                    * pinMuxCntlBus[24*3+2:24*3]	 pinMux Control for SCRD0_RST
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  SCRD0_DCLK                0x0
///                                    ###
///                                    * pinMuxCntlBus[25*3+2:25*3]	 pinMux Control for SCRD0_DCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  SCRD0_DIO                 0x0
///                                    ###
///                                    * pinMuxCntlBus[26*3+2:26*3]	 pinMux Control for SCRD0_DIO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %%        11         # Stuffing bits...
///     @ 0x0800C                      (W-)
///     #         # Stuffing bytes...
///               %% 8096
///     @ 0x08400 avioPinMuxCntlBus    (P-)
///               %unsigned 3  I2S1_DO0                  0x0
///                                    ###
///                                    * avioPinMuxCntlBus[0*3+2:0*3]	 pinMux Control for I2S1_DO[0]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S1_DO1                  0x0
///                                    ###
///                                    * avioPinMuxCntlBus[1*3+2:1*3]	 pinMux Control for I2S1_DO[1]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S1_DO2                  0x0
///                                    ###
///                                    * avioPinMuxCntlBus[2*3+2:2*3]	 pinMux Control for I2S1_DO[2]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S1_DO3                  0x0
///                                    ###
///                                    * avioPinMuxCntlBus[3*3+2:3*3]	 pinMux Control for I2S1_DO[3]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S1_LRCKIO               0x0
///                                    ###
///                                    * avioPinMuxCntlBus[4*3+2:4*3]	 pinMux Control for I2S1_LRCKIO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S1_BCLKIO               0x0
///                                    ###
///                                    * avioPinMuxCntlBus[5*3+2:5*3]	 pinMux Control for I2S1_BCLKIO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_7                    0x7
///               %unsigned 3  SPDIFO                    0x0
///                                    ###
///                                    * avioPinMuxCntlBus[6*3+2:6*3]	 pinMux Control for SPDIFO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_4                    0x4
///               %unsigned 3  SPDIFI                    0x0
///                                    ###
///                                    * avioPinMuxCntlBus[7*3+2:7*3]	 pinMux Control for SPDIFI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///               %unsigned 3  I2S2_LRCKIO               0x0
///                                    ###
///                                    * avioPinMuxCntlBus[8*3+2:8*3]	 pinMux Control for I2S2_LRCKIO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  I2S2_BCLKIO               0x0
///                                    ###
///                                    * avioPinMuxCntlBus[9*3+2:9*3]	 pinMux Control for I2S2_BCLKIO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///               %%        2          # Stuffing bits...
///     # 0x08404 avioPinMuxCntlBus1
///               %unsigned 3  I2S2_DI0                  0x0
///                                    ###
///                                    * avioPinMuxCntlBus[10*3+2:10*3]	 pinMux Control for I2S2_DI[0]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  I2S2_DI1                  0x0
///                                    ###
///                                    * avioPinMuxCntlBus[11*3+2:11*3]	 pinMux Control for I2S2_DI[1]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///               %unsigned 3  I2S2_DI2                  0x0
///                                    ###
///                                    * avioPinMuxCntlBus[12*3+2:12*3]	 pinMux Control for I2S2_DI[2]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  I2S2_DI3                  0x0
///                                    ###
///                                    * avioPinMuxCntlBus[13*3+2:13*3]	 pinMux Control for I2S2_DI[3]
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_3                    0x3
///               %unsigned 3  I2S1_MCLK                 0x0
///                                    ###
///                                    * avioPinMuxCntlBus[14*3+2:14*3]	 pinMux Control for I2S1_MCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S2_MCLK                 0x0
///                                    ###
///                                    * avioPinMuxCntlBus[15*3+2:15*3]	 pinMux Control for I2S2_MCLK
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_2                    0x2
///                                    : MODE_4                    0x4
///               %unsigned 3  HDMI_TX_EDDC_SCL          0x0
///                                    ###
///                                    * avioPinMuxCntlBus[16*3+2:16*3]	 pinMux Control for HDMI_TX_EDDC_SCL
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  HDMI_TX_EDDC_SDA          0x0
///                                    ###
///                                    * avioPinMuxCntlBus[17*3+2:17*3]	 pinMux Control for HDMI_TX_EDDC_SDA
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///               %unsigned 3  I2S3_DO                   0x0
///                                    ###
///                                    * avioPinMuxCntlBus[18*3+2:18*3]	 pinMux Control for I2S3_DO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///                                    : MODE_7                    0x7
///               %unsigned 3  I2S3_LRCKIO               0x0
///                                    ###
///                                    * avioPinMuxCntlBus[19*3+2:19*3]	 pinMux Control for I2S3_LRCKIO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///               %%        2          # Stuffing bits...
///     # 0x08408 avioPinMuxCntlBus2
///               %unsigned 3  I2S3_BCLKIO               0x0
///                                    ###
///                                    * avioPinMuxCntlBus[20*3+2:20*3]	 pinMux Control for I2S3_BCLKIO
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///               %unsigned 3  I2S3_DI                   0x0
///                                    ###
///                                    * avioPinMuxCntlBus[21*3+2:21*3]	 pinMux Control for I2S3_DI
///                                    ###
///                                    : MODE_0                    0x0
///                                    : MODE_1                    0x1
///                                    : MODE_3                    0x3
///               %%        26         # Stuffing bits...
///     @ 0x0840C                      (W-)
///     #         # Stuffing bytes...
///               %% 8096
///     @ 0x08800 GPIO_A2Cntl          (P-)
///               ###
///               * Pad Control for GPIO_A[2]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08804 GPIO_A1Cntl          (P-)
///               ###
///               * Pad Control for GPIO_A[1]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08808 GPIO_A0Cntl          (P-)
///               ###
///               * Pad Control for GPIO_A[0]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0880C STS0_CLKCntl         (P-)
///               ###
///               * Pad Control for STS0_CLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08810 STS0_SOPCntl         (P-)
///               ###
///               * Pad Control for STS0_SOP
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08814 STS0_SDCntl          (P-)
///               ###
///               * Pad Control for STS0_SD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08818 STS0_VALDCntl        (P-)
///               ###
///               * Pad Control for STS0_VALD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0881C STS1_CLKCntl         (P-)
///               ###
///               * Pad Control for STS1_CLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08820 STS1_SOPCntl         (P-)
///               ###
///               * Pad Control for STS1_SOP
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08824 STS1_SDCntl          (P-)
///               ###
///               * Pad Control for STS1_SD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08828 STS1_VALDCntl        (P-)
///               ###
///               * Pad Control for STS1_VALD
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0882C SPI1_SS0nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS0n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08830 SPI1_SS1nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS1n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08834 SPI1_SS2nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS2n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08838 SPI1_SS3nCntl        (P-)
///               ###
///               * Pad Control for SPI1_SS3n
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x0883C SPI1_SDOCntl         (P-)
///               ###
///               * Pad Control for SPI1_SDO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x1
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08840 SPI1_SCLKCntl        (P-)
///               ###
///               * Pad Control for SPI1_SCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08844 SPI1_SDICntl         (P-)
///               ###
///               * Pad Control for SPI1_SDI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08848 TW0_SCLCntl          (P-)
///               ###
///               * Pad Control for TW0_SCL
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x0884C TW0_SDACntl          (P-)
///               ###
///               * Pad Control for TW0_SDA
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08850 USB2_DRV_VBUSCntl    (P-)
///               ###
///               * Pad Control for USB2_DRV_VBUS
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08854 SDIO0_CDnCntl        (P-)
///               ###
///               * Pad Control for SDIO0_CDn
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08858 SDIO0_WPCntl         (P-)
///               ###
///               * Pad Control for SDIO0_WP
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x0885C SCRD0_CRD_PRESCntl   (P-)
///               ###
///               * Pad Control for SCRD0_CRD_PRES
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08860 SCRD0_RSTCntl        (P-)
///               ###
///               * Pad Control for SCRD0_RST
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08864 SCRD0_DCLKCntl       (P-)
///               ###
///               * Pad Control for SCRD0_DCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08868 SCRD0_DIOCntl        (P-)
///               ###
///               * Pad Control for SCRD0_DIO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x0886C                      (W-)
///     #         # Stuffing bytes...
///               %% 7328
///     @ 0x08C00 I2S1_DO0Cntl         (P-)
///               ###
///               * Pad Control for I2S1_DO[0]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C04 I2S1_DO1Cntl         (P-)
///               ###
///               * Pad Control for I2S1_DO[1]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C08 I2S1_DO2Cntl         (P-)
///               ###
///               * Pad Control for I2S1_DO[2]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C0C I2S1_DO3Cntl         (P-)
///               ###
///               * Pad Control for I2S1_DO[3]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C10 I2S1_LRCKIOCntl      (P-)
///               ###
///               * Pad Control for I2S1_LRCKIO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C14 I2S1_BCLKIOCntl      (P-)
///               ###
///               * Pad Control for I2S1_BCLKIO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C18 SPDIFOCntl           (P-)
///               ###
///               * Pad Control for SPDIFO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x1
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C1C SPDIFICntl           (P-)
///               ###
///               * Pad Control for SPDIFI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C20 I2S2_LRCKIOCntl      (P-)
///               ###
///               * Pad Control for I2S2_LRCKIO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C24 I2S2_BCLKIOCntl      (P-)
///               ###
///               * Pad Control for I2S2_BCLKIO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C28 I2S2_DI0Cntl         (P-)
///               ###
///               * Pad Control for I2S2_DI[0]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C2C I2S2_DI1Cntl         (P-)
///               ###
///               * Pad Control for I2S2_DI[1]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C30 I2S2_DI2Cntl         (P-)
///               ###
///               * Pad Control for I2S2_DI[2]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C34 I2S2_DI3Cntl         (P-)
///               ###
///               * Pad Control for I2S2_DI[3]
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C38 I2S1_MCLKCntl        (P-)
///               ###
///               * Pad Control for I2S1_MCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C3C I2S2_MCLKCntl        (P-)
///               ###
///               * Pad Control for I2S2_MCLK
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x1
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C40 HDMI_TX_EDDC_SCLCntl (P-)
///               ###
///               * Pad Control for HDMI_TX_EDDC_SCL
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08C44 HDMI_TX_EDDC_SDACntl (P-)
///               ###
///               * Pad Control for HDMI_TX_EDDC_SDA
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  DS3                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PE                        0x0
///               %unsigned 1  PS                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  SPU                       0x0
///               %unsigned 1  ST                        0x0
///               %%        22         # Stuffing bits...
///     @ 0x08C48 I2S3_DOCntl          (P-)
///               ###
///               * Pad Control for I2S3_DO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C4C I2S3_LRCKIOCntl      (P-)
///               ###
///               * Pad Control for I2S3_LRCKIO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C50 I2S3_BCLKIOCntl      (P-)
///               ###
///               * Pad Control for I2S3_BCLKIO
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C54 I2S3_DICntl          (P-)
///               ###
///               * Pad Control for I2S3_DI
///               ###
///               %unsigned 1  DS0                       0x0
///               %unsigned 1  DS1                       0x0
///               %unsigned 1  DS2                       0x0
///               %unsigned 1  IE                        0x1
///               %unsigned 1  PD                        0x0
///               %unsigned 1  PU                        0x0
///               %unsigned 1  SL                        0x0
///               %unsigned 1  ST                        0x0
///               %%        24         # Stuffing bits...
///     @ 0x08C58                      (W-)
///     #         # Stuffing bytes...
///               %% 7488
///     @ 0x09000 bootStrapSipll       (R-)
///               ###
///               * Boot Strap Register (Read Only).  Boot straps are latched on
///               * Power On and stored in this register.
///               * This register can be reset only by PAD reset.
///               * To provide software backward compatible,
///               * Please never remove register bits even if the clock gators are
///               * removed.
///               * Leave a 'not used' comment if the bit field is not used in
///               * current project.
///               * Please always add new bit field at the end.
///               ###
///               %unsigned 1  siPll_Byps
///                                    : PLL_OUT                   0x0
///                                    : BYPS                      0x1
///                                                 ###
///                                                 * SIPLL Bypass
///                                                 * 0:  No Bypass
///                                                 * 1:  System PLL Bypassed
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x09004 bootStrapEnSipll     (P)
///               ###
///               * Boot Strap Enable register
///               * This register provides the option to over write the Bootstraps
///               * using CPU register write
///               ###
///               %unsigned 1  siPll_BypsEn              0x1
///                                    : ENABLE                    0x1
///                                    : DISABLE                   0x0
///                                                 ###
///                                                 *  SISS PLL Bypass Strap Enable
///                                                 * 1  :  Allow bootstrap
///                                                 * 0  :  Disable bootstrap
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x09008                      (P)
///     # 0x09008 siPll
///               $abipll              siPll             REG
///     @ 0x09028 siPllClkSwitch       (P-)
///               ###
///               * Clock Switch register. This register is used to select clock
///               * between:
///               * PLL clock or reference clock  (PLL Bypass option)
///               ###
///               %unsigned 1  siPll_SWBypass            0x0
///                                    : refClk                    0x1
///                                    : pllClk                    0x0
///                                                 ###
///                                                 * SISS PLL Bypass switch
///                                                 * 0:  Use PLL
///                                                 * 1:  Bypass PLL
///                                                 ###
///               %%        31         # Stuffing bits...
///     @ 0x0902C                      (P)
///     # 0x0902C sissSysClk
///               $SISSClkD3           sissSysClk        REG
///                                    ###
///                                    * siss Sys clk
///                                    ###
///     @ 0x09030                      (P)
///     # 0x09030 bcmClk
///               $SISSClkD4           bcmClk            REG
///                                    ###
///                                    * BCM Clock
///                                    ###
///     @ 0x09034                      (P)
///     # 0x09034 nocsClk
///               $SISSClkD4           nocsClk           REG
///                                    ###
///                                    * NOCS Reference Clock
///                                    ###
///     @ 0x09038 siSSReset            (P-)
///               ###
///               * siSS reset register
///               ###
///               %unsigned 1  tspSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset TSP module
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  nskSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset NSK module
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  nocsSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset nocs module
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %unsigned 1  ifcpSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset ifcp
///                                                 * 0  :  No Reset
///                                                 * 1  :  Reset
///                                                 ###
///               %%        28         # Stuffing bits...
///     @ 0x0903C siSSResetStatus      (RW-)
///               ###
///               * siSS reset status register
///               ###
///               %unsigned 1  tspSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of TSP module
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  nskSyncReset              0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of NSK module
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  nocsSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status of nocs module
///                                                 * 0 : Reset not issued
///                                                 * 1 : Reset issued
///                                                 ###
///               %unsigned 1  ifcpSyncReset             0x0
///                                    : assert                    0x1
///                                    : deassert                  0x0
///                                                 ###
///                                                 * Reset status for tsio
///                                                 * 0  :  Reset not asserted
///                                                 * 1  :  Reset asserted
///                                                 ###
///               %%        28         # Stuffing bits...
///     @ 0x09040                      (P)
///     # 0x09040 ifcpClk
///               $SISSClkD4           ifcpClk           REG
///                                    ###
///                                    * ifcp clk
///                                    ###
///     @ 0x09044                      (P)
///     # 0x09044 nskClk
///               $SISSClkD4           nskClk            REG
///                                    ###
///                                    * nsk clk
///                                    ###
///     @ 0x09048                      (P)
///     # 0x09048 RWTC_SISS
///               $SRAMRWTC            RWTC_SISS         REG
///     @ 0x09054                      (P)
///     # 0x09054 SRAM_PWR_SISS
///               $SRAMPWR             SRAM_PWR_SISS     REG
///                                    ###
///                                    * Sram power control for siSS mini
///                                    ###
///     @ 0x09058                      (P)
///     # 0x09058 SRAM_PWR_NSK2
///               $SRAMPWR             SRAM_PWR_NSK2     REG
///                                    ###
///                                    * Sram power control for nsk2
///                                    ###
///     @ 0x0905C                      (P)
///     # 0x0905C SRAM_PWR_NOCS3
///               $SRAMPWR             SRAM_PWR_NOCS3    REG
///                                    ###
///                                    * Sram power control for nocs3
///                                    ###
///     @ 0x09060                      (P)
///     # 0x09060 SRAM_PWR_IFCP
///               $SRAMPWR             SRAM_PWR_IFCP     REG
///                                    ###
///                                    * Sram power control for IFCP
///                                    ###
///     @ 0x09064                      (P)
///     # 0x09064 SRAM_PWR_TSP
///               $SRAMPWR             SRAM_PWR_TSP      REG
///                                    ###
///                                    * Sram power control for tsp
///                                    * Tsp clock
///                                    ###
///     @ 0x09068                      (P)
///     # 0x09068 tspClk
///               $SISSClkD2           tspClk            REG
///                                    ###
///                                    * TSP Clock
///                                    ###
///     @ 0x0906C                      (P)
///     # 0x0906C tspRefClk
///               $SISSClkD4           tspRefClk         REG
///                                    ###
///                                    * TSP Reference Clock
///                                    ###
///     # # ----------------------------------------------------------
/// $ENDOFINTERFACE  # size:   36976B, bits:    2234b, padding:     0B
////////////////////////////////////////////////////////////
#ifndef h_Gbl
#define h_Gbl (){}

    #define     RA_Gbl_ProductId                               0x0000

    #define     BA_Gbl_ProductId_Id                            0x0000
    #define     B16Gbl_ProductId_Id                            0x0000
    #define   LSb32Gbl_ProductId_Id                               0
    #define   LSb16Gbl_ProductId_Id                               0
    #define       bGbl_ProductId_Id                            32
    #define   MSK32Gbl_ProductId_Id                               0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ProductId_ext                           0x0004

    #define     BA_Gbl_ProductId_ext_ID_EXT                    0x0004
    #define     B16Gbl_ProductId_ext_ID_EXT                    0x0004
    #define   LSb32Gbl_ProductId_ext_ID_EXT                       0
    #define   LSb16Gbl_ProductId_ext_ID_EXT                       0
    #define       bGbl_ProductId_ext_ID_EXT                    8
    #define   MSK32Gbl_ProductId_ext_ID_EXT                       0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_INT_ID                                  0x0008

    #define     BA_Gbl_INT_ID_VALUE                            0x0008
    #define     B16Gbl_INT_ID_VALUE                            0x0008
    #define   LSb32Gbl_INT_ID_VALUE                               0
    #define   LSb16Gbl_INT_ID_VALUE                               0
    #define       bGbl_INT_ID_VALUE                            8
    #define   MSK32Gbl_INT_ID_VALUE                               0x000000FF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_bootStrap                               0x000C

    #define     BA_Gbl_bootStrap_softwareStrap                 0x000C
    #define     B16Gbl_bootStrap_softwareStrap                 0x000C
    #define   LSb32Gbl_bootStrap_softwareStrap                    0
    #define   LSb16Gbl_bootStrap_softwareStrap                    0
    #define       bGbl_bootStrap_softwareStrap                 16
    #define   MSK32Gbl_bootStrap_softwareStrap                    0x0000FFFF

    #define     BA_Gbl_bootStrap_bootSrc                       0x000E
    #define     B16Gbl_bootStrap_bootSrc                       0x000E
    #define   LSb32Gbl_bootStrap_bootSrc                          16
    #define   LSb16Gbl_bootStrap_bootSrc                          0
    #define       bGbl_bootStrap_bootSrc                       2
    #define   MSK32Gbl_bootStrap_bootSrc                          0x00030000
    #define        Gbl_bootStrap_bootSrc_ROM_SPI_BOOT                       0x0
    #define        Gbl_bootStrap_bootSrc_ROM_NAND_BOOT                      0x1
    #define        Gbl_bootStrap_bootSrc_ROM_EMMC_BOOT                      0x2
    #define        Gbl_bootStrap_bootSrc_ROM_SPI_DIRECT_BOOT                0x3

    #define     BA_Gbl_bootStrap_cpuRstByps                    0x000E
    #define     B16Gbl_bootStrap_cpuRstByps                    0x000E
    #define   LSb32Gbl_bootStrap_cpuRstByps                       18
    #define   LSb16Gbl_bootStrap_cpuRstByps                       2
    #define       bGbl_bootStrap_cpuRstByps                    1
    #define   MSK32Gbl_bootStrap_cpuRstByps                       0x00040000
    #define        Gbl_bootStrap_cpuRstByps_CPU_INT_RST_BYPS                0x1
    #define        Gbl_bootStrap_cpuRstByps_CPU_INT_RST_EN                  0x0

    #define     BA_Gbl_bootStrap_pllPwrDown                    0x000E
    #define     B16Gbl_bootStrap_pllPwrDown                    0x000E
    #define   LSb32Gbl_bootStrap_pllPwrDown                       19
    #define   LSb16Gbl_bootStrap_pllPwrDown                       3
    #define       bGbl_bootStrap_pllPwrDown                    1
    #define   MSK32Gbl_bootStrap_pllPwrDown                       0x00080000
    #define        Gbl_bootStrap_pllPwrDown_PWR_DOWN                        0x1
    #define        Gbl_bootStrap_pllPwrDown_PWR_UP                          0x0

    #define     BA_Gbl_bootStrap_sysPll_0Byps                  0x000E
    #define     B16Gbl_bootStrap_sysPll_0Byps                  0x000E
    #define   LSb32Gbl_bootStrap_sysPll_0Byps                     20
    #define   LSb16Gbl_bootStrap_sysPll_0Byps                     4
    #define       bGbl_bootStrap_sysPll_0Byps                  1
    #define   MSK32Gbl_bootStrap_sysPll_0Byps                     0x00100000
    #define        Gbl_bootStrap_sysPll_0Byps_PLL_OUT                       0x0
    #define        Gbl_bootStrap_sysPll_0Byps_BYPS                          0x1

    #define     BA_Gbl_bootStrap_sysPll_1Byps                  0x000E
    #define     B16Gbl_bootStrap_sysPll_1Byps                  0x000E
    #define   LSb32Gbl_bootStrap_sysPll_1Byps                     21
    #define   LSb16Gbl_bootStrap_sysPll_1Byps                     5
    #define       bGbl_bootStrap_sysPll_1Byps                  1
    #define   MSK32Gbl_bootStrap_sysPll_1Byps                     0x00200000
    #define        Gbl_bootStrap_sysPll_1Byps_PLL_OUT                       0x0
    #define        Gbl_bootStrap_sysPll_1Byps_BYPS                          0x1

    #define     BA_Gbl_bootStrap_reserve                       0x000E
    #define     B16Gbl_bootStrap_reserve                       0x000E
    #define   LSb32Gbl_bootStrap_reserve                          22
    #define   LSb16Gbl_bootStrap_reserve                          6
    #define       bGbl_bootStrap_reserve                       1
    #define   MSK32Gbl_bootStrap_reserve                          0x00400000

    #define     BA_Gbl_bootStrap_memPllByps                    0x000E
    #define     B16Gbl_bootStrap_memPllByps                    0x000E
    #define   LSb32Gbl_bootStrap_memPllByps                       23
    #define   LSb16Gbl_bootStrap_memPllByps                       7
    #define       bGbl_bootStrap_memPllByps                    1
    #define   MSK32Gbl_bootStrap_memPllByps                       0x00800000
    #define        Gbl_bootStrap_memPllByps_PLL_OUT                         0x0
    #define        Gbl_bootStrap_memPllByps_BYPS                            0x1

    #define     BA_Gbl_bootStrap_cpuPllByps                    0x000F
    #define     B16Gbl_bootStrap_cpuPllByps                    0x000E
    #define   LSb32Gbl_bootStrap_cpuPllByps                       24
    #define   LSb16Gbl_bootStrap_cpuPllByps                       8
    #define       bGbl_bootStrap_cpuPllByps                    1
    #define   MSK32Gbl_bootStrap_cpuPllByps                       0x01000000
    #define        Gbl_bootStrap_cpuPllByps_PLL_OUT                         0x0
    #define        Gbl_bootStrap_cpuPllByps_BYPS                            0x1

    #define     BA_Gbl_bootStrap_ENG_EN                        0x000F
    #define     B16Gbl_bootStrap_ENG_EN                        0x000E
    #define   LSb32Gbl_bootStrap_ENG_EN                           25
    #define   LSb16Gbl_bootStrap_ENG_EN                           9
    #define       bGbl_bootStrap_ENG_EN                        1
    #define   MSK32Gbl_bootStrap_ENG_EN                           0x02000000
    #define        Gbl_bootStrap_ENG_EN_PRODUCTION_MODE                     0x0
    #define        Gbl_bootStrap_ENG_EN_DEVELOPE_MODE                       0x1

    #define     BA_Gbl_bootStrap_LEGACY_BOOT                   0x000F
    #define     B16Gbl_bootStrap_LEGACY_BOOT                   0x000E
    #define   LSb32Gbl_bootStrap_LEGACY_BOOT                      26
    #define   LSb16Gbl_bootStrap_LEGACY_BOOT                      10
    #define       bGbl_bootStrap_LEGACY_BOOT                   1
    #define   MSK32Gbl_bootStrap_LEGACY_BOOT                      0x04000000
    #define        Gbl_bootStrap_LEGACY_BOOT_FAST_BOOT_MODE                 0x0
    #define        Gbl_bootStrap_LEGACY_BOOT_LEGACY_BOOT_MODE               0x1

    #define     BA_Gbl_bootStrap_avPll_0Byps                   0x000F
    #define     B16Gbl_bootStrap_avPll_0Byps                   0x000E
    #define   LSb32Gbl_bootStrap_avPll_0Byps                      27
    #define   LSb16Gbl_bootStrap_avPll_0Byps                      11
    #define       bGbl_bootStrap_avPll_0Byps                   1
    #define   MSK32Gbl_bootStrap_avPll_0Byps                      0x08000000
    #define        Gbl_bootStrap_avPll_0Byps_PLL_OUT                        0x0
    #define        Gbl_bootStrap_avPll_0Byps_BYPS                           0x1

    #define     BA_Gbl_bootStrap_avPll_1Byps                   0x000F
    #define     B16Gbl_bootStrap_avPll_1Byps                   0x000E
    #define   LSb32Gbl_bootStrap_avPll_1Byps                      28
    #define   LSb16Gbl_bootStrap_avPll_1Byps                      12
    #define       bGbl_bootStrap_avPll_1Byps                   1
    #define   MSK32Gbl_bootStrap_avPll_1Byps                      0x10000000
    #define        Gbl_bootStrap_avPll_1Byps_PLL_OUT                        0x0
    #define        Gbl_bootStrap_avPll_1Byps_BYPS                           0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_bootStrapEn                             0x0010

    #define     BA_Gbl_bootStrapEn_cpuRstBypsEn                0x0010
    #define     B16Gbl_bootStrapEn_cpuRstBypsEn                0x0010
    #define   LSb32Gbl_bootStrapEn_cpuRstBypsEn                   0
    #define   LSb16Gbl_bootStrapEn_cpuRstBypsEn                   0
    #define       bGbl_bootStrapEn_cpuRstBypsEn                1
    #define   MSK32Gbl_bootStrapEn_cpuRstBypsEn                   0x00000001
    #define        Gbl_bootStrapEn_cpuRstBypsEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_cpuRstBypsEn_DISABLE                     0x0

    #define     BA_Gbl_bootStrapEn_pllPwrDownEn                0x0010
    #define     B16Gbl_bootStrapEn_pllPwrDownEn                0x0010
    #define   LSb32Gbl_bootStrapEn_pllPwrDownEn                   1
    #define   LSb16Gbl_bootStrapEn_pllPwrDownEn                   1
    #define       bGbl_bootStrapEn_pllPwrDownEn                1
    #define   MSK32Gbl_bootStrapEn_pllPwrDownEn                   0x00000002
    #define        Gbl_bootStrapEn_pllPwrDownEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_pllPwrDownEn_DISABLE                     0x0

    #define     BA_Gbl_bootStrapEn_sysPLL_0BypsEn              0x0010
    #define     B16Gbl_bootStrapEn_sysPLL_0BypsEn              0x0010
    #define   LSb32Gbl_bootStrapEn_sysPLL_0BypsEn                 2
    #define   LSb16Gbl_bootStrapEn_sysPLL_0BypsEn                 2
    #define       bGbl_bootStrapEn_sysPLL_0BypsEn              1
    #define   MSK32Gbl_bootStrapEn_sysPLL_0BypsEn                 0x00000004
    #define        Gbl_bootStrapEn_sysPLL_0BypsEn_ENABLE                    0x1
    #define        Gbl_bootStrapEn_sysPLL_0BypsEn_DISABLE                   0x0

    #define     BA_Gbl_bootStrapEn_memPLLBypsEn                0x0010
    #define     B16Gbl_bootStrapEn_memPLLBypsEn                0x0010
    #define   LSb32Gbl_bootStrapEn_memPLLBypsEn                   3
    #define   LSb16Gbl_bootStrapEn_memPLLBypsEn                   3
    #define       bGbl_bootStrapEn_memPLLBypsEn                1
    #define   MSK32Gbl_bootStrapEn_memPLLBypsEn                   0x00000008
    #define        Gbl_bootStrapEn_memPLLBypsEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_memPLLBypsEn_DISABLE                     0x0

    #define     BA_Gbl_bootStrapEn_cpuPLLBypsEn                0x0010
    #define     B16Gbl_bootStrapEn_cpuPLLBypsEn                0x0010
    #define   LSb32Gbl_bootStrapEn_cpuPLLBypsEn                   4
    #define   LSb16Gbl_bootStrapEn_cpuPLLBypsEn                   4
    #define       bGbl_bootStrapEn_cpuPLLBypsEn                1
    #define   MSK32Gbl_bootStrapEn_cpuPLLBypsEn                   0x00000010
    #define        Gbl_bootStrapEn_cpuPLLBypsEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_cpuPLLBypsEn_DISABLE                     0x0

    #define     BA_Gbl_bootStrapEn_legacyBootEn                0x0010
    #define     B16Gbl_bootStrapEn_legacyBootEn                0x0010
    #define   LSb32Gbl_bootStrapEn_legacyBootEn                   5
    #define   LSb16Gbl_bootStrapEn_legacyBootEn                   5
    #define       bGbl_bootStrapEn_legacyBootEn                1
    #define   MSK32Gbl_bootStrapEn_legacyBootEn                   0x00000020
    #define        Gbl_bootStrapEn_legacyBootEn_ENABLE                      0x1
    #define        Gbl_bootStrapEn_legacyBootEn_DISABLE                     0x0

    #define     BA_Gbl_bootStrapEn_sysPLL_1BypsEn              0x0010
    #define     B16Gbl_bootStrapEn_sysPLL_1BypsEn              0x0010
    #define   LSb32Gbl_bootStrapEn_sysPLL_1BypsEn                 6
    #define   LSb16Gbl_bootStrapEn_sysPLL_1BypsEn                 6
    #define       bGbl_bootStrapEn_sysPLL_1BypsEn              1
    #define   MSK32Gbl_bootStrapEn_sysPLL_1BypsEn                 0x00000040
    #define        Gbl_bootStrapEn_sysPLL_1BypsEn_ENABLE                    0x1
    #define        Gbl_bootStrapEn_sysPLL_1BypsEn_DISABLE                   0x0

    #define     BA_Gbl_bootStrapEn_reserve                     0x0010
    #define     B16Gbl_bootStrapEn_reserve                     0x0010
    #define   LSb32Gbl_bootStrapEn_reserve                        7
    #define   LSb16Gbl_bootStrapEn_reserve                        7
    #define       bGbl_bootStrapEn_reserve                     1
    #define   MSK32Gbl_bootStrapEn_reserve                        0x00000080

    #define     BA_Gbl_bootStrapEn_avPLL_0BypsEn               0x0011
    #define     B16Gbl_bootStrapEn_avPLL_0BypsEn               0x0010
    #define   LSb32Gbl_bootStrapEn_avPLL_0BypsEn                  8
    #define   LSb16Gbl_bootStrapEn_avPLL_0BypsEn                  8
    #define       bGbl_bootStrapEn_avPLL_0BypsEn               1
    #define   MSK32Gbl_bootStrapEn_avPLL_0BypsEn                  0x00000100
    #define        Gbl_bootStrapEn_avPLL_0BypsEn_ENABLE                     0x1
    #define        Gbl_bootStrapEn_avPLL_0BypsEn_DISABLE                    0x0

    #define     BA_Gbl_bootStrapEn_avPLL_1BypsEn               0x0011
    #define     B16Gbl_bootStrapEn_avPLL_1BypsEn               0x0010
    #define   LSb32Gbl_bootStrapEn_avPLL_1BypsEn                  9
    #define   LSb16Gbl_bootStrapEn_avPLL_1BypsEn                  9
    #define       bGbl_bootStrapEn_avPLL_1BypsEn               1
    #define   MSK32Gbl_bootStrapEn_avPLL_1BypsEn                  0x00000200
    #define        Gbl_bootStrapEn_avPLL_1BypsEn_ENABLE                     0x1
    #define        Gbl_bootStrapEn_avPLL_1BypsEn_DISABLE                    0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_pkgSel                                  0x0014

    #define     BA_Gbl_pkgSel_DDR32bit                         0x0014
    #define     B16Gbl_pkgSel_DDR32bit                         0x0014
    #define   LSb32Gbl_pkgSel_DDR32bit                            0
    #define   LSb16Gbl_pkgSel_DDR32bit                            0
    #define       bGbl_pkgSel_DDR32bit                         1
    #define   MSK32Gbl_pkgSel_DDR32bit                            0x00000001

    #define     BA_Gbl_pkgSel_reserved                         0x0014
    #define     B16Gbl_pkgSel_reserved                         0x0014
    #define   LSb32Gbl_pkgSel_reserved                            1
    #define   LSb16Gbl_pkgSel_reserved                            1
    #define       bGbl_pkgSel_reserved                         1
    #define   MSK32Gbl_pkgSel_reserved                            0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_chipCntl                                0x0040

    #define     BA_Gbl_chipCntl_DBG_SEL                        0x0040
    #define     B16Gbl_chipCntl_DBG_SEL                        0x0040
    #define   LSb32Gbl_chipCntl_DBG_SEL                           0
    #define   LSb16Gbl_chipCntl_DBG_SEL                           0
    #define       bGbl_chipCntl_DBG_SEL                        3
    #define   MSK32Gbl_chipCntl_DBG_SEL                           0x00000007

    #define     BA_Gbl_chipCntl_PLL_PADDBG_SEL                 0x0040
    #define     B16Gbl_chipCntl_PLL_PADDBG_SEL                 0x0040
    #define   LSb32Gbl_chipCntl_PLL_PADDBG_SEL                    3
    #define   LSb16Gbl_chipCntl_PLL_PADDBG_SEL                    3
    #define       bGbl_chipCntl_PLL_PADDBG_SEL                 3
    #define   MSK32Gbl_chipCntl_PLL_PADDBG_SEL                    0x00000038

    #define     BA_Gbl_chipCntl_TW1_SEL                        0x0040
    #define     B16Gbl_chipCntl_TW1_SEL                        0x0040
    #define   LSb32Gbl_chipCntl_TW1_SEL                           6
    #define   LSb16Gbl_chipCntl_TW1_SEL                           6
    #define       bGbl_chipCntl_TW1_SEL                        1
    #define   MSK32Gbl_chipCntl_TW1_SEL                           0x00000040

    #define     BA_Gbl_chipCntl_URT2_PORT_SEL                  0x0040
    #define     B16Gbl_chipCntl_URT2_PORT_SEL                  0x0040
    #define   LSb32Gbl_chipCntl_URT2_PORT_SEL                     7
    #define   LSb16Gbl_chipCntl_URT2_PORT_SEL                     7
    #define       bGbl_chipCntl_URT2_PORT_SEL                  1
    #define   MSK32Gbl_chipCntl_URT2_PORT_SEL                     0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_stsCntl                                 0x0044

    #define     BA_Gbl_stsCntl_sts0TwoWire                     0x0044
    #define     B16Gbl_stsCntl_sts0TwoWire                     0x0044
    #define   LSb32Gbl_stsCntl_sts0TwoWire                        0
    #define   LSb16Gbl_stsCntl_sts0TwoWire                        0
    #define       bGbl_stsCntl_sts0TwoWire                     1
    #define   MSK32Gbl_stsCntl_sts0TwoWire                        0x00000001

    #define     BA_Gbl_stsCntl_sts1TwoWire                     0x0044
    #define     B16Gbl_stsCntl_sts1TwoWire                     0x0044
    #define   LSb32Gbl_stsCntl_sts1TwoWire                        1
    #define   LSb16Gbl_stsCntl_sts1TwoWire                        1
    #define       bGbl_stsCntl_sts1TwoWire                     1
    #define   MSK32Gbl_stsCntl_sts1TwoWire                        0x00000002

    #define     BA_Gbl_stsCntl_sts2TwoWire                     0x0044
    #define     B16Gbl_stsCntl_sts2TwoWire                     0x0044
    #define   LSb32Gbl_stsCntl_sts2TwoWire                        2
    #define   LSb16Gbl_stsCntl_sts2TwoWire                        2
    #define       bGbl_stsCntl_sts2TwoWire                     1
    #define   MSK32Gbl_stsCntl_sts2TwoWire                        0x00000004

    #define     BA_Gbl_stsCntl_sts3TwoWire                     0x0044
    #define     B16Gbl_stsCntl_sts3TwoWire                     0x0044
    #define   LSb32Gbl_stsCntl_sts3TwoWire                        3
    #define   LSb16Gbl_stsCntl_sts3TwoWire                        3
    #define       bGbl_stsCntl_sts3TwoWire                     1
    #define   MSK32Gbl_stsCntl_sts3TwoWire                        0x00000008

    #define     BA_Gbl_stsCntl_sts4TwoWire                     0x0044
    #define     B16Gbl_stsCntl_sts4TwoWire                     0x0044
    #define   LSb32Gbl_stsCntl_sts4TwoWire                        4
    #define   LSb16Gbl_stsCntl_sts4TwoWire                        4
    #define       bGbl_stsCntl_sts4TwoWire                     1
    #define   MSK32Gbl_stsCntl_sts4TwoWire                        0x00000010

    #define     BA_Gbl_stsCntl_sts5TwoWire                     0x0044
    #define     B16Gbl_stsCntl_sts5TwoWire                     0x0044
    #define   LSb32Gbl_stsCntl_sts5TwoWire                        5
    #define   LSb16Gbl_stsCntl_sts5TwoWire                        5
    #define       bGbl_stsCntl_sts5TwoWire                     1
    #define   MSK32Gbl_stsCntl_sts5TwoWire                        0x00000020

    #define     BA_Gbl_stsCntl_sts6TwoWire                     0x0044
    #define     B16Gbl_stsCntl_sts6TwoWire                     0x0044
    #define   LSb32Gbl_stsCntl_sts6TwoWire                        6
    #define   LSb16Gbl_stsCntl_sts6TwoWire                        6
    #define       bGbl_stsCntl_sts6TwoWire                     1
    #define   MSK32Gbl_stsCntl_sts6TwoWire                        0x00000040

    #define     BA_Gbl_stsCntl_sts7TwoWire                     0x0044
    #define     B16Gbl_stsCntl_sts7TwoWire                     0x0044
    #define   LSb32Gbl_stsCntl_sts7TwoWire                        7
    #define   LSb16Gbl_stsCntl_sts7TwoWire                        7
    #define       bGbl_stsCntl_sts7TwoWire                     1
    #define   MSK32Gbl_stsCntl_sts7TwoWire                        0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic0                             0x0080

    #define     BA_Gbl_sw_generic0_swReg0                      0x0080
    #define     B16Gbl_sw_generic0_swReg0                      0x0080
    #define   LSb32Gbl_sw_generic0_swReg0                         0
    #define   LSb16Gbl_sw_generic0_swReg0                         0
    #define       bGbl_sw_generic0_swReg0                      32
    #define   MSK32Gbl_sw_generic0_swReg0                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic1                             0x0084

    #define     BA_Gbl_sw_generic1_swReg1                      0x0084
    #define     B16Gbl_sw_generic1_swReg1                      0x0084
    #define   LSb32Gbl_sw_generic1_swReg1                         0
    #define   LSb16Gbl_sw_generic1_swReg1                         0
    #define       bGbl_sw_generic1_swReg1                      32
    #define   MSK32Gbl_sw_generic1_swReg1                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic2                             0x0088

    #define     BA_Gbl_sw_generic2_swReg2                      0x0088
    #define     B16Gbl_sw_generic2_swReg2                      0x0088
    #define   LSb32Gbl_sw_generic2_swReg2                         0
    #define   LSb16Gbl_sw_generic2_swReg2                         0
    #define       bGbl_sw_generic2_swReg2                      32
    #define   MSK32Gbl_sw_generic2_swReg2                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sw_generic3                             0x008C

    #define     BA_Gbl_sw_generic3_swReg3                      0x008C
    #define     B16Gbl_sw_generic3_swReg3                      0x008C
    #define   LSb32Gbl_sw_generic3_swReg3                         0
    #define   LSb16Gbl_sw_generic3_swReg3                         0
    #define       bGbl_sw_generic3_swReg3                      32
    #define   MSK32Gbl_sw_generic3_swReg3                         0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_SOC                                0x0100
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_EMMC                           0x010C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_SDIO                           0x0110
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_USB2                           0x0114
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_USB3                           0x0118
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_PCIE                           0x011C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_GFX3D                          0x0120
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_V4G                            0x0124
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_H1                             0x0128
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_OVP                            0x012C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_GE                             0x0130
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_PB                             0x0134
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_NPU                            0x0138
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_MC                             0x013C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_ALM0                           0x0140
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_ALM1                           0x0144
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_DSP0                           0x0148
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_DSP1                           0x014C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_FPGAR                                   0x0198

    #define     BA_Gbl_FPGAR_FPGAR                             0x0198
    #define     B16Gbl_FPGAR_FPGAR                             0x0198
    #define   LSb32Gbl_FPGAR_FPGAR                                0
    #define   LSb16Gbl_FPGAR_FPGAR                                0
    #define       bGbl_FPGAR_FPGAR                             32
    #define   MSK32Gbl_FPGAR_FPGAR                                0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_FPGARW                                  0x019C

    #define     BA_Gbl_FPGARW_FPGARW                           0x019C
    #define     B16Gbl_FPGARW_FPGARW                           0x019C
    #define   LSb32Gbl_FPGARW_FPGARW                              0
    #define   LSb16Gbl_FPGARW_FPGARW                              0
    #define       bGbl_FPGARW_FPGARW                           32
    #define   MSK32Gbl_FPGARW_FPGARW                              0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sysPll_0                                0x0200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sysPll_1                                0x0220
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ResetTrigger                            0x0600

    #define     BA_Gbl_ResetTrigger_chipReset                  0x0600
    #define     B16Gbl_ResetTrigger_chipReset                  0x0600
    #define   LSb32Gbl_ResetTrigger_chipReset                     0
    #define   LSb16Gbl_ResetTrigger_chipReset                     0
    #define       bGbl_ResetTrigger_chipReset                  1
    #define   MSK32Gbl_ResetTrigger_chipReset                     0x00000001
    #define        Gbl_ResetTrigger_chipReset_assert                        0x1
    #define        Gbl_ResetTrigger_chipReset_deassert                      0x0

    #define     BA_Gbl_ResetTrigger_socDdrSyncReset            0x0600
    #define     B16Gbl_ResetTrigger_socDdrSyncReset            0x0600
    #define   LSb32Gbl_ResetTrigger_socDdrSyncReset               1
    #define   LSb16Gbl_ResetTrigger_socDdrSyncReset               1
    #define       bGbl_ResetTrigger_socDdrSyncReset            1
    #define   MSK32Gbl_ResetTrigger_socDdrSyncReset               0x00000002
    #define        Gbl_ResetTrigger_socDdrSyncReset_assert                  0x1
    #define        Gbl_ResetTrigger_socDdrSyncReset_deassert                0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ResetStatus                             0x0604

    #define     BA_Gbl_ResetStatus_ChipResetStatus             0x0604
    #define     B16Gbl_ResetStatus_ChipResetStatus             0x0604
    #define   LSb32Gbl_ResetStatus_ChipResetStatus                0
    #define   LSb16Gbl_ResetStatus_ChipResetStatus                0
    #define       bGbl_ResetStatus_ChipResetStatus             1
    #define   MSK32Gbl_ResetStatus_ChipResetStatus                0x00000001
    #define        Gbl_ResetStatus_ChipResetStatus_asserted                 0x1
    #define        Gbl_ResetStatus_ChipResetStatus_deasserted               0x0

    #define     BA_Gbl_ResetStatus_socDdrSyncResetStatus       0x0604
    #define     B16Gbl_ResetStatus_socDdrSyncResetStatus       0x0604
    #define   LSb32Gbl_ResetStatus_socDdrSyncResetStatus          1
    #define   LSb16Gbl_ResetStatus_socDdrSyncResetStatus          1
    #define       bGbl_ResetStatus_socDdrSyncResetStatus       1
    #define   MSK32Gbl_ResetStatus_socDdrSyncResetStatus          0x00000002
    #define        Gbl_ResetStatus_socDdrSyncResetStatus_asserted              0x1
    #define        Gbl_ResetStatus_socDdrSyncResetStatus_deasserted              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_WDTResetStatus                          0x060C

    #define     BA_Gbl_WDTResetStatus_wd0Status                0x060C
    #define     B16Gbl_WDTResetStatus_wd0Status                0x060C
    #define   LSb32Gbl_WDTResetStatus_wd0Status                   0
    #define   LSb16Gbl_WDTResetStatus_wd0Status                   0
    #define       bGbl_WDTResetStatus_wd0Status                1
    #define   MSK32Gbl_WDTResetStatus_wd0Status                   0x00000001
    #define        Gbl_WDTResetStatus_wd0Status_asserted                    0x1
    #define        Gbl_WDTResetStatus_wd0Status_deasserted                  0x0

    #define     BA_Gbl_WDTResetStatus_wd1Status                0x060C
    #define     B16Gbl_WDTResetStatus_wd1Status                0x060C
    #define   LSb32Gbl_WDTResetStatus_wd1Status                   1
    #define   LSb16Gbl_WDTResetStatus_wd1Status                   1
    #define       bGbl_WDTResetStatus_wd1Status                1
    #define   MSK32Gbl_WDTResetStatus_wd1Status                   0x00000002
    #define        Gbl_WDTResetStatus_wd1Status_asserted                    0x1
    #define        Gbl_WDTResetStatus_wd1Status_deasserted                  0x0

    #define     BA_Gbl_WDTResetStatus_wd2Status                0x060C
    #define     B16Gbl_WDTResetStatus_wd2Status                0x060C
    #define   LSb32Gbl_WDTResetStatus_wd2Status                   2
    #define   LSb16Gbl_WDTResetStatus_wd2Status                   2
    #define       bGbl_WDTResetStatus_wd2Status                1
    #define   MSK32Gbl_WDTResetStatus_wd2Status                   0x00000004
    #define        Gbl_WDTResetStatus_wd2Status_asserted                    0x1
    #define        Gbl_WDTResetStatus_wd2Status_deasserted                  0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioReset                               0x0620

    #define     BA_Gbl_avioReset_SyncReset                     0x0620
    #define     B16Gbl_avioReset_SyncReset                     0x0620
    #define   LSb32Gbl_avioReset_SyncReset                        0
    #define   LSb16Gbl_avioReset_SyncReset                        0
    #define       bGbl_avioReset_SyncReset                     1
    #define   MSK32Gbl_avioReset_SyncReset                        0x00000001
    #define        Gbl_avioReset_SyncReset_assert                           0x1
    #define        Gbl_avioReset_SyncReset_deassert                         0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioResetStatus                         0x0624

    #define     BA_Gbl_avioResetStatus_SyncReset               0x0624
    #define     B16Gbl_avioResetStatus_SyncReset               0x0624
    #define   LSb32Gbl_avioResetStatus_SyncReset                  0
    #define   LSb16Gbl_avioResetStatus_SyncReset                  0
    #define       bGbl_avioResetStatus_SyncReset               1
    #define   MSK32Gbl_avioResetStatus_SyncReset                  0x00000001
    #define        Gbl_avioResetStatus_SyncReset_assert                     0x1
    #define        Gbl_avioResetStatus_SyncReset_deassert                   0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gethRgmiiRstn                           0x0628

    #define     BA_Gbl_gethRgmiiRstn_SyncReset                 0x0628
    #define     B16Gbl_gethRgmiiRstn_SyncReset                 0x0628
    #define   LSb32Gbl_gethRgmiiRstn_SyncReset                    0
    #define   LSb16Gbl_gethRgmiiRstn_SyncReset                    0
    #define       bGbl_gethRgmiiRstn_SyncReset                 1
    #define   MSK32Gbl_gethRgmiiRstn_SyncReset                    0x00000001
    #define        Gbl_gethRgmiiRstn_SyncReset_assert                       0x1
    #define        Gbl_gethRgmiiRstn_SyncReset_deassert                     0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gethRgmiiResetStatus                    0x062C

    #define     BA_Gbl_gethRgmiiResetStatus_SyncReset          0x062C
    #define     B16Gbl_gethRgmiiResetStatus_SyncReset          0x062C
    #define   LSb32Gbl_gethRgmiiResetStatus_SyncReset             0
    #define   LSb16Gbl_gethRgmiiResetStatus_SyncReset             0
    #define       bGbl_gethRgmiiResetStatus_SyncReset          1
    #define   MSK32Gbl_gethRgmiiResetStatus_SyncReset             0x00000001
    #define        Gbl_gethRgmiiResetStatus_SyncReset_assert                0x1
    #define        Gbl_gethRgmiiResetStatus_SyncReset_deassert              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DReset                              0x0630

    #define     BA_Gbl_gfx3DReset_SyncReset                    0x0630
    #define     B16Gbl_gfx3DReset_SyncReset                    0x0630
    #define   LSb32Gbl_gfx3DReset_SyncReset                       0
    #define   LSb16Gbl_gfx3DReset_SyncReset                       0
    #define       bGbl_gfx3DReset_SyncReset                    1
    #define   MSK32Gbl_gfx3DReset_SyncReset                       0x00000001
    #define        Gbl_gfx3DReset_SyncReset_assert                          0x1
    #define        Gbl_gfx3DReset_SyncReset_deassert                        0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DResetStatus                        0x0634

    #define     BA_Gbl_gfx3DResetStatus_SyncReset              0x0634
    #define     B16Gbl_gfx3DResetStatus_SyncReset              0x0634
    #define   LSb32Gbl_gfx3DResetStatus_SyncReset                 0
    #define   LSb16Gbl_gfx3DResetStatus_SyncReset                 0
    #define       bGbl_gfx3DResetStatus_SyncReset              1
    #define   MSK32Gbl_gfx3DResetStatus_SyncReset                 0x00000001
    #define        Gbl_gfx3DResetStatus_SyncReset_assert                    0x1
    #define        Gbl_gfx3DResetStatus_SyncReset_deassert                  0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_decoderReset                            0x0640

    #define     BA_Gbl_decoderReset_SyncReset                  0x0640
    #define     B16Gbl_decoderReset_SyncReset                  0x0640
    #define   LSb32Gbl_decoderReset_SyncReset                     0
    #define   LSb16Gbl_decoderReset_SyncReset                     0
    #define       bGbl_decoderReset_SyncReset                  1
    #define   MSK32Gbl_decoderReset_SyncReset                     0x00000001
    #define        Gbl_decoderReset_SyncReset_assert                        0x1
    #define        Gbl_decoderReset_SyncReset_deassert                      0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_decoderResetStatus                      0x0644

    #define     BA_Gbl_decoderResetStatus_SyncReset            0x0644
    #define     B16Gbl_decoderResetStatus_SyncReset            0x0644
    #define   LSb32Gbl_decoderResetStatus_SyncReset               0
    #define   LSb16Gbl_decoderResetStatus_SyncReset               0
    #define       bGbl_decoderResetStatus_SyncReset            1
    #define   MSK32Gbl_decoderResetStatus_SyncReset               0x00000001
    #define        Gbl_decoderResetStatus_SyncReset_assert                  0x1
    #define        Gbl_decoderResetStatus_SyncReset_deassert                0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_encoderReset                            0x0650

    #define     BA_Gbl_encoderReset_SyncReset                  0x0650
    #define     B16Gbl_encoderReset_SyncReset                  0x0650
    #define   LSb32Gbl_encoderReset_SyncReset                     0
    #define   LSb16Gbl_encoderReset_SyncReset                     0
    #define       bGbl_encoderReset_SyncReset                  1
    #define   MSK32Gbl_encoderReset_SyncReset                     0x00000001
    #define        Gbl_encoderReset_SyncReset_assert                        0x1
    #define        Gbl_encoderReset_SyncReset_deassert                      0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_encoderResetStatus                      0x0654

    #define     BA_Gbl_encoderResetStatus_SyncReset            0x0654
    #define     B16Gbl_encoderResetStatus_SyncReset            0x0654
    #define   LSb32Gbl_encoderResetStatus_SyncReset               0
    #define   LSb16Gbl_encoderResetStatus_SyncReset               0
    #define       bGbl_encoderResetStatus_SyncReset            1
    #define   MSK32Gbl_encoderResetStatus_SyncReset               0x00000001
    #define        Gbl_encoderResetStatus_SyncReset_assert                  0x1
    #define        Gbl_encoderResetStatus_SyncReset_deassert                0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ovpReset                                0x0660

    #define     BA_Gbl_ovpReset_SyncReset                      0x0660
    #define     B16Gbl_ovpReset_SyncReset                      0x0660
    #define   LSb32Gbl_ovpReset_SyncReset                         0
    #define   LSb16Gbl_ovpReset_SyncReset                         0
    #define       bGbl_ovpReset_SyncReset                      1
    #define   MSK32Gbl_ovpReset_SyncReset                         0x00000001
    #define        Gbl_ovpReset_SyncReset_assert                            0x1
    #define        Gbl_ovpReset_SyncReset_deassert                          0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ovpResetStatus                          0x0664

    #define     BA_Gbl_ovpResetStatus_SyncReset                0x0664
    #define     B16Gbl_ovpResetStatus_SyncReset                0x0664
    #define   LSb32Gbl_ovpResetStatus_SyncReset                   0
    #define   LSb16Gbl_ovpResetStatus_SyncReset                   0
    #define       bGbl_ovpResetStatus_SyncReset                1
    #define   MSK32Gbl_ovpResetStatus_SyncReset                   0x00000001
    #define        Gbl_ovpResetStatus_SyncReset_assert                      0x1
    #define        Gbl_ovpResetStatus_SyncReset_deassert                    0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_almGeoxbarGRstn                         0x0670

    #define     BA_Gbl_almGeoxbarGRstn_SyncReset               0x0670
    #define     B16Gbl_almGeoxbarGRstn_SyncReset               0x0670
    #define   LSb32Gbl_almGeoxbarGRstn_SyncReset                  0
    #define   LSb16Gbl_almGeoxbarGRstn_SyncReset                  0
    #define       bGbl_almGeoxbarGRstn_SyncReset               1
    #define   MSK32Gbl_almGeoxbarGRstn_SyncReset                  0x00000001
    #define        Gbl_almGeoxbarGRstn_SyncReset_assert                     0x1
    #define        Gbl_almGeoxbarGRstn_SyncReset_deassert                   0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_almGeoxbarResetStatus                   0x0674

    #define     BA_Gbl_almGeoxbarResetStatus_SyncReset         0x0674
    #define     B16Gbl_almGeoxbarResetStatus_SyncReset         0x0674
    #define   LSb32Gbl_almGeoxbarResetStatus_SyncReset            0
    #define   LSb16Gbl_almGeoxbarResetStatus_SyncReset            0
    #define       bGbl_almGeoxbarResetStatus_SyncReset         1
    #define   MSK32Gbl_almGeoxbarResetStatus_SyncReset            0x00000001
    #define        Gbl_almGeoxbarResetStatus_SyncReset_assert               0x1
    #define        Gbl_almGeoxbarResetStatus_SyncReset_deassert              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_almVnxbarGRstn                          0x0678

    #define     BA_Gbl_almVnxbarGRstn_SyncReset                0x0678
    #define     B16Gbl_almVnxbarGRstn_SyncReset                0x0678
    #define   LSb32Gbl_almVnxbarGRstn_SyncReset                   0
    #define   LSb16Gbl_almVnxbarGRstn_SyncReset                   0
    #define       bGbl_almVnxbarGRstn_SyncReset                1
    #define   MSK32Gbl_almVnxbarGRstn_SyncReset                   0x00000001
    #define        Gbl_almVnxbarGRstn_SyncReset_assert                      0x1
    #define        Gbl_almVnxbarGRstn_SyncReset_deassert                    0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_almVnxbarResetStatus                    0x067C

    #define     BA_Gbl_almVnxbarResetStatus_SyncReset          0x067C
    #define     B16Gbl_almVnxbarResetStatus_SyncReset          0x067C
    #define   LSb32Gbl_almVnxbarResetStatus_SyncReset             0
    #define   LSb16Gbl_almVnxbarResetStatus_SyncReset             0
    #define       bGbl_almVnxbarResetStatus_SyncReset          1
    #define   MSK32Gbl_almVnxbarResetStatus_SyncReset             0x00000001
    #define        Gbl_almVnxbarResetStatus_SyncReset_assert                0x1
    #define        Gbl_almVnxbarResetStatus_SyncReset_deassert              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifReset                              0x0680

    #define     BA_Gbl_perifReset_SyncReset                    0x0680
    #define     B16Gbl_perifReset_SyncReset                    0x0680
    #define   LSb32Gbl_perifReset_SyncReset                       0
    #define   LSb16Gbl_perifReset_SyncReset                       0
    #define       bGbl_perifReset_SyncReset                    1
    #define   MSK32Gbl_perifReset_SyncReset                       0x00000001
    #define        Gbl_perifReset_SyncReset_assert                          0x1
    #define        Gbl_perifReset_SyncReset_deassert                        0x0

    #define     BA_Gbl_perifReset_ahbApbSyncReset              0x0680
    #define     B16Gbl_perifReset_ahbApbSyncReset              0x0680
    #define   LSb32Gbl_perifReset_ahbApbSyncReset                 1
    #define   LSb16Gbl_perifReset_ahbApbSyncReset                 1
    #define       bGbl_perifReset_ahbApbSyncReset              1
    #define   MSK32Gbl_perifReset_ahbApbSyncReset                 0x00000002
    #define        Gbl_perifReset_ahbApbSyncReset_assert                    0x1
    #define        Gbl_perifReset_ahbApbSyncReset_deassert                  0x0

    #define     BA_Gbl_perifReset_sdioSyncReset                0x0680
    #define     B16Gbl_perifReset_sdioSyncReset                0x0680
    #define   LSb32Gbl_perifReset_sdioSyncReset                   2
    #define   LSb16Gbl_perifReset_sdioSyncReset                   2
    #define       bGbl_perifReset_sdioSyncReset                1
    #define   MSK32Gbl_perifReset_sdioSyncReset                   0x00000004
    #define        Gbl_perifReset_sdioSyncReset_assert                      0x1
    #define        Gbl_perifReset_sdioSyncReset_deassert                    0x0

    #define     BA_Gbl_perifReset_reserved0                    0x0680
    #define     B16Gbl_perifReset_reserved0                    0x0680
    #define   LSb32Gbl_perifReset_reserved0                       3
    #define   LSb16Gbl_perifReset_reserved0                       3
    #define       bGbl_perifReset_reserved0                    1
    #define   MSK32Gbl_perifReset_reserved0                       0x00000008

    #define     BA_Gbl_perifReset_reserved1                    0x0680
    #define     B16Gbl_perifReset_reserved1                    0x0680
    #define   LSb32Gbl_perifReset_reserved1                       4
    #define   LSb16Gbl_perifReset_reserved1                       4
    #define       bGbl_perifReset_reserved1                    1
    #define   MSK32Gbl_perifReset_reserved1                       0x00000010

    #define     BA_Gbl_perifReset_reserved2                    0x0680
    #define     B16Gbl_perifReset_reserved2                    0x0680
    #define   LSb32Gbl_perifReset_reserved2                       5
    #define   LSb16Gbl_perifReset_reserved2                       5
    #define       bGbl_perifReset_reserved2                    1
    #define   MSK32Gbl_perifReset_reserved2                       0x00000020

    #define     BA_Gbl_perifReset_reserved3                    0x0680
    #define     B16Gbl_perifReset_reserved3                    0x0680
    #define   LSb32Gbl_perifReset_reserved3                       6
    #define   LSb16Gbl_perifReset_reserved3                       6
    #define       bGbl_perifReset_reserved3                    1
    #define   MSK32Gbl_perifReset_reserved3                       0x00000040

    #define     BA_Gbl_perifReset_reserved4                    0x0680
    #define     B16Gbl_perifReset_reserved4                    0x0680
    #define   LSb32Gbl_perifReset_reserved4                       7
    #define   LSb16Gbl_perifReset_reserved4                       7
    #define       bGbl_perifReset_reserved4                    1
    #define   MSK32Gbl_perifReset_reserved4                       0x00000080

    #define     BA_Gbl_perifReset_reserved5                    0x0681
    #define     B16Gbl_perifReset_reserved5                    0x0680
    #define   LSb32Gbl_perifReset_reserved5                       8
    #define   LSb16Gbl_perifReset_reserved5                       8
    #define       bGbl_perifReset_reserved5                    1
    #define   MSK32Gbl_perifReset_reserved5                       0x00000100

    #define     BA_Gbl_perifReset_usb0SyncReset                0x0681
    #define     B16Gbl_perifReset_usb0SyncReset                0x0680
    #define   LSb32Gbl_perifReset_usb0SyncReset                   9
    #define   LSb16Gbl_perifReset_usb0SyncReset                   9
    #define       bGbl_perifReset_usb0SyncReset                1
    #define   MSK32Gbl_perifReset_usb0SyncReset                   0x00000200
    #define        Gbl_perifReset_usb0SyncReset_assert                      0x1
    #define        Gbl_perifReset_usb0SyncReset_deassert                    0x0

    #define     BA_Gbl_perifReset_usb3SyncReset                0x0681
    #define     B16Gbl_perifReset_usb3SyncReset                0x0680
    #define   LSb32Gbl_perifReset_usb3SyncReset                   10
    #define   LSb16Gbl_perifReset_usb3SyncReset                   10
    #define       bGbl_perifReset_usb3SyncReset                1
    #define   MSK32Gbl_perifReset_usb3SyncReset                   0x00000400
    #define        Gbl_perifReset_usb3SyncReset_assert                      0x1
    #define        Gbl_perifReset_usb3SyncReset_deassert                    0x0

    #define     BA_Gbl_perifReset_emmcSyncReset                0x0681
    #define     B16Gbl_perifReset_emmcSyncReset                0x0680
    #define   LSb32Gbl_perifReset_emmcSyncReset                   11
    #define   LSb16Gbl_perifReset_emmcSyncReset                   11
    #define       bGbl_perifReset_emmcSyncReset                1
    #define   MSK32Gbl_perifReset_emmcSyncReset                   0x00000800
    #define        Gbl_perifReset_emmcSyncReset_assert                      0x1
    #define        Gbl_perifReset_emmcSyncReset_deassert                    0x0

    #define     BA_Gbl_perifReset_pBridgeSyncReset             0x0681
    #define     B16Gbl_perifReset_pBridgeSyncReset             0x0680
    #define   LSb32Gbl_perifReset_pBridgeSyncReset                12
    #define   LSb16Gbl_perifReset_pBridgeSyncReset                12
    #define       bGbl_perifReset_pBridgeSyncReset             1
    #define   MSK32Gbl_perifReset_pBridgeSyncReset                0x00001000
    #define        Gbl_perifReset_pBridgeSyncReset_assert                   0x1
    #define        Gbl_perifReset_pBridgeSyncReset_deassert                 0x0

    #define     BA_Gbl_perifReset_reserved6                    0x0681
    #define     B16Gbl_perifReset_reserved6                    0x0680
    #define   LSb32Gbl_perifReset_reserved6                       13
    #define   LSb16Gbl_perifReset_reserved6                       13
    #define       bGbl_perifReset_reserved6                    1
    #define   MSK32Gbl_perifReset_reserved6                       0x00002000
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifResetStatus                        0x0684

    #define     BA_Gbl_perifResetStatus_SyncReset              0x0684
    #define     B16Gbl_perifResetStatus_SyncReset              0x0684
    #define   LSb32Gbl_perifResetStatus_SyncReset                 0
    #define   LSb16Gbl_perifResetStatus_SyncReset                 0
    #define       bGbl_perifResetStatus_SyncReset              1
    #define   MSK32Gbl_perifResetStatus_SyncReset                 0x00000001
    #define        Gbl_perifResetStatus_SyncReset_assert                    0x1
    #define        Gbl_perifResetStatus_SyncReset_deassert                  0x0

    #define     BA_Gbl_perifResetStatus_ahbApbSyncReset        0x0684
    #define     B16Gbl_perifResetStatus_ahbApbSyncReset        0x0684
    #define   LSb32Gbl_perifResetStatus_ahbApbSyncReset           1
    #define   LSb16Gbl_perifResetStatus_ahbApbSyncReset           1
    #define       bGbl_perifResetStatus_ahbApbSyncReset        1
    #define   MSK32Gbl_perifResetStatus_ahbApbSyncReset           0x00000002
    #define        Gbl_perifResetStatus_ahbApbSyncReset_assert              0x1
    #define        Gbl_perifResetStatus_ahbApbSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_sdioSyncReset          0x0684
    #define     B16Gbl_perifResetStatus_sdioSyncReset          0x0684
    #define   LSb32Gbl_perifResetStatus_sdioSyncReset             2
    #define   LSb16Gbl_perifResetStatus_sdioSyncReset             2
    #define       bGbl_perifResetStatus_sdioSyncReset          1
    #define   MSK32Gbl_perifResetStatus_sdioSyncReset             0x00000004
    #define        Gbl_perifResetStatus_sdioSyncReset_assert                0x1
    #define        Gbl_perifResetStatus_sdioSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_reserved0              0x0684
    #define     B16Gbl_perifResetStatus_reserved0              0x0684
    #define   LSb32Gbl_perifResetStatus_reserved0                 3
    #define   LSb16Gbl_perifResetStatus_reserved0                 3
    #define       bGbl_perifResetStatus_reserved0              1
    #define   MSK32Gbl_perifResetStatus_reserved0                 0x00000008

    #define     BA_Gbl_perifResetStatus_reserved1              0x0684
    #define     B16Gbl_perifResetStatus_reserved1              0x0684
    #define   LSb32Gbl_perifResetStatus_reserved1                 4
    #define   LSb16Gbl_perifResetStatus_reserved1                 4
    #define       bGbl_perifResetStatus_reserved1              1
    #define   MSK32Gbl_perifResetStatus_reserved1                 0x00000010

    #define     BA_Gbl_perifResetStatus_reserved2              0x0684
    #define     B16Gbl_perifResetStatus_reserved2              0x0684
    #define   LSb32Gbl_perifResetStatus_reserved2                 5
    #define   LSb16Gbl_perifResetStatus_reserved2                 5
    #define       bGbl_perifResetStatus_reserved2              1
    #define   MSK32Gbl_perifResetStatus_reserved2                 0x00000020

    #define     BA_Gbl_perifResetStatus_reserved3              0x0684
    #define     B16Gbl_perifResetStatus_reserved3              0x0684
    #define   LSb32Gbl_perifResetStatus_reserved3                 6
    #define   LSb16Gbl_perifResetStatus_reserved3                 6
    #define       bGbl_perifResetStatus_reserved3              1
    #define   MSK32Gbl_perifResetStatus_reserved3                 0x00000040

    #define     BA_Gbl_perifResetStatus_reserved4              0x0684
    #define     B16Gbl_perifResetStatus_reserved4              0x0684
    #define   LSb32Gbl_perifResetStatus_reserved4                 7
    #define   LSb16Gbl_perifResetStatus_reserved4                 7
    #define       bGbl_perifResetStatus_reserved4              1
    #define   MSK32Gbl_perifResetStatus_reserved4                 0x00000080

    #define     BA_Gbl_perifResetStatus_reserved5              0x0685
    #define     B16Gbl_perifResetStatus_reserved5              0x0684
    #define   LSb32Gbl_perifResetStatus_reserved5                 8
    #define   LSb16Gbl_perifResetStatus_reserved5                 8
    #define       bGbl_perifResetStatus_reserved5              1
    #define   MSK32Gbl_perifResetStatus_reserved5                 0x00000100

    #define     BA_Gbl_perifResetStatus_usb0SyncReset          0x0685
    #define     B16Gbl_perifResetStatus_usb0SyncReset          0x0684
    #define   LSb32Gbl_perifResetStatus_usb0SyncReset             9
    #define   LSb16Gbl_perifResetStatus_usb0SyncReset             9
    #define       bGbl_perifResetStatus_usb0SyncReset          1
    #define   MSK32Gbl_perifResetStatus_usb0SyncReset             0x00000200
    #define        Gbl_perifResetStatus_usb0SyncReset_assert                0x1
    #define        Gbl_perifResetStatus_usb0SyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_usb3SyncReset          0x0685
    #define     B16Gbl_perifResetStatus_usb3SyncReset          0x0684
    #define   LSb32Gbl_perifResetStatus_usb3SyncReset             10
    #define   LSb16Gbl_perifResetStatus_usb3SyncReset             10
    #define       bGbl_perifResetStatus_usb3SyncReset          1
    #define   MSK32Gbl_perifResetStatus_usb3SyncReset             0x00000400
    #define        Gbl_perifResetStatus_usb3SyncReset_assert                0x1
    #define        Gbl_perifResetStatus_usb3SyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_emmcSyncReset          0x0685
    #define     B16Gbl_perifResetStatus_emmcSyncReset          0x0684
    #define   LSb32Gbl_perifResetStatus_emmcSyncReset             11
    #define   LSb16Gbl_perifResetStatus_emmcSyncReset             11
    #define       bGbl_perifResetStatus_emmcSyncReset          1
    #define   MSK32Gbl_perifResetStatus_emmcSyncReset             0x00000800
    #define        Gbl_perifResetStatus_emmcSyncReset_assert                0x1
    #define        Gbl_perifResetStatus_emmcSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_pBridgeSyncReset       0x0685
    #define     B16Gbl_perifResetStatus_pBridgeSyncReset       0x0684
    #define   LSb32Gbl_perifResetStatus_pBridgeSyncReset          12
    #define   LSb16Gbl_perifResetStatus_pBridgeSyncReset          12
    #define       bGbl_perifResetStatus_pBridgeSyncReset       1
    #define   MSK32Gbl_perifResetStatus_pBridgeSyncReset          0x00001000
    #define        Gbl_perifResetStatus_pBridgeSyncReset_assert              0x1
    #define        Gbl_perifResetStatus_pBridgeSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_tsioSyncReset          0x0685
    #define     B16Gbl_perifResetStatus_tsioSyncReset          0x0684
    #define   LSb32Gbl_perifResetStatus_tsioSyncReset             13
    #define   LSb16Gbl_perifResetStatus_tsioSyncReset             13
    #define       bGbl_perifResetStatus_tsioSyncReset          1
    #define   MSK32Gbl_perifResetStatus_tsioSyncReset             0x00002000
    #define        Gbl_perifResetStatus_tsioSyncReset_assert                0x1
    #define        Gbl_perifResetStatus_tsioSyncReset_deassert              0x0

    #define     BA_Gbl_perifResetStatus_reserved6              0x0685
    #define     B16Gbl_perifResetStatus_reserved6              0x0684
    #define   LSb32Gbl_perifResetStatus_reserved6                 14
    #define   LSb16Gbl_perifResetStatus_reserved6                 14
    #define       bGbl_perifResetStatus_reserved6              1
    #define   MSK32Gbl_perifResetStatus_reserved6                 0x00004000
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifStickyResetN                       0x0688

    #define     BA_Gbl_perifStickyResetN_usb3PhyRstn           0x0688
    #define     B16Gbl_perifStickyResetN_usb3PhyRstn           0x0688
    #define   LSb32Gbl_perifStickyResetN_usb3PhyRstn              0
    #define   LSb16Gbl_perifStickyResetN_usb3PhyRstn              0
    #define       bGbl_perifStickyResetN_usb3PhyRstn           1
    #define   MSK32Gbl_perifStickyResetN_usb3PhyRstn              0x00000001
    #define        Gbl_perifStickyResetN_usb3PhyRstn_asserted               0x0
    #define        Gbl_perifStickyResetN_usb3PhyRstn_deasserted              0x1

    #define     BA_Gbl_perifStickyResetN_pcie0Rstn             0x0688
    #define     B16Gbl_perifStickyResetN_pcie0Rstn             0x0688
    #define   LSb32Gbl_perifStickyResetN_pcie0Rstn                1
    #define   LSb16Gbl_perifStickyResetN_pcie0Rstn                1
    #define       bGbl_perifStickyResetN_pcie0Rstn             1
    #define   MSK32Gbl_perifStickyResetN_pcie0Rstn                0x00000002
    #define        Gbl_perifStickyResetN_pcie0Rstn_asserted                 0x0
    #define        Gbl_perifStickyResetN_pcie0Rstn_deasserted               0x1

    #define     BA_Gbl_perifStickyResetN_usb0PhyRstn           0x0688
    #define     B16Gbl_perifStickyResetN_usb0PhyRstn           0x0688
    #define   LSb32Gbl_perifStickyResetN_usb0PhyRstn              2
    #define   LSb16Gbl_perifStickyResetN_usb0PhyRstn              2
    #define       bGbl_perifStickyResetN_usb0PhyRstn           1
    #define   MSK32Gbl_perifStickyResetN_usb0PhyRstn              0x00000004
    #define        Gbl_perifStickyResetN_usb0PhyRstn_asserted               0x0
    #define        Gbl_perifStickyResetN_usb0PhyRstn_deasserted              0x1

    #define     BA_Gbl_perifStickyResetN_usb0CoreRstn          0x0688
    #define     B16Gbl_perifStickyResetN_usb0CoreRstn          0x0688
    #define   LSb32Gbl_perifStickyResetN_usb0CoreRstn             3
    #define   LSb16Gbl_perifStickyResetN_usb0CoreRstn             3
    #define       bGbl_perifStickyResetN_usb0CoreRstn          1
    #define   MSK32Gbl_perifStickyResetN_usb0CoreRstn             0x00000008
    #define        Gbl_perifStickyResetN_usb0CoreRstn_asserted              0x0
    #define        Gbl_perifStickyResetN_usb0CoreRstn_deasserted              0x1

    #define     BA_Gbl_perifStickyResetN_usb0MahbRstn          0x0688
    #define     B16Gbl_perifStickyResetN_usb0MahbRstn          0x0688
    #define   LSb32Gbl_perifStickyResetN_usb0MahbRstn             4
    #define   LSb16Gbl_perifStickyResetN_usb0MahbRstn             4
    #define       bGbl_perifStickyResetN_usb0MahbRstn          1
    #define   MSK32Gbl_perifStickyResetN_usb0MahbRstn             0x00000010
    #define        Gbl_perifStickyResetN_usb0MahbRstn_asserted              0x0
    #define        Gbl_perifStickyResetN_usb0MahbRstn_deasserted              0x1

    #define     BA_Gbl_perifStickyResetN_pciePhyRstn           0x0688
    #define     B16Gbl_perifStickyResetN_pciePhyRstn           0x0688
    #define   LSb32Gbl_perifStickyResetN_pciePhyRstn              5
    #define   LSb16Gbl_perifStickyResetN_pciePhyRstn              5
    #define       bGbl_perifStickyResetN_pciePhyRstn           1
    #define   MSK32Gbl_perifStickyResetN_pciePhyRstn              0x00000020
    #define        Gbl_perifStickyResetN_pciePhyRstn_asserted               0x0
    #define        Gbl_perifStickyResetN_pciePhyRstn_deasserted              0x1

    #define     BA_Gbl_perifStickyResetN_usimRstn              0x0688
    #define     B16Gbl_perifStickyResetN_usimRstn              0x0688
    #define   LSb32Gbl_perifStickyResetN_usimRstn                 6
    #define   LSb16Gbl_perifStickyResetN_usimRstn                 6
    #define       bGbl_perifStickyResetN_usimRstn              1
    #define   MSK32Gbl_perifStickyResetN_usimRstn                 0x00000040
    #define        Gbl_perifStickyResetN_usimRstn_asserted                  0x0
    #define        Gbl_perifStickyResetN_usimRstn_deasserted                0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_apbPerifResetTrigger                    0x068C

    #define     BA_Gbl_apbPerifResetTrigger_uart0SyncReset     0x068C
    #define     B16Gbl_apbPerifResetTrigger_uart0SyncReset     0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_uart0SyncReset        0
    #define   LSb16Gbl_apbPerifResetTrigger_uart0SyncReset        0
    #define       bGbl_apbPerifResetTrigger_uart0SyncReset     1
    #define   MSK32Gbl_apbPerifResetTrigger_uart0SyncReset        0x00000001
    #define        Gbl_apbPerifResetTrigger_uart0SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_uart0SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_reserved0          0x068C
    #define     B16Gbl_apbPerifResetTrigger_reserved0          0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_reserved0             1
    #define   LSb16Gbl_apbPerifResetTrigger_reserved0             1
    #define       bGbl_apbPerifResetTrigger_reserved0          1
    #define   MSK32Gbl_apbPerifResetTrigger_reserved0             0x00000002
    #define        Gbl_apbPerifResetTrigger_reserved0_assert                0x1
    #define        Gbl_apbPerifResetTrigger_reserved0_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_i2c0SyncReset      0x068C
    #define     B16Gbl_apbPerifResetTrigger_i2c0SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_i2c0SyncReset         2
    #define   LSb16Gbl_apbPerifResetTrigger_i2c0SyncReset         2
    #define       bGbl_apbPerifResetTrigger_i2c0SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_i2c0SyncReset         0x00000004
    #define        Gbl_apbPerifResetTrigger_i2c0SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_i2c0SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_i2c1SyncReset      0x068C
    #define     B16Gbl_apbPerifResetTrigger_i2c1SyncReset      0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_i2c1SyncReset         3
    #define   LSb16Gbl_apbPerifResetTrigger_i2c1SyncReset         3
    #define       bGbl_apbPerifResetTrigger_i2c1SyncReset      1
    #define   MSK32Gbl_apbPerifResetTrigger_i2c1SyncReset         0x00000008
    #define        Gbl_apbPerifResetTrigger_i2c1SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_i2c1SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_spiSyncReset       0x068C
    #define     B16Gbl_apbPerifResetTrigger_spiSyncReset       0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_spiSyncReset          4
    #define   LSb16Gbl_apbPerifResetTrigger_spiSyncReset          4
    #define       bGbl_apbPerifResetTrigger_spiSyncReset       1
    #define   MSK32Gbl_apbPerifResetTrigger_spiSyncReset          0x00000010
    #define        Gbl_apbPerifResetTrigger_spiSyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_spiSyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_timer0SyncReset    0x068C
    #define     B16Gbl_apbPerifResetTrigger_timer0SyncReset    0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_timer0SyncReset       5
    #define   LSb16Gbl_apbPerifResetTrigger_timer0SyncReset       5
    #define       bGbl_apbPerifResetTrigger_timer0SyncReset    1
    #define   MSK32Gbl_apbPerifResetTrigger_timer0SyncReset       0x00000020
    #define        Gbl_apbPerifResetTrigger_timer0SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_timer0SyncReset_deassert              0x0

    #define     BA_Gbl_apbPerifResetTrigger_timer1SyncReset    0x068C
    #define     B16Gbl_apbPerifResetTrigger_timer1SyncReset    0x068C
    #define   LSb32Gbl_apbPerifResetTrigger_timer1SyncReset       6
    #define   LSb16Gbl_apbPerifResetTrigger_timer1SyncReset       6
    #define       bGbl_apbPerifResetTrigger_timer1SyncReset    1
    #define   MSK32Gbl_apbPerifResetTrigger_timer1SyncReset       0x00000040
    #define        Gbl_apbPerifResetTrigger_timer1SyncReset_assert              0x1
    #define        Gbl_apbPerifResetTrigger_timer1SyncReset_deassert              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_apbPerifResetStatus                     0x0690

    #define     BA_Gbl_apbPerifResetStatus_uart0SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_uart0SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_uart0SyncResetStatus    0
    #define   LSb16Gbl_apbPerifResetStatus_uart0SyncResetStatus    0
    #define       bGbl_apbPerifResetStatus_uart0SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_uart0SyncResetStatus    0x00000001
    #define        Gbl_apbPerifResetStatus_uart0SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_uart0SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_reserved0           0x0690
    #define     B16Gbl_apbPerifResetStatus_reserved0           0x0690
    #define   LSb32Gbl_apbPerifResetStatus_reserved0              1
    #define   LSb16Gbl_apbPerifResetStatus_reserved0              1
    #define       bGbl_apbPerifResetStatus_reserved0           1
    #define   MSK32Gbl_apbPerifResetStatus_reserved0              0x00000002
    #define        Gbl_apbPerifResetStatus_reserved0_assert                 0x1
    #define        Gbl_apbPerifResetStatus_reserved0_deassert               0x0

    #define     BA_Gbl_apbPerifResetStatus_i2c0SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_i2c0SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_i2c0SyncResetStatus    2
    #define   LSb16Gbl_apbPerifResetStatus_i2c0SyncResetStatus    2
    #define       bGbl_apbPerifResetStatus_i2c0SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_i2c0SyncResetStatus    0x00000004
    #define        Gbl_apbPerifResetStatus_i2c0SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_i2c0SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_i2c1SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_i2c1SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_i2c1SyncResetStatus    3
    #define   LSb16Gbl_apbPerifResetStatus_i2c1SyncResetStatus    3
    #define       bGbl_apbPerifResetStatus_i2c1SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_i2c1SyncResetStatus    0x00000008
    #define        Gbl_apbPerifResetStatus_i2c1SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_i2c1SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_i2c2SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_i2c2SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_i2c2SyncResetStatus    4
    #define   LSb16Gbl_apbPerifResetStatus_i2c2SyncResetStatus    4
    #define       bGbl_apbPerifResetStatus_i2c2SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_i2c2SyncResetStatus    0x00000010
    #define        Gbl_apbPerifResetStatus_i2c2SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_i2c2SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_spiSyncResetStatus  0x0690
    #define     B16Gbl_apbPerifResetStatus_spiSyncResetStatus  0x0690
    #define   LSb32Gbl_apbPerifResetStatus_spiSyncResetStatus     5
    #define   LSb16Gbl_apbPerifResetStatus_spiSyncResetStatus     5
    #define       bGbl_apbPerifResetStatus_spiSyncResetStatus  1
    #define   MSK32Gbl_apbPerifResetStatus_spiSyncResetStatus     0x00000020
    #define        Gbl_apbPerifResetStatus_spiSyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_spiSyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_timer0SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_timer0SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_timer0SyncResetStatus    6
    #define   LSb16Gbl_apbPerifResetStatus_timer0SyncResetStatus    6
    #define       bGbl_apbPerifResetStatus_timer0SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_timer0SyncResetStatus    0x00000040
    #define        Gbl_apbPerifResetStatus_timer0SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_timer0SyncResetStatus_deassert              0x0

    #define     BA_Gbl_apbPerifResetStatus_timer1SyncResetStatus 0x0690
    #define     B16Gbl_apbPerifResetStatus_timer1SyncResetStatus 0x0690
    #define   LSb32Gbl_apbPerifResetStatus_timer1SyncResetStatus    7
    #define   LSb16Gbl_apbPerifResetStatus_timer1SyncResetStatus    7
    #define       bGbl_apbPerifResetStatus_timer1SyncResetStatus 1
    #define   MSK32Gbl_apbPerifResetStatus_timer1SyncResetStatus    0x00000080
    #define        Gbl_apbPerifResetStatus_timer1SyncResetStatus_assert              0x1
    #define        Gbl_apbPerifResetStatus_timer1SyncResetStatus_deassert              0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_topStickyResetN                         0x0694

    #define     BA_Gbl_topStickyResetN_npuGRstn                0x0694
    #define     B16Gbl_topStickyResetN_npuGRstn                0x0694
    #define   LSb32Gbl_topStickyResetN_npuGRstn                   0
    #define   LSb16Gbl_topStickyResetN_npuGRstn                   0
    #define       bGbl_topStickyResetN_npuGRstn                1
    #define   MSK32Gbl_topStickyResetN_npuGRstn                   0x00000001
    #define        Gbl_topStickyResetN_npuGRstn_asserted                    0x0
    #define        Gbl_topStickyResetN_npuGRstn_deasserted                  0x1

    #define     BA_Gbl_topStickyResetN_dsp0CoreRstn            0x0694
    #define     B16Gbl_topStickyResetN_dsp0CoreRstn            0x0694
    #define   LSb32Gbl_topStickyResetN_dsp0CoreRstn               1
    #define   LSb16Gbl_topStickyResetN_dsp0CoreRstn               1
    #define       bGbl_topStickyResetN_dsp0CoreRstn            1
    #define   MSK32Gbl_topStickyResetN_dsp0CoreRstn               0x00000002
    #define        Gbl_topStickyResetN_dsp0CoreRstn_asserted                0x0
    #define        Gbl_topStickyResetN_dsp0CoreRstn_deasserted              0x1

    #define     BA_Gbl_topStickyResetN_dsp0CfgRstn             0x0694
    #define     B16Gbl_topStickyResetN_dsp0CfgRstn             0x0694
    #define   LSb32Gbl_topStickyResetN_dsp0CfgRstn                2
    #define   LSb16Gbl_topStickyResetN_dsp0CfgRstn                2
    #define       bGbl_topStickyResetN_dsp0CfgRstn             1
    #define   MSK32Gbl_topStickyResetN_dsp0CfgRstn                0x00000004
    #define        Gbl_topStickyResetN_dsp0CfgRstn_asserted                 0x0
    #define        Gbl_topStickyResetN_dsp0CfgRstn_deasserted               0x1

    #define     BA_Gbl_topStickyResetN_dsp0DebugRstn           0x0694
    #define     B16Gbl_topStickyResetN_dsp0DebugRstn           0x0694
    #define   LSb32Gbl_topStickyResetN_dsp0DebugRstn              3
    #define   LSb16Gbl_topStickyResetN_dsp0DebugRstn              3
    #define       bGbl_topStickyResetN_dsp0DebugRstn           1
    #define   MSK32Gbl_topStickyResetN_dsp0DebugRstn              0x00000008
    #define        Gbl_topStickyResetN_dsp0DebugRstn_asserted               0x0
    #define        Gbl_topStickyResetN_dsp0DebugRstn_deasserted              0x1

    #define     BA_Gbl_topStickyResetN_dsp1CoreRstn            0x0694
    #define     B16Gbl_topStickyResetN_dsp1CoreRstn            0x0694
    #define   LSb32Gbl_topStickyResetN_dsp1CoreRstn               4
    #define   LSb16Gbl_topStickyResetN_dsp1CoreRstn               4
    #define       bGbl_topStickyResetN_dsp1CoreRstn            1
    #define   MSK32Gbl_topStickyResetN_dsp1CoreRstn               0x00000010
    #define        Gbl_topStickyResetN_dsp1CoreRstn_asserted                0x0
    #define        Gbl_topStickyResetN_dsp1CoreRstn_deasserted              0x1

    #define     BA_Gbl_topStickyResetN_dsp1CfgRstn             0x0694
    #define     B16Gbl_topStickyResetN_dsp1CfgRstn             0x0694
    #define   LSb32Gbl_topStickyResetN_dsp1CfgRstn                5
    #define   LSb16Gbl_topStickyResetN_dsp1CfgRstn                5
    #define       bGbl_topStickyResetN_dsp1CfgRstn             1
    #define   MSK32Gbl_topStickyResetN_dsp1CfgRstn                0x00000020
    #define        Gbl_topStickyResetN_dsp1CfgRstn_asserted                 0x0
    #define        Gbl_topStickyResetN_dsp1CfgRstn_deasserted               0x1

    #define     BA_Gbl_topStickyResetN_dsp1DebugRstn           0x0694
    #define     B16Gbl_topStickyResetN_dsp1DebugRstn           0x0694
    #define   LSb32Gbl_topStickyResetN_dsp1DebugRstn              6
    #define   LSb16Gbl_topStickyResetN_dsp1DebugRstn              6
    #define       bGbl_topStickyResetN_dsp1DebugRstn           1
    #define   MSK32Gbl_topStickyResetN_dsp1DebugRstn              0x00000040
    #define        Gbl_topStickyResetN_dsp1DebugRstn_asserted               0x0
    #define        Gbl_topStickyResetN_dsp1DebugRstn_deasserted              0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_clkEnable                               0x0700

    #define     BA_Gbl_clkEnable_usb0CoreClkEn                 0x0700
    #define     B16Gbl_clkEnable_usb0CoreClkEn                 0x0700
    #define   LSb32Gbl_clkEnable_usb0CoreClkEn                    0
    #define   LSb16Gbl_clkEnable_usb0CoreClkEn                    0
    #define       bGbl_clkEnable_usb0CoreClkEn                 1
    #define   MSK32Gbl_clkEnable_usb0CoreClkEn                    0x00000001
    #define        Gbl_clkEnable_usb0CoreClkEn_enable                       0x1
    #define        Gbl_clkEnable_usb0CoreClkEn_disable                      0x0

    #define     BA_Gbl_clkEnable_sdioSysClkEn                  0x0700
    #define     B16Gbl_clkEnable_sdioSysClkEn                  0x0700
    #define   LSb32Gbl_clkEnable_sdioSysClkEn                     1
    #define   LSb16Gbl_clkEnable_sdioSysClkEn                     1
    #define       bGbl_clkEnable_sdioSysClkEn                  1
    #define   MSK32Gbl_clkEnable_sdioSysClkEn                     0x00000002
    #define        Gbl_clkEnable_sdioSysClkEn_enable                        0x1
    #define        Gbl_clkEnable_sdioSysClkEn_disable                       0x0

    #define     BA_Gbl_clkEnable_pcie0SysClkEn                 0x0700
    #define     B16Gbl_clkEnable_pcie0SysClkEn                 0x0700
    #define   LSb32Gbl_clkEnable_pcie0SysClkEn                    2
    #define   LSb16Gbl_clkEnable_pcie0SysClkEn                    2
    #define       bGbl_clkEnable_pcie0SysClkEn                 1
    #define   MSK32Gbl_clkEnable_pcie0SysClkEn                    0x00000004
    #define        Gbl_clkEnable_pcie0SysClkEn_enable                       0x1
    #define        Gbl_clkEnable_pcie0SysClkEn_disable                      0x0

    #define     BA_Gbl_clkEnable_emmcSysClkEn                  0x0700
    #define     B16Gbl_clkEnable_emmcSysClkEn                  0x0700
    #define   LSb32Gbl_clkEnable_emmcSysClkEn                     3
    #define   LSb16Gbl_clkEnable_emmcSysClkEn                     3
    #define       bGbl_clkEnable_emmcSysClkEn                  1
    #define   MSK32Gbl_clkEnable_emmcSysClkEn                     0x00000008
    #define        Gbl_clkEnable_emmcSysClkEn_enable                        0x1
    #define        Gbl_clkEnable_emmcSysClkEn_disable                       0x0

    #define     BA_Gbl_clkEnable_pBridgeCoreClkEn              0x0700
    #define     B16Gbl_clkEnable_pBridgeCoreClkEn              0x0700
    #define   LSb32Gbl_clkEnable_pBridgeCoreClkEn                 4
    #define   LSb16Gbl_clkEnable_pBridgeCoreClkEn                 4
    #define       bGbl_clkEnable_pBridgeCoreClkEn              1
    #define   MSK32Gbl_clkEnable_pBridgeCoreClkEn                 0x00000010
    #define        Gbl_clkEnable_pBridgeCoreClkEn_enable                    0x1
    #define        Gbl_clkEnable_pBridgeCoreClkEn_disable                   0x0

    #define     BA_Gbl_clkEnable_npuAxiClkEn                   0x0700
    #define     B16Gbl_clkEnable_npuAxiClkEn                   0x0700
    #define   LSb32Gbl_clkEnable_npuAxiClkEn                      5
    #define   LSb16Gbl_clkEnable_npuAxiClkEn                      5
    #define       bGbl_clkEnable_npuAxiClkEn                   1
    #define   MSK32Gbl_clkEnable_npuAxiClkEn                      0x00000020
    #define        Gbl_clkEnable_npuAxiClkEn_enable                         0x1
    #define        Gbl_clkEnable_npuAxiClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_gethRgmiiSysClkEn             0x0700
    #define     B16Gbl_clkEnable_gethRgmiiSysClkEn             0x0700
    #define   LSb32Gbl_clkEnable_gethRgmiiSysClkEn                6
    #define   LSb16Gbl_clkEnable_gethRgmiiSysClkEn                6
    #define       bGbl_clkEnable_gethRgmiiSysClkEn             1
    #define   MSK32Gbl_clkEnable_gethRgmiiSysClkEn                0x00000040
    #define        Gbl_clkEnable_gethRgmiiSysClkEn_enable                   0x1
    #define        Gbl_clkEnable_gethRgmiiSysClkEn_disable                  0x0

    #define     BA_Gbl_clkEnable_gfxAxiClkEn                   0x0700
    #define     B16Gbl_clkEnable_gfxAxiClkEn                   0x0700
    #define   LSb32Gbl_clkEnable_gfxAxiClkEn                      7
    #define   LSb16Gbl_clkEnable_gfxAxiClkEn                      7
    #define       bGbl_clkEnable_gfxAxiClkEn                   1
    #define   MSK32Gbl_clkEnable_gfxAxiClkEn                      0x00000080
    #define        Gbl_clkEnable_gfxAxiClkEn_enable                         0x1
    #define        Gbl_clkEnable_gfxAxiClkEn_disable                        0x0

    #define     BA_Gbl_clkEnable_usbOtgClkEn                   0x0701
    #define     B16Gbl_clkEnable_usbOtgClkEn                   0x0700
    #define   LSb32Gbl_clkEnable_usbOtgClkEn                      8
    #define   LSb16Gbl_clkEnable_usbOtgClkEn                      8
    #define       bGbl_clkEnable_usbOtgClkEn                   1
    #define   MSK32Gbl_clkEnable_usbOtgClkEn                      0x00000100
    #define        Gbl_clkEnable_usbOtgClkEn_enable                         0x1
    #define        Gbl_clkEnable_usbOtgClkEn_disable                        0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ClkSwitch                               0x0710

    #define     BA_Gbl_ClkSwitch_sysPLL_0SWBypass              0x0710
    #define     B16Gbl_ClkSwitch_sysPLL_0SWBypass              0x0710
    #define   LSb32Gbl_ClkSwitch_sysPLL_0SWBypass                 0
    #define   LSb16Gbl_ClkSwitch_sysPLL_0SWBypass                 0
    #define       bGbl_ClkSwitch_sysPLL_0SWBypass              1
    #define   MSK32Gbl_ClkSwitch_sysPLL_0SWBypass                 0x00000001
    #define        Gbl_ClkSwitch_sysPLL_0SWBypass_refClk                    0x1
    #define        Gbl_ClkSwitch_sysPLL_0SWBypass_pllClk                    0x0

    #define     BA_Gbl_ClkSwitch_sysPLL_1SWBypass              0x0710
    #define     B16Gbl_ClkSwitch_sysPLL_1SWBypass              0x0710
    #define   LSb32Gbl_ClkSwitch_sysPLL_1SWBypass                 1
    #define   LSb16Gbl_ClkSwitch_sysPLL_1SWBypass                 1
    #define       bGbl_ClkSwitch_sysPLL_1SWBypass              1
    #define   MSK32Gbl_ClkSwitch_sysPLL_1SWBypass                 0x00000002
    #define        Gbl_ClkSwitch_sysPLL_1SWBypass_refClk                    0x1
    #define        Gbl_ClkSwitch_sysPLL_1SWBypass_pllClk                    0x0

    #define     BA_Gbl_ClkSwitch_reserve                       0x0710
    #define     B16Gbl_ClkSwitch_reserve                       0x0710
    #define   LSb32Gbl_ClkSwitch_reserve                          2
    #define   LSb16Gbl_ClkSwitch_reserve                          2
    #define       bGbl_ClkSwitch_reserve                       1
    #define   MSK32Gbl_ClkSwitch_reserve                          0x00000004

    #define     BA_Gbl_ClkSwitch_memPLLSWBypass                0x0710
    #define     B16Gbl_ClkSwitch_memPLLSWBypass                0x0710
    #define   LSb32Gbl_ClkSwitch_memPLLSWBypass                   3
    #define   LSb16Gbl_ClkSwitch_memPLLSWBypass                   3
    #define       bGbl_ClkSwitch_memPLLSWBypass                1
    #define   MSK32Gbl_ClkSwitch_memPLLSWBypass                   0x00000008
    #define        Gbl_ClkSwitch_memPLLSWBypass_refClk                      0x1
    #define        Gbl_ClkSwitch_memPLLSWBypass_pllClk                      0x0

    #define     BA_Gbl_ClkSwitch_cpuPLLSWBypass                0x0710
    #define     B16Gbl_ClkSwitch_cpuPLLSWBypass                0x0710
    #define   LSb32Gbl_ClkSwitch_cpuPLLSWBypass                   4
    #define   LSb16Gbl_ClkSwitch_cpuPLLSWBypass                   4
    #define       bGbl_ClkSwitch_cpuPLLSWBypass                1
    #define   MSK32Gbl_ClkSwitch_cpuPLLSWBypass                   0x00000010
    #define        Gbl_ClkSwitch_cpuPLLSWBypass_refClk                      0x1
    #define        Gbl_ClkSwitch_cpuPLLSWBypass_pllClk                      0x0

    #define     BA_Gbl_ClkSwitch_avPLL_0SWBypass               0x0710
    #define     B16Gbl_ClkSwitch_avPLL_0SWBypass               0x0710
    #define   LSb32Gbl_ClkSwitch_avPLL_0SWBypass                  5
    #define   LSb16Gbl_ClkSwitch_avPLL_0SWBypass                  5
    #define       bGbl_ClkSwitch_avPLL_0SWBypass               1
    #define   MSK32Gbl_ClkSwitch_avPLL_0SWBypass                  0x00000020
    #define        Gbl_ClkSwitch_avPLL_0SWBypass_refClk                     0x1
    #define        Gbl_ClkSwitch_avPLL_0SWBypass_pllClk                     0x0

    #define     BA_Gbl_ClkSwitch_avPLL_1SWBypass               0x0710
    #define     B16Gbl_ClkSwitch_avPLL_1SWBypass               0x0710
    #define   LSb32Gbl_ClkSwitch_avPLL_1SWBypass                  6
    #define   LSb16Gbl_ClkSwitch_avPLL_1SWBypass                  6
    #define       bGbl_ClkSwitch_avPLL_1SWBypass               1
    #define   MSK32Gbl_ClkSwitch_avPLL_1SWBypass                  0x00000040
    #define        Gbl_ClkSwitch_avPLL_1SWBypass_refClk                     0x1
    #define        Gbl_ClkSwitch_avPLL_1SWBypass_pllClk                     0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_cpufastRefClk                           0x0720
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_memfastRefClk                           0x0724
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_cfgClk                                  0x0740
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifSysClk                             0x0744
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_atbClk                                  0x0748
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_decoderClk                              0x074C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_encoderClk                              0x0754
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ovpCoreClk                              0x0758
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DCoreClk                            0x0760
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DSysClk                             0x0764
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioSysClk                              0x0770
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_vppSysClk                               0x0774
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_esmClk                                  0x0778
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioBiuClk                              0x077C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_vipPipeClk                              0x0780
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioFpll400_clk                         0x0784
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_apbCoreClk                              0x07A0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_emmcClk                                 0x07B0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sd0Clk                                  0x07B4
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk125mGroup0                  0x07E0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk                             0x07F0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk250mGroup0                  0x07F4
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb3CoreClk                             0x07F8
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_npuClk                                  0x07FC
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_hdmiRxrefClk                            0x0800
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk480mGroup0                   0x0804
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk480mGroup1                   0x0808
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk480mGroup2                   0x080C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk100mGroup0                   0x0810
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk100mGroup1                   0x0814
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk100mGroup2                   0x0818
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk100mGroup3                   0x081C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usb2TestClk100mGroup4                   0x0820
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk200mGroup0                  0x0824
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk200mGroup1                  0x0828
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk500mGroup0                  0x082C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_aioSysClk                               0x0830
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_usimClk                                 0x0834
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_perifTestClk50mGroup0                   0x0838
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_dspSysClk                               0x083C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_dsp0Clk                                 0x0840
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_dsp1Clk                                 0x0844
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_vnSysClk                                0x0848
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SECURE_SCAN_EN                          0x0900

    #define     BA_Gbl_SECURE_SCAN_EN_SET                      0x0900
    #define     B16Gbl_SECURE_SCAN_EN_SET                      0x0900
    #define   LSb32Gbl_SECURE_SCAN_EN_SET                         0
    #define   LSb16Gbl_SECURE_SCAN_EN_SET                         0
    #define       bGbl_SECURE_SCAN_EN_SET                      1
    #define   MSK32Gbl_SECURE_SCAN_EN_SET                         0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gfx3DDisRamClkGate                      0x0918

    #define     BA_Gbl_gfx3DDisRamClkGate_drcg                 0x0918
    #define     B16Gbl_gfx3DDisRamClkGate_drcg                 0x0918
    #define   LSb32Gbl_gfx3DDisRamClkGate_drcg                    0
    #define   LSb16Gbl_gfx3DDisRamClkGate_drcg                    0
    #define       bGbl_gfx3DDisRamClkGate_drcg                 1
    #define   MSK32Gbl_gfx3DDisRamClkGate_drcg                    0x00000001
    #define        Gbl_gfx3DDisRamClkGate_drcg_drcgActive                   0x1
    #define        Gbl_gfx3DDisRamClkGate_drcg_drcgInactive                 0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_gic400_ctrl                             0x0960

    #define     BA_Gbl_gic400_ctrl_cgfsdisable                 0x0960
    #define     B16Gbl_gic400_ctrl_cgfsdisable                 0x0960
    #define   LSb32Gbl_gic400_ctrl_cgfsdisable                    0
    #define   LSb16Gbl_gic400_ctrl_cgfsdisable                    0
    #define       bGbl_gic400_ctrl_cgfsdisable                 1
    #define   MSK32Gbl_gic400_ctrl_cgfsdisable                    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_CTRL_0                              0x0970

    #define     BA_Gbl_GFX_CTRL_0_timer_enable                 0x0970
    #define     B16Gbl_GFX_CTRL_0_timer_enable                 0x0970
    #define   LSb32Gbl_GFX_CTRL_0_timer_enable                    0
    #define   LSb16Gbl_GFX_CTRL_0_timer_enable                    0
    #define       bGbl_GFX_CTRL_0_timer_enable                 1
    #define   MSK32Gbl_GFX_CTRL_0_timer_enable                    0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_CTRL_1                              0x0974

    #define     BA_Gbl_GFX_CTRL_1_timer_load                   0x0974
    #define     B16Gbl_GFX_CTRL_1_timer_load                   0x0974
    #define   LSb32Gbl_GFX_CTRL_1_timer_load                      0
    #define   LSb16Gbl_GFX_CTRL_1_timer_load                      0
    #define       bGbl_GFX_CTRL_1_timer_load                   1
    #define   MSK32Gbl_GFX_CTRL_1_timer_load                      0x00000001

    #define     BA_Gbl_GFX_CTRL_1_timer_halt                   0x0974
    #define     B16Gbl_GFX_CTRL_1_timer_halt                   0x0974
    #define   LSb32Gbl_GFX_CTRL_1_timer_halt                      1
    #define   LSb16Gbl_GFX_CTRL_1_timer_halt                      1
    #define       bGbl_GFX_CTRL_1_timer_halt                   1
    #define   MSK32Gbl_GFX_CTRL_1_timer_halt                      0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_CTRL_2                              0x0978

    #define     BA_Gbl_GFX_CTRL_2_timer_value_lsb              0x0978
    #define     B16Gbl_GFX_CTRL_2_timer_value_lsb              0x0978
    #define   LSb32Gbl_GFX_CTRL_2_timer_value_lsb                 0
    #define   LSb16Gbl_GFX_CTRL_2_timer_value_lsb                 0
    #define       bGbl_GFX_CTRL_2_timer_value_lsb              32
    #define   MSK32Gbl_GFX_CTRL_2_timer_value_lsb                 0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_CTRL_3                              0x097C

    #define     BA_Gbl_GFX_CTRL_3_timer_value_msb              0x097C
    #define     B16Gbl_GFX_CTRL_3_timer_value_msb              0x097C
    #define   LSb32Gbl_GFX_CTRL_3_timer_value_msb                 0
    #define   LSb16Gbl_GFX_CTRL_3_timer_value_msb                 0
    #define       bGbl_GFX_CTRL_3_timer_value_msb              32
    #define   MSK32Gbl_GFX_CTRL_3_timer_value_msb                 0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_TIMER_VALUE                         0x0980

    #define     BA_Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb  0x0980
    #define     B16Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb  0x0980
    #define   LSb32Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb     0
    #define   LSb16Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb     0
    #define       bGbl_GFX_TIMER_VALUE_timer_binary_value_lsb  32
    #define   MSK32Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb     0xFFFFFFFF

    #define     RA_Gbl_GFX_TIMER_VALUE1                        0x0984

    #define     BA_Gbl_GFX_TIMER_VALUE_timer_binary_value_msb  0x0984
    #define     B16Gbl_GFX_TIMER_VALUE_timer_binary_value_msb  0x0984
    #define   LSb32Gbl_GFX_TIMER_VALUE_timer_binary_value_msb     0
    #define   LSb16Gbl_GFX_TIMER_VALUE_timer_binary_value_msb     0
    #define       bGbl_GFX_TIMER_VALUE_timer_binary_value_msb  32
    #define   MSK32Gbl_GFX_TIMER_VALUE_timer_binary_value_msb     0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GFX_STATUS                              0x098C

    #define     BA_Gbl_GFX_STATUS_gfx3d_idle                   0x098C
    #define     B16Gbl_GFX_STATUS_gfx3d_idle                   0x098C
    #define   LSb32Gbl_GFX_STATUS_gfx3d_idle                      0
    #define   LSb16Gbl_GFX_STATUS_gfx3d_idle                      0
    #define       bGbl_GFX_STATUS_gfx3d_idle                   1
    #define   MSK32Gbl_GFX_STATUS_gfx3d_idle                      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_USBOTG_REFCLK_CTRL0                     0x0990

    #define     BA_Gbl_USBOTG_REFCLK_CTRL0_divval              0x0990
    #define     B16Gbl_USBOTG_REFCLK_CTRL0_divval              0x0990
    #define   LSb32Gbl_USBOTG_REFCLK_CTRL0_divval                 0
    #define   LSb16Gbl_USBOTG_REFCLK_CTRL0_divval                 0
    #define       bGbl_USBOTG_REFCLK_CTRL0_divval              32
    #define   MSK32Gbl_USBOTG_REFCLK_CTRL0_divval                 0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_USBOTG_REFCLK_CTRL1                     0x0994

    #define     BA_Gbl_USBOTG_REFCLK_CTRL1_lowcnt              0x0994
    #define     B16Gbl_USBOTG_REFCLK_CTRL1_lowcnt              0x0994
    #define   LSb32Gbl_USBOTG_REFCLK_CTRL1_lowcnt                 0
    #define   LSb16Gbl_USBOTG_REFCLK_CTRL1_lowcnt                 0
    #define       bGbl_USBOTG_REFCLK_CTRL1_lowcnt              32
    #define   MSK32Gbl_USBOTG_REFCLK_CTRL1_lowcnt                 0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_USIMCLK_MUX                             0x0998

    #define     BA_Gbl_USIMCLK_MUX_globalClksel                0x0998
    #define     B16Gbl_USIMCLK_MUX_globalClksel                0x0998
    #define   LSb32Gbl_USIMCLK_MUX_globalClksel                   0
    #define   LSb16Gbl_USIMCLK_MUX_globalClksel                   0
    #define       bGbl_USIMCLK_MUX_globalClksel                1
    #define   MSK32Gbl_USIMCLK_MUX_globalClksel                   0x00000001

    #define     BA_Gbl_USIMCLK_MUX_STS6Clksel                  0x0998
    #define     B16Gbl_USIMCLK_MUX_STS6Clksel                  0x0998
    #define   LSb32Gbl_USIMCLK_MUX_STS6Clksel                     1
    #define   LSb16Gbl_USIMCLK_MUX_STS6Clksel                     1
    #define       bGbl_USIMCLK_MUX_STS6Clksel                  1
    #define   MSK32Gbl_USIMCLK_MUX_STS6Clksel                     0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_REFCLK_SWITCH                           0x099C

    #define     BA_Gbl_REFCLK_SWITCH_cfgClkSwt2refClk          0x099C
    #define     B16Gbl_REFCLK_SWITCH_cfgClkSwt2refClk          0x099C
    #define   LSb32Gbl_REFCLK_SWITCH_cfgClkSwt2refClk             0
    #define   LSb16Gbl_REFCLK_SWITCH_cfgClkSwt2refClk             0
    #define       bGbl_REFCLK_SWITCH_cfgClkSwt2refClk          1
    #define   MSK32Gbl_REFCLK_SWITCH_cfgClkSwt2refClk             0x00000001
    #define        Gbl_REFCLK_SWITCH_cfgClkSwt2refClk_cfgClk                0x0
    #define        Gbl_REFCLK_SWITCH_cfgClkSwt2refClk_refClk                0x1

    #define     BA_Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk     0x099C
    #define     B16Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk     0x099C
    #define   LSb32Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk        1
    #define   LSb16Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk        1
    #define       bGbl_REFCLK_SWITCH_perifSysClkSwt2refClk     1
    #define   MSK32Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk        0x00000002
    #define        Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk_sysClk              0x0
    #define        Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk_refClk              0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DSP0_Control                            0x09A0

    #define     BA_Gbl_DSP0_Control_RunStall                   0x09A0
    #define     B16Gbl_DSP0_Control_RunStall                   0x09A0
    #define   LSb32Gbl_DSP0_Control_RunStall                      0
    #define   LSb16Gbl_DSP0_Control_RunStall                      0
    #define       bGbl_DSP0_Control_RunStall                   1
    #define   MSK32Gbl_DSP0_Control_RunStall                      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DSP0_Status                             0x09A4

    #define     BA_Gbl_DSP0_Status_PWaitMode                   0x09A4
    #define     B16Gbl_DSP0_Status_PWaitMode                   0x09A4
    #define   LSb32Gbl_DSP0_Status_PWaitMode                      0
    #define   LSb16Gbl_DSP0_Status_PWaitMode                      0
    #define       bGbl_DSP0_Status_PWaitMode                   1
    #define   MSK32Gbl_DSP0_Status_PWaitMode                      0x00000001

    #define     BA_Gbl_DSP0_Status_XOCDMode                    0x09A4
    #define     B16Gbl_DSP0_Status_XOCDMode                    0x09A4
    #define   LSb32Gbl_DSP0_Status_XOCDMode                       1
    #define   LSb16Gbl_DSP0_Status_XOCDMode                       1
    #define       bGbl_DSP0_Status_XOCDMode                    1
    #define   MSK32Gbl_DSP0_Status_XOCDMode                       0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DSP0_SECCTRL0                           0x09A8

    #define     BA_Gbl_DSP0_SECCTRL0_ALTRESETVEC               0x09A8
    #define     B16Gbl_DSP0_SECCTRL0_ALTRESETVEC               0x09A8
    #define   LSb32Gbl_DSP0_SECCTRL0_ALTRESETVEC                  0
    #define   LSb16Gbl_DSP0_SECCTRL0_ALTRESETVEC                  0
    #define       bGbl_DSP0_SECCTRL0_ALTRESETVEC               32
    #define   MSK32Gbl_DSP0_SECCTRL0_ALTRESETVEC                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DSP0_SECCTRL1                           0x09AC

    #define     BA_Gbl_DSP0_SECCTRL1_DSP_STATVECTORSEL         0x09AC
    #define     B16Gbl_DSP0_SECCTRL1_DSP_STATVECTORSEL         0x09AC
    #define   LSb32Gbl_DSP0_SECCTRL1_DSP_STATVECTORSEL            0
    #define   LSb16Gbl_DSP0_SECCTRL1_DSP_STATVECTORSEL            0
    #define       bGbl_DSP0_SECCTRL1_DSP_STATVECTORSEL         1
    #define   MSK32Gbl_DSP0_SECCTRL1_DSP_STATVECTORSEL            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DSP0_PRID                               0x09B0

    #define     BA_Gbl_DSP0_PRID_Prid                          0x09B0
    #define     B16Gbl_DSP0_PRID_Prid                          0x09B0
    #define   LSb32Gbl_DSP0_PRID_Prid                             0
    #define   LSb16Gbl_DSP0_PRID_Prid                             0
    #define       bGbl_DSP0_PRID_Prid                          16
    #define   MSK32Gbl_DSP0_PRID_Prid                             0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DSP1_Control                            0x09B4

    #define     BA_Gbl_DSP1_Control_RunStall                   0x09B4
    #define     B16Gbl_DSP1_Control_RunStall                   0x09B4
    #define   LSb32Gbl_DSP1_Control_RunStall                      0
    #define   LSb16Gbl_DSP1_Control_RunStall                      0
    #define       bGbl_DSP1_Control_RunStall                   1
    #define   MSK32Gbl_DSP1_Control_RunStall                      0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DSP1_Status                             0x09B8

    #define     BA_Gbl_DSP1_Status_PWaitMode                   0x09B8
    #define     B16Gbl_DSP1_Status_PWaitMode                   0x09B8
    #define   LSb32Gbl_DSP1_Status_PWaitMode                      0
    #define   LSb16Gbl_DSP1_Status_PWaitMode                      0
    #define       bGbl_DSP1_Status_PWaitMode                   1
    #define   MSK32Gbl_DSP1_Status_PWaitMode                      0x00000001

    #define     BA_Gbl_DSP1_Status_XOCDMode                    0x09B8
    #define     B16Gbl_DSP1_Status_XOCDMode                    0x09B8
    #define   LSb32Gbl_DSP1_Status_XOCDMode                       1
    #define   LSb16Gbl_DSP1_Status_XOCDMode                       1
    #define       bGbl_DSP1_Status_XOCDMode                    1
    #define   MSK32Gbl_DSP1_Status_XOCDMode                       0x00000002
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DSP1_SECCTRL0                           0x09BC

    #define     BA_Gbl_DSP1_SECCTRL0_ALTRESETVEC               0x09BC
    #define     B16Gbl_DSP1_SECCTRL0_ALTRESETVEC               0x09BC
    #define   LSb32Gbl_DSP1_SECCTRL0_ALTRESETVEC                  0
    #define   LSb16Gbl_DSP1_SECCTRL0_ALTRESETVEC                  0
    #define       bGbl_DSP1_SECCTRL0_ALTRESETVEC               32
    #define   MSK32Gbl_DSP1_SECCTRL0_ALTRESETVEC                  0xFFFFFFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DSP1_SECCTRL1                           0x09C0

    #define     BA_Gbl_DSP1_SECCTRL1_DSP_STATVECTORSEL         0x09C0
    #define     B16Gbl_DSP1_SECCTRL1_DSP_STATVECTORSEL         0x09C0
    #define   LSb32Gbl_DSP1_SECCTRL1_DSP_STATVECTORSEL            0
    #define   LSb16Gbl_DSP1_SECCTRL1_DSP_STATVECTORSEL            0
    #define       bGbl_DSP1_SECCTRL1_DSP_STATVECTORSEL         1
    #define   MSK32Gbl_DSP1_SECCTRL1_DSP_STATVECTORSEL            0x00000001
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_DSP1_PRID                               0x09C4

    #define     BA_Gbl_DSP1_PRID_Prid                          0x09C4
    #define     B16Gbl_DSP1_PRID_Prid                          0x09C4
    #define   LSb32Gbl_DSP1_PRID_Prid                             0
    #define   LSb16Gbl_DSP1_PRID_Prid                             0
    #define       bGbl_DSP1_PRID_Prid                          16
    #define   MSK32Gbl_DSP1_PRID_Prid                             0x0000FFFF
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_PERIF                                   0x0A00
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_pinMuxCntlBus                           0x8000

    #define     BA_Gbl_pinMuxCntlBus_GPIO_A2                   0x8000
    #define     B16Gbl_pinMuxCntlBus_GPIO_A2                   0x8000
    #define   LSb32Gbl_pinMuxCntlBus_GPIO_A2                      0
    #define   LSb16Gbl_pinMuxCntlBus_GPIO_A2                      0
    #define       bGbl_pinMuxCntlBus_GPIO_A2                   3
    #define   MSK32Gbl_pinMuxCntlBus_GPIO_A2                      0x00000007
    #define        Gbl_pinMuxCntlBus_GPIO_A2_MODE_0                         0x0

    #define     BA_Gbl_pinMuxCntlBus_GPIO_A1                   0x8000
    #define     B16Gbl_pinMuxCntlBus_GPIO_A1                   0x8000
    #define   LSb32Gbl_pinMuxCntlBus_GPIO_A1                      3
    #define   LSb16Gbl_pinMuxCntlBus_GPIO_A1                      3
    #define       bGbl_pinMuxCntlBus_GPIO_A1                   3
    #define   MSK32Gbl_pinMuxCntlBus_GPIO_A1                      0x00000038
    #define        Gbl_pinMuxCntlBus_GPIO_A1_MODE_0                         0x0

    #define     BA_Gbl_pinMuxCntlBus_GPIO_A0                   0x8000
    #define     B16Gbl_pinMuxCntlBus_GPIO_A0                   0x8000
    #define   LSb32Gbl_pinMuxCntlBus_GPIO_A0                      6
    #define   LSb16Gbl_pinMuxCntlBus_GPIO_A0                      6
    #define       bGbl_pinMuxCntlBus_GPIO_A0                   3
    #define   MSK32Gbl_pinMuxCntlBus_GPIO_A0                      0x000001C0
    #define        Gbl_pinMuxCntlBus_GPIO_A0_MODE_0                         0x0

    #define     BA_Gbl_pinMuxCntlBus_STS0_CLK                  0x8001
    #define     B16Gbl_pinMuxCntlBus_STS0_CLK                  0x8000
    #define   LSb32Gbl_pinMuxCntlBus_STS0_CLK                     9
    #define   LSb16Gbl_pinMuxCntlBus_STS0_CLK                     9
    #define       bGbl_pinMuxCntlBus_STS0_CLK                  3
    #define   MSK32Gbl_pinMuxCntlBus_STS0_CLK                     0x00000E00
    #define        Gbl_pinMuxCntlBus_STS0_CLK_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_STS0_CLK_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_STS0_CLK_MODE_2                        0x2
    #define        Gbl_pinMuxCntlBus_STS0_CLK_MODE_4                        0x4
    #define        Gbl_pinMuxCntlBus_STS0_CLK_MODE_7                        0x7

    #define     BA_Gbl_pinMuxCntlBus_STS0_SOP                  0x8001
    #define     B16Gbl_pinMuxCntlBus_STS0_SOP                  0x8000
    #define   LSb32Gbl_pinMuxCntlBus_STS0_SOP                     12
    #define   LSb16Gbl_pinMuxCntlBus_STS0_SOP                     12
    #define       bGbl_pinMuxCntlBus_STS0_SOP                  3
    #define   MSK32Gbl_pinMuxCntlBus_STS0_SOP                     0x00007000
    #define        Gbl_pinMuxCntlBus_STS0_SOP_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_STS0_SOP_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_STS0_SOP_MODE_2                        0x2
    #define        Gbl_pinMuxCntlBus_STS0_SOP_MODE_3                        0x3
    #define        Gbl_pinMuxCntlBus_STS0_SOP_MODE_4                        0x4
    #define        Gbl_pinMuxCntlBus_STS0_SOP_MODE_7                        0x7

    #define     BA_Gbl_pinMuxCntlBus_STS0_SD                   0x8001
    #define     B16Gbl_pinMuxCntlBus_STS0_SD                   0x8000
    #define   LSb32Gbl_pinMuxCntlBus_STS0_SD                      15
    #define   LSb16Gbl_pinMuxCntlBus_STS0_SD                      15
    #define       bGbl_pinMuxCntlBus_STS0_SD                   3
    #define   MSK32Gbl_pinMuxCntlBus_STS0_SD                      0x00038000
    #define        Gbl_pinMuxCntlBus_STS0_SD_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_STS0_SD_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_STS0_SD_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_STS0_SD_MODE_4                         0x4
    #define        Gbl_pinMuxCntlBus_STS0_SD_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_STS0_VALD                 0x8002
    #define     B16Gbl_pinMuxCntlBus_STS0_VALD                 0x8002
    #define   LSb32Gbl_pinMuxCntlBus_STS0_VALD                    18
    #define   LSb16Gbl_pinMuxCntlBus_STS0_VALD                    2
    #define       bGbl_pinMuxCntlBus_STS0_VALD                 3
    #define   MSK32Gbl_pinMuxCntlBus_STS0_VALD                    0x001C0000
    #define        Gbl_pinMuxCntlBus_STS0_VALD_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_STS0_VALD_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_STS0_VALD_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_STS0_VALD_MODE_4                       0x4
    #define        Gbl_pinMuxCntlBus_STS0_VALD_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_STS1_CLK                  0x8002
    #define     B16Gbl_pinMuxCntlBus_STS1_CLK                  0x8002
    #define   LSb32Gbl_pinMuxCntlBus_STS1_CLK                     21
    #define   LSb16Gbl_pinMuxCntlBus_STS1_CLK                     5
    #define       bGbl_pinMuxCntlBus_STS1_CLK                  3
    #define   MSK32Gbl_pinMuxCntlBus_STS1_CLK                     0x00E00000
    #define        Gbl_pinMuxCntlBus_STS1_CLK_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_STS1_CLK_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_STS1_CLK_MODE_2                        0x2
    #define        Gbl_pinMuxCntlBus_STS1_CLK_MODE_7                        0x7

    #define     BA_Gbl_pinMuxCntlBus_STS1_SOP                  0x8003
    #define     B16Gbl_pinMuxCntlBus_STS1_SOP                  0x8002
    #define   LSb32Gbl_pinMuxCntlBus_STS1_SOP                     24
    #define   LSb16Gbl_pinMuxCntlBus_STS1_SOP                     8
    #define       bGbl_pinMuxCntlBus_STS1_SOP                  3
    #define   MSK32Gbl_pinMuxCntlBus_STS1_SOP                     0x07000000
    #define        Gbl_pinMuxCntlBus_STS1_SOP_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_STS1_SOP_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_STS1_SOP_MODE_2                        0x2
    #define        Gbl_pinMuxCntlBus_STS1_SOP_MODE_3                        0x3
    #define        Gbl_pinMuxCntlBus_STS1_SOP_MODE_7                        0x7

    #define     BA_Gbl_pinMuxCntlBus_STS1_SD                   0x8003
    #define     B16Gbl_pinMuxCntlBus_STS1_SD                   0x8002
    #define   LSb32Gbl_pinMuxCntlBus_STS1_SD                      27
    #define   LSb16Gbl_pinMuxCntlBus_STS1_SD                      11
    #define       bGbl_pinMuxCntlBus_STS1_SD                   3
    #define   MSK32Gbl_pinMuxCntlBus_STS1_SD                      0x38000000
    #define        Gbl_pinMuxCntlBus_STS1_SD_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_STS1_SD_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_STS1_SD_MODE_2                         0x2
    #define        Gbl_pinMuxCntlBus_STS1_SD_MODE_7                         0x7

    #define     RA_Gbl_pinMuxCntlBus1                          0x8004

    #define     BA_Gbl_pinMuxCntlBus_STS1_VALD                 0x8004
    #define     B16Gbl_pinMuxCntlBus_STS1_VALD                 0x8004
    #define   LSb32Gbl_pinMuxCntlBus_STS1_VALD                    0
    #define   LSb16Gbl_pinMuxCntlBus_STS1_VALD                    0
    #define       bGbl_pinMuxCntlBus_STS1_VALD                 3
    #define   MSK32Gbl_pinMuxCntlBus_STS1_VALD                    0x00000007
    #define        Gbl_pinMuxCntlBus_STS1_VALD_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_STS1_VALD_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_STS1_VALD_MODE_2                       0x2
    #define        Gbl_pinMuxCntlBus_STS1_VALD_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_STS1_VALD_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SS0n                 0x8004
    #define     B16Gbl_pinMuxCntlBus_SPI1_SS0n                 0x8004
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SS0n                    3
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SS0n                    3
    #define       bGbl_pinMuxCntlBus_SPI1_SS0n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SS0n                    0x00000038
    #define        Gbl_pinMuxCntlBus_SPI1_SS0n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SS0n_MODE_1                       0x1

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SS1n                 0x8004
    #define     B16Gbl_pinMuxCntlBus_SPI1_SS1n                 0x8004
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SS1n                    6
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SS1n                    6
    #define       bGbl_pinMuxCntlBus_SPI1_SS1n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SS1n                    0x000001C0
    #define        Gbl_pinMuxCntlBus_SPI1_SS1n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SS1n_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI1_SS1n_MODE_2                       0x2
    #define        Gbl_pinMuxCntlBus_SPI1_SS1n_MODE_4                       0x4
    #define        Gbl_pinMuxCntlBus_SPI1_SS1n_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SS2n                 0x8005
    #define     B16Gbl_pinMuxCntlBus_SPI1_SS2n                 0x8004
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SS2n                    9
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SS2n                    9
    #define       bGbl_pinMuxCntlBus_SPI1_SS2n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SS2n                    0x00000E00
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_2                       0x2
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_4                       0x4
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_5                       0x5
    #define        Gbl_pinMuxCntlBus_SPI1_SS2n_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SS3n                 0x8005
    #define     B16Gbl_pinMuxCntlBus_SPI1_SS3n                 0x8004
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SS3n                    12
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SS3n                    12
    #define       bGbl_pinMuxCntlBus_SPI1_SS3n                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SS3n                    0x00007000
    #define        Gbl_pinMuxCntlBus_SPI1_SS3n_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SS3n_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI1_SS3n_MODE_2                       0x2
    #define        Gbl_pinMuxCntlBus_SPI1_SS3n_MODE_3                       0x3
    #define        Gbl_pinMuxCntlBus_SPI1_SS3n_MODE_5                       0x5
    #define        Gbl_pinMuxCntlBus_SPI1_SS3n_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SDO                  0x8005
    #define     B16Gbl_pinMuxCntlBus_SPI1_SDO                  0x8004
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SDO                     15
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SDO                     15
    #define       bGbl_pinMuxCntlBus_SPI1_SDO                  3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SDO                     0x00038000
    #define        Gbl_pinMuxCntlBus_SPI1_SDO_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SDO_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SCLK                 0x8006
    #define     B16Gbl_pinMuxCntlBus_SPI1_SCLK                 0x8006
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SCLK                    18
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SCLK                    2
    #define       bGbl_pinMuxCntlBus_SPI1_SCLK                 3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SCLK                    0x001C0000
    #define        Gbl_pinMuxCntlBus_SPI1_SCLK_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SCLK_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SPI1_SCLK_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_SPI1_SDI                  0x8006
    #define     B16Gbl_pinMuxCntlBus_SPI1_SDI                  0x8006
    #define   LSb32Gbl_pinMuxCntlBus_SPI1_SDI                     21
    #define   LSb16Gbl_pinMuxCntlBus_SPI1_SDI                     5
    #define       bGbl_pinMuxCntlBus_SPI1_SDI                  3
    #define   MSK32Gbl_pinMuxCntlBus_SPI1_SDI                     0x00E00000
    #define        Gbl_pinMuxCntlBus_SPI1_SDI_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_SPI1_SDI_MODE_1                        0x1

    #define     BA_Gbl_pinMuxCntlBus_TW0_SCL                   0x8007
    #define     B16Gbl_pinMuxCntlBus_TW0_SCL                   0x8006
    #define   LSb32Gbl_pinMuxCntlBus_TW0_SCL                      24
    #define   LSb16Gbl_pinMuxCntlBus_TW0_SCL                      8
    #define       bGbl_pinMuxCntlBus_TW0_SCL                   3
    #define   MSK32Gbl_pinMuxCntlBus_TW0_SCL                      0x07000000
    #define        Gbl_pinMuxCntlBus_TW0_SCL_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_TW0_SCL_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_TW0_SCL_MODE_7                         0x7

    #define     BA_Gbl_pinMuxCntlBus_TW0_SDA                   0x8007
    #define     B16Gbl_pinMuxCntlBus_TW0_SDA                   0x8006
    #define   LSb32Gbl_pinMuxCntlBus_TW0_SDA                      27
    #define   LSb16Gbl_pinMuxCntlBus_TW0_SDA                      11
    #define       bGbl_pinMuxCntlBus_TW0_SDA                   3
    #define   MSK32Gbl_pinMuxCntlBus_TW0_SDA                      0x38000000
    #define        Gbl_pinMuxCntlBus_TW0_SDA_MODE_0                         0x0
    #define        Gbl_pinMuxCntlBus_TW0_SDA_MODE_1                         0x1
    #define        Gbl_pinMuxCntlBus_TW0_SDA_MODE_7                         0x7

    #define     RA_Gbl_pinMuxCntlBus2                          0x8008

    #define     BA_Gbl_pinMuxCntlBus_USB2_DRV_VBUS             0x8008
    #define     B16Gbl_pinMuxCntlBus_USB2_DRV_VBUS             0x8008
    #define   LSb32Gbl_pinMuxCntlBus_USB2_DRV_VBUS                0
    #define   LSb16Gbl_pinMuxCntlBus_USB2_DRV_VBUS                0
    #define       bGbl_pinMuxCntlBus_USB2_DRV_VBUS             3
    #define   MSK32Gbl_pinMuxCntlBus_USB2_DRV_VBUS                0x00000007
    #define        Gbl_pinMuxCntlBus_USB2_DRV_VBUS_MODE_0                   0x0
    #define        Gbl_pinMuxCntlBus_USB2_DRV_VBUS_MODE_1                   0x1

    #define     BA_Gbl_pinMuxCntlBus_SDIO0_CDn                 0x8008
    #define     B16Gbl_pinMuxCntlBus_SDIO0_CDn                 0x8008
    #define   LSb32Gbl_pinMuxCntlBus_SDIO0_CDn                    3
    #define   LSb16Gbl_pinMuxCntlBus_SDIO0_CDn                    3
    #define       bGbl_pinMuxCntlBus_SDIO0_CDn                 3
    #define   MSK32Gbl_pinMuxCntlBus_SDIO0_CDn                    0x00000038
    #define        Gbl_pinMuxCntlBus_SDIO0_CDn_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SDIO0_CDn_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SDIO0_CDn_MODE_2                       0x2

    #define     BA_Gbl_pinMuxCntlBus_SDIO0_WP                  0x8008
    #define     B16Gbl_pinMuxCntlBus_SDIO0_WP                  0x8008
    #define   LSb32Gbl_pinMuxCntlBus_SDIO0_WP                     6
    #define   LSb16Gbl_pinMuxCntlBus_SDIO0_WP                     6
    #define       bGbl_pinMuxCntlBus_SDIO0_WP                  3
    #define   MSK32Gbl_pinMuxCntlBus_SDIO0_WP                     0x000001C0
    #define        Gbl_pinMuxCntlBus_SDIO0_WP_MODE_0                        0x0
    #define        Gbl_pinMuxCntlBus_SDIO0_WP_MODE_1                        0x1
    #define        Gbl_pinMuxCntlBus_SDIO0_WP_MODE_2                        0x2

    #define     BA_Gbl_pinMuxCntlBus_SCRD0_CRD_PRES            0x8009
    #define     B16Gbl_pinMuxCntlBus_SCRD0_CRD_PRES            0x8008
    #define   LSb32Gbl_pinMuxCntlBus_SCRD0_CRD_PRES               9
    #define   LSb16Gbl_pinMuxCntlBus_SCRD0_CRD_PRES               9
    #define       bGbl_pinMuxCntlBus_SCRD0_CRD_PRES            3
    #define   MSK32Gbl_pinMuxCntlBus_SCRD0_CRD_PRES               0x00000E00
    #define        Gbl_pinMuxCntlBus_SCRD0_CRD_PRES_MODE_0                  0x0
    #define        Gbl_pinMuxCntlBus_SCRD0_CRD_PRES_MODE_1                  0x1

    #define     BA_Gbl_pinMuxCntlBus_SCRD0_RST                 0x8009
    #define     B16Gbl_pinMuxCntlBus_SCRD0_RST                 0x8008
    #define   LSb32Gbl_pinMuxCntlBus_SCRD0_RST                    12
    #define   LSb16Gbl_pinMuxCntlBus_SCRD0_RST                    12
    #define       bGbl_pinMuxCntlBus_SCRD0_RST                 3
    #define   MSK32Gbl_pinMuxCntlBus_SCRD0_RST                    0x00007000
    #define        Gbl_pinMuxCntlBus_SCRD0_RST_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SCRD0_RST_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SCRD0_RST_MODE_7                       0x7

    #define     BA_Gbl_pinMuxCntlBus_SCRD0_DCLK                0x8009
    #define     B16Gbl_pinMuxCntlBus_SCRD0_DCLK                0x8008
    #define   LSb32Gbl_pinMuxCntlBus_SCRD0_DCLK                   15
    #define   LSb16Gbl_pinMuxCntlBus_SCRD0_DCLK                   15
    #define       bGbl_pinMuxCntlBus_SCRD0_DCLK                3
    #define   MSK32Gbl_pinMuxCntlBus_SCRD0_DCLK                   0x00038000
    #define        Gbl_pinMuxCntlBus_SCRD0_DCLK_MODE_0                      0x0
    #define        Gbl_pinMuxCntlBus_SCRD0_DCLK_MODE_1                      0x1
    #define        Gbl_pinMuxCntlBus_SCRD0_DCLK_MODE_7                      0x7

    #define     BA_Gbl_pinMuxCntlBus_SCRD0_DIO                 0x800A
    #define     B16Gbl_pinMuxCntlBus_SCRD0_DIO                 0x800A
    #define   LSb32Gbl_pinMuxCntlBus_SCRD0_DIO                    18
    #define   LSb16Gbl_pinMuxCntlBus_SCRD0_DIO                    2
    #define       bGbl_pinMuxCntlBus_SCRD0_DIO                 3
    #define   MSK32Gbl_pinMuxCntlBus_SCRD0_DIO                    0x001C0000
    #define        Gbl_pinMuxCntlBus_SCRD0_DIO_MODE_0                       0x0
    #define        Gbl_pinMuxCntlBus_SCRD0_DIO_MODE_1                       0x1
    #define        Gbl_pinMuxCntlBus_SCRD0_DIO_MODE_7                       0x7
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_avioPinMuxCntlBus                       0x8400

    #define     BA_Gbl_avioPinMuxCntlBus_I2S1_DO0              0x8400
    #define     B16Gbl_avioPinMuxCntlBus_I2S1_DO0              0x8400
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S1_DO0                 0
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S1_DO0                 0
    #define       bGbl_avioPinMuxCntlBus_I2S1_DO0              3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S1_DO0                 0x00000007
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO0_MODE_0                    0x0
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO0_MODE_1                    0x1
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO0_MODE_7                    0x7

    #define     BA_Gbl_avioPinMuxCntlBus_I2S1_DO1              0x8400
    #define     B16Gbl_avioPinMuxCntlBus_I2S1_DO1              0x8400
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S1_DO1                 3
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S1_DO1                 3
    #define       bGbl_avioPinMuxCntlBus_I2S1_DO1              3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S1_DO1                 0x00000038
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO1_MODE_0                    0x0
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO1_MODE_1                    0x1
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO1_MODE_3                    0x3
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO1_MODE_7                    0x7

    #define     BA_Gbl_avioPinMuxCntlBus_I2S1_DO2              0x8400
    #define     B16Gbl_avioPinMuxCntlBus_I2S1_DO2              0x8400
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S1_DO2                 6
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S1_DO2                 6
    #define       bGbl_avioPinMuxCntlBus_I2S1_DO2              3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S1_DO2                 0x000001C0
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO2_MODE_0                    0x0
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO2_MODE_1                    0x1
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO2_MODE_2                    0x2
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO2_MODE_3                    0x3
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO2_MODE_7                    0x7

    #define     BA_Gbl_avioPinMuxCntlBus_I2S1_DO3              0x8401
    #define     B16Gbl_avioPinMuxCntlBus_I2S1_DO3              0x8400
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S1_DO3                 9
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S1_DO3                 9
    #define       bGbl_avioPinMuxCntlBus_I2S1_DO3              3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S1_DO3                 0x00000E00
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO3_MODE_0                    0x0
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO3_MODE_1                    0x1
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO3_MODE_2                    0x2
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO3_MODE_3                    0x3
    #define        Gbl_avioPinMuxCntlBus_I2S1_DO3_MODE_7                    0x7

    #define     BA_Gbl_avioPinMuxCntlBus_I2S1_LRCKIO           0x8401
    #define     B16Gbl_avioPinMuxCntlBus_I2S1_LRCKIO           0x8400
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S1_LRCKIO              12
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S1_LRCKIO              12
    #define       bGbl_avioPinMuxCntlBus_I2S1_LRCKIO           3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S1_LRCKIO              0x00007000
    #define        Gbl_avioPinMuxCntlBus_I2S1_LRCKIO_MODE_0                 0x0
    #define        Gbl_avioPinMuxCntlBus_I2S1_LRCKIO_MODE_1                 0x1
    #define        Gbl_avioPinMuxCntlBus_I2S1_LRCKIO_MODE_2                 0x2
    #define        Gbl_avioPinMuxCntlBus_I2S1_LRCKIO_MODE_3                 0x3
    #define        Gbl_avioPinMuxCntlBus_I2S1_LRCKIO_MODE_7                 0x7

    #define     BA_Gbl_avioPinMuxCntlBus_I2S1_BCLKIO           0x8401
    #define     B16Gbl_avioPinMuxCntlBus_I2S1_BCLKIO           0x8400
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S1_BCLKIO              15
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S1_BCLKIO              15
    #define       bGbl_avioPinMuxCntlBus_I2S1_BCLKIO           3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S1_BCLKIO              0x00038000
    #define        Gbl_avioPinMuxCntlBus_I2S1_BCLKIO_MODE_0                 0x0
    #define        Gbl_avioPinMuxCntlBus_I2S1_BCLKIO_MODE_1                 0x1
    #define        Gbl_avioPinMuxCntlBus_I2S1_BCLKIO_MODE_2                 0x2
    #define        Gbl_avioPinMuxCntlBus_I2S1_BCLKIO_MODE_7                 0x7

    #define     BA_Gbl_avioPinMuxCntlBus_SPDIFO                0x8402
    #define     B16Gbl_avioPinMuxCntlBus_SPDIFO                0x8402
    #define   LSb32Gbl_avioPinMuxCntlBus_SPDIFO                   18
    #define   LSb16Gbl_avioPinMuxCntlBus_SPDIFO                   2
    #define       bGbl_avioPinMuxCntlBus_SPDIFO                3
    #define   MSK32Gbl_avioPinMuxCntlBus_SPDIFO                   0x001C0000
    #define        Gbl_avioPinMuxCntlBus_SPDIFO_MODE_0                      0x0
    #define        Gbl_avioPinMuxCntlBus_SPDIFO_MODE_1                      0x1
    #define        Gbl_avioPinMuxCntlBus_SPDIFO_MODE_4                      0x4

    #define     BA_Gbl_avioPinMuxCntlBus_SPDIFI                0x8402
    #define     B16Gbl_avioPinMuxCntlBus_SPDIFI                0x8402
    #define   LSb32Gbl_avioPinMuxCntlBus_SPDIFI                   21
    #define   LSb16Gbl_avioPinMuxCntlBus_SPDIFI                   5
    #define       bGbl_avioPinMuxCntlBus_SPDIFI                3
    #define   MSK32Gbl_avioPinMuxCntlBus_SPDIFI                   0x00E00000
    #define        Gbl_avioPinMuxCntlBus_SPDIFI_MODE_0                      0x0
    #define        Gbl_avioPinMuxCntlBus_SPDIFI_MODE_1                      0x1
    #define        Gbl_avioPinMuxCntlBus_SPDIFI_MODE_2                      0x2

    #define     BA_Gbl_avioPinMuxCntlBus_I2S2_LRCKIO           0x8403
    #define     B16Gbl_avioPinMuxCntlBus_I2S2_LRCKIO           0x8402
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S2_LRCKIO              24
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S2_LRCKIO              8
    #define       bGbl_avioPinMuxCntlBus_I2S2_LRCKIO           3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S2_LRCKIO              0x07000000
    #define        Gbl_avioPinMuxCntlBus_I2S2_LRCKIO_MODE_0                 0x0
    #define        Gbl_avioPinMuxCntlBus_I2S2_LRCKIO_MODE_1                 0x1

    #define     BA_Gbl_avioPinMuxCntlBus_I2S2_BCLKIO           0x8403
    #define     B16Gbl_avioPinMuxCntlBus_I2S2_BCLKIO           0x8402
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S2_BCLKIO              27
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S2_BCLKIO              11
    #define       bGbl_avioPinMuxCntlBus_I2S2_BCLKIO           3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S2_BCLKIO              0x38000000
    #define        Gbl_avioPinMuxCntlBus_I2S2_BCLKIO_MODE_0                 0x0
    #define        Gbl_avioPinMuxCntlBus_I2S2_BCLKIO_MODE_1                 0x1
    #define        Gbl_avioPinMuxCntlBus_I2S2_BCLKIO_MODE_2                 0x2

    #define     RA_Gbl_avioPinMuxCntlBus1                      0x8404

    #define     BA_Gbl_avioPinMuxCntlBus_I2S2_DI0              0x8404
    #define     B16Gbl_avioPinMuxCntlBus_I2S2_DI0              0x8404
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S2_DI0                 0
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S2_DI0                 0
    #define       bGbl_avioPinMuxCntlBus_I2S2_DI0              3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S2_DI0                 0x00000007
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI0_MODE_0                    0x0
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI0_MODE_1                    0x1

    #define     BA_Gbl_avioPinMuxCntlBus_I2S2_DI1              0x8404
    #define     B16Gbl_avioPinMuxCntlBus_I2S2_DI1              0x8404
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S2_DI1                 3
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S2_DI1                 3
    #define       bGbl_avioPinMuxCntlBus_I2S2_DI1              3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S2_DI1                 0x00000038
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI1_MODE_0                    0x0
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI1_MODE_1                    0x1
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI1_MODE_3                    0x3

    #define     BA_Gbl_avioPinMuxCntlBus_I2S2_DI2              0x8404
    #define     B16Gbl_avioPinMuxCntlBus_I2S2_DI2              0x8404
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S2_DI2                 6
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S2_DI2                 6
    #define       bGbl_avioPinMuxCntlBus_I2S2_DI2              3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S2_DI2                 0x000001C0
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI2_MODE_0                    0x0
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI2_MODE_1                    0x1
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI2_MODE_2                    0x2
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI2_MODE_3                    0x3

    #define     BA_Gbl_avioPinMuxCntlBus_I2S2_DI3              0x8405
    #define     B16Gbl_avioPinMuxCntlBus_I2S2_DI3              0x8404
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S2_DI3                 9
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S2_DI3                 9
    #define       bGbl_avioPinMuxCntlBus_I2S2_DI3              3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S2_DI3                 0x00000E00
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI3_MODE_0                    0x0
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI3_MODE_1                    0x1
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI3_MODE_2                    0x2
    #define        Gbl_avioPinMuxCntlBus_I2S2_DI3_MODE_3                    0x3

    #define     BA_Gbl_avioPinMuxCntlBus_I2S1_MCLK             0x8405
    #define     B16Gbl_avioPinMuxCntlBus_I2S1_MCLK             0x8404
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S1_MCLK                12
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S1_MCLK                12
    #define       bGbl_avioPinMuxCntlBus_I2S1_MCLK             3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S1_MCLK                0x00007000
    #define        Gbl_avioPinMuxCntlBus_I2S1_MCLK_MODE_0                   0x0
    #define        Gbl_avioPinMuxCntlBus_I2S1_MCLK_MODE_1                   0x1
    #define        Gbl_avioPinMuxCntlBus_I2S1_MCLK_MODE_3                   0x3
    #define        Gbl_avioPinMuxCntlBus_I2S1_MCLK_MODE_7                   0x7

    #define     BA_Gbl_avioPinMuxCntlBus_I2S2_MCLK             0x8405
    #define     B16Gbl_avioPinMuxCntlBus_I2S2_MCLK             0x8404
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S2_MCLK                15
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S2_MCLK                15
    #define       bGbl_avioPinMuxCntlBus_I2S2_MCLK             3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S2_MCLK                0x00038000
    #define        Gbl_avioPinMuxCntlBus_I2S2_MCLK_MODE_0                   0x0
    #define        Gbl_avioPinMuxCntlBus_I2S2_MCLK_MODE_1                   0x1
    #define        Gbl_avioPinMuxCntlBus_I2S2_MCLK_MODE_2                   0x2
    #define        Gbl_avioPinMuxCntlBus_I2S2_MCLK_MODE_4                   0x4

    #define     BA_Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL      0x8406
    #define     B16Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL      0x8406
    #define   LSb32Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL         18
    #define   LSb16Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL         2
    #define       bGbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL      3
    #define   MSK32Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL         0x001C0000
    #define        Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL_MODE_0              0x0
    #define        Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL_MODE_1              0x1

    #define     BA_Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA      0x8406
    #define     B16Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA      0x8406
    #define   LSb32Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA         21
    #define   LSb16Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA         5
    #define       bGbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA      3
    #define   MSK32Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA         0x00E00000
    #define        Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA_MODE_0              0x0
    #define        Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA_MODE_1              0x1

    #define     BA_Gbl_avioPinMuxCntlBus_I2S3_DO               0x8407
    #define     B16Gbl_avioPinMuxCntlBus_I2S3_DO               0x8406
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S3_DO                  24
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S3_DO                  8
    #define       bGbl_avioPinMuxCntlBus_I2S3_DO               3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S3_DO                  0x07000000
    #define        Gbl_avioPinMuxCntlBus_I2S3_DO_MODE_0                     0x0
    #define        Gbl_avioPinMuxCntlBus_I2S3_DO_MODE_1                     0x1
    #define        Gbl_avioPinMuxCntlBus_I2S3_DO_MODE_3                     0x3
    #define        Gbl_avioPinMuxCntlBus_I2S3_DO_MODE_7                     0x7

    #define     BA_Gbl_avioPinMuxCntlBus_I2S3_LRCKIO           0x8407
    #define     B16Gbl_avioPinMuxCntlBus_I2S3_LRCKIO           0x8406
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S3_LRCKIO              27
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S3_LRCKIO              11
    #define       bGbl_avioPinMuxCntlBus_I2S3_LRCKIO           3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S3_LRCKIO              0x38000000
    #define        Gbl_avioPinMuxCntlBus_I2S3_LRCKIO_MODE_0                 0x0
    #define        Gbl_avioPinMuxCntlBus_I2S3_LRCKIO_MODE_1                 0x1
    #define        Gbl_avioPinMuxCntlBus_I2S3_LRCKIO_MODE_3                 0x3

    #define     RA_Gbl_avioPinMuxCntlBus2                      0x8408

    #define     BA_Gbl_avioPinMuxCntlBus_I2S3_BCLKIO           0x8408
    #define     B16Gbl_avioPinMuxCntlBus_I2S3_BCLKIO           0x8408
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S3_BCLKIO              0
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S3_BCLKIO              0
    #define       bGbl_avioPinMuxCntlBus_I2S3_BCLKIO           3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S3_BCLKIO              0x00000007
    #define        Gbl_avioPinMuxCntlBus_I2S3_BCLKIO_MODE_0                 0x0
    #define        Gbl_avioPinMuxCntlBus_I2S3_BCLKIO_MODE_1                 0x1
    #define        Gbl_avioPinMuxCntlBus_I2S3_BCLKIO_MODE_3                 0x3

    #define     BA_Gbl_avioPinMuxCntlBus_I2S3_DI               0x8408
    #define     B16Gbl_avioPinMuxCntlBus_I2S3_DI               0x8408
    #define   LSb32Gbl_avioPinMuxCntlBus_I2S3_DI                  3
    #define   LSb16Gbl_avioPinMuxCntlBus_I2S3_DI                  3
    #define       bGbl_avioPinMuxCntlBus_I2S3_DI               3
    #define   MSK32Gbl_avioPinMuxCntlBus_I2S3_DI                  0x00000038
    #define        Gbl_avioPinMuxCntlBus_I2S3_DI_MODE_0                     0x0
    #define        Gbl_avioPinMuxCntlBus_I2S3_DI_MODE_1                     0x1
    #define        Gbl_avioPinMuxCntlBus_I2S3_DI_MODE_3                     0x3
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GPIO_A2Cntl                             0x8800

    #define     BA_Gbl_GPIO_A2Cntl_DS0                         0x8800
    #define     B16Gbl_GPIO_A2Cntl_DS0                         0x8800
    #define   LSb32Gbl_GPIO_A2Cntl_DS0                            0
    #define   LSb16Gbl_GPIO_A2Cntl_DS0                            0
    #define       bGbl_GPIO_A2Cntl_DS0                         1
    #define   MSK32Gbl_GPIO_A2Cntl_DS0                            0x00000001

    #define     BA_Gbl_GPIO_A2Cntl_DS1                         0x8800
    #define     B16Gbl_GPIO_A2Cntl_DS1                         0x8800
    #define   LSb32Gbl_GPIO_A2Cntl_DS1                            1
    #define   LSb16Gbl_GPIO_A2Cntl_DS1                            1
    #define       bGbl_GPIO_A2Cntl_DS1                         1
    #define   MSK32Gbl_GPIO_A2Cntl_DS1                            0x00000002

    #define     BA_Gbl_GPIO_A2Cntl_DS2                         0x8800
    #define     B16Gbl_GPIO_A2Cntl_DS2                         0x8800
    #define   LSb32Gbl_GPIO_A2Cntl_DS2                            2
    #define   LSb16Gbl_GPIO_A2Cntl_DS2                            2
    #define       bGbl_GPIO_A2Cntl_DS2                         1
    #define   MSK32Gbl_GPIO_A2Cntl_DS2                            0x00000004

    #define     BA_Gbl_GPIO_A2Cntl_IE                          0x8800
    #define     B16Gbl_GPIO_A2Cntl_IE                          0x8800
    #define   LSb32Gbl_GPIO_A2Cntl_IE                             3
    #define   LSb16Gbl_GPIO_A2Cntl_IE                             3
    #define       bGbl_GPIO_A2Cntl_IE                          1
    #define   MSK32Gbl_GPIO_A2Cntl_IE                             0x00000008

    #define     BA_Gbl_GPIO_A2Cntl_PD                          0x8800
    #define     B16Gbl_GPIO_A2Cntl_PD                          0x8800
    #define   LSb32Gbl_GPIO_A2Cntl_PD                             4
    #define   LSb16Gbl_GPIO_A2Cntl_PD                             4
    #define       bGbl_GPIO_A2Cntl_PD                          1
    #define   MSK32Gbl_GPIO_A2Cntl_PD                             0x00000010

    #define     BA_Gbl_GPIO_A2Cntl_PU                          0x8800
    #define     B16Gbl_GPIO_A2Cntl_PU                          0x8800
    #define   LSb32Gbl_GPIO_A2Cntl_PU                             5
    #define   LSb16Gbl_GPIO_A2Cntl_PU                             5
    #define       bGbl_GPIO_A2Cntl_PU                          1
    #define   MSK32Gbl_GPIO_A2Cntl_PU                             0x00000020

    #define     BA_Gbl_GPIO_A2Cntl_SL                          0x8800
    #define     B16Gbl_GPIO_A2Cntl_SL                          0x8800
    #define   LSb32Gbl_GPIO_A2Cntl_SL                             6
    #define   LSb16Gbl_GPIO_A2Cntl_SL                             6
    #define       bGbl_GPIO_A2Cntl_SL                          1
    #define   MSK32Gbl_GPIO_A2Cntl_SL                             0x00000040

    #define     BA_Gbl_GPIO_A2Cntl_ST                          0x8800
    #define     B16Gbl_GPIO_A2Cntl_ST                          0x8800
    #define   LSb32Gbl_GPIO_A2Cntl_ST                             7
    #define   LSb16Gbl_GPIO_A2Cntl_ST                             7
    #define       bGbl_GPIO_A2Cntl_ST                          1
    #define   MSK32Gbl_GPIO_A2Cntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GPIO_A1Cntl                             0x8804

    #define     BA_Gbl_GPIO_A1Cntl_DS0                         0x8804
    #define     B16Gbl_GPIO_A1Cntl_DS0                         0x8804
    #define   LSb32Gbl_GPIO_A1Cntl_DS0                            0
    #define   LSb16Gbl_GPIO_A1Cntl_DS0                            0
    #define       bGbl_GPIO_A1Cntl_DS0                         1
    #define   MSK32Gbl_GPIO_A1Cntl_DS0                            0x00000001

    #define     BA_Gbl_GPIO_A1Cntl_DS1                         0x8804
    #define     B16Gbl_GPIO_A1Cntl_DS1                         0x8804
    #define   LSb32Gbl_GPIO_A1Cntl_DS1                            1
    #define   LSb16Gbl_GPIO_A1Cntl_DS1                            1
    #define       bGbl_GPIO_A1Cntl_DS1                         1
    #define   MSK32Gbl_GPIO_A1Cntl_DS1                            0x00000002

    #define     BA_Gbl_GPIO_A1Cntl_DS2                         0x8804
    #define     B16Gbl_GPIO_A1Cntl_DS2                         0x8804
    #define   LSb32Gbl_GPIO_A1Cntl_DS2                            2
    #define   LSb16Gbl_GPIO_A1Cntl_DS2                            2
    #define       bGbl_GPIO_A1Cntl_DS2                         1
    #define   MSK32Gbl_GPIO_A1Cntl_DS2                            0x00000004

    #define     BA_Gbl_GPIO_A1Cntl_IE                          0x8804
    #define     B16Gbl_GPIO_A1Cntl_IE                          0x8804
    #define   LSb32Gbl_GPIO_A1Cntl_IE                             3
    #define   LSb16Gbl_GPIO_A1Cntl_IE                             3
    #define       bGbl_GPIO_A1Cntl_IE                          1
    #define   MSK32Gbl_GPIO_A1Cntl_IE                             0x00000008

    #define     BA_Gbl_GPIO_A1Cntl_PD                          0x8804
    #define     B16Gbl_GPIO_A1Cntl_PD                          0x8804
    #define   LSb32Gbl_GPIO_A1Cntl_PD                             4
    #define   LSb16Gbl_GPIO_A1Cntl_PD                             4
    #define       bGbl_GPIO_A1Cntl_PD                          1
    #define   MSK32Gbl_GPIO_A1Cntl_PD                             0x00000010

    #define     BA_Gbl_GPIO_A1Cntl_PU                          0x8804
    #define     B16Gbl_GPIO_A1Cntl_PU                          0x8804
    #define   LSb32Gbl_GPIO_A1Cntl_PU                             5
    #define   LSb16Gbl_GPIO_A1Cntl_PU                             5
    #define       bGbl_GPIO_A1Cntl_PU                          1
    #define   MSK32Gbl_GPIO_A1Cntl_PU                             0x00000020

    #define     BA_Gbl_GPIO_A1Cntl_SL                          0x8804
    #define     B16Gbl_GPIO_A1Cntl_SL                          0x8804
    #define   LSb32Gbl_GPIO_A1Cntl_SL                             6
    #define   LSb16Gbl_GPIO_A1Cntl_SL                             6
    #define       bGbl_GPIO_A1Cntl_SL                          1
    #define   MSK32Gbl_GPIO_A1Cntl_SL                             0x00000040

    #define     BA_Gbl_GPIO_A1Cntl_ST                          0x8804
    #define     B16Gbl_GPIO_A1Cntl_ST                          0x8804
    #define   LSb32Gbl_GPIO_A1Cntl_ST                             7
    #define   LSb16Gbl_GPIO_A1Cntl_ST                             7
    #define       bGbl_GPIO_A1Cntl_ST                          1
    #define   MSK32Gbl_GPIO_A1Cntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_GPIO_A0Cntl                             0x8808

    #define     BA_Gbl_GPIO_A0Cntl_DS0                         0x8808
    #define     B16Gbl_GPIO_A0Cntl_DS0                         0x8808
    #define   LSb32Gbl_GPIO_A0Cntl_DS0                            0
    #define   LSb16Gbl_GPIO_A0Cntl_DS0                            0
    #define       bGbl_GPIO_A0Cntl_DS0                         1
    #define   MSK32Gbl_GPIO_A0Cntl_DS0                            0x00000001

    #define     BA_Gbl_GPIO_A0Cntl_DS1                         0x8808
    #define     B16Gbl_GPIO_A0Cntl_DS1                         0x8808
    #define   LSb32Gbl_GPIO_A0Cntl_DS1                            1
    #define   LSb16Gbl_GPIO_A0Cntl_DS1                            1
    #define       bGbl_GPIO_A0Cntl_DS1                         1
    #define   MSK32Gbl_GPIO_A0Cntl_DS1                            0x00000002

    #define     BA_Gbl_GPIO_A0Cntl_DS2                         0x8808
    #define     B16Gbl_GPIO_A0Cntl_DS2                         0x8808
    #define   LSb32Gbl_GPIO_A0Cntl_DS2                            2
    #define   LSb16Gbl_GPIO_A0Cntl_DS2                            2
    #define       bGbl_GPIO_A0Cntl_DS2                         1
    #define   MSK32Gbl_GPIO_A0Cntl_DS2                            0x00000004

    #define     BA_Gbl_GPIO_A0Cntl_IE                          0x8808
    #define     B16Gbl_GPIO_A0Cntl_IE                          0x8808
    #define   LSb32Gbl_GPIO_A0Cntl_IE                             3
    #define   LSb16Gbl_GPIO_A0Cntl_IE                             3
    #define       bGbl_GPIO_A0Cntl_IE                          1
    #define   MSK32Gbl_GPIO_A0Cntl_IE                             0x00000008

    #define     BA_Gbl_GPIO_A0Cntl_PD                          0x8808
    #define     B16Gbl_GPIO_A0Cntl_PD                          0x8808
    #define   LSb32Gbl_GPIO_A0Cntl_PD                             4
    #define   LSb16Gbl_GPIO_A0Cntl_PD                             4
    #define       bGbl_GPIO_A0Cntl_PD                          1
    #define   MSK32Gbl_GPIO_A0Cntl_PD                             0x00000010

    #define     BA_Gbl_GPIO_A0Cntl_PU                          0x8808
    #define     B16Gbl_GPIO_A0Cntl_PU                          0x8808
    #define   LSb32Gbl_GPIO_A0Cntl_PU                             5
    #define   LSb16Gbl_GPIO_A0Cntl_PU                             5
    #define       bGbl_GPIO_A0Cntl_PU                          1
    #define   MSK32Gbl_GPIO_A0Cntl_PU                             0x00000020

    #define     BA_Gbl_GPIO_A0Cntl_SL                          0x8808
    #define     B16Gbl_GPIO_A0Cntl_SL                          0x8808
    #define   LSb32Gbl_GPIO_A0Cntl_SL                             6
    #define   LSb16Gbl_GPIO_A0Cntl_SL                             6
    #define       bGbl_GPIO_A0Cntl_SL                          1
    #define   MSK32Gbl_GPIO_A0Cntl_SL                             0x00000040

    #define     BA_Gbl_GPIO_A0Cntl_ST                          0x8808
    #define     B16Gbl_GPIO_A0Cntl_ST                          0x8808
    #define   LSb32Gbl_GPIO_A0Cntl_ST                             7
    #define   LSb16Gbl_GPIO_A0Cntl_ST                             7
    #define       bGbl_GPIO_A0Cntl_ST                          1
    #define   MSK32Gbl_GPIO_A0Cntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_STS0_CLKCntl                            0x880C

    #define     BA_Gbl_STS0_CLKCntl_DS0                        0x880C
    #define     B16Gbl_STS0_CLKCntl_DS0                        0x880C
    #define   LSb32Gbl_STS0_CLKCntl_DS0                           0
    #define   LSb16Gbl_STS0_CLKCntl_DS0                           0
    #define       bGbl_STS0_CLKCntl_DS0                        1
    #define   MSK32Gbl_STS0_CLKCntl_DS0                           0x00000001

    #define     BA_Gbl_STS0_CLKCntl_DS1                        0x880C
    #define     B16Gbl_STS0_CLKCntl_DS1                        0x880C
    #define   LSb32Gbl_STS0_CLKCntl_DS1                           1
    #define   LSb16Gbl_STS0_CLKCntl_DS1                           1
    #define       bGbl_STS0_CLKCntl_DS1                        1
    #define   MSK32Gbl_STS0_CLKCntl_DS1                           0x00000002

    #define     BA_Gbl_STS0_CLKCntl_DS2                        0x880C
    #define     B16Gbl_STS0_CLKCntl_DS2                        0x880C
    #define   LSb32Gbl_STS0_CLKCntl_DS2                           2
    #define   LSb16Gbl_STS0_CLKCntl_DS2                           2
    #define       bGbl_STS0_CLKCntl_DS2                        1
    #define   MSK32Gbl_STS0_CLKCntl_DS2                           0x00000004

    #define     BA_Gbl_STS0_CLKCntl_IE                         0x880C
    #define     B16Gbl_STS0_CLKCntl_IE                         0x880C
    #define   LSb32Gbl_STS0_CLKCntl_IE                            3
    #define   LSb16Gbl_STS0_CLKCntl_IE                            3
    #define       bGbl_STS0_CLKCntl_IE                         1
    #define   MSK32Gbl_STS0_CLKCntl_IE                            0x00000008

    #define     BA_Gbl_STS0_CLKCntl_PD                         0x880C
    #define     B16Gbl_STS0_CLKCntl_PD                         0x880C
    #define   LSb32Gbl_STS0_CLKCntl_PD                            4
    #define   LSb16Gbl_STS0_CLKCntl_PD                            4
    #define       bGbl_STS0_CLKCntl_PD                         1
    #define   MSK32Gbl_STS0_CLKCntl_PD                            0x00000010

    #define     BA_Gbl_STS0_CLKCntl_PU                         0x880C
    #define     B16Gbl_STS0_CLKCntl_PU                         0x880C
    #define   LSb32Gbl_STS0_CLKCntl_PU                            5
    #define   LSb16Gbl_STS0_CLKCntl_PU                            5
    #define       bGbl_STS0_CLKCntl_PU                         1
    #define   MSK32Gbl_STS0_CLKCntl_PU                            0x00000020

    #define     BA_Gbl_STS0_CLKCntl_SL                         0x880C
    #define     B16Gbl_STS0_CLKCntl_SL                         0x880C
    #define   LSb32Gbl_STS0_CLKCntl_SL                            6
    #define   LSb16Gbl_STS0_CLKCntl_SL                            6
    #define       bGbl_STS0_CLKCntl_SL                         1
    #define   MSK32Gbl_STS0_CLKCntl_SL                            0x00000040

    #define     BA_Gbl_STS0_CLKCntl_ST                         0x880C
    #define     B16Gbl_STS0_CLKCntl_ST                         0x880C
    #define   LSb32Gbl_STS0_CLKCntl_ST                            7
    #define   LSb16Gbl_STS0_CLKCntl_ST                            7
    #define       bGbl_STS0_CLKCntl_ST                         1
    #define   MSK32Gbl_STS0_CLKCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_STS0_SOPCntl                            0x8810

    #define     BA_Gbl_STS0_SOPCntl_DS0                        0x8810
    #define     B16Gbl_STS0_SOPCntl_DS0                        0x8810
    #define   LSb32Gbl_STS0_SOPCntl_DS0                           0
    #define   LSb16Gbl_STS0_SOPCntl_DS0                           0
    #define       bGbl_STS0_SOPCntl_DS0                        1
    #define   MSK32Gbl_STS0_SOPCntl_DS0                           0x00000001

    #define     BA_Gbl_STS0_SOPCntl_DS1                        0x8810
    #define     B16Gbl_STS0_SOPCntl_DS1                        0x8810
    #define   LSb32Gbl_STS0_SOPCntl_DS1                           1
    #define   LSb16Gbl_STS0_SOPCntl_DS1                           1
    #define       bGbl_STS0_SOPCntl_DS1                        1
    #define   MSK32Gbl_STS0_SOPCntl_DS1                           0x00000002

    #define     BA_Gbl_STS0_SOPCntl_DS2                        0x8810
    #define     B16Gbl_STS0_SOPCntl_DS2                        0x8810
    #define   LSb32Gbl_STS0_SOPCntl_DS2                           2
    #define   LSb16Gbl_STS0_SOPCntl_DS2                           2
    #define       bGbl_STS0_SOPCntl_DS2                        1
    #define   MSK32Gbl_STS0_SOPCntl_DS2                           0x00000004

    #define     BA_Gbl_STS0_SOPCntl_IE                         0x8810
    #define     B16Gbl_STS0_SOPCntl_IE                         0x8810
    #define   LSb32Gbl_STS0_SOPCntl_IE                            3
    #define   LSb16Gbl_STS0_SOPCntl_IE                            3
    #define       bGbl_STS0_SOPCntl_IE                         1
    #define   MSK32Gbl_STS0_SOPCntl_IE                            0x00000008

    #define     BA_Gbl_STS0_SOPCntl_PD                         0x8810
    #define     B16Gbl_STS0_SOPCntl_PD                         0x8810
    #define   LSb32Gbl_STS0_SOPCntl_PD                            4
    #define   LSb16Gbl_STS0_SOPCntl_PD                            4
    #define       bGbl_STS0_SOPCntl_PD                         1
    #define   MSK32Gbl_STS0_SOPCntl_PD                            0x00000010

    #define     BA_Gbl_STS0_SOPCntl_PU                         0x8810
    #define     B16Gbl_STS0_SOPCntl_PU                         0x8810
    #define   LSb32Gbl_STS0_SOPCntl_PU                            5
    #define   LSb16Gbl_STS0_SOPCntl_PU                            5
    #define       bGbl_STS0_SOPCntl_PU                         1
    #define   MSK32Gbl_STS0_SOPCntl_PU                            0x00000020

    #define     BA_Gbl_STS0_SOPCntl_SL                         0x8810
    #define     B16Gbl_STS0_SOPCntl_SL                         0x8810
    #define   LSb32Gbl_STS0_SOPCntl_SL                            6
    #define   LSb16Gbl_STS0_SOPCntl_SL                            6
    #define       bGbl_STS0_SOPCntl_SL                         1
    #define   MSK32Gbl_STS0_SOPCntl_SL                            0x00000040

    #define     BA_Gbl_STS0_SOPCntl_ST                         0x8810
    #define     B16Gbl_STS0_SOPCntl_ST                         0x8810
    #define   LSb32Gbl_STS0_SOPCntl_ST                            7
    #define   LSb16Gbl_STS0_SOPCntl_ST                            7
    #define       bGbl_STS0_SOPCntl_ST                         1
    #define   MSK32Gbl_STS0_SOPCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_STS0_SDCntl                             0x8814

    #define     BA_Gbl_STS0_SDCntl_DS0                         0x8814
    #define     B16Gbl_STS0_SDCntl_DS0                         0x8814
    #define   LSb32Gbl_STS0_SDCntl_DS0                            0
    #define   LSb16Gbl_STS0_SDCntl_DS0                            0
    #define       bGbl_STS0_SDCntl_DS0                         1
    #define   MSK32Gbl_STS0_SDCntl_DS0                            0x00000001

    #define     BA_Gbl_STS0_SDCntl_DS1                         0x8814
    #define     B16Gbl_STS0_SDCntl_DS1                         0x8814
    #define   LSb32Gbl_STS0_SDCntl_DS1                            1
    #define   LSb16Gbl_STS0_SDCntl_DS1                            1
    #define       bGbl_STS0_SDCntl_DS1                         1
    #define   MSK32Gbl_STS0_SDCntl_DS1                            0x00000002

    #define     BA_Gbl_STS0_SDCntl_DS2                         0x8814
    #define     B16Gbl_STS0_SDCntl_DS2                         0x8814
    #define   LSb32Gbl_STS0_SDCntl_DS2                            2
    #define   LSb16Gbl_STS0_SDCntl_DS2                            2
    #define       bGbl_STS0_SDCntl_DS2                         1
    #define   MSK32Gbl_STS0_SDCntl_DS2                            0x00000004

    #define     BA_Gbl_STS0_SDCntl_IE                          0x8814
    #define     B16Gbl_STS0_SDCntl_IE                          0x8814
    #define   LSb32Gbl_STS0_SDCntl_IE                             3
    #define   LSb16Gbl_STS0_SDCntl_IE                             3
    #define       bGbl_STS0_SDCntl_IE                          1
    #define   MSK32Gbl_STS0_SDCntl_IE                             0x00000008

    #define     BA_Gbl_STS0_SDCntl_PD                          0x8814
    #define     B16Gbl_STS0_SDCntl_PD                          0x8814
    #define   LSb32Gbl_STS0_SDCntl_PD                             4
    #define   LSb16Gbl_STS0_SDCntl_PD                             4
    #define       bGbl_STS0_SDCntl_PD                          1
    #define   MSK32Gbl_STS0_SDCntl_PD                             0x00000010

    #define     BA_Gbl_STS0_SDCntl_PU                          0x8814
    #define     B16Gbl_STS0_SDCntl_PU                          0x8814
    #define   LSb32Gbl_STS0_SDCntl_PU                             5
    #define   LSb16Gbl_STS0_SDCntl_PU                             5
    #define       bGbl_STS0_SDCntl_PU                          1
    #define   MSK32Gbl_STS0_SDCntl_PU                             0x00000020

    #define     BA_Gbl_STS0_SDCntl_SL                          0x8814
    #define     B16Gbl_STS0_SDCntl_SL                          0x8814
    #define   LSb32Gbl_STS0_SDCntl_SL                             6
    #define   LSb16Gbl_STS0_SDCntl_SL                             6
    #define       bGbl_STS0_SDCntl_SL                          1
    #define   MSK32Gbl_STS0_SDCntl_SL                             0x00000040

    #define     BA_Gbl_STS0_SDCntl_ST                          0x8814
    #define     B16Gbl_STS0_SDCntl_ST                          0x8814
    #define   LSb32Gbl_STS0_SDCntl_ST                             7
    #define   LSb16Gbl_STS0_SDCntl_ST                             7
    #define       bGbl_STS0_SDCntl_ST                          1
    #define   MSK32Gbl_STS0_SDCntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_STS0_VALDCntl                           0x8818

    #define     BA_Gbl_STS0_VALDCntl_DS0                       0x8818
    #define     B16Gbl_STS0_VALDCntl_DS0                       0x8818
    #define   LSb32Gbl_STS0_VALDCntl_DS0                          0
    #define   LSb16Gbl_STS0_VALDCntl_DS0                          0
    #define       bGbl_STS0_VALDCntl_DS0                       1
    #define   MSK32Gbl_STS0_VALDCntl_DS0                          0x00000001

    #define     BA_Gbl_STS0_VALDCntl_DS1                       0x8818
    #define     B16Gbl_STS0_VALDCntl_DS1                       0x8818
    #define   LSb32Gbl_STS0_VALDCntl_DS1                          1
    #define   LSb16Gbl_STS0_VALDCntl_DS1                          1
    #define       bGbl_STS0_VALDCntl_DS1                       1
    #define   MSK32Gbl_STS0_VALDCntl_DS1                          0x00000002

    #define     BA_Gbl_STS0_VALDCntl_DS2                       0x8818
    #define     B16Gbl_STS0_VALDCntl_DS2                       0x8818
    #define   LSb32Gbl_STS0_VALDCntl_DS2                          2
    #define   LSb16Gbl_STS0_VALDCntl_DS2                          2
    #define       bGbl_STS0_VALDCntl_DS2                       1
    #define   MSK32Gbl_STS0_VALDCntl_DS2                          0x00000004

    #define     BA_Gbl_STS0_VALDCntl_IE                        0x8818
    #define     B16Gbl_STS0_VALDCntl_IE                        0x8818
    #define   LSb32Gbl_STS0_VALDCntl_IE                           3
    #define   LSb16Gbl_STS0_VALDCntl_IE                           3
    #define       bGbl_STS0_VALDCntl_IE                        1
    #define   MSK32Gbl_STS0_VALDCntl_IE                           0x00000008

    #define     BA_Gbl_STS0_VALDCntl_PD                        0x8818
    #define     B16Gbl_STS0_VALDCntl_PD                        0x8818
    #define   LSb32Gbl_STS0_VALDCntl_PD                           4
    #define   LSb16Gbl_STS0_VALDCntl_PD                           4
    #define       bGbl_STS0_VALDCntl_PD                        1
    #define   MSK32Gbl_STS0_VALDCntl_PD                           0x00000010

    #define     BA_Gbl_STS0_VALDCntl_PU                        0x8818
    #define     B16Gbl_STS0_VALDCntl_PU                        0x8818
    #define   LSb32Gbl_STS0_VALDCntl_PU                           5
    #define   LSb16Gbl_STS0_VALDCntl_PU                           5
    #define       bGbl_STS0_VALDCntl_PU                        1
    #define   MSK32Gbl_STS0_VALDCntl_PU                           0x00000020

    #define     BA_Gbl_STS0_VALDCntl_SL                        0x8818
    #define     B16Gbl_STS0_VALDCntl_SL                        0x8818
    #define   LSb32Gbl_STS0_VALDCntl_SL                           6
    #define   LSb16Gbl_STS0_VALDCntl_SL                           6
    #define       bGbl_STS0_VALDCntl_SL                        1
    #define   MSK32Gbl_STS0_VALDCntl_SL                           0x00000040

    #define     BA_Gbl_STS0_VALDCntl_ST                        0x8818
    #define     B16Gbl_STS0_VALDCntl_ST                        0x8818
    #define   LSb32Gbl_STS0_VALDCntl_ST                           7
    #define   LSb16Gbl_STS0_VALDCntl_ST                           7
    #define       bGbl_STS0_VALDCntl_ST                        1
    #define   MSK32Gbl_STS0_VALDCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_STS1_CLKCntl                            0x881C

    #define     BA_Gbl_STS1_CLKCntl_DS0                        0x881C
    #define     B16Gbl_STS1_CLKCntl_DS0                        0x881C
    #define   LSb32Gbl_STS1_CLKCntl_DS0                           0
    #define   LSb16Gbl_STS1_CLKCntl_DS0                           0
    #define       bGbl_STS1_CLKCntl_DS0                        1
    #define   MSK32Gbl_STS1_CLKCntl_DS0                           0x00000001

    #define     BA_Gbl_STS1_CLKCntl_DS1                        0x881C
    #define     B16Gbl_STS1_CLKCntl_DS1                        0x881C
    #define   LSb32Gbl_STS1_CLKCntl_DS1                           1
    #define   LSb16Gbl_STS1_CLKCntl_DS1                           1
    #define       bGbl_STS1_CLKCntl_DS1                        1
    #define   MSK32Gbl_STS1_CLKCntl_DS1                           0x00000002

    #define     BA_Gbl_STS1_CLKCntl_DS2                        0x881C
    #define     B16Gbl_STS1_CLKCntl_DS2                        0x881C
    #define   LSb32Gbl_STS1_CLKCntl_DS2                           2
    #define   LSb16Gbl_STS1_CLKCntl_DS2                           2
    #define       bGbl_STS1_CLKCntl_DS2                        1
    #define   MSK32Gbl_STS1_CLKCntl_DS2                           0x00000004

    #define     BA_Gbl_STS1_CLKCntl_IE                         0x881C
    #define     B16Gbl_STS1_CLKCntl_IE                         0x881C
    #define   LSb32Gbl_STS1_CLKCntl_IE                            3
    #define   LSb16Gbl_STS1_CLKCntl_IE                            3
    #define       bGbl_STS1_CLKCntl_IE                         1
    #define   MSK32Gbl_STS1_CLKCntl_IE                            0x00000008

    #define     BA_Gbl_STS1_CLKCntl_PD                         0x881C
    #define     B16Gbl_STS1_CLKCntl_PD                         0x881C
    #define   LSb32Gbl_STS1_CLKCntl_PD                            4
    #define   LSb16Gbl_STS1_CLKCntl_PD                            4
    #define       bGbl_STS1_CLKCntl_PD                         1
    #define   MSK32Gbl_STS1_CLKCntl_PD                            0x00000010

    #define     BA_Gbl_STS1_CLKCntl_PU                         0x881C
    #define     B16Gbl_STS1_CLKCntl_PU                         0x881C
    #define   LSb32Gbl_STS1_CLKCntl_PU                            5
    #define   LSb16Gbl_STS1_CLKCntl_PU                            5
    #define       bGbl_STS1_CLKCntl_PU                         1
    #define   MSK32Gbl_STS1_CLKCntl_PU                            0x00000020

    #define     BA_Gbl_STS1_CLKCntl_SL                         0x881C
    #define     B16Gbl_STS1_CLKCntl_SL                         0x881C
    #define   LSb32Gbl_STS1_CLKCntl_SL                            6
    #define   LSb16Gbl_STS1_CLKCntl_SL                            6
    #define       bGbl_STS1_CLKCntl_SL                         1
    #define   MSK32Gbl_STS1_CLKCntl_SL                            0x00000040

    #define     BA_Gbl_STS1_CLKCntl_ST                         0x881C
    #define     B16Gbl_STS1_CLKCntl_ST                         0x881C
    #define   LSb32Gbl_STS1_CLKCntl_ST                            7
    #define   LSb16Gbl_STS1_CLKCntl_ST                            7
    #define       bGbl_STS1_CLKCntl_ST                         1
    #define   MSK32Gbl_STS1_CLKCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_STS1_SOPCntl                            0x8820

    #define     BA_Gbl_STS1_SOPCntl_DS0                        0x8820
    #define     B16Gbl_STS1_SOPCntl_DS0                        0x8820
    #define   LSb32Gbl_STS1_SOPCntl_DS0                           0
    #define   LSb16Gbl_STS1_SOPCntl_DS0                           0
    #define       bGbl_STS1_SOPCntl_DS0                        1
    #define   MSK32Gbl_STS1_SOPCntl_DS0                           0x00000001

    #define     BA_Gbl_STS1_SOPCntl_DS1                        0x8820
    #define     B16Gbl_STS1_SOPCntl_DS1                        0x8820
    #define   LSb32Gbl_STS1_SOPCntl_DS1                           1
    #define   LSb16Gbl_STS1_SOPCntl_DS1                           1
    #define       bGbl_STS1_SOPCntl_DS1                        1
    #define   MSK32Gbl_STS1_SOPCntl_DS1                           0x00000002

    #define     BA_Gbl_STS1_SOPCntl_DS2                        0x8820
    #define     B16Gbl_STS1_SOPCntl_DS2                        0x8820
    #define   LSb32Gbl_STS1_SOPCntl_DS2                           2
    #define   LSb16Gbl_STS1_SOPCntl_DS2                           2
    #define       bGbl_STS1_SOPCntl_DS2                        1
    #define   MSK32Gbl_STS1_SOPCntl_DS2                           0x00000004

    #define     BA_Gbl_STS1_SOPCntl_IE                         0x8820
    #define     B16Gbl_STS1_SOPCntl_IE                         0x8820
    #define   LSb32Gbl_STS1_SOPCntl_IE                            3
    #define   LSb16Gbl_STS1_SOPCntl_IE                            3
    #define       bGbl_STS1_SOPCntl_IE                         1
    #define   MSK32Gbl_STS1_SOPCntl_IE                            0x00000008

    #define     BA_Gbl_STS1_SOPCntl_PD                         0x8820
    #define     B16Gbl_STS1_SOPCntl_PD                         0x8820
    #define   LSb32Gbl_STS1_SOPCntl_PD                            4
    #define   LSb16Gbl_STS1_SOPCntl_PD                            4
    #define       bGbl_STS1_SOPCntl_PD                         1
    #define   MSK32Gbl_STS1_SOPCntl_PD                            0x00000010

    #define     BA_Gbl_STS1_SOPCntl_PU                         0x8820
    #define     B16Gbl_STS1_SOPCntl_PU                         0x8820
    #define   LSb32Gbl_STS1_SOPCntl_PU                            5
    #define   LSb16Gbl_STS1_SOPCntl_PU                            5
    #define       bGbl_STS1_SOPCntl_PU                         1
    #define   MSK32Gbl_STS1_SOPCntl_PU                            0x00000020

    #define     BA_Gbl_STS1_SOPCntl_SL                         0x8820
    #define     B16Gbl_STS1_SOPCntl_SL                         0x8820
    #define   LSb32Gbl_STS1_SOPCntl_SL                            6
    #define   LSb16Gbl_STS1_SOPCntl_SL                            6
    #define       bGbl_STS1_SOPCntl_SL                         1
    #define   MSK32Gbl_STS1_SOPCntl_SL                            0x00000040

    #define     BA_Gbl_STS1_SOPCntl_ST                         0x8820
    #define     B16Gbl_STS1_SOPCntl_ST                         0x8820
    #define   LSb32Gbl_STS1_SOPCntl_ST                            7
    #define   LSb16Gbl_STS1_SOPCntl_ST                            7
    #define       bGbl_STS1_SOPCntl_ST                         1
    #define   MSK32Gbl_STS1_SOPCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_STS1_SDCntl                             0x8824

    #define     BA_Gbl_STS1_SDCntl_DS0                         0x8824
    #define     B16Gbl_STS1_SDCntl_DS0                         0x8824
    #define   LSb32Gbl_STS1_SDCntl_DS0                            0
    #define   LSb16Gbl_STS1_SDCntl_DS0                            0
    #define       bGbl_STS1_SDCntl_DS0                         1
    #define   MSK32Gbl_STS1_SDCntl_DS0                            0x00000001

    #define     BA_Gbl_STS1_SDCntl_DS1                         0x8824
    #define     B16Gbl_STS1_SDCntl_DS1                         0x8824
    #define   LSb32Gbl_STS1_SDCntl_DS1                            1
    #define   LSb16Gbl_STS1_SDCntl_DS1                            1
    #define       bGbl_STS1_SDCntl_DS1                         1
    #define   MSK32Gbl_STS1_SDCntl_DS1                            0x00000002

    #define     BA_Gbl_STS1_SDCntl_DS2                         0x8824
    #define     B16Gbl_STS1_SDCntl_DS2                         0x8824
    #define   LSb32Gbl_STS1_SDCntl_DS2                            2
    #define   LSb16Gbl_STS1_SDCntl_DS2                            2
    #define       bGbl_STS1_SDCntl_DS2                         1
    #define   MSK32Gbl_STS1_SDCntl_DS2                            0x00000004

    #define     BA_Gbl_STS1_SDCntl_IE                          0x8824
    #define     B16Gbl_STS1_SDCntl_IE                          0x8824
    #define   LSb32Gbl_STS1_SDCntl_IE                             3
    #define   LSb16Gbl_STS1_SDCntl_IE                             3
    #define       bGbl_STS1_SDCntl_IE                          1
    #define   MSK32Gbl_STS1_SDCntl_IE                             0x00000008

    #define     BA_Gbl_STS1_SDCntl_PD                          0x8824
    #define     B16Gbl_STS1_SDCntl_PD                          0x8824
    #define   LSb32Gbl_STS1_SDCntl_PD                             4
    #define   LSb16Gbl_STS1_SDCntl_PD                             4
    #define       bGbl_STS1_SDCntl_PD                          1
    #define   MSK32Gbl_STS1_SDCntl_PD                             0x00000010

    #define     BA_Gbl_STS1_SDCntl_PU                          0x8824
    #define     B16Gbl_STS1_SDCntl_PU                          0x8824
    #define   LSb32Gbl_STS1_SDCntl_PU                             5
    #define   LSb16Gbl_STS1_SDCntl_PU                             5
    #define       bGbl_STS1_SDCntl_PU                          1
    #define   MSK32Gbl_STS1_SDCntl_PU                             0x00000020

    #define     BA_Gbl_STS1_SDCntl_SL                          0x8824
    #define     B16Gbl_STS1_SDCntl_SL                          0x8824
    #define   LSb32Gbl_STS1_SDCntl_SL                             6
    #define   LSb16Gbl_STS1_SDCntl_SL                             6
    #define       bGbl_STS1_SDCntl_SL                          1
    #define   MSK32Gbl_STS1_SDCntl_SL                             0x00000040

    #define     BA_Gbl_STS1_SDCntl_ST                          0x8824
    #define     B16Gbl_STS1_SDCntl_ST                          0x8824
    #define   LSb32Gbl_STS1_SDCntl_ST                             7
    #define   LSb16Gbl_STS1_SDCntl_ST                             7
    #define       bGbl_STS1_SDCntl_ST                          1
    #define   MSK32Gbl_STS1_SDCntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_STS1_VALDCntl                           0x8828

    #define     BA_Gbl_STS1_VALDCntl_DS0                       0x8828
    #define     B16Gbl_STS1_VALDCntl_DS0                       0x8828
    #define   LSb32Gbl_STS1_VALDCntl_DS0                          0
    #define   LSb16Gbl_STS1_VALDCntl_DS0                          0
    #define       bGbl_STS1_VALDCntl_DS0                       1
    #define   MSK32Gbl_STS1_VALDCntl_DS0                          0x00000001

    #define     BA_Gbl_STS1_VALDCntl_DS1                       0x8828
    #define     B16Gbl_STS1_VALDCntl_DS1                       0x8828
    #define   LSb32Gbl_STS1_VALDCntl_DS1                          1
    #define   LSb16Gbl_STS1_VALDCntl_DS1                          1
    #define       bGbl_STS1_VALDCntl_DS1                       1
    #define   MSK32Gbl_STS1_VALDCntl_DS1                          0x00000002

    #define     BA_Gbl_STS1_VALDCntl_DS2                       0x8828
    #define     B16Gbl_STS1_VALDCntl_DS2                       0x8828
    #define   LSb32Gbl_STS1_VALDCntl_DS2                          2
    #define   LSb16Gbl_STS1_VALDCntl_DS2                          2
    #define       bGbl_STS1_VALDCntl_DS2                       1
    #define   MSK32Gbl_STS1_VALDCntl_DS2                          0x00000004

    #define     BA_Gbl_STS1_VALDCntl_IE                        0x8828
    #define     B16Gbl_STS1_VALDCntl_IE                        0x8828
    #define   LSb32Gbl_STS1_VALDCntl_IE                           3
    #define   LSb16Gbl_STS1_VALDCntl_IE                           3
    #define       bGbl_STS1_VALDCntl_IE                        1
    #define   MSK32Gbl_STS1_VALDCntl_IE                           0x00000008

    #define     BA_Gbl_STS1_VALDCntl_PD                        0x8828
    #define     B16Gbl_STS1_VALDCntl_PD                        0x8828
    #define   LSb32Gbl_STS1_VALDCntl_PD                           4
    #define   LSb16Gbl_STS1_VALDCntl_PD                           4
    #define       bGbl_STS1_VALDCntl_PD                        1
    #define   MSK32Gbl_STS1_VALDCntl_PD                           0x00000010

    #define     BA_Gbl_STS1_VALDCntl_PU                        0x8828
    #define     B16Gbl_STS1_VALDCntl_PU                        0x8828
    #define   LSb32Gbl_STS1_VALDCntl_PU                           5
    #define   LSb16Gbl_STS1_VALDCntl_PU                           5
    #define       bGbl_STS1_VALDCntl_PU                        1
    #define   MSK32Gbl_STS1_VALDCntl_PU                           0x00000020

    #define     BA_Gbl_STS1_VALDCntl_SL                        0x8828
    #define     B16Gbl_STS1_VALDCntl_SL                        0x8828
    #define   LSb32Gbl_STS1_VALDCntl_SL                           6
    #define   LSb16Gbl_STS1_VALDCntl_SL                           6
    #define       bGbl_STS1_VALDCntl_SL                        1
    #define   MSK32Gbl_STS1_VALDCntl_SL                           0x00000040

    #define     BA_Gbl_STS1_VALDCntl_ST                        0x8828
    #define     B16Gbl_STS1_VALDCntl_ST                        0x8828
    #define   LSb32Gbl_STS1_VALDCntl_ST                           7
    #define   LSb16Gbl_STS1_VALDCntl_ST                           7
    #define       bGbl_STS1_VALDCntl_ST                        1
    #define   MSK32Gbl_STS1_VALDCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS0nCntl                           0x882C

    #define     BA_Gbl_SPI1_SS0nCntl_DS0                       0x882C
    #define     B16Gbl_SPI1_SS0nCntl_DS0                       0x882C
    #define   LSb32Gbl_SPI1_SS0nCntl_DS0                          0
    #define   LSb16Gbl_SPI1_SS0nCntl_DS0                          0
    #define       bGbl_SPI1_SS0nCntl_DS0                       1
    #define   MSK32Gbl_SPI1_SS0nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI1_SS0nCntl_DS1                       0x882C
    #define     B16Gbl_SPI1_SS0nCntl_DS1                       0x882C
    #define   LSb32Gbl_SPI1_SS0nCntl_DS1                          1
    #define   LSb16Gbl_SPI1_SS0nCntl_DS1                          1
    #define       bGbl_SPI1_SS0nCntl_DS1                       1
    #define   MSK32Gbl_SPI1_SS0nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI1_SS0nCntl_DS2                       0x882C
    #define     B16Gbl_SPI1_SS0nCntl_DS2                       0x882C
    #define   LSb32Gbl_SPI1_SS0nCntl_DS2                          2
    #define   LSb16Gbl_SPI1_SS0nCntl_DS2                          2
    #define       bGbl_SPI1_SS0nCntl_DS2                       1
    #define   MSK32Gbl_SPI1_SS0nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI1_SS0nCntl_IE                        0x882C
    #define     B16Gbl_SPI1_SS0nCntl_IE                        0x882C
    #define   LSb32Gbl_SPI1_SS0nCntl_IE                           3
    #define   LSb16Gbl_SPI1_SS0nCntl_IE                           3
    #define       bGbl_SPI1_SS0nCntl_IE                        1
    #define   MSK32Gbl_SPI1_SS0nCntl_IE                           0x00000008

    #define     BA_Gbl_SPI1_SS0nCntl_PD                        0x882C
    #define     B16Gbl_SPI1_SS0nCntl_PD                        0x882C
    #define   LSb32Gbl_SPI1_SS0nCntl_PD                           4
    #define   LSb16Gbl_SPI1_SS0nCntl_PD                           4
    #define       bGbl_SPI1_SS0nCntl_PD                        1
    #define   MSK32Gbl_SPI1_SS0nCntl_PD                           0x00000010

    #define     BA_Gbl_SPI1_SS0nCntl_PU                        0x882C
    #define     B16Gbl_SPI1_SS0nCntl_PU                        0x882C
    #define   LSb32Gbl_SPI1_SS0nCntl_PU                           5
    #define   LSb16Gbl_SPI1_SS0nCntl_PU                           5
    #define       bGbl_SPI1_SS0nCntl_PU                        1
    #define   MSK32Gbl_SPI1_SS0nCntl_PU                           0x00000020

    #define     BA_Gbl_SPI1_SS0nCntl_SL                        0x882C
    #define     B16Gbl_SPI1_SS0nCntl_SL                        0x882C
    #define   LSb32Gbl_SPI1_SS0nCntl_SL                           6
    #define   LSb16Gbl_SPI1_SS0nCntl_SL                           6
    #define       bGbl_SPI1_SS0nCntl_SL                        1
    #define   MSK32Gbl_SPI1_SS0nCntl_SL                           0x00000040

    #define     BA_Gbl_SPI1_SS0nCntl_ST                        0x882C
    #define     B16Gbl_SPI1_SS0nCntl_ST                        0x882C
    #define   LSb32Gbl_SPI1_SS0nCntl_ST                           7
    #define   LSb16Gbl_SPI1_SS0nCntl_ST                           7
    #define       bGbl_SPI1_SS0nCntl_ST                        1
    #define   MSK32Gbl_SPI1_SS0nCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS1nCntl                           0x8830

    #define     BA_Gbl_SPI1_SS1nCntl_DS0                       0x8830
    #define     B16Gbl_SPI1_SS1nCntl_DS0                       0x8830
    #define   LSb32Gbl_SPI1_SS1nCntl_DS0                          0
    #define   LSb16Gbl_SPI1_SS1nCntl_DS0                          0
    #define       bGbl_SPI1_SS1nCntl_DS0                       1
    #define   MSK32Gbl_SPI1_SS1nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI1_SS1nCntl_DS1                       0x8830
    #define     B16Gbl_SPI1_SS1nCntl_DS1                       0x8830
    #define   LSb32Gbl_SPI1_SS1nCntl_DS1                          1
    #define   LSb16Gbl_SPI1_SS1nCntl_DS1                          1
    #define       bGbl_SPI1_SS1nCntl_DS1                       1
    #define   MSK32Gbl_SPI1_SS1nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI1_SS1nCntl_DS2                       0x8830
    #define     B16Gbl_SPI1_SS1nCntl_DS2                       0x8830
    #define   LSb32Gbl_SPI1_SS1nCntl_DS2                          2
    #define   LSb16Gbl_SPI1_SS1nCntl_DS2                          2
    #define       bGbl_SPI1_SS1nCntl_DS2                       1
    #define   MSK32Gbl_SPI1_SS1nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI1_SS1nCntl_IE                        0x8830
    #define     B16Gbl_SPI1_SS1nCntl_IE                        0x8830
    #define   LSb32Gbl_SPI1_SS1nCntl_IE                           3
    #define   LSb16Gbl_SPI1_SS1nCntl_IE                           3
    #define       bGbl_SPI1_SS1nCntl_IE                        1
    #define   MSK32Gbl_SPI1_SS1nCntl_IE                           0x00000008

    #define     BA_Gbl_SPI1_SS1nCntl_PD                        0x8830
    #define     B16Gbl_SPI1_SS1nCntl_PD                        0x8830
    #define   LSb32Gbl_SPI1_SS1nCntl_PD                           4
    #define   LSb16Gbl_SPI1_SS1nCntl_PD                           4
    #define       bGbl_SPI1_SS1nCntl_PD                        1
    #define   MSK32Gbl_SPI1_SS1nCntl_PD                           0x00000010

    #define     BA_Gbl_SPI1_SS1nCntl_PU                        0x8830
    #define     B16Gbl_SPI1_SS1nCntl_PU                        0x8830
    #define   LSb32Gbl_SPI1_SS1nCntl_PU                           5
    #define   LSb16Gbl_SPI1_SS1nCntl_PU                           5
    #define       bGbl_SPI1_SS1nCntl_PU                        1
    #define   MSK32Gbl_SPI1_SS1nCntl_PU                           0x00000020

    #define     BA_Gbl_SPI1_SS1nCntl_SL                        0x8830
    #define     B16Gbl_SPI1_SS1nCntl_SL                        0x8830
    #define   LSb32Gbl_SPI1_SS1nCntl_SL                           6
    #define   LSb16Gbl_SPI1_SS1nCntl_SL                           6
    #define       bGbl_SPI1_SS1nCntl_SL                        1
    #define   MSK32Gbl_SPI1_SS1nCntl_SL                           0x00000040

    #define     BA_Gbl_SPI1_SS1nCntl_ST                        0x8830
    #define     B16Gbl_SPI1_SS1nCntl_ST                        0x8830
    #define   LSb32Gbl_SPI1_SS1nCntl_ST                           7
    #define   LSb16Gbl_SPI1_SS1nCntl_ST                           7
    #define       bGbl_SPI1_SS1nCntl_ST                        1
    #define   MSK32Gbl_SPI1_SS1nCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS2nCntl                           0x8834

    #define     BA_Gbl_SPI1_SS2nCntl_DS0                       0x8834
    #define     B16Gbl_SPI1_SS2nCntl_DS0                       0x8834
    #define   LSb32Gbl_SPI1_SS2nCntl_DS0                          0
    #define   LSb16Gbl_SPI1_SS2nCntl_DS0                          0
    #define       bGbl_SPI1_SS2nCntl_DS0                       1
    #define   MSK32Gbl_SPI1_SS2nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI1_SS2nCntl_DS1                       0x8834
    #define     B16Gbl_SPI1_SS2nCntl_DS1                       0x8834
    #define   LSb32Gbl_SPI1_SS2nCntl_DS1                          1
    #define   LSb16Gbl_SPI1_SS2nCntl_DS1                          1
    #define       bGbl_SPI1_SS2nCntl_DS1                       1
    #define   MSK32Gbl_SPI1_SS2nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI1_SS2nCntl_DS2                       0x8834
    #define     B16Gbl_SPI1_SS2nCntl_DS2                       0x8834
    #define   LSb32Gbl_SPI1_SS2nCntl_DS2                          2
    #define   LSb16Gbl_SPI1_SS2nCntl_DS2                          2
    #define       bGbl_SPI1_SS2nCntl_DS2                       1
    #define   MSK32Gbl_SPI1_SS2nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI1_SS2nCntl_DS3                       0x8834
    #define     B16Gbl_SPI1_SS2nCntl_DS3                       0x8834
    #define   LSb32Gbl_SPI1_SS2nCntl_DS3                          3
    #define   LSb16Gbl_SPI1_SS2nCntl_DS3                          3
    #define       bGbl_SPI1_SS2nCntl_DS3                       1
    #define   MSK32Gbl_SPI1_SS2nCntl_DS3                          0x00000008

    #define     BA_Gbl_SPI1_SS2nCntl_IE                        0x8834
    #define     B16Gbl_SPI1_SS2nCntl_IE                        0x8834
    #define   LSb32Gbl_SPI1_SS2nCntl_IE                           4
    #define   LSb16Gbl_SPI1_SS2nCntl_IE                           4
    #define       bGbl_SPI1_SS2nCntl_IE                        1
    #define   MSK32Gbl_SPI1_SS2nCntl_IE                           0x00000010

    #define     BA_Gbl_SPI1_SS2nCntl_PE                        0x8834
    #define     B16Gbl_SPI1_SS2nCntl_PE                        0x8834
    #define   LSb32Gbl_SPI1_SS2nCntl_PE                           5
    #define   LSb16Gbl_SPI1_SS2nCntl_PE                           5
    #define       bGbl_SPI1_SS2nCntl_PE                        1
    #define   MSK32Gbl_SPI1_SS2nCntl_PE                           0x00000020

    #define     BA_Gbl_SPI1_SS2nCntl_PS                        0x8834
    #define     B16Gbl_SPI1_SS2nCntl_PS                        0x8834
    #define   LSb32Gbl_SPI1_SS2nCntl_PS                           6
    #define   LSb16Gbl_SPI1_SS2nCntl_PS                           6
    #define       bGbl_SPI1_SS2nCntl_PS                        1
    #define   MSK32Gbl_SPI1_SS2nCntl_PS                           0x00000040

    #define     BA_Gbl_SPI1_SS2nCntl_SL                        0x8834
    #define     B16Gbl_SPI1_SS2nCntl_SL                        0x8834
    #define   LSb32Gbl_SPI1_SS2nCntl_SL                           7
    #define   LSb16Gbl_SPI1_SS2nCntl_SL                           7
    #define       bGbl_SPI1_SS2nCntl_SL                        1
    #define   MSK32Gbl_SPI1_SS2nCntl_SL                           0x00000080

    #define     BA_Gbl_SPI1_SS2nCntl_SPU                       0x8835
    #define     B16Gbl_SPI1_SS2nCntl_SPU                       0x8834
    #define   LSb32Gbl_SPI1_SS2nCntl_SPU                          8
    #define   LSb16Gbl_SPI1_SS2nCntl_SPU                          8
    #define       bGbl_SPI1_SS2nCntl_SPU                       1
    #define   MSK32Gbl_SPI1_SS2nCntl_SPU                          0x00000100

    #define     BA_Gbl_SPI1_SS2nCntl_ST                        0x8835
    #define     B16Gbl_SPI1_SS2nCntl_ST                        0x8834
    #define   LSb32Gbl_SPI1_SS2nCntl_ST                           9
    #define   LSb16Gbl_SPI1_SS2nCntl_ST                           9
    #define       bGbl_SPI1_SS2nCntl_ST                        1
    #define   MSK32Gbl_SPI1_SS2nCntl_ST                           0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SS3nCntl                           0x8838

    #define     BA_Gbl_SPI1_SS3nCntl_DS0                       0x8838
    #define     B16Gbl_SPI1_SS3nCntl_DS0                       0x8838
    #define   LSb32Gbl_SPI1_SS3nCntl_DS0                          0
    #define   LSb16Gbl_SPI1_SS3nCntl_DS0                          0
    #define       bGbl_SPI1_SS3nCntl_DS0                       1
    #define   MSK32Gbl_SPI1_SS3nCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI1_SS3nCntl_DS1                       0x8838
    #define     B16Gbl_SPI1_SS3nCntl_DS1                       0x8838
    #define   LSb32Gbl_SPI1_SS3nCntl_DS1                          1
    #define   LSb16Gbl_SPI1_SS3nCntl_DS1                          1
    #define       bGbl_SPI1_SS3nCntl_DS1                       1
    #define   MSK32Gbl_SPI1_SS3nCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI1_SS3nCntl_DS2                       0x8838
    #define     B16Gbl_SPI1_SS3nCntl_DS2                       0x8838
    #define   LSb32Gbl_SPI1_SS3nCntl_DS2                          2
    #define   LSb16Gbl_SPI1_SS3nCntl_DS2                          2
    #define       bGbl_SPI1_SS3nCntl_DS2                       1
    #define   MSK32Gbl_SPI1_SS3nCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI1_SS3nCntl_DS3                       0x8838
    #define     B16Gbl_SPI1_SS3nCntl_DS3                       0x8838
    #define   LSb32Gbl_SPI1_SS3nCntl_DS3                          3
    #define   LSb16Gbl_SPI1_SS3nCntl_DS3                          3
    #define       bGbl_SPI1_SS3nCntl_DS3                       1
    #define   MSK32Gbl_SPI1_SS3nCntl_DS3                          0x00000008

    #define     BA_Gbl_SPI1_SS3nCntl_IE                        0x8838
    #define     B16Gbl_SPI1_SS3nCntl_IE                        0x8838
    #define   LSb32Gbl_SPI1_SS3nCntl_IE                           4
    #define   LSb16Gbl_SPI1_SS3nCntl_IE                           4
    #define       bGbl_SPI1_SS3nCntl_IE                        1
    #define   MSK32Gbl_SPI1_SS3nCntl_IE                           0x00000010

    #define     BA_Gbl_SPI1_SS3nCntl_PE                        0x8838
    #define     B16Gbl_SPI1_SS3nCntl_PE                        0x8838
    #define   LSb32Gbl_SPI1_SS3nCntl_PE                           5
    #define   LSb16Gbl_SPI1_SS3nCntl_PE                           5
    #define       bGbl_SPI1_SS3nCntl_PE                        1
    #define   MSK32Gbl_SPI1_SS3nCntl_PE                           0x00000020

    #define     BA_Gbl_SPI1_SS3nCntl_PS                        0x8838
    #define     B16Gbl_SPI1_SS3nCntl_PS                        0x8838
    #define   LSb32Gbl_SPI1_SS3nCntl_PS                           6
    #define   LSb16Gbl_SPI1_SS3nCntl_PS                           6
    #define       bGbl_SPI1_SS3nCntl_PS                        1
    #define   MSK32Gbl_SPI1_SS3nCntl_PS                           0x00000040

    #define     BA_Gbl_SPI1_SS3nCntl_SL                        0x8838
    #define     B16Gbl_SPI1_SS3nCntl_SL                        0x8838
    #define   LSb32Gbl_SPI1_SS3nCntl_SL                           7
    #define   LSb16Gbl_SPI1_SS3nCntl_SL                           7
    #define       bGbl_SPI1_SS3nCntl_SL                        1
    #define   MSK32Gbl_SPI1_SS3nCntl_SL                           0x00000080

    #define     BA_Gbl_SPI1_SS3nCntl_SPU                       0x8839
    #define     B16Gbl_SPI1_SS3nCntl_SPU                       0x8838
    #define   LSb32Gbl_SPI1_SS3nCntl_SPU                          8
    #define   LSb16Gbl_SPI1_SS3nCntl_SPU                          8
    #define       bGbl_SPI1_SS3nCntl_SPU                       1
    #define   MSK32Gbl_SPI1_SS3nCntl_SPU                          0x00000100

    #define     BA_Gbl_SPI1_SS3nCntl_ST                        0x8839
    #define     B16Gbl_SPI1_SS3nCntl_ST                        0x8838
    #define   LSb32Gbl_SPI1_SS3nCntl_ST                           9
    #define   LSb16Gbl_SPI1_SS3nCntl_ST                           9
    #define       bGbl_SPI1_SS3nCntl_ST                        1
    #define   MSK32Gbl_SPI1_SS3nCntl_ST                           0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SDOCntl                            0x883C

    #define     BA_Gbl_SPI1_SDOCntl_DS0                        0x883C
    #define     B16Gbl_SPI1_SDOCntl_DS0                        0x883C
    #define   LSb32Gbl_SPI1_SDOCntl_DS0                           0
    #define   LSb16Gbl_SPI1_SDOCntl_DS0                           0
    #define       bGbl_SPI1_SDOCntl_DS0                        1
    #define   MSK32Gbl_SPI1_SDOCntl_DS0                           0x00000001

    #define     BA_Gbl_SPI1_SDOCntl_DS1                        0x883C
    #define     B16Gbl_SPI1_SDOCntl_DS1                        0x883C
    #define   LSb32Gbl_SPI1_SDOCntl_DS1                           1
    #define   LSb16Gbl_SPI1_SDOCntl_DS1                           1
    #define       bGbl_SPI1_SDOCntl_DS1                        1
    #define   MSK32Gbl_SPI1_SDOCntl_DS1                           0x00000002

    #define     BA_Gbl_SPI1_SDOCntl_DS2                        0x883C
    #define     B16Gbl_SPI1_SDOCntl_DS2                        0x883C
    #define   LSb32Gbl_SPI1_SDOCntl_DS2                           2
    #define   LSb16Gbl_SPI1_SDOCntl_DS2                           2
    #define       bGbl_SPI1_SDOCntl_DS2                        1
    #define   MSK32Gbl_SPI1_SDOCntl_DS2                           0x00000004

    #define     BA_Gbl_SPI1_SDOCntl_IE                         0x883C
    #define     B16Gbl_SPI1_SDOCntl_IE                         0x883C
    #define   LSb32Gbl_SPI1_SDOCntl_IE                            3
    #define   LSb16Gbl_SPI1_SDOCntl_IE                            3
    #define       bGbl_SPI1_SDOCntl_IE                         1
    #define   MSK32Gbl_SPI1_SDOCntl_IE                            0x00000008

    #define     BA_Gbl_SPI1_SDOCntl_PD                         0x883C
    #define     B16Gbl_SPI1_SDOCntl_PD                         0x883C
    #define   LSb32Gbl_SPI1_SDOCntl_PD                            4
    #define   LSb16Gbl_SPI1_SDOCntl_PD                            4
    #define       bGbl_SPI1_SDOCntl_PD                         1
    #define   MSK32Gbl_SPI1_SDOCntl_PD                            0x00000010

    #define     BA_Gbl_SPI1_SDOCntl_PU                         0x883C
    #define     B16Gbl_SPI1_SDOCntl_PU                         0x883C
    #define   LSb32Gbl_SPI1_SDOCntl_PU                            5
    #define   LSb16Gbl_SPI1_SDOCntl_PU                            5
    #define       bGbl_SPI1_SDOCntl_PU                         1
    #define   MSK32Gbl_SPI1_SDOCntl_PU                            0x00000020

    #define     BA_Gbl_SPI1_SDOCntl_SL                         0x883C
    #define     B16Gbl_SPI1_SDOCntl_SL                         0x883C
    #define   LSb32Gbl_SPI1_SDOCntl_SL                            6
    #define   LSb16Gbl_SPI1_SDOCntl_SL                            6
    #define       bGbl_SPI1_SDOCntl_SL                         1
    #define   MSK32Gbl_SPI1_SDOCntl_SL                            0x00000040

    #define     BA_Gbl_SPI1_SDOCntl_ST                         0x883C
    #define     B16Gbl_SPI1_SDOCntl_ST                         0x883C
    #define   LSb32Gbl_SPI1_SDOCntl_ST                            7
    #define   LSb16Gbl_SPI1_SDOCntl_ST                            7
    #define       bGbl_SPI1_SDOCntl_ST                         1
    #define   MSK32Gbl_SPI1_SDOCntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SCLKCntl                           0x8840

    #define     BA_Gbl_SPI1_SCLKCntl_DS0                       0x8840
    #define     B16Gbl_SPI1_SCLKCntl_DS0                       0x8840
    #define   LSb32Gbl_SPI1_SCLKCntl_DS0                          0
    #define   LSb16Gbl_SPI1_SCLKCntl_DS0                          0
    #define       bGbl_SPI1_SCLKCntl_DS0                       1
    #define   MSK32Gbl_SPI1_SCLKCntl_DS0                          0x00000001

    #define     BA_Gbl_SPI1_SCLKCntl_DS1                       0x8840
    #define     B16Gbl_SPI1_SCLKCntl_DS1                       0x8840
    #define   LSb32Gbl_SPI1_SCLKCntl_DS1                          1
    #define   LSb16Gbl_SPI1_SCLKCntl_DS1                          1
    #define       bGbl_SPI1_SCLKCntl_DS1                       1
    #define   MSK32Gbl_SPI1_SCLKCntl_DS1                          0x00000002

    #define     BA_Gbl_SPI1_SCLKCntl_DS2                       0x8840
    #define     B16Gbl_SPI1_SCLKCntl_DS2                       0x8840
    #define   LSb32Gbl_SPI1_SCLKCntl_DS2                          2
    #define   LSb16Gbl_SPI1_SCLKCntl_DS2                          2
    #define       bGbl_SPI1_SCLKCntl_DS2                       1
    #define   MSK32Gbl_SPI1_SCLKCntl_DS2                          0x00000004

    #define     BA_Gbl_SPI1_SCLKCntl_IE                        0x8840
    #define     B16Gbl_SPI1_SCLKCntl_IE                        0x8840
    #define   LSb32Gbl_SPI1_SCLKCntl_IE                           3
    #define   LSb16Gbl_SPI1_SCLKCntl_IE                           3
    #define       bGbl_SPI1_SCLKCntl_IE                        1
    #define   MSK32Gbl_SPI1_SCLKCntl_IE                           0x00000008

    #define     BA_Gbl_SPI1_SCLKCntl_PD                        0x8840
    #define     B16Gbl_SPI1_SCLKCntl_PD                        0x8840
    #define   LSb32Gbl_SPI1_SCLKCntl_PD                           4
    #define   LSb16Gbl_SPI1_SCLKCntl_PD                           4
    #define       bGbl_SPI1_SCLKCntl_PD                        1
    #define   MSK32Gbl_SPI1_SCLKCntl_PD                           0x00000010

    #define     BA_Gbl_SPI1_SCLKCntl_PU                        0x8840
    #define     B16Gbl_SPI1_SCLKCntl_PU                        0x8840
    #define   LSb32Gbl_SPI1_SCLKCntl_PU                           5
    #define   LSb16Gbl_SPI1_SCLKCntl_PU                           5
    #define       bGbl_SPI1_SCLKCntl_PU                        1
    #define   MSK32Gbl_SPI1_SCLKCntl_PU                           0x00000020

    #define     BA_Gbl_SPI1_SCLKCntl_SL                        0x8840
    #define     B16Gbl_SPI1_SCLKCntl_SL                        0x8840
    #define   LSb32Gbl_SPI1_SCLKCntl_SL                           6
    #define   LSb16Gbl_SPI1_SCLKCntl_SL                           6
    #define       bGbl_SPI1_SCLKCntl_SL                        1
    #define   MSK32Gbl_SPI1_SCLKCntl_SL                           0x00000040

    #define     BA_Gbl_SPI1_SCLKCntl_ST                        0x8840
    #define     B16Gbl_SPI1_SCLKCntl_ST                        0x8840
    #define   LSb32Gbl_SPI1_SCLKCntl_ST                           7
    #define   LSb16Gbl_SPI1_SCLKCntl_ST                           7
    #define       bGbl_SPI1_SCLKCntl_ST                        1
    #define   MSK32Gbl_SPI1_SCLKCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPI1_SDICntl                            0x8844

    #define     BA_Gbl_SPI1_SDICntl_DS0                        0x8844
    #define     B16Gbl_SPI1_SDICntl_DS0                        0x8844
    #define   LSb32Gbl_SPI1_SDICntl_DS0                           0
    #define   LSb16Gbl_SPI1_SDICntl_DS0                           0
    #define       bGbl_SPI1_SDICntl_DS0                        1
    #define   MSK32Gbl_SPI1_SDICntl_DS0                           0x00000001

    #define     BA_Gbl_SPI1_SDICntl_DS1                        0x8844
    #define     B16Gbl_SPI1_SDICntl_DS1                        0x8844
    #define   LSb32Gbl_SPI1_SDICntl_DS1                           1
    #define   LSb16Gbl_SPI1_SDICntl_DS1                           1
    #define       bGbl_SPI1_SDICntl_DS1                        1
    #define   MSK32Gbl_SPI1_SDICntl_DS1                           0x00000002

    #define     BA_Gbl_SPI1_SDICntl_DS2                        0x8844
    #define     B16Gbl_SPI1_SDICntl_DS2                        0x8844
    #define   LSb32Gbl_SPI1_SDICntl_DS2                           2
    #define   LSb16Gbl_SPI1_SDICntl_DS2                           2
    #define       bGbl_SPI1_SDICntl_DS2                        1
    #define   MSK32Gbl_SPI1_SDICntl_DS2                           0x00000004

    #define     BA_Gbl_SPI1_SDICntl_IE                         0x8844
    #define     B16Gbl_SPI1_SDICntl_IE                         0x8844
    #define   LSb32Gbl_SPI1_SDICntl_IE                            3
    #define   LSb16Gbl_SPI1_SDICntl_IE                            3
    #define       bGbl_SPI1_SDICntl_IE                         1
    #define   MSK32Gbl_SPI1_SDICntl_IE                            0x00000008

    #define     BA_Gbl_SPI1_SDICntl_PD                         0x8844
    #define     B16Gbl_SPI1_SDICntl_PD                         0x8844
    #define   LSb32Gbl_SPI1_SDICntl_PD                            4
    #define   LSb16Gbl_SPI1_SDICntl_PD                            4
    #define       bGbl_SPI1_SDICntl_PD                         1
    #define   MSK32Gbl_SPI1_SDICntl_PD                            0x00000010

    #define     BA_Gbl_SPI1_SDICntl_PU                         0x8844
    #define     B16Gbl_SPI1_SDICntl_PU                         0x8844
    #define   LSb32Gbl_SPI1_SDICntl_PU                            5
    #define   LSb16Gbl_SPI1_SDICntl_PU                            5
    #define       bGbl_SPI1_SDICntl_PU                         1
    #define   MSK32Gbl_SPI1_SDICntl_PU                            0x00000020

    #define     BA_Gbl_SPI1_SDICntl_SL                         0x8844
    #define     B16Gbl_SPI1_SDICntl_SL                         0x8844
    #define   LSb32Gbl_SPI1_SDICntl_SL                            6
    #define   LSb16Gbl_SPI1_SDICntl_SL                            6
    #define       bGbl_SPI1_SDICntl_SL                         1
    #define   MSK32Gbl_SPI1_SDICntl_SL                            0x00000040

    #define     BA_Gbl_SPI1_SDICntl_ST                         0x8844
    #define     B16Gbl_SPI1_SDICntl_ST                         0x8844
    #define   LSb32Gbl_SPI1_SDICntl_ST                            7
    #define   LSb16Gbl_SPI1_SDICntl_ST                            7
    #define       bGbl_SPI1_SDICntl_ST                         1
    #define   MSK32Gbl_SPI1_SDICntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TW0_SCLCntl                             0x8848

    #define     BA_Gbl_TW0_SCLCntl_DS0                         0x8848
    #define     B16Gbl_TW0_SCLCntl_DS0                         0x8848
    #define   LSb32Gbl_TW0_SCLCntl_DS0                            0
    #define   LSb16Gbl_TW0_SCLCntl_DS0                            0
    #define       bGbl_TW0_SCLCntl_DS0                         1
    #define   MSK32Gbl_TW0_SCLCntl_DS0                            0x00000001

    #define     BA_Gbl_TW0_SCLCntl_DS1                         0x8848
    #define     B16Gbl_TW0_SCLCntl_DS1                         0x8848
    #define   LSb32Gbl_TW0_SCLCntl_DS1                            1
    #define   LSb16Gbl_TW0_SCLCntl_DS1                            1
    #define       bGbl_TW0_SCLCntl_DS1                         1
    #define   MSK32Gbl_TW0_SCLCntl_DS1                            0x00000002

    #define     BA_Gbl_TW0_SCLCntl_DS2                         0x8848
    #define     B16Gbl_TW0_SCLCntl_DS2                         0x8848
    #define   LSb32Gbl_TW0_SCLCntl_DS2                            2
    #define   LSb16Gbl_TW0_SCLCntl_DS2                            2
    #define       bGbl_TW0_SCLCntl_DS2                         1
    #define   MSK32Gbl_TW0_SCLCntl_DS2                            0x00000004

    #define     BA_Gbl_TW0_SCLCntl_DS3                         0x8848
    #define     B16Gbl_TW0_SCLCntl_DS3                         0x8848
    #define   LSb32Gbl_TW0_SCLCntl_DS3                            3
    #define   LSb16Gbl_TW0_SCLCntl_DS3                            3
    #define       bGbl_TW0_SCLCntl_DS3                         1
    #define   MSK32Gbl_TW0_SCLCntl_DS3                            0x00000008

    #define     BA_Gbl_TW0_SCLCntl_IE                          0x8848
    #define     B16Gbl_TW0_SCLCntl_IE                          0x8848
    #define   LSb32Gbl_TW0_SCLCntl_IE                             4
    #define   LSb16Gbl_TW0_SCLCntl_IE                             4
    #define       bGbl_TW0_SCLCntl_IE                          1
    #define   MSK32Gbl_TW0_SCLCntl_IE                             0x00000010

    #define     BA_Gbl_TW0_SCLCntl_PE                          0x8848
    #define     B16Gbl_TW0_SCLCntl_PE                          0x8848
    #define   LSb32Gbl_TW0_SCLCntl_PE                             5
    #define   LSb16Gbl_TW0_SCLCntl_PE                             5
    #define       bGbl_TW0_SCLCntl_PE                          1
    #define   MSK32Gbl_TW0_SCLCntl_PE                             0x00000020

    #define     BA_Gbl_TW0_SCLCntl_PS                          0x8848
    #define     B16Gbl_TW0_SCLCntl_PS                          0x8848
    #define   LSb32Gbl_TW0_SCLCntl_PS                             6
    #define   LSb16Gbl_TW0_SCLCntl_PS                             6
    #define       bGbl_TW0_SCLCntl_PS                          1
    #define   MSK32Gbl_TW0_SCLCntl_PS                             0x00000040

    #define     BA_Gbl_TW0_SCLCntl_SL                          0x8848
    #define     B16Gbl_TW0_SCLCntl_SL                          0x8848
    #define   LSb32Gbl_TW0_SCLCntl_SL                             7
    #define   LSb16Gbl_TW0_SCLCntl_SL                             7
    #define       bGbl_TW0_SCLCntl_SL                          1
    #define   MSK32Gbl_TW0_SCLCntl_SL                             0x00000080

    #define     BA_Gbl_TW0_SCLCntl_SPU                         0x8849
    #define     B16Gbl_TW0_SCLCntl_SPU                         0x8848
    #define   LSb32Gbl_TW0_SCLCntl_SPU                            8
    #define   LSb16Gbl_TW0_SCLCntl_SPU                            8
    #define       bGbl_TW0_SCLCntl_SPU                         1
    #define   MSK32Gbl_TW0_SCLCntl_SPU                            0x00000100

    #define     BA_Gbl_TW0_SCLCntl_ST                          0x8849
    #define     B16Gbl_TW0_SCLCntl_ST                          0x8848
    #define   LSb32Gbl_TW0_SCLCntl_ST                             9
    #define   LSb16Gbl_TW0_SCLCntl_ST                             9
    #define       bGbl_TW0_SCLCntl_ST                          1
    #define   MSK32Gbl_TW0_SCLCntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_TW0_SDACntl                             0x884C

    #define     BA_Gbl_TW0_SDACntl_DS0                         0x884C
    #define     B16Gbl_TW0_SDACntl_DS0                         0x884C
    #define   LSb32Gbl_TW0_SDACntl_DS0                            0
    #define   LSb16Gbl_TW0_SDACntl_DS0                            0
    #define       bGbl_TW0_SDACntl_DS0                         1
    #define   MSK32Gbl_TW0_SDACntl_DS0                            0x00000001

    #define     BA_Gbl_TW0_SDACntl_DS1                         0x884C
    #define     B16Gbl_TW0_SDACntl_DS1                         0x884C
    #define   LSb32Gbl_TW0_SDACntl_DS1                            1
    #define   LSb16Gbl_TW0_SDACntl_DS1                            1
    #define       bGbl_TW0_SDACntl_DS1                         1
    #define   MSK32Gbl_TW0_SDACntl_DS1                            0x00000002

    #define     BA_Gbl_TW0_SDACntl_DS2                         0x884C
    #define     B16Gbl_TW0_SDACntl_DS2                         0x884C
    #define   LSb32Gbl_TW0_SDACntl_DS2                            2
    #define   LSb16Gbl_TW0_SDACntl_DS2                            2
    #define       bGbl_TW0_SDACntl_DS2                         1
    #define   MSK32Gbl_TW0_SDACntl_DS2                            0x00000004

    #define     BA_Gbl_TW0_SDACntl_DS3                         0x884C
    #define     B16Gbl_TW0_SDACntl_DS3                         0x884C
    #define   LSb32Gbl_TW0_SDACntl_DS3                            3
    #define   LSb16Gbl_TW0_SDACntl_DS3                            3
    #define       bGbl_TW0_SDACntl_DS3                         1
    #define   MSK32Gbl_TW0_SDACntl_DS3                            0x00000008

    #define     BA_Gbl_TW0_SDACntl_IE                          0x884C
    #define     B16Gbl_TW0_SDACntl_IE                          0x884C
    #define   LSb32Gbl_TW0_SDACntl_IE                             4
    #define   LSb16Gbl_TW0_SDACntl_IE                             4
    #define       bGbl_TW0_SDACntl_IE                          1
    #define   MSK32Gbl_TW0_SDACntl_IE                             0x00000010

    #define     BA_Gbl_TW0_SDACntl_PE                          0x884C
    #define     B16Gbl_TW0_SDACntl_PE                          0x884C
    #define   LSb32Gbl_TW0_SDACntl_PE                             5
    #define   LSb16Gbl_TW0_SDACntl_PE                             5
    #define       bGbl_TW0_SDACntl_PE                          1
    #define   MSK32Gbl_TW0_SDACntl_PE                             0x00000020

    #define     BA_Gbl_TW0_SDACntl_PS                          0x884C
    #define     B16Gbl_TW0_SDACntl_PS                          0x884C
    #define   LSb32Gbl_TW0_SDACntl_PS                             6
    #define   LSb16Gbl_TW0_SDACntl_PS                             6
    #define       bGbl_TW0_SDACntl_PS                          1
    #define   MSK32Gbl_TW0_SDACntl_PS                             0x00000040

    #define     BA_Gbl_TW0_SDACntl_SL                          0x884C
    #define     B16Gbl_TW0_SDACntl_SL                          0x884C
    #define   LSb32Gbl_TW0_SDACntl_SL                             7
    #define   LSb16Gbl_TW0_SDACntl_SL                             7
    #define       bGbl_TW0_SDACntl_SL                          1
    #define   MSK32Gbl_TW0_SDACntl_SL                             0x00000080

    #define     BA_Gbl_TW0_SDACntl_SPU                         0x884D
    #define     B16Gbl_TW0_SDACntl_SPU                         0x884C
    #define   LSb32Gbl_TW0_SDACntl_SPU                            8
    #define   LSb16Gbl_TW0_SDACntl_SPU                            8
    #define       bGbl_TW0_SDACntl_SPU                         1
    #define   MSK32Gbl_TW0_SDACntl_SPU                            0x00000100

    #define     BA_Gbl_TW0_SDACntl_ST                          0x884D
    #define     B16Gbl_TW0_SDACntl_ST                          0x884C
    #define   LSb32Gbl_TW0_SDACntl_ST                             9
    #define   LSb16Gbl_TW0_SDACntl_ST                             9
    #define       bGbl_TW0_SDACntl_ST                          1
    #define   MSK32Gbl_TW0_SDACntl_ST                             0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_USB2_DRV_VBUSCntl                       0x8850

    #define     BA_Gbl_USB2_DRV_VBUSCntl_DS0                   0x8850
    #define     B16Gbl_USB2_DRV_VBUSCntl_DS0                   0x8850
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_DS0                      0
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_DS0                      0
    #define       bGbl_USB2_DRV_VBUSCntl_DS0                   1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_DS0                      0x00000001

    #define     BA_Gbl_USB2_DRV_VBUSCntl_DS1                   0x8850
    #define     B16Gbl_USB2_DRV_VBUSCntl_DS1                   0x8850
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_DS1                      1
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_DS1                      1
    #define       bGbl_USB2_DRV_VBUSCntl_DS1                   1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_DS1                      0x00000002

    #define     BA_Gbl_USB2_DRV_VBUSCntl_DS2                   0x8850
    #define     B16Gbl_USB2_DRV_VBUSCntl_DS2                   0x8850
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_DS2                      2
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_DS2                      2
    #define       bGbl_USB2_DRV_VBUSCntl_DS2                   1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_DS2                      0x00000004

    #define     BA_Gbl_USB2_DRV_VBUSCntl_IE                    0x8850
    #define     B16Gbl_USB2_DRV_VBUSCntl_IE                    0x8850
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_IE                       3
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_IE                       3
    #define       bGbl_USB2_DRV_VBUSCntl_IE                    1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_IE                       0x00000008

    #define     BA_Gbl_USB2_DRV_VBUSCntl_PD                    0x8850
    #define     B16Gbl_USB2_DRV_VBUSCntl_PD                    0x8850
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_PD                       4
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_PD                       4
    #define       bGbl_USB2_DRV_VBUSCntl_PD                    1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_PD                       0x00000010

    #define     BA_Gbl_USB2_DRV_VBUSCntl_PU                    0x8850
    #define     B16Gbl_USB2_DRV_VBUSCntl_PU                    0x8850
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_PU                       5
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_PU                       5
    #define       bGbl_USB2_DRV_VBUSCntl_PU                    1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_PU                       0x00000020

    #define     BA_Gbl_USB2_DRV_VBUSCntl_SL                    0x8850
    #define     B16Gbl_USB2_DRV_VBUSCntl_SL                    0x8850
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_SL                       6
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_SL                       6
    #define       bGbl_USB2_DRV_VBUSCntl_SL                    1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_SL                       0x00000040

    #define     BA_Gbl_USB2_DRV_VBUSCntl_ST                    0x8850
    #define     B16Gbl_USB2_DRV_VBUSCntl_ST                    0x8850
    #define   LSb32Gbl_USB2_DRV_VBUSCntl_ST                       7
    #define   LSb16Gbl_USB2_DRV_VBUSCntl_ST                       7
    #define       bGbl_USB2_DRV_VBUSCntl_ST                    1
    #define   MSK32Gbl_USB2_DRV_VBUSCntl_ST                       0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SDIO0_CDnCntl                           0x8854

    #define     BA_Gbl_SDIO0_CDnCntl_DS0                       0x8854
    #define     B16Gbl_SDIO0_CDnCntl_DS0                       0x8854
    #define   LSb32Gbl_SDIO0_CDnCntl_DS0                          0
    #define   LSb16Gbl_SDIO0_CDnCntl_DS0                          0
    #define       bGbl_SDIO0_CDnCntl_DS0                       1
    #define   MSK32Gbl_SDIO0_CDnCntl_DS0                          0x00000001

    #define     BA_Gbl_SDIO0_CDnCntl_DS1                       0x8854
    #define     B16Gbl_SDIO0_CDnCntl_DS1                       0x8854
    #define   LSb32Gbl_SDIO0_CDnCntl_DS1                          1
    #define   LSb16Gbl_SDIO0_CDnCntl_DS1                          1
    #define       bGbl_SDIO0_CDnCntl_DS1                       1
    #define   MSK32Gbl_SDIO0_CDnCntl_DS1                          0x00000002

    #define     BA_Gbl_SDIO0_CDnCntl_DS2                       0x8854
    #define     B16Gbl_SDIO0_CDnCntl_DS2                       0x8854
    #define   LSb32Gbl_SDIO0_CDnCntl_DS2                          2
    #define   LSb16Gbl_SDIO0_CDnCntl_DS2                          2
    #define       bGbl_SDIO0_CDnCntl_DS2                       1
    #define   MSK32Gbl_SDIO0_CDnCntl_DS2                          0x00000004

    #define     BA_Gbl_SDIO0_CDnCntl_DS3                       0x8854
    #define     B16Gbl_SDIO0_CDnCntl_DS3                       0x8854
    #define   LSb32Gbl_SDIO0_CDnCntl_DS3                          3
    #define   LSb16Gbl_SDIO0_CDnCntl_DS3                          3
    #define       bGbl_SDIO0_CDnCntl_DS3                       1
    #define   MSK32Gbl_SDIO0_CDnCntl_DS3                          0x00000008

    #define     BA_Gbl_SDIO0_CDnCntl_IE                        0x8854
    #define     B16Gbl_SDIO0_CDnCntl_IE                        0x8854
    #define   LSb32Gbl_SDIO0_CDnCntl_IE                           4
    #define   LSb16Gbl_SDIO0_CDnCntl_IE                           4
    #define       bGbl_SDIO0_CDnCntl_IE                        1
    #define   MSK32Gbl_SDIO0_CDnCntl_IE                           0x00000010

    #define     BA_Gbl_SDIO0_CDnCntl_PE                        0x8854
    #define     B16Gbl_SDIO0_CDnCntl_PE                        0x8854
    #define   LSb32Gbl_SDIO0_CDnCntl_PE                           5
    #define   LSb16Gbl_SDIO0_CDnCntl_PE                           5
    #define       bGbl_SDIO0_CDnCntl_PE                        1
    #define   MSK32Gbl_SDIO0_CDnCntl_PE                           0x00000020

    #define     BA_Gbl_SDIO0_CDnCntl_PS                        0x8854
    #define     B16Gbl_SDIO0_CDnCntl_PS                        0x8854
    #define   LSb32Gbl_SDIO0_CDnCntl_PS                           6
    #define   LSb16Gbl_SDIO0_CDnCntl_PS                           6
    #define       bGbl_SDIO0_CDnCntl_PS                        1
    #define   MSK32Gbl_SDIO0_CDnCntl_PS                           0x00000040

    #define     BA_Gbl_SDIO0_CDnCntl_SL                        0x8854
    #define     B16Gbl_SDIO0_CDnCntl_SL                        0x8854
    #define   LSb32Gbl_SDIO0_CDnCntl_SL                           7
    #define   LSb16Gbl_SDIO0_CDnCntl_SL                           7
    #define       bGbl_SDIO0_CDnCntl_SL                        1
    #define   MSK32Gbl_SDIO0_CDnCntl_SL                           0x00000080

    #define     BA_Gbl_SDIO0_CDnCntl_SPU                       0x8855
    #define     B16Gbl_SDIO0_CDnCntl_SPU                       0x8854
    #define   LSb32Gbl_SDIO0_CDnCntl_SPU                          8
    #define   LSb16Gbl_SDIO0_CDnCntl_SPU                          8
    #define       bGbl_SDIO0_CDnCntl_SPU                       1
    #define   MSK32Gbl_SDIO0_CDnCntl_SPU                          0x00000100

    #define     BA_Gbl_SDIO0_CDnCntl_ST                        0x8855
    #define     B16Gbl_SDIO0_CDnCntl_ST                        0x8854
    #define   LSb32Gbl_SDIO0_CDnCntl_ST                           9
    #define   LSb16Gbl_SDIO0_CDnCntl_ST                           9
    #define       bGbl_SDIO0_CDnCntl_ST                        1
    #define   MSK32Gbl_SDIO0_CDnCntl_ST                           0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SDIO0_WPCntl                            0x8858

    #define     BA_Gbl_SDIO0_WPCntl_DS0                        0x8858
    #define     B16Gbl_SDIO0_WPCntl_DS0                        0x8858
    #define   LSb32Gbl_SDIO0_WPCntl_DS0                           0
    #define   LSb16Gbl_SDIO0_WPCntl_DS0                           0
    #define       bGbl_SDIO0_WPCntl_DS0                        1
    #define   MSK32Gbl_SDIO0_WPCntl_DS0                           0x00000001

    #define     BA_Gbl_SDIO0_WPCntl_DS1                        0x8858
    #define     B16Gbl_SDIO0_WPCntl_DS1                        0x8858
    #define   LSb32Gbl_SDIO0_WPCntl_DS1                           1
    #define   LSb16Gbl_SDIO0_WPCntl_DS1                           1
    #define       bGbl_SDIO0_WPCntl_DS1                        1
    #define   MSK32Gbl_SDIO0_WPCntl_DS1                           0x00000002

    #define     BA_Gbl_SDIO0_WPCntl_DS2                        0x8858
    #define     B16Gbl_SDIO0_WPCntl_DS2                        0x8858
    #define   LSb32Gbl_SDIO0_WPCntl_DS2                           2
    #define   LSb16Gbl_SDIO0_WPCntl_DS2                           2
    #define       bGbl_SDIO0_WPCntl_DS2                        1
    #define   MSK32Gbl_SDIO0_WPCntl_DS2                           0x00000004

    #define     BA_Gbl_SDIO0_WPCntl_DS3                        0x8858
    #define     B16Gbl_SDIO0_WPCntl_DS3                        0x8858
    #define   LSb32Gbl_SDIO0_WPCntl_DS3                           3
    #define   LSb16Gbl_SDIO0_WPCntl_DS3                           3
    #define       bGbl_SDIO0_WPCntl_DS3                        1
    #define   MSK32Gbl_SDIO0_WPCntl_DS3                           0x00000008

    #define     BA_Gbl_SDIO0_WPCntl_IE                         0x8858
    #define     B16Gbl_SDIO0_WPCntl_IE                         0x8858
    #define   LSb32Gbl_SDIO0_WPCntl_IE                            4
    #define   LSb16Gbl_SDIO0_WPCntl_IE                            4
    #define       bGbl_SDIO0_WPCntl_IE                         1
    #define   MSK32Gbl_SDIO0_WPCntl_IE                            0x00000010

    #define     BA_Gbl_SDIO0_WPCntl_PE                         0x8858
    #define     B16Gbl_SDIO0_WPCntl_PE                         0x8858
    #define   LSb32Gbl_SDIO0_WPCntl_PE                            5
    #define   LSb16Gbl_SDIO0_WPCntl_PE                            5
    #define       bGbl_SDIO0_WPCntl_PE                         1
    #define   MSK32Gbl_SDIO0_WPCntl_PE                            0x00000020

    #define     BA_Gbl_SDIO0_WPCntl_PS                         0x8858
    #define     B16Gbl_SDIO0_WPCntl_PS                         0x8858
    #define   LSb32Gbl_SDIO0_WPCntl_PS                            6
    #define   LSb16Gbl_SDIO0_WPCntl_PS                            6
    #define       bGbl_SDIO0_WPCntl_PS                         1
    #define   MSK32Gbl_SDIO0_WPCntl_PS                            0x00000040

    #define     BA_Gbl_SDIO0_WPCntl_SL                         0x8858
    #define     B16Gbl_SDIO0_WPCntl_SL                         0x8858
    #define   LSb32Gbl_SDIO0_WPCntl_SL                            7
    #define   LSb16Gbl_SDIO0_WPCntl_SL                            7
    #define       bGbl_SDIO0_WPCntl_SL                         1
    #define   MSK32Gbl_SDIO0_WPCntl_SL                            0x00000080

    #define     BA_Gbl_SDIO0_WPCntl_SPU                        0x8859
    #define     B16Gbl_SDIO0_WPCntl_SPU                        0x8858
    #define   LSb32Gbl_SDIO0_WPCntl_SPU                           8
    #define   LSb16Gbl_SDIO0_WPCntl_SPU                           8
    #define       bGbl_SDIO0_WPCntl_SPU                        1
    #define   MSK32Gbl_SDIO0_WPCntl_SPU                           0x00000100

    #define     BA_Gbl_SDIO0_WPCntl_ST                         0x8859
    #define     B16Gbl_SDIO0_WPCntl_ST                         0x8858
    #define   LSb32Gbl_SDIO0_WPCntl_ST                            9
    #define   LSb16Gbl_SDIO0_WPCntl_ST                            9
    #define       bGbl_SDIO0_WPCntl_ST                         1
    #define   MSK32Gbl_SDIO0_WPCntl_ST                            0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SCRD0_CRD_PRESCntl                      0x885C

    #define     BA_Gbl_SCRD0_CRD_PRESCntl_DS0                  0x885C
    #define     B16Gbl_SCRD0_CRD_PRESCntl_DS0                  0x885C
    #define   LSb32Gbl_SCRD0_CRD_PRESCntl_DS0                     0
    #define   LSb16Gbl_SCRD0_CRD_PRESCntl_DS0                     0
    #define       bGbl_SCRD0_CRD_PRESCntl_DS0                  1
    #define   MSK32Gbl_SCRD0_CRD_PRESCntl_DS0                     0x00000001

    #define     BA_Gbl_SCRD0_CRD_PRESCntl_DS1                  0x885C
    #define     B16Gbl_SCRD0_CRD_PRESCntl_DS1                  0x885C
    #define   LSb32Gbl_SCRD0_CRD_PRESCntl_DS1                     1
    #define   LSb16Gbl_SCRD0_CRD_PRESCntl_DS1                     1
    #define       bGbl_SCRD0_CRD_PRESCntl_DS1                  1
    #define   MSK32Gbl_SCRD0_CRD_PRESCntl_DS1                     0x00000002

    #define     BA_Gbl_SCRD0_CRD_PRESCntl_DS2                  0x885C
    #define     B16Gbl_SCRD0_CRD_PRESCntl_DS2                  0x885C
    #define   LSb32Gbl_SCRD0_CRD_PRESCntl_DS2                     2
    #define   LSb16Gbl_SCRD0_CRD_PRESCntl_DS2                     2
    #define       bGbl_SCRD0_CRD_PRESCntl_DS2                  1
    #define   MSK32Gbl_SCRD0_CRD_PRESCntl_DS2                     0x00000004

    #define     BA_Gbl_SCRD0_CRD_PRESCntl_IE                   0x885C
    #define     B16Gbl_SCRD0_CRD_PRESCntl_IE                   0x885C
    #define   LSb32Gbl_SCRD0_CRD_PRESCntl_IE                      3
    #define   LSb16Gbl_SCRD0_CRD_PRESCntl_IE                      3
    #define       bGbl_SCRD0_CRD_PRESCntl_IE                   1
    #define   MSK32Gbl_SCRD0_CRD_PRESCntl_IE                      0x00000008

    #define     BA_Gbl_SCRD0_CRD_PRESCntl_PD                   0x885C
    #define     B16Gbl_SCRD0_CRD_PRESCntl_PD                   0x885C
    #define   LSb32Gbl_SCRD0_CRD_PRESCntl_PD                      4
    #define   LSb16Gbl_SCRD0_CRD_PRESCntl_PD                      4
    #define       bGbl_SCRD0_CRD_PRESCntl_PD                   1
    #define   MSK32Gbl_SCRD0_CRD_PRESCntl_PD                      0x00000010

    #define     BA_Gbl_SCRD0_CRD_PRESCntl_PU                   0x885C
    #define     B16Gbl_SCRD0_CRD_PRESCntl_PU                   0x885C
    #define   LSb32Gbl_SCRD0_CRD_PRESCntl_PU                      5
    #define   LSb16Gbl_SCRD0_CRD_PRESCntl_PU                      5
    #define       bGbl_SCRD0_CRD_PRESCntl_PU                   1
    #define   MSK32Gbl_SCRD0_CRD_PRESCntl_PU                      0x00000020

    #define     BA_Gbl_SCRD0_CRD_PRESCntl_SL                   0x885C
    #define     B16Gbl_SCRD0_CRD_PRESCntl_SL                   0x885C
    #define   LSb32Gbl_SCRD0_CRD_PRESCntl_SL                      6
    #define   LSb16Gbl_SCRD0_CRD_PRESCntl_SL                      6
    #define       bGbl_SCRD0_CRD_PRESCntl_SL                   1
    #define   MSK32Gbl_SCRD0_CRD_PRESCntl_SL                      0x00000040

    #define     BA_Gbl_SCRD0_CRD_PRESCntl_ST                   0x885C
    #define     B16Gbl_SCRD0_CRD_PRESCntl_ST                   0x885C
    #define   LSb32Gbl_SCRD0_CRD_PRESCntl_ST                      7
    #define   LSb16Gbl_SCRD0_CRD_PRESCntl_ST                      7
    #define       bGbl_SCRD0_CRD_PRESCntl_ST                   1
    #define   MSK32Gbl_SCRD0_CRD_PRESCntl_ST                      0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SCRD0_RSTCntl                           0x8860

    #define     BA_Gbl_SCRD0_RSTCntl_DS0                       0x8860
    #define     B16Gbl_SCRD0_RSTCntl_DS0                       0x8860
    #define   LSb32Gbl_SCRD0_RSTCntl_DS0                          0
    #define   LSb16Gbl_SCRD0_RSTCntl_DS0                          0
    #define       bGbl_SCRD0_RSTCntl_DS0                       1
    #define   MSK32Gbl_SCRD0_RSTCntl_DS0                          0x00000001

    #define     BA_Gbl_SCRD0_RSTCntl_DS1                       0x8860
    #define     B16Gbl_SCRD0_RSTCntl_DS1                       0x8860
    #define   LSb32Gbl_SCRD0_RSTCntl_DS1                          1
    #define   LSb16Gbl_SCRD0_RSTCntl_DS1                          1
    #define       bGbl_SCRD0_RSTCntl_DS1                       1
    #define   MSK32Gbl_SCRD0_RSTCntl_DS1                          0x00000002

    #define     BA_Gbl_SCRD0_RSTCntl_DS2                       0x8860
    #define     B16Gbl_SCRD0_RSTCntl_DS2                       0x8860
    #define   LSb32Gbl_SCRD0_RSTCntl_DS2                          2
    #define   LSb16Gbl_SCRD0_RSTCntl_DS2                          2
    #define       bGbl_SCRD0_RSTCntl_DS2                       1
    #define   MSK32Gbl_SCRD0_RSTCntl_DS2                          0x00000004

    #define     BA_Gbl_SCRD0_RSTCntl_IE                        0x8860
    #define     B16Gbl_SCRD0_RSTCntl_IE                        0x8860
    #define   LSb32Gbl_SCRD0_RSTCntl_IE                           3
    #define   LSb16Gbl_SCRD0_RSTCntl_IE                           3
    #define       bGbl_SCRD0_RSTCntl_IE                        1
    #define   MSK32Gbl_SCRD0_RSTCntl_IE                           0x00000008

    #define     BA_Gbl_SCRD0_RSTCntl_PD                        0x8860
    #define     B16Gbl_SCRD0_RSTCntl_PD                        0x8860
    #define   LSb32Gbl_SCRD0_RSTCntl_PD                           4
    #define   LSb16Gbl_SCRD0_RSTCntl_PD                           4
    #define       bGbl_SCRD0_RSTCntl_PD                        1
    #define   MSK32Gbl_SCRD0_RSTCntl_PD                           0x00000010

    #define     BA_Gbl_SCRD0_RSTCntl_PU                        0x8860
    #define     B16Gbl_SCRD0_RSTCntl_PU                        0x8860
    #define   LSb32Gbl_SCRD0_RSTCntl_PU                           5
    #define   LSb16Gbl_SCRD0_RSTCntl_PU                           5
    #define       bGbl_SCRD0_RSTCntl_PU                        1
    #define   MSK32Gbl_SCRD0_RSTCntl_PU                           0x00000020

    #define     BA_Gbl_SCRD0_RSTCntl_SL                        0x8860
    #define     B16Gbl_SCRD0_RSTCntl_SL                        0x8860
    #define   LSb32Gbl_SCRD0_RSTCntl_SL                           6
    #define   LSb16Gbl_SCRD0_RSTCntl_SL                           6
    #define       bGbl_SCRD0_RSTCntl_SL                        1
    #define   MSK32Gbl_SCRD0_RSTCntl_SL                           0x00000040

    #define     BA_Gbl_SCRD0_RSTCntl_ST                        0x8860
    #define     B16Gbl_SCRD0_RSTCntl_ST                        0x8860
    #define   LSb32Gbl_SCRD0_RSTCntl_ST                           7
    #define   LSb16Gbl_SCRD0_RSTCntl_ST                           7
    #define       bGbl_SCRD0_RSTCntl_ST                        1
    #define   MSK32Gbl_SCRD0_RSTCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SCRD0_DCLKCntl                          0x8864

    #define     BA_Gbl_SCRD0_DCLKCntl_DS0                      0x8864
    #define     B16Gbl_SCRD0_DCLKCntl_DS0                      0x8864
    #define   LSb32Gbl_SCRD0_DCLKCntl_DS0                         0
    #define   LSb16Gbl_SCRD0_DCLKCntl_DS0                         0
    #define       bGbl_SCRD0_DCLKCntl_DS0                      1
    #define   MSK32Gbl_SCRD0_DCLKCntl_DS0                         0x00000001

    #define     BA_Gbl_SCRD0_DCLKCntl_DS1                      0x8864
    #define     B16Gbl_SCRD0_DCLKCntl_DS1                      0x8864
    #define   LSb32Gbl_SCRD0_DCLKCntl_DS1                         1
    #define   LSb16Gbl_SCRD0_DCLKCntl_DS1                         1
    #define       bGbl_SCRD0_DCLKCntl_DS1                      1
    #define   MSK32Gbl_SCRD0_DCLKCntl_DS1                         0x00000002

    #define     BA_Gbl_SCRD0_DCLKCntl_DS2                      0x8864
    #define     B16Gbl_SCRD0_DCLKCntl_DS2                      0x8864
    #define   LSb32Gbl_SCRD0_DCLKCntl_DS2                         2
    #define   LSb16Gbl_SCRD0_DCLKCntl_DS2                         2
    #define       bGbl_SCRD0_DCLKCntl_DS2                      1
    #define   MSK32Gbl_SCRD0_DCLKCntl_DS2                         0x00000004

    #define     BA_Gbl_SCRD0_DCLKCntl_IE                       0x8864
    #define     B16Gbl_SCRD0_DCLKCntl_IE                       0x8864
    #define   LSb32Gbl_SCRD0_DCLKCntl_IE                          3
    #define   LSb16Gbl_SCRD0_DCLKCntl_IE                          3
    #define       bGbl_SCRD0_DCLKCntl_IE                       1
    #define   MSK32Gbl_SCRD0_DCLKCntl_IE                          0x00000008

    #define     BA_Gbl_SCRD0_DCLKCntl_PD                       0x8864
    #define     B16Gbl_SCRD0_DCLKCntl_PD                       0x8864
    #define   LSb32Gbl_SCRD0_DCLKCntl_PD                          4
    #define   LSb16Gbl_SCRD0_DCLKCntl_PD                          4
    #define       bGbl_SCRD0_DCLKCntl_PD                       1
    #define   MSK32Gbl_SCRD0_DCLKCntl_PD                          0x00000010

    #define     BA_Gbl_SCRD0_DCLKCntl_PU                       0x8864
    #define     B16Gbl_SCRD0_DCLKCntl_PU                       0x8864
    #define   LSb32Gbl_SCRD0_DCLKCntl_PU                          5
    #define   LSb16Gbl_SCRD0_DCLKCntl_PU                          5
    #define       bGbl_SCRD0_DCLKCntl_PU                       1
    #define   MSK32Gbl_SCRD0_DCLKCntl_PU                          0x00000020

    #define     BA_Gbl_SCRD0_DCLKCntl_SL                       0x8864
    #define     B16Gbl_SCRD0_DCLKCntl_SL                       0x8864
    #define   LSb32Gbl_SCRD0_DCLKCntl_SL                          6
    #define   LSb16Gbl_SCRD0_DCLKCntl_SL                          6
    #define       bGbl_SCRD0_DCLKCntl_SL                       1
    #define   MSK32Gbl_SCRD0_DCLKCntl_SL                          0x00000040

    #define     BA_Gbl_SCRD0_DCLKCntl_ST                       0x8864
    #define     B16Gbl_SCRD0_DCLKCntl_ST                       0x8864
    #define   LSb32Gbl_SCRD0_DCLKCntl_ST                          7
    #define   LSb16Gbl_SCRD0_DCLKCntl_ST                          7
    #define       bGbl_SCRD0_DCLKCntl_ST                       1
    #define   MSK32Gbl_SCRD0_DCLKCntl_ST                          0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SCRD0_DIOCntl                           0x8868

    #define     BA_Gbl_SCRD0_DIOCntl_DS0                       0x8868
    #define     B16Gbl_SCRD0_DIOCntl_DS0                       0x8868
    #define   LSb32Gbl_SCRD0_DIOCntl_DS0                          0
    #define   LSb16Gbl_SCRD0_DIOCntl_DS0                          0
    #define       bGbl_SCRD0_DIOCntl_DS0                       1
    #define   MSK32Gbl_SCRD0_DIOCntl_DS0                          0x00000001

    #define     BA_Gbl_SCRD0_DIOCntl_DS1                       0x8868
    #define     B16Gbl_SCRD0_DIOCntl_DS1                       0x8868
    #define   LSb32Gbl_SCRD0_DIOCntl_DS1                          1
    #define   LSb16Gbl_SCRD0_DIOCntl_DS1                          1
    #define       bGbl_SCRD0_DIOCntl_DS1                       1
    #define   MSK32Gbl_SCRD0_DIOCntl_DS1                          0x00000002

    #define     BA_Gbl_SCRD0_DIOCntl_DS2                       0x8868
    #define     B16Gbl_SCRD0_DIOCntl_DS2                       0x8868
    #define   LSb32Gbl_SCRD0_DIOCntl_DS2                          2
    #define   LSb16Gbl_SCRD0_DIOCntl_DS2                          2
    #define       bGbl_SCRD0_DIOCntl_DS2                       1
    #define   MSK32Gbl_SCRD0_DIOCntl_DS2                          0x00000004

    #define     BA_Gbl_SCRD0_DIOCntl_IE                        0x8868
    #define     B16Gbl_SCRD0_DIOCntl_IE                        0x8868
    #define   LSb32Gbl_SCRD0_DIOCntl_IE                           3
    #define   LSb16Gbl_SCRD0_DIOCntl_IE                           3
    #define       bGbl_SCRD0_DIOCntl_IE                        1
    #define   MSK32Gbl_SCRD0_DIOCntl_IE                           0x00000008

    #define     BA_Gbl_SCRD0_DIOCntl_PD                        0x8868
    #define     B16Gbl_SCRD0_DIOCntl_PD                        0x8868
    #define   LSb32Gbl_SCRD0_DIOCntl_PD                           4
    #define   LSb16Gbl_SCRD0_DIOCntl_PD                           4
    #define       bGbl_SCRD0_DIOCntl_PD                        1
    #define   MSK32Gbl_SCRD0_DIOCntl_PD                           0x00000010

    #define     BA_Gbl_SCRD0_DIOCntl_PU                        0x8868
    #define     B16Gbl_SCRD0_DIOCntl_PU                        0x8868
    #define   LSb32Gbl_SCRD0_DIOCntl_PU                           5
    #define   LSb16Gbl_SCRD0_DIOCntl_PU                           5
    #define       bGbl_SCRD0_DIOCntl_PU                        1
    #define   MSK32Gbl_SCRD0_DIOCntl_PU                           0x00000020

    #define     BA_Gbl_SCRD0_DIOCntl_SL                        0x8868
    #define     B16Gbl_SCRD0_DIOCntl_SL                        0x8868
    #define   LSb32Gbl_SCRD0_DIOCntl_SL                           6
    #define   LSb16Gbl_SCRD0_DIOCntl_SL                           6
    #define       bGbl_SCRD0_DIOCntl_SL                        1
    #define   MSK32Gbl_SCRD0_DIOCntl_SL                           0x00000040

    #define     BA_Gbl_SCRD0_DIOCntl_ST                        0x8868
    #define     B16Gbl_SCRD0_DIOCntl_ST                        0x8868
    #define   LSb32Gbl_SCRD0_DIOCntl_ST                           7
    #define   LSb16Gbl_SCRD0_DIOCntl_ST                           7
    #define       bGbl_SCRD0_DIOCntl_ST                        1
    #define   MSK32Gbl_SCRD0_DIOCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_DO0Cntl                            0x8C00

    #define     BA_Gbl_I2S1_DO0Cntl_DS0                        0x8C00
    #define     B16Gbl_I2S1_DO0Cntl_DS0                        0x8C00
    #define   LSb32Gbl_I2S1_DO0Cntl_DS0                           0
    #define   LSb16Gbl_I2S1_DO0Cntl_DS0                           0
    #define       bGbl_I2S1_DO0Cntl_DS0                        1
    #define   MSK32Gbl_I2S1_DO0Cntl_DS0                           0x00000001

    #define     BA_Gbl_I2S1_DO0Cntl_DS1                        0x8C00
    #define     B16Gbl_I2S1_DO0Cntl_DS1                        0x8C00
    #define   LSb32Gbl_I2S1_DO0Cntl_DS1                           1
    #define   LSb16Gbl_I2S1_DO0Cntl_DS1                           1
    #define       bGbl_I2S1_DO0Cntl_DS1                        1
    #define   MSK32Gbl_I2S1_DO0Cntl_DS1                           0x00000002

    #define     BA_Gbl_I2S1_DO0Cntl_DS2                        0x8C00
    #define     B16Gbl_I2S1_DO0Cntl_DS2                        0x8C00
    #define   LSb32Gbl_I2S1_DO0Cntl_DS2                           2
    #define   LSb16Gbl_I2S1_DO0Cntl_DS2                           2
    #define       bGbl_I2S1_DO0Cntl_DS2                        1
    #define   MSK32Gbl_I2S1_DO0Cntl_DS2                           0x00000004

    #define     BA_Gbl_I2S1_DO0Cntl_IE                         0x8C00
    #define     B16Gbl_I2S1_DO0Cntl_IE                         0x8C00
    #define   LSb32Gbl_I2S1_DO0Cntl_IE                            3
    #define   LSb16Gbl_I2S1_DO0Cntl_IE                            3
    #define       bGbl_I2S1_DO0Cntl_IE                         1
    #define   MSK32Gbl_I2S1_DO0Cntl_IE                            0x00000008

    #define     BA_Gbl_I2S1_DO0Cntl_PD                         0x8C00
    #define     B16Gbl_I2S1_DO0Cntl_PD                         0x8C00
    #define   LSb32Gbl_I2S1_DO0Cntl_PD                            4
    #define   LSb16Gbl_I2S1_DO0Cntl_PD                            4
    #define       bGbl_I2S1_DO0Cntl_PD                         1
    #define   MSK32Gbl_I2S1_DO0Cntl_PD                            0x00000010

    #define     BA_Gbl_I2S1_DO0Cntl_PU                         0x8C00
    #define     B16Gbl_I2S1_DO0Cntl_PU                         0x8C00
    #define   LSb32Gbl_I2S1_DO0Cntl_PU                            5
    #define   LSb16Gbl_I2S1_DO0Cntl_PU                            5
    #define       bGbl_I2S1_DO0Cntl_PU                         1
    #define   MSK32Gbl_I2S1_DO0Cntl_PU                            0x00000020

    #define     BA_Gbl_I2S1_DO0Cntl_SL                         0x8C00
    #define     B16Gbl_I2S1_DO0Cntl_SL                         0x8C00
    #define   LSb32Gbl_I2S1_DO0Cntl_SL                            6
    #define   LSb16Gbl_I2S1_DO0Cntl_SL                            6
    #define       bGbl_I2S1_DO0Cntl_SL                         1
    #define   MSK32Gbl_I2S1_DO0Cntl_SL                            0x00000040

    #define     BA_Gbl_I2S1_DO0Cntl_ST                         0x8C00
    #define     B16Gbl_I2S1_DO0Cntl_ST                         0x8C00
    #define   LSb32Gbl_I2S1_DO0Cntl_ST                            7
    #define   LSb16Gbl_I2S1_DO0Cntl_ST                            7
    #define       bGbl_I2S1_DO0Cntl_ST                         1
    #define   MSK32Gbl_I2S1_DO0Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_DO1Cntl                            0x8C04

    #define     BA_Gbl_I2S1_DO1Cntl_DS0                        0x8C04
    #define     B16Gbl_I2S1_DO1Cntl_DS0                        0x8C04
    #define   LSb32Gbl_I2S1_DO1Cntl_DS0                           0
    #define   LSb16Gbl_I2S1_DO1Cntl_DS0                           0
    #define       bGbl_I2S1_DO1Cntl_DS0                        1
    #define   MSK32Gbl_I2S1_DO1Cntl_DS0                           0x00000001

    #define     BA_Gbl_I2S1_DO1Cntl_DS1                        0x8C04
    #define     B16Gbl_I2S1_DO1Cntl_DS1                        0x8C04
    #define   LSb32Gbl_I2S1_DO1Cntl_DS1                           1
    #define   LSb16Gbl_I2S1_DO1Cntl_DS1                           1
    #define       bGbl_I2S1_DO1Cntl_DS1                        1
    #define   MSK32Gbl_I2S1_DO1Cntl_DS1                           0x00000002

    #define     BA_Gbl_I2S1_DO1Cntl_DS2                        0x8C04
    #define     B16Gbl_I2S1_DO1Cntl_DS2                        0x8C04
    #define   LSb32Gbl_I2S1_DO1Cntl_DS2                           2
    #define   LSb16Gbl_I2S1_DO1Cntl_DS2                           2
    #define       bGbl_I2S1_DO1Cntl_DS2                        1
    #define   MSK32Gbl_I2S1_DO1Cntl_DS2                           0x00000004

    #define     BA_Gbl_I2S1_DO1Cntl_IE                         0x8C04
    #define     B16Gbl_I2S1_DO1Cntl_IE                         0x8C04
    #define   LSb32Gbl_I2S1_DO1Cntl_IE                            3
    #define   LSb16Gbl_I2S1_DO1Cntl_IE                            3
    #define       bGbl_I2S1_DO1Cntl_IE                         1
    #define   MSK32Gbl_I2S1_DO1Cntl_IE                            0x00000008

    #define     BA_Gbl_I2S1_DO1Cntl_PD                         0x8C04
    #define     B16Gbl_I2S1_DO1Cntl_PD                         0x8C04
    #define   LSb32Gbl_I2S1_DO1Cntl_PD                            4
    #define   LSb16Gbl_I2S1_DO1Cntl_PD                            4
    #define       bGbl_I2S1_DO1Cntl_PD                         1
    #define   MSK32Gbl_I2S1_DO1Cntl_PD                            0x00000010

    #define     BA_Gbl_I2S1_DO1Cntl_PU                         0x8C04
    #define     B16Gbl_I2S1_DO1Cntl_PU                         0x8C04
    #define   LSb32Gbl_I2S1_DO1Cntl_PU                            5
    #define   LSb16Gbl_I2S1_DO1Cntl_PU                            5
    #define       bGbl_I2S1_DO1Cntl_PU                         1
    #define   MSK32Gbl_I2S1_DO1Cntl_PU                            0x00000020

    #define     BA_Gbl_I2S1_DO1Cntl_SL                         0x8C04
    #define     B16Gbl_I2S1_DO1Cntl_SL                         0x8C04
    #define   LSb32Gbl_I2S1_DO1Cntl_SL                            6
    #define   LSb16Gbl_I2S1_DO1Cntl_SL                            6
    #define       bGbl_I2S1_DO1Cntl_SL                         1
    #define   MSK32Gbl_I2S1_DO1Cntl_SL                            0x00000040

    #define     BA_Gbl_I2S1_DO1Cntl_ST                         0x8C04
    #define     B16Gbl_I2S1_DO1Cntl_ST                         0x8C04
    #define   LSb32Gbl_I2S1_DO1Cntl_ST                            7
    #define   LSb16Gbl_I2S1_DO1Cntl_ST                            7
    #define       bGbl_I2S1_DO1Cntl_ST                         1
    #define   MSK32Gbl_I2S1_DO1Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_DO2Cntl                            0x8C08

    #define     BA_Gbl_I2S1_DO2Cntl_DS0                        0x8C08
    #define     B16Gbl_I2S1_DO2Cntl_DS0                        0x8C08
    #define   LSb32Gbl_I2S1_DO2Cntl_DS0                           0
    #define   LSb16Gbl_I2S1_DO2Cntl_DS0                           0
    #define       bGbl_I2S1_DO2Cntl_DS0                        1
    #define   MSK32Gbl_I2S1_DO2Cntl_DS0                           0x00000001

    #define     BA_Gbl_I2S1_DO2Cntl_DS1                        0x8C08
    #define     B16Gbl_I2S1_DO2Cntl_DS1                        0x8C08
    #define   LSb32Gbl_I2S1_DO2Cntl_DS1                           1
    #define   LSb16Gbl_I2S1_DO2Cntl_DS1                           1
    #define       bGbl_I2S1_DO2Cntl_DS1                        1
    #define   MSK32Gbl_I2S1_DO2Cntl_DS1                           0x00000002

    #define     BA_Gbl_I2S1_DO2Cntl_DS2                        0x8C08
    #define     B16Gbl_I2S1_DO2Cntl_DS2                        0x8C08
    #define   LSb32Gbl_I2S1_DO2Cntl_DS2                           2
    #define   LSb16Gbl_I2S1_DO2Cntl_DS2                           2
    #define       bGbl_I2S1_DO2Cntl_DS2                        1
    #define   MSK32Gbl_I2S1_DO2Cntl_DS2                           0x00000004

    #define     BA_Gbl_I2S1_DO2Cntl_IE                         0x8C08
    #define     B16Gbl_I2S1_DO2Cntl_IE                         0x8C08
    #define   LSb32Gbl_I2S1_DO2Cntl_IE                            3
    #define   LSb16Gbl_I2S1_DO2Cntl_IE                            3
    #define       bGbl_I2S1_DO2Cntl_IE                         1
    #define   MSK32Gbl_I2S1_DO2Cntl_IE                            0x00000008

    #define     BA_Gbl_I2S1_DO2Cntl_PD                         0x8C08
    #define     B16Gbl_I2S1_DO2Cntl_PD                         0x8C08
    #define   LSb32Gbl_I2S1_DO2Cntl_PD                            4
    #define   LSb16Gbl_I2S1_DO2Cntl_PD                            4
    #define       bGbl_I2S1_DO2Cntl_PD                         1
    #define   MSK32Gbl_I2S1_DO2Cntl_PD                            0x00000010

    #define     BA_Gbl_I2S1_DO2Cntl_PU                         0x8C08
    #define     B16Gbl_I2S1_DO2Cntl_PU                         0x8C08
    #define   LSb32Gbl_I2S1_DO2Cntl_PU                            5
    #define   LSb16Gbl_I2S1_DO2Cntl_PU                            5
    #define       bGbl_I2S1_DO2Cntl_PU                         1
    #define   MSK32Gbl_I2S1_DO2Cntl_PU                            0x00000020

    #define     BA_Gbl_I2S1_DO2Cntl_SL                         0x8C08
    #define     B16Gbl_I2S1_DO2Cntl_SL                         0x8C08
    #define   LSb32Gbl_I2S1_DO2Cntl_SL                            6
    #define   LSb16Gbl_I2S1_DO2Cntl_SL                            6
    #define       bGbl_I2S1_DO2Cntl_SL                         1
    #define   MSK32Gbl_I2S1_DO2Cntl_SL                            0x00000040

    #define     BA_Gbl_I2S1_DO2Cntl_ST                         0x8C08
    #define     B16Gbl_I2S1_DO2Cntl_ST                         0x8C08
    #define   LSb32Gbl_I2S1_DO2Cntl_ST                            7
    #define   LSb16Gbl_I2S1_DO2Cntl_ST                            7
    #define       bGbl_I2S1_DO2Cntl_ST                         1
    #define   MSK32Gbl_I2S1_DO2Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_DO3Cntl                            0x8C0C

    #define     BA_Gbl_I2S1_DO3Cntl_DS0                        0x8C0C
    #define     B16Gbl_I2S1_DO3Cntl_DS0                        0x8C0C
    #define   LSb32Gbl_I2S1_DO3Cntl_DS0                           0
    #define   LSb16Gbl_I2S1_DO3Cntl_DS0                           0
    #define       bGbl_I2S1_DO3Cntl_DS0                        1
    #define   MSK32Gbl_I2S1_DO3Cntl_DS0                           0x00000001

    #define     BA_Gbl_I2S1_DO3Cntl_DS1                        0x8C0C
    #define     B16Gbl_I2S1_DO3Cntl_DS1                        0x8C0C
    #define   LSb32Gbl_I2S1_DO3Cntl_DS1                           1
    #define   LSb16Gbl_I2S1_DO3Cntl_DS1                           1
    #define       bGbl_I2S1_DO3Cntl_DS1                        1
    #define   MSK32Gbl_I2S1_DO3Cntl_DS1                           0x00000002

    #define     BA_Gbl_I2S1_DO3Cntl_DS2                        0x8C0C
    #define     B16Gbl_I2S1_DO3Cntl_DS2                        0x8C0C
    #define   LSb32Gbl_I2S1_DO3Cntl_DS2                           2
    #define   LSb16Gbl_I2S1_DO3Cntl_DS2                           2
    #define       bGbl_I2S1_DO3Cntl_DS2                        1
    #define   MSK32Gbl_I2S1_DO3Cntl_DS2                           0x00000004

    #define     BA_Gbl_I2S1_DO3Cntl_IE                         0x8C0C
    #define     B16Gbl_I2S1_DO3Cntl_IE                         0x8C0C
    #define   LSb32Gbl_I2S1_DO3Cntl_IE                            3
    #define   LSb16Gbl_I2S1_DO3Cntl_IE                            3
    #define       bGbl_I2S1_DO3Cntl_IE                         1
    #define   MSK32Gbl_I2S1_DO3Cntl_IE                            0x00000008

    #define     BA_Gbl_I2S1_DO3Cntl_PD                         0x8C0C
    #define     B16Gbl_I2S1_DO3Cntl_PD                         0x8C0C
    #define   LSb32Gbl_I2S1_DO3Cntl_PD                            4
    #define   LSb16Gbl_I2S1_DO3Cntl_PD                            4
    #define       bGbl_I2S1_DO3Cntl_PD                         1
    #define   MSK32Gbl_I2S1_DO3Cntl_PD                            0x00000010

    #define     BA_Gbl_I2S1_DO3Cntl_PU                         0x8C0C
    #define     B16Gbl_I2S1_DO3Cntl_PU                         0x8C0C
    #define   LSb32Gbl_I2S1_DO3Cntl_PU                            5
    #define   LSb16Gbl_I2S1_DO3Cntl_PU                            5
    #define       bGbl_I2S1_DO3Cntl_PU                         1
    #define   MSK32Gbl_I2S1_DO3Cntl_PU                            0x00000020

    #define     BA_Gbl_I2S1_DO3Cntl_SL                         0x8C0C
    #define     B16Gbl_I2S1_DO3Cntl_SL                         0x8C0C
    #define   LSb32Gbl_I2S1_DO3Cntl_SL                            6
    #define   LSb16Gbl_I2S1_DO3Cntl_SL                            6
    #define       bGbl_I2S1_DO3Cntl_SL                         1
    #define   MSK32Gbl_I2S1_DO3Cntl_SL                            0x00000040

    #define     BA_Gbl_I2S1_DO3Cntl_ST                         0x8C0C
    #define     B16Gbl_I2S1_DO3Cntl_ST                         0x8C0C
    #define   LSb32Gbl_I2S1_DO3Cntl_ST                            7
    #define   LSb16Gbl_I2S1_DO3Cntl_ST                            7
    #define       bGbl_I2S1_DO3Cntl_ST                         1
    #define   MSK32Gbl_I2S1_DO3Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_LRCKIOCntl                         0x8C10

    #define     BA_Gbl_I2S1_LRCKIOCntl_DS0                     0x8C10
    #define     B16Gbl_I2S1_LRCKIOCntl_DS0                     0x8C10
    #define   LSb32Gbl_I2S1_LRCKIOCntl_DS0                        0
    #define   LSb16Gbl_I2S1_LRCKIOCntl_DS0                        0
    #define       bGbl_I2S1_LRCKIOCntl_DS0                     1
    #define   MSK32Gbl_I2S1_LRCKIOCntl_DS0                        0x00000001

    #define     BA_Gbl_I2S1_LRCKIOCntl_DS1                     0x8C10
    #define     B16Gbl_I2S1_LRCKIOCntl_DS1                     0x8C10
    #define   LSb32Gbl_I2S1_LRCKIOCntl_DS1                        1
    #define   LSb16Gbl_I2S1_LRCKIOCntl_DS1                        1
    #define       bGbl_I2S1_LRCKIOCntl_DS1                     1
    #define   MSK32Gbl_I2S1_LRCKIOCntl_DS1                        0x00000002

    #define     BA_Gbl_I2S1_LRCKIOCntl_DS2                     0x8C10
    #define     B16Gbl_I2S1_LRCKIOCntl_DS2                     0x8C10
    #define   LSb32Gbl_I2S1_LRCKIOCntl_DS2                        2
    #define   LSb16Gbl_I2S1_LRCKIOCntl_DS2                        2
    #define       bGbl_I2S1_LRCKIOCntl_DS2                     1
    #define   MSK32Gbl_I2S1_LRCKIOCntl_DS2                        0x00000004

    #define     BA_Gbl_I2S1_LRCKIOCntl_IE                      0x8C10
    #define     B16Gbl_I2S1_LRCKIOCntl_IE                      0x8C10
    #define   LSb32Gbl_I2S1_LRCKIOCntl_IE                         3
    #define   LSb16Gbl_I2S1_LRCKIOCntl_IE                         3
    #define       bGbl_I2S1_LRCKIOCntl_IE                      1
    #define   MSK32Gbl_I2S1_LRCKIOCntl_IE                         0x00000008

    #define     BA_Gbl_I2S1_LRCKIOCntl_PD                      0x8C10
    #define     B16Gbl_I2S1_LRCKIOCntl_PD                      0x8C10
    #define   LSb32Gbl_I2S1_LRCKIOCntl_PD                         4
    #define   LSb16Gbl_I2S1_LRCKIOCntl_PD                         4
    #define       bGbl_I2S1_LRCKIOCntl_PD                      1
    #define   MSK32Gbl_I2S1_LRCKIOCntl_PD                         0x00000010

    #define     BA_Gbl_I2S1_LRCKIOCntl_PU                      0x8C10
    #define     B16Gbl_I2S1_LRCKIOCntl_PU                      0x8C10
    #define   LSb32Gbl_I2S1_LRCKIOCntl_PU                         5
    #define   LSb16Gbl_I2S1_LRCKIOCntl_PU                         5
    #define       bGbl_I2S1_LRCKIOCntl_PU                      1
    #define   MSK32Gbl_I2S1_LRCKIOCntl_PU                         0x00000020

    #define     BA_Gbl_I2S1_LRCKIOCntl_SL                      0x8C10
    #define     B16Gbl_I2S1_LRCKIOCntl_SL                      0x8C10
    #define   LSb32Gbl_I2S1_LRCKIOCntl_SL                         6
    #define   LSb16Gbl_I2S1_LRCKIOCntl_SL                         6
    #define       bGbl_I2S1_LRCKIOCntl_SL                      1
    #define   MSK32Gbl_I2S1_LRCKIOCntl_SL                         0x00000040

    #define     BA_Gbl_I2S1_LRCKIOCntl_ST                      0x8C10
    #define     B16Gbl_I2S1_LRCKIOCntl_ST                      0x8C10
    #define   LSb32Gbl_I2S1_LRCKIOCntl_ST                         7
    #define   LSb16Gbl_I2S1_LRCKIOCntl_ST                         7
    #define       bGbl_I2S1_LRCKIOCntl_ST                      1
    #define   MSK32Gbl_I2S1_LRCKIOCntl_ST                         0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_BCLKIOCntl                         0x8C14

    #define     BA_Gbl_I2S1_BCLKIOCntl_DS0                     0x8C14
    #define     B16Gbl_I2S1_BCLKIOCntl_DS0                     0x8C14
    #define   LSb32Gbl_I2S1_BCLKIOCntl_DS0                        0
    #define   LSb16Gbl_I2S1_BCLKIOCntl_DS0                        0
    #define       bGbl_I2S1_BCLKIOCntl_DS0                     1
    #define   MSK32Gbl_I2S1_BCLKIOCntl_DS0                        0x00000001

    #define     BA_Gbl_I2S1_BCLKIOCntl_DS1                     0x8C14
    #define     B16Gbl_I2S1_BCLKIOCntl_DS1                     0x8C14
    #define   LSb32Gbl_I2S1_BCLKIOCntl_DS1                        1
    #define   LSb16Gbl_I2S1_BCLKIOCntl_DS1                        1
    #define       bGbl_I2S1_BCLKIOCntl_DS1                     1
    #define   MSK32Gbl_I2S1_BCLKIOCntl_DS1                        0x00000002

    #define     BA_Gbl_I2S1_BCLKIOCntl_DS2                     0x8C14
    #define     B16Gbl_I2S1_BCLKIOCntl_DS2                     0x8C14
    #define   LSb32Gbl_I2S1_BCLKIOCntl_DS2                        2
    #define   LSb16Gbl_I2S1_BCLKIOCntl_DS2                        2
    #define       bGbl_I2S1_BCLKIOCntl_DS2                     1
    #define   MSK32Gbl_I2S1_BCLKIOCntl_DS2                        0x00000004

    #define     BA_Gbl_I2S1_BCLKIOCntl_IE                      0x8C14
    #define     B16Gbl_I2S1_BCLKIOCntl_IE                      0x8C14
    #define   LSb32Gbl_I2S1_BCLKIOCntl_IE                         3
    #define   LSb16Gbl_I2S1_BCLKIOCntl_IE                         3
    #define       bGbl_I2S1_BCLKIOCntl_IE                      1
    #define   MSK32Gbl_I2S1_BCLKIOCntl_IE                         0x00000008

    #define     BA_Gbl_I2S1_BCLKIOCntl_PD                      0x8C14
    #define     B16Gbl_I2S1_BCLKIOCntl_PD                      0x8C14
    #define   LSb32Gbl_I2S1_BCLKIOCntl_PD                         4
    #define   LSb16Gbl_I2S1_BCLKIOCntl_PD                         4
    #define       bGbl_I2S1_BCLKIOCntl_PD                      1
    #define   MSK32Gbl_I2S1_BCLKIOCntl_PD                         0x00000010

    #define     BA_Gbl_I2S1_BCLKIOCntl_PU                      0x8C14
    #define     B16Gbl_I2S1_BCLKIOCntl_PU                      0x8C14
    #define   LSb32Gbl_I2S1_BCLKIOCntl_PU                         5
    #define   LSb16Gbl_I2S1_BCLKIOCntl_PU                         5
    #define       bGbl_I2S1_BCLKIOCntl_PU                      1
    #define   MSK32Gbl_I2S1_BCLKIOCntl_PU                         0x00000020

    #define     BA_Gbl_I2S1_BCLKIOCntl_SL                      0x8C14
    #define     B16Gbl_I2S1_BCLKIOCntl_SL                      0x8C14
    #define   LSb32Gbl_I2S1_BCLKIOCntl_SL                         6
    #define   LSb16Gbl_I2S1_BCLKIOCntl_SL                         6
    #define       bGbl_I2S1_BCLKIOCntl_SL                      1
    #define   MSK32Gbl_I2S1_BCLKIOCntl_SL                         0x00000040

    #define     BA_Gbl_I2S1_BCLKIOCntl_ST                      0x8C14
    #define     B16Gbl_I2S1_BCLKIOCntl_ST                      0x8C14
    #define   LSb32Gbl_I2S1_BCLKIOCntl_ST                         7
    #define   LSb16Gbl_I2S1_BCLKIOCntl_ST                         7
    #define       bGbl_I2S1_BCLKIOCntl_ST                      1
    #define   MSK32Gbl_I2S1_BCLKIOCntl_ST                         0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPDIFOCntl                              0x8C18

    #define     BA_Gbl_SPDIFOCntl_DS0                          0x8C18
    #define     B16Gbl_SPDIFOCntl_DS0                          0x8C18
    #define   LSb32Gbl_SPDIFOCntl_DS0                             0
    #define   LSb16Gbl_SPDIFOCntl_DS0                             0
    #define       bGbl_SPDIFOCntl_DS0                          1
    #define   MSK32Gbl_SPDIFOCntl_DS0                             0x00000001

    #define     BA_Gbl_SPDIFOCntl_DS1                          0x8C18
    #define     B16Gbl_SPDIFOCntl_DS1                          0x8C18
    #define   LSb32Gbl_SPDIFOCntl_DS1                             1
    #define   LSb16Gbl_SPDIFOCntl_DS1                             1
    #define       bGbl_SPDIFOCntl_DS1                          1
    #define   MSK32Gbl_SPDIFOCntl_DS1                             0x00000002

    #define     BA_Gbl_SPDIFOCntl_DS2                          0x8C18
    #define     B16Gbl_SPDIFOCntl_DS2                          0x8C18
    #define   LSb32Gbl_SPDIFOCntl_DS2                             2
    #define   LSb16Gbl_SPDIFOCntl_DS2                             2
    #define       bGbl_SPDIFOCntl_DS2                          1
    #define   MSK32Gbl_SPDIFOCntl_DS2                             0x00000004

    #define     BA_Gbl_SPDIFOCntl_IE                           0x8C18
    #define     B16Gbl_SPDIFOCntl_IE                           0x8C18
    #define   LSb32Gbl_SPDIFOCntl_IE                              3
    #define   LSb16Gbl_SPDIFOCntl_IE                              3
    #define       bGbl_SPDIFOCntl_IE                           1
    #define   MSK32Gbl_SPDIFOCntl_IE                              0x00000008

    #define     BA_Gbl_SPDIFOCntl_PD                           0x8C18
    #define     B16Gbl_SPDIFOCntl_PD                           0x8C18
    #define   LSb32Gbl_SPDIFOCntl_PD                              4
    #define   LSb16Gbl_SPDIFOCntl_PD                              4
    #define       bGbl_SPDIFOCntl_PD                           1
    #define   MSK32Gbl_SPDIFOCntl_PD                              0x00000010

    #define     BA_Gbl_SPDIFOCntl_PU                           0x8C18
    #define     B16Gbl_SPDIFOCntl_PU                           0x8C18
    #define   LSb32Gbl_SPDIFOCntl_PU                              5
    #define   LSb16Gbl_SPDIFOCntl_PU                              5
    #define       bGbl_SPDIFOCntl_PU                           1
    #define   MSK32Gbl_SPDIFOCntl_PU                              0x00000020

    #define     BA_Gbl_SPDIFOCntl_SL                           0x8C18
    #define     B16Gbl_SPDIFOCntl_SL                           0x8C18
    #define   LSb32Gbl_SPDIFOCntl_SL                              6
    #define   LSb16Gbl_SPDIFOCntl_SL                              6
    #define       bGbl_SPDIFOCntl_SL                           1
    #define   MSK32Gbl_SPDIFOCntl_SL                              0x00000040

    #define     BA_Gbl_SPDIFOCntl_ST                           0x8C18
    #define     B16Gbl_SPDIFOCntl_ST                           0x8C18
    #define   LSb32Gbl_SPDIFOCntl_ST                              7
    #define   LSb16Gbl_SPDIFOCntl_ST                              7
    #define       bGbl_SPDIFOCntl_ST                           1
    #define   MSK32Gbl_SPDIFOCntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SPDIFICntl                              0x8C1C

    #define     BA_Gbl_SPDIFICntl_DS0                          0x8C1C
    #define     B16Gbl_SPDIFICntl_DS0                          0x8C1C
    #define   LSb32Gbl_SPDIFICntl_DS0                             0
    #define   LSb16Gbl_SPDIFICntl_DS0                             0
    #define       bGbl_SPDIFICntl_DS0                          1
    #define   MSK32Gbl_SPDIFICntl_DS0                             0x00000001

    #define     BA_Gbl_SPDIFICntl_DS1                          0x8C1C
    #define     B16Gbl_SPDIFICntl_DS1                          0x8C1C
    #define   LSb32Gbl_SPDIFICntl_DS1                             1
    #define   LSb16Gbl_SPDIFICntl_DS1                             1
    #define       bGbl_SPDIFICntl_DS1                          1
    #define   MSK32Gbl_SPDIFICntl_DS1                             0x00000002

    #define     BA_Gbl_SPDIFICntl_DS2                          0x8C1C
    #define     B16Gbl_SPDIFICntl_DS2                          0x8C1C
    #define   LSb32Gbl_SPDIFICntl_DS2                             2
    #define   LSb16Gbl_SPDIFICntl_DS2                             2
    #define       bGbl_SPDIFICntl_DS2                          1
    #define   MSK32Gbl_SPDIFICntl_DS2                             0x00000004

    #define     BA_Gbl_SPDIFICntl_IE                           0x8C1C
    #define     B16Gbl_SPDIFICntl_IE                           0x8C1C
    #define   LSb32Gbl_SPDIFICntl_IE                              3
    #define   LSb16Gbl_SPDIFICntl_IE                              3
    #define       bGbl_SPDIFICntl_IE                           1
    #define   MSK32Gbl_SPDIFICntl_IE                              0x00000008

    #define     BA_Gbl_SPDIFICntl_PD                           0x8C1C
    #define     B16Gbl_SPDIFICntl_PD                           0x8C1C
    #define   LSb32Gbl_SPDIFICntl_PD                              4
    #define   LSb16Gbl_SPDIFICntl_PD                              4
    #define       bGbl_SPDIFICntl_PD                           1
    #define   MSK32Gbl_SPDIFICntl_PD                              0x00000010

    #define     BA_Gbl_SPDIFICntl_PU                           0x8C1C
    #define     B16Gbl_SPDIFICntl_PU                           0x8C1C
    #define   LSb32Gbl_SPDIFICntl_PU                              5
    #define   LSb16Gbl_SPDIFICntl_PU                              5
    #define       bGbl_SPDIFICntl_PU                           1
    #define   MSK32Gbl_SPDIFICntl_PU                              0x00000020

    #define     BA_Gbl_SPDIFICntl_SL                           0x8C1C
    #define     B16Gbl_SPDIFICntl_SL                           0x8C1C
    #define   LSb32Gbl_SPDIFICntl_SL                              6
    #define   LSb16Gbl_SPDIFICntl_SL                              6
    #define       bGbl_SPDIFICntl_SL                           1
    #define   MSK32Gbl_SPDIFICntl_SL                              0x00000040

    #define     BA_Gbl_SPDIFICntl_ST                           0x8C1C
    #define     B16Gbl_SPDIFICntl_ST                           0x8C1C
    #define   LSb32Gbl_SPDIFICntl_ST                              7
    #define   LSb16Gbl_SPDIFICntl_ST                              7
    #define       bGbl_SPDIFICntl_ST                           1
    #define   MSK32Gbl_SPDIFICntl_ST                              0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_LRCKIOCntl                         0x8C20

    #define     BA_Gbl_I2S2_LRCKIOCntl_DS0                     0x8C20
    #define     B16Gbl_I2S2_LRCKIOCntl_DS0                     0x8C20
    #define   LSb32Gbl_I2S2_LRCKIOCntl_DS0                        0
    #define   LSb16Gbl_I2S2_LRCKIOCntl_DS0                        0
    #define       bGbl_I2S2_LRCKIOCntl_DS0                     1
    #define   MSK32Gbl_I2S2_LRCKIOCntl_DS0                        0x00000001

    #define     BA_Gbl_I2S2_LRCKIOCntl_DS1                     0x8C20
    #define     B16Gbl_I2S2_LRCKIOCntl_DS1                     0x8C20
    #define   LSb32Gbl_I2S2_LRCKIOCntl_DS1                        1
    #define   LSb16Gbl_I2S2_LRCKIOCntl_DS1                        1
    #define       bGbl_I2S2_LRCKIOCntl_DS1                     1
    #define   MSK32Gbl_I2S2_LRCKIOCntl_DS1                        0x00000002

    #define     BA_Gbl_I2S2_LRCKIOCntl_DS2                     0x8C20
    #define     B16Gbl_I2S2_LRCKIOCntl_DS2                     0x8C20
    #define   LSb32Gbl_I2S2_LRCKIOCntl_DS2                        2
    #define   LSb16Gbl_I2S2_LRCKIOCntl_DS2                        2
    #define       bGbl_I2S2_LRCKIOCntl_DS2                     1
    #define   MSK32Gbl_I2S2_LRCKIOCntl_DS2                        0x00000004

    #define     BA_Gbl_I2S2_LRCKIOCntl_IE                      0x8C20
    #define     B16Gbl_I2S2_LRCKIOCntl_IE                      0x8C20
    #define   LSb32Gbl_I2S2_LRCKIOCntl_IE                         3
    #define   LSb16Gbl_I2S2_LRCKIOCntl_IE                         3
    #define       bGbl_I2S2_LRCKIOCntl_IE                      1
    #define   MSK32Gbl_I2S2_LRCKIOCntl_IE                         0x00000008

    #define     BA_Gbl_I2S2_LRCKIOCntl_PD                      0x8C20
    #define     B16Gbl_I2S2_LRCKIOCntl_PD                      0x8C20
    #define   LSb32Gbl_I2S2_LRCKIOCntl_PD                         4
    #define   LSb16Gbl_I2S2_LRCKIOCntl_PD                         4
    #define       bGbl_I2S2_LRCKIOCntl_PD                      1
    #define   MSK32Gbl_I2S2_LRCKIOCntl_PD                         0x00000010

    #define     BA_Gbl_I2S2_LRCKIOCntl_PU                      0x8C20
    #define     B16Gbl_I2S2_LRCKIOCntl_PU                      0x8C20
    #define   LSb32Gbl_I2S2_LRCKIOCntl_PU                         5
    #define   LSb16Gbl_I2S2_LRCKIOCntl_PU                         5
    #define       bGbl_I2S2_LRCKIOCntl_PU                      1
    #define   MSK32Gbl_I2S2_LRCKIOCntl_PU                         0x00000020

    #define     BA_Gbl_I2S2_LRCKIOCntl_SL                      0x8C20
    #define     B16Gbl_I2S2_LRCKIOCntl_SL                      0x8C20
    #define   LSb32Gbl_I2S2_LRCKIOCntl_SL                         6
    #define   LSb16Gbl_I2S2_LRCKIOCntl_SL                         6
    #define       bGbl_I2S2_LRCKIOCntl_SL                      1
    #define   MSK32Gbl_I2S2_LRCKIOCntl_SL                         0x00000040

    #define     BA_Gbl_I2S2_LRCKIOCntl_ST                      0x8C20
    #define     B16Gbl_I2S2_LRCKIOCntl_ST                      0x8C20
    #define   LSb32Gbl_I2S2_LRCKIOCntl_ST                         7
    #define   LSb16Gbl_I2S2_LRCKIOCntl_ST                         7
    #define       bGbl_I2S2_LRCKIOCntl_ST                      1
    #define   MSK32Gbl_I2S2_LRCKIOCntl_ST                         0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_BCLKIOCntl                         0x8C24

    #define     BA_Gbl_I2S2_BCLKIOCntl_DS0                     0x8C24
    #define     B16Gbl_I2S2_BCLKIOCntl_DS0                     0x8C24
    #define   LSb32Gbl_I2S2_BCLKIOCntl_DS0                        0
    #define   LSb16Gbl_I2S2_BCLKIOCntl_DS0                        0
    #define       bGbl_I2S2_BCLKIOCntl_DS0                     1
    #define   MSK32Gbl_I2S2_BCLKIOCntl_DS0                        0x00000001

    #define     BA_Gbl_I2S2_BCLKIOCntl_DS1                     0x8C24
    #define     B16Gbl_I2S2_BCLKIOCntl_DS1                     0x8C24
    #define   LSb32Gbl_I2S2_BCLKIOCntl_DS1                        1
    #define   LSb16Gbl_I2S2_BCLKIOCntl_DS1                        1
    #define       bGbl_I2S2_BCLKIOCntl_DS1                     1
    #define   MSK32Gbl_I2S2_BCLKIOCntl_DS1                        0x00000002

    #define     BA_Gbl_I2S2_BCLKIOCntl_DS2                     0x8C24
    #define     B16Gbl_I2S2_BCLKIOCntl_DS2                     0x8C24
    #define   LSb32Gbl_I2S2_BCLKIOCntl_DS2                        2
    #define   LSb16Gbl_I2S2_BCLKIOCntl_DS2                        2
    #define       bGbl_I2S2_BCLKIOCntl_DS2                     1
    #define   MSK32Gbl_I2S2_BCLKIOCntl_DS2                        0x00000004

    #define     BA_Gbl_I2S2_BCLKIOCntl_IE                      0x8C24
    #define     B16Gbl_I2S2_BCLKIOCntl_IE                      0x8C24
    #define   LSb32Gbl_I2S2_BCLKIOCntl_IE                         3
    #define   LSb16Gbl_I2S2_BCLKIOCntl_IE                         3
    #define       bGbl_I2S2_BCLKIOCntl_IE                      1
    #define   MSK32Gbl_I2S2_BCLKIOCntl_IE                         0x00000008

    #define     BA_Gbl_I2S2_BCLKIOCntl_PD                      0x8C24
    #define     B16Gbl_I2S2_BCLKIOCntl_PD                      0x8C24
    #define   LSb32Gbl_I2S2_BCLKIOCntl_PD                         4
    #define   LSb16Gbl_I2S2_BCLKIOCntl_PD                         4
    #define       bGbl_I2S2_BCLKIOCntl_PD                      1
    #define   MSK32Gbl_I2S2_BCLKIOCntl_PD                         0x00000010

    #define     BA_Gbl_I2S2_BCLKIOCntl_PU                      0x8C24
    #define     B16Gbl_I2S2_BCLKIOCntl_PU                      0x8C24
    #define   LSb32Gbl_I2S2_BCLKIOCntl_PU                         5
    #define   LSb16Gbl_I2S2_BCLKIOCntl_PU                         5
    #define       bGbl_I2S2_BCLKIOCntl_PU                      1
    #define   MSK32Gbl_I2S2_BCLKIOCntl_PU                         0x00000020

    #define     BA_Gbl_I2S2_BCLKIOCntl_SL                      0x8C24
    #define     B16Gbl_I2S2_BCLKIOCntl_SL                      0x8C24
    #define   LSb32Gbl_I2S2_BCLKIOCntl_SL                         6
    #define   LSb16Gbl_I2S2_BCLKIOCntl_SL                         6
    #define       bGbl_I2S2_BCLKIOCntl_SL                      1
    #define   MSK32Gbl_I2S2_BCLKIOCntl_SL                         0x00000040

    #define     BA_Gbl_I2S2_BCLKIOCntl_ST                      0x8C24
    #define     B16Gbl_I2S2_BCLKIOCntl_ST                      0x8C24
    #define   LSb32Gbl_I2S2_BCLKIOCntl_ST                         7
    #define   LSb16Gbl_I2S2_BCLKIOCntl_ST                         7
    #define       bGbl_I2S2_BCLKIOCntl_ST                      1
    #define   MSK32Gbl_I2S2_BCLKIOCntl_ST                         0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_DI0Cntl                            0x8C28

    #define     BA_Gbl_I2S2_DI0Cntl_DS0                        0x8C28
    #define     B16Gbl_I2S2_DI0Cntl_DS0                        0x8C28
    #define   LSb32Gbl_I2S2_DI0Cntl_DS0                           0
    #define   LSb16Gbl_I2S2_DI0Cntl_DS0                           0
    #define       bGbl_I2S2_DI0Cntl_DS0                        1
    #define   MSK32Gbl_I2S2_DI0Cntl_DS0                           0x00000001

    #define     BA_Gbl_I2S2_DI0Cntl_DS1                        0x8C28
    #define     B16Gbl_I2S2_DI0Cntl_DS1                        0x8C28
    #define   LSb32Gbl_I2S2_DI0Cntl_DS1                           1
    #define   LSb16Gbl_I2S2_DI0Cntl_DS1                           1
    #define       bGbl_I2S2_DI0Cntl_DS1                        1
    #define   MSK32Gbl_I2S2_DI0Cntl_DS1                           0x00000002

    #define     BA_Gbl_I2S2_DI0Cntl_DS2                        0x8C28
    #define     B16Gbl_I2S2_DI0Cntl_DS2                        0x8C28
    #define   LSb32Gbl_I2S2_DI0Cntl_DS2                           2
    #define   LSb16Gbl_I2S2_DI0Cntl_DS2                           2
    #define       bGbl_I2S2_DI0Cntl_DS2                        1
    #define   MSK32Gbl_I2S2_DI0Cntl_DS2                           0x00000004

    #define     BA_Gbl_I2S2_DI0Cntl_IE                         0x8C28
    #define     B16Gbl_I2S2_DI0Cntl_IE                         0x8C28
    #define   LSb32Gbl_I2S2_DI0Cntl_IE                            3
    #define   LSb16Gbl_I2S2_DI0Cntl_IE                            3
    #define       bGbl_I2S2_DI0Cntl_IE                         1
    #define   MSK32Gbl_I2S2_DI0Cntl_IE                            0x00000008

    #define     BA_Gbl_I2S2_DI0Cntl_PD                         0x8C28
    #define     B16Gbl_I2S2_DI0Cntl_PD                         0x8C28
    #define   LSb32Gbl_I2S2_DI0Cntl_PD                            4
    #define   LSb16Gbl_I2S2_DI0Cntl_PD                            4
    #define       bGbl_I2S2_DI0Cntl_PD                         1
    #define   MSK32Gbl_I2S2_DI0Cntl_PD                            0x00000010

    #define     BA_Gbl_I2S2_DI0Cntl_PU                         0x8C28
    #define     B16Gbl_I2S2_DI0Cntl_PU                         0x8C28
    #define   LSb32Gbl_I2S2_DI0Cntl_PU                            5
    #define   LSb16Gbl_I2S2_DI0Cntl_PU                            5
    #define       bGbl_I2S2_DI0Cntl_PU                         1
    #define   MSK32Gbl_I2S2_DI0Cntl_PU                            0x00000020

    #define     BA_Gbl_I2S2_DI0Cntl_SL                         0x8C28
    #define     B16Gbl_I2S2_DI0Cntl_SL                         0x8C28
    #define   LSb32Gbl_I2S2_DI0Cntl_SL                            6
    #define   LSb16Gbl_I2S2_DI0Cntl_SL                            6
    #define       bGbl_I2S2_DI0Cntl_SL                         1
    #define   MSK32Gbl_I2S2_DI0Cntl_SL                            0x00000040

    #define     BA_Gbl_I2S2_DI0Cntl_ST                         0x8C28
    #define     B16Gbl_I2S2_DI0Cntl_ST                         0x8C28
    #define   LSb32Gbl_I2S2_DI0Cntl_ST                            7
    #define   LSb16Gbl_I2S2_DI0Cntl_ST                            7
    #define       bGbl_I2S2_DI0Cntl_ST                         1
    #define   MSK32Gbl_I2S2_DI0Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_DI1Cntl                            0x8C2C

    #define     BA_Gbl_I2S2_DI1Cntl_DS0                        0x8C2C
    #define     B16Gbl_I2S2_DI1Cntl_DS0                        0x8C2C
    #define   LSb32Gbl_I2S2_DI1Cntl_DS0                           0
    #define   LSb16Gbl_I2S2_DI1Cntl_DS0                           0
    #define       bGbl_I2S2_DI1Cntl_DS0                        1
    #define   MSK32Gbl_I2S2_DI1Cntl_DS0                           0x00000001

    #define     BA_Gbl_I2S2_DI1Cntl_DS1                        0x8C2C
    #define     B16Gbl_I2S2_DI1Cntl_DS1                        0x8C2C
    #define   LSb32Gbl_I2S2_DI1Cntl_DS1                           1
    #define   LSb16Gbl_I2S2_DI1Cntl_DS1                           1
    #define       bGbl_I2S2_DI1Cntl_DS1                        1
    #define   MSK32Gbl_I2S2_DI1Cntl_DS1                           0x00000002

    #define     BA_Gbl_I2S2_DI1Cntl_DS2                        0x8C2C
    #define     B16Gbl_I2S2_DI1Cntl_DS2                        0x8C2C
    #define   LSb32Gbl_I2S2_DI1Cntl_DS2                           2
    #define   LSb16Gbl_I2S2_DI1Cntl_DS2                           2
    #define       bGbl_I2S2_DI1Cntl_DS2                        1
    #define   MSK32Gbl_I2S2_DI1Cntl_DS2                           0x00000004

    #define     BA_Gbl_I2S2_DI1Cntl_IE                         0x8C2C
    #define     B16Gbl_I2S2_DI1Cntl_IE                         0x8C2C
    #define   LSb32Gbl_I2S2_DI1Cntl_IE                            3
    #define   LSb16Gbl_I2S2_DI1Cntl_IE                            3
    #define       bGbl_I2S2_DI1Cntl_IE                         1
    #define   MSK32Gbl_I2S2_DI1Cntl_IE                            0x00000008

    #define     BA_Gbl_I2S2_DI1Cntl_PD                         0x8C2C
    #define     B16Gbl_I2S2_DI1Cntl_PD                         0x8C2C
    #define   LSb32Gbl_I2S2_DI1Cntl_PD                            4
    #define   LSb16Gbl_I2S2_DI1Cntl_PD                            4
    #define       bGbl_I2S2_DI1Cntl_PD                         1
    #define   MSK32Gbl_I2S2_DI1Cntl_PD                            0x00000010

    #define     BA_Gbl_I2S2_DI1Cntl_PU                         0x8C2C
    #define     B16Gbl_I2S2_DI1Cntl_PU                         0x8C2C
    #define   LSb32Gbl_I2S2_DI1Cntl_PU                            5
    #define   LSb16Gbl_I2S2_DI1Cntl_PU                            5
    #define       bGbl_I2S2_DI1Cntl_PU                         1
    #define   MSK32Gbl_I2S2_DI1Cntl_PU                            0x00000020

    #define     BA_Gbl_I2S2_DI1Cntl_SL                         0x8C2C
    #define     B16Gbl_I2S2_DI1Cntl_SL                         0x8C2C
    #define   LSb32Gbl_I2S2_DI1Cntl_SL                            6
    #define   LSb16Gbl_I2S2_DI1Cntl_SL                            6
    #define       bGbl_I2S2_DI1Cntl_SL                         1
    #define   MSK32Gbl_I2S2_DI1Cntl_SL                            0x00000040

    #define     BA_Gbl_I2S2_DI1Cntl_ST                         0x8C2C
    #define     B16Gbl_I2S2_DI1Cntl_ST                         0x8C2C
    #define   LSb32Gbl_I2S2_DI1Cntl_ST                            7
    #define   LSb16Gbl_I2S2_DI1Cntl_ST                            7
    #define       bGbl_I2S2_DI1Cntl_ST                         1
    #define   MSK32Gbl_I2S2_DI1Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_DI2Cntl                            0x8C30

    #define     BA_Gbl_I2S2_DI2Cntl_DS0                        0x8C30
    #define     B16Gbl_I2S2_DI2Cntl_DS0                        0x8C30
    #define   LSb32Gbl_I2S2_DI2Cntl_DS0                           0
    #define   LSb16Gbl_I2S2_DI2Cntl_DS0                           0
    #define       bGbl_I2S2_DI2Cntl_DS0                        1
    #define   MSK32Gbl_I2S2_DI2Cntl_DS0                           0x00000001

    #define     BA_Gbl_I2S2_DI2Cntl_DS1                        0x8C30
    #define     B16Gbl_I2S2_DI2Cntl_DS1                        0x8C30
    #define   LSb32Gbl_I2S2_DI2Cntl_DS1                           1
    #define   LSb16Gbl_I2S2_DI2Cntl_DS1                           1
    #define       bGbl_I2S2_DI2Cntl_DS1                        1
    #define   MSK32Gbl_I2S2_DI2Cntl_DS1                           0x00000002

    #define     BA_Gbl_I2S2_DI2Cntl_DS2                        0x8C30
    #define     B16Gbl_I2S2_DI2Cntl_DS2                        0x8C30
    #define   LSb32Gbl_I2S2_DI2Cntl_DS2                           2
    #define   LSb16Gbl_I2S2_DI2Cntl_DS2                           2
    #define       bGbl_I2S2_DI2Cntl_DS2                        1
    #define   MSK32Gbl_I2S2_DI2Cntl_DS2                           0x00000004

    #define     BA_Gbl_I2S2_DI2Cntl_IE                         0x8C30
    #define     B16Gbl_I2S2_DI2Cntl_IE                         0x8C30
    #define   LSb32Gbl_I2S2_DI2Cntl_IE                            3
    #define   LSb16Gbl_I2S2_DI2Cntl_IE                            3
    #define       bGbl_I2S2_DI2Cntl_IE                         1
    #define   MSK32Gbl_I2S2_DI2Cntl_IE                            0x00000008

    #define     BA_Gbl_I2S2_DI2Cntl_PD                         0x8C30
    #define     B16Gbl_I2S2_DI2Cntl_PD                         0x8C30
    #define   LSb32Gbl_I2S2_DI2Cntl_PD                            4
    #define   LSb16Gbl_I2S2_DI2Cntl_PD                            4
    #define       bGbl_I2S2_DI2Cntl_PD                         1
    #define   MSK32Gbl_I2S2_DI2Cntl_PD                            0x00000010

    #define     BA_Gbl_I2S2_DI2Cntl_PU                         0x8C30
    #define     B16Gbl_I2S2_DI2Cntl_PU                         0x8C30
    #define   LSb32Gbl_I2S2_DI2Cntl_PU                            5
    #define   LSb16Gbl_I2S2_DI2Cntl_PU                            5
    #define       bGbl_I2S2_DI2Cntl_PU                         1
    #define   MSK32Gbl_I2S2_DI2Cntl_PU                            0x00000020

    #define     BA_Gbl_I2S2_DI2Cntl_SL                         0x8C30
    #define     B16Gbl_I2S2_DI2Cntl_SL                         0x8C30
    #define   LSb32Gbl_I2S2_DI2Cntl_SL                            6
    #define   LSb16Gbl_I2S2_DI2Cntl_SL                            6
    #define       bGbl_I2S2_DI2Cntl_SL                         1
    #define   MSK32Gbl_I2S2_DI2Cntl_SL                            0x00000040

    #define     BA_Gbl_I2S2_DI2Cntl_ST                         0x8C30
    #define     B16Gbl_I2S2_DI2Cntl_ST                         0x8C30
    #define   LSb32Gbl_I2S2_DI2Cntl_ST                            7
    #define   LSb16Gbl_I2S2_DI2Cntl_ST                            7
    #define       bGbl_I2S2_DI2Cntl_ST                         1
    #define   MSK32Gbl_I2S2_DI2Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_DI3Cntl                            0x8C34

    #define     BA_Gbl_I2S2_DI3Cntl_DS0                        0x8C34
    #define     B16Gbl_I2S2_DI3Cntl_DS0                        0x8C34
    #define   LSb32Gbl_I2S2_DI3Cntl_DS0                           0
    #define   LSb16Gbl_I2S2_DI3Cntl_DS0                           0
    #define       bGbl_I2S2_DI3Cntl_DS0                        1
    #define   MSK32Gbl_I2S2_DI3Cntl_DS0                           0x00000001

    #define     BA_Gbl_I2S2_DI3Cntl_DS1                        0x8C34
    #define     B16Gbl_I2S2_DI3Cntl_DS1                        0x8C34
    #define   LSb32Gbl_I2S2_DI3Cntl_DS1                           1
    #define   LSb16Gbl_I2S2_DI3Cntl_DS1                           1
    #define       bGbl_I2S2_DI3Cntl_DS1                        1
    #define   MSK32Gbl_I2S2_DI3Cntl_DS1                           0x00000002

    #define     BA_Gbl_I2S2_DI3Cntl_DS2                        0x8C34
    #define     B16Gbl_I2S2_DI3Cntl_DS2                        0x8C34
    #define   LSb32Gbl_I2S2_DI3Cntl_DS2                           2
    #define   LSb16Gbl_I2S2_DI3Cntl_DS2                           2
    #define       bGbl_I2S2_DI3Cntl_DS2                        1
    #define   MSK32Gbl_I2S2_DI3Cntl_DS2                           0x00000004

    #define     BA_Gbl_I2S2_DI3Cntl_IE                         0x8C34
    #define     B16Gbl_I2S2_DI3Cntl_IE                         0x8C34
    #define   LSb32Gbl_I2S2_DI3Cntl_IE                            3
    #define   LSb16Gbl_I2S2_DI3Cntl_IE                            3
    #define       bGbl_I2S2_DI3Cntl_IE                         1
    #define   MSK32Gbl_I2S2_DI3Cntl_IE                            0x00000008

    #define     BA_Gbl_I2S2_DI3Cntl_PD                         0x8C34
    #define     B16Gbl_I2S2_DI3Cntl_PD                         0x8C34
    #define   LSb32Gbl_I2S2_DI3Cntl_PD                            4
    #define   LSb16Gbl_I2S2_DI3Cntl_PD                            4
    #define       bGbl_I2S2_DI3Cntl_PD                         1
    #define   MSK32Gbl_I2S2_DI3Cntl_PD                            0x00000010

    #define     BA_Gbl_I2S2_DI3Cntl_PU                         0x8C34
    #define     B16Gbl_I2S2_DI3Cntl_PU                         0x8C34
    #define   LSb32Gbl_I2S2_DI3Cntl_PU                            5
    #define   LSb16Gbl_I2S2_DI3Cntl_PU                            5
    #define       bGbl_I2S2_DI3Cntl_PU                         1
    #define   MSK32Gbl_I2S2_DI3Cntl_PU                            0x00000020

    #define     BA_Gbl_I2S2_DI3Cntl_SL                         0x8C34
    #define     B16Gbl_I2S2_DI3Cntl_SL                         0x8C34
    #define   LSb32Gbl_I2S2_DI3Cntl_SL                            6
    #define   LSb16Gbl_I2S2_DI3Cntl_SL                            6
    #define       bGbl_I2S2_DI3Cntl_SL                         1
    #define   MSK32Gbl_I2S2_DI3Cntl_SL                            0x00000040

    #define     BA_Gbl_I2S2_DI3Cntl_ST                         0x8C34
    #define     B16Gbl_I2S2_DI3Cntl_ST                         0x8C34
    #define   LSb32Gbl_I2S2_DI3Cntl_ST                            7
    #define   LSb16Gbl_I2S2_DI3Cntl_ST                            7
    #define       bGbl_I2S2_DI3Cntl_ST                         1
    #define   MSK32Gbl_I2S2_DI3Cntl_ST                            0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S1_MCLKCntl                           0x8C38

    #define     BA_Gbl_I2S1_MCLKCntl_DS0                       0x8C38
    #define     B16Gbl_I2S1_MCLKCntl_DS0                       0x8C38
    #define   LSb32Gbl_I2S1_MCLKCntl_DS0                          0
    #define   LSb16Gbl_I2S1_MCLKCntl_DS0                          0
    #define       bGbl_I2S1_MCLKCntl_DS0                       1
    #define   MSK32Gbl_I2S1_MCLKCntl_DS0                          0x00000001

    #define     BA_Gbl_I2S1_MCLKCntl_DS1                       0x8C38
    #define     B16Gbl_I2S1_MCLKCntl_DS1                       0x8C38
    #define   LSb32Gbl_I2S1_MCLKCntl_DS1                          1
    #define   LSb16Gbl_I2S1_MCLKCntl_DS1                          1
    #define       bGbl_I2S1_MCLKCntl_DS1                       1
    #define   MSK32Gbl_I2S1_MCLKCntl_DS1                          0x00000002

    #define     BA_Gbl_I2S1_MCLKCntl_DS2                       0x8C38
    #define     B16Gbl_I2S1_MCLKCntl_DS2                       0x8C38
    #define   LSb32Gbl_I2S1_MCLKCntl_DS2                          2
    #define   LSb16Gbl_I2S1_MCLKCntl_DS2                          2
    #define       bGbl_I2S1_MCLKCntl_DS2                       1
    #define   MSK32Gbl_I2S1_MCLKCntl_DS2                          0x00000004

    #define     BA_Gbl_I2S1_MCLKCntl_IE                        0x8C38
    #define     B16Gbl_I2S1_MCLKCntl_IE                        0x8C38
    #define   LSb32Gbl_I2S1_MCLKCntl_IE                           3
    #define   LSb16Gbl_I2S1_MCLKCntl_IE                           3
    #define       bGbl_I2S1_MCLKCntl_IE                        1
    #define   MSK32Gbl_I2S1_MCLKCntl_IE                           0x00000008

    #define     BA_Gbl_I2S1_MCLKCntl_PD                        0x8C38
    #define     B16Gbl_I2S1_MCLKCntl_PD                        0x8C38
    #define   LSb32Gbl_I2S1_MCLKCntl_PD                           4
    #define   LSb16Gbl_I2S1_MCLKCntl_PD                           4
    #define       bGbl_I2S1_MCLKCntl_PD                        1
    #define   MSK32Gbl_I2S1_MCLKCntl_PD                           0x00000010

    #define     BA_Gbl_I2S1_MCLKCntl_PU                        0x8C38
    #define     B16Gbl_I2S1_MCLKCntl_PU                        0x8C38
    #define   LSb32Gbl_I2S1_MCLKCntl_PU                           5
    #define   LSb16Gbl_I2S1_MCLKCntl_PU                           5
    #define       bGbl_I2S1_MCLKCntl_PU                        1
    #define   MSK32Gbl_I2S1_MCLKCntl_PU                           0x00000020

    #define     BA_Gbl_I2S1_MCLKCntl_SL                        0x8C38
    #define     B16Gbl_I2S1_MCLKCntl_SL                        0x8C38
    #define   LSb32Gbl_I2S1_MCLKCntl_SL                           6
    #define   LSb16Gbl_I2S1_MCLKCntl_SL                           6
    #define       bGbl_I2S1_MCLKCntl_SL                        1
    #define   MSK32Gbl_I2S1_MCLKCntl_SL                           0x00000040

    #define     BA_Gbl_I2S1_MCLKCntl_ST                        0x8C38
    #define     B16Gbl_I2S1_MCLKCntl_ST                        0x8C38
    #define   LSb32Gbl_I2S1_MCLKCntl_ST                           7
    #define   LSb16Gbl_I2S1_MCLKCntl_ST                           7
    #define       bGbl_I2S1_MCLKCntl_ST                        1
    #define   MSK32Gbl_I2S1_MCLKCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S2_MCLKCntl                           0x8C3C

    #define     BA_Gbl_I2S2_MCLKCntl_DS0                       0x8C3C
    #define     B16Gbl_I2S2_MCLKCntl_DS0                       0x8C3C
    #define   LSb32Gbl_I2S2_MCLKCntl_DS0                          0
    #define   LSb16Gbl_I2S2_MCLKCntl_DS0                          0
    #define       bGbl_I2S2_MCLKCntl_DS0                       1
    #define   MSK32Gbl_I2S2_MCLKCntl_DS0                          0x00000001

    #define     BA_Gbl_I2S2_MCLKCntl_DS1                       0x8C3C
    #define     B16Gbl_I2S2_MCLKCntl_DS1                       0x8C3C
    #define   LSb32Gbl_I2S2_MCLKCntl_DS1                          1
    #define   LSb16Gbl_I2S2_MCLKCntl_DS1                          1
    #define       bGbl_I2S2_MCLKCntl_DS1                       1
    #define   MSK32Gbl_I2S2_MCLKCntl_DS1                          0x00000002

    #define     BA_Gbl_I2S2_MCLKCntl_DS2                       0x8C3C
    #define     B16Gbl_I2S2_MCLKCntl_DS2                       0x8C3C
    #define   LSb32Gbl_I2S2_MCLKCntl_DS2                          2
    #define   LSb16Gbl_I2S2_MCLKCntl_DS2                          2
    #define       bGbl_I2S2_MCLKCntl_DS2                       1
    #define   MSK32Gbl_I2S2_MCLKCntl_DS2                          0x00000004

    #define     BA_Gbl_I2S2_MCLKCntl_IE                        0x8C3C
    #define     B16Gbl_I2S2_MCLKCntl_IE                        0x8C3C
    #define   LSb32Gbl_I2S2_MCLKCntl_IE                           3
    #define   LSb16Gbl_I2S2_MCLKCntl_IE                           3
    #define       bGbl_I2S2_MCLKCntl_IE                        1
    #define   MSK32Gbl_I2S2_MCLKCntl_IE                           0x00000008

    #define     BA_Gbl_I2S2_MCLKCntl_PD                        0x8C3C
    #define     B16Gbl_I2S2_MCLKCntl_PD                        0x8C3C
    #define   LSb32Gbl_I2S2_MCLKCntl_PD                           4
    #define   LSb16Gbl_I2S2_MCLKCntl_PD                           4
    #define       bGbl_I2S2_MCLKCntl_PD                        1
    #define   MSK32Gbl_I2S2_MCLKCntl_PD                           0x00000010

    #define     BA_Gbl_I2S2_MCLKCntl_PU                        0x8C3C
    #define     B16Gbl_I2S2_MCLKCntl_PU                        0x8C3C
    #define   LSb32Gbl_I2S2_MCLKCntl_PU                           5
    #define   LSb16Gbl_I2S2_MCLKCntl_PU                           5
    #define       bGbl_I2S2_MCLKCntl_PU                        1
    #define   MSK32Gbl_I2S2_MCLKCntl_PU                           0x00000020

    #define     BA_Gbl_I2S2_MCLKCntl_SL                        0x8C3C
    #define     B16Gbl_I2S2_MCLKCntl_SL                        0x8C3C
    #define   LSb32Gbl_I2S2_MCLKCntl_SL                           6
    #define   LSb16Gbl_I2S2_MCLKCntl_SL                           6
    #define       bGbl_I2S2_MCLKCntl_SL                        1
    #define   MSK32Gbl_I2S2_MCLKCntl_SL                           0x00000040

    #define     BA_Gbl_I2S2_MCLKCntl_ST                        0x8C3C
    #define     B16Gbl_I2S2_MCLKCntl_ST                        0x8C3C
    #define   LSb32Gbl_I2S2_MCLKCntl_ST                           7
    #define   LSb16Gbl_I2S2_MCLKCntl_ST                           7
    #define       bGbl_I2S2_MCLKCntl_ST                        1
    #define   MSK32Gbl_I2S2_MCLKCntl_ST                           0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_HDMI_TX_EDDC_SCLCntl                    0x8C40

    #define     BA_Gbl_HDMI_TX_EDDC_SCLCntl_DS0                0x8C40
    #define     B16Gbl_HDMI_TX_EDDC_SCLCntl_DS0                0x8C40
    #define   LSb32Gbl_HDMI_TX_EDDC_SCLCntl_DS0                   0
    #define   LSb16Gbl_HDMI_TX_EDDC_SCLCntl_DS0                   0
    #define       bGbl_HDMI_TX_EDDC_SCLCntl_DS0                1
    #define   MSK32Gbl_HDMI_TX_EDDC_SCLCntl_DS0                   0x00000001

    #define     BA_Gbl_HDMI_TX_EDDC_SCLCntl_DS1                0x8C40
    #define     B16Gbl_HDMI_TX_EDDC_SCLCntl_DS1                0x8C40
    #define   LSb32Gbl_HDMI_TX_EDDC_SCLCntl_DS1                   1
    #define   LSb16Gbl_HDMI_TX_EDDC_SCLCntl_DS1                   1
    #define       bGbl_HDMI_TX_EDDC_SCLCntl_DS1                1
    #define   MSK32Gbl_HDMI_TX_EDDC_SCLCntl_DS1                   0x00000002

    #define     BA_Gbl_HDMI_TX_EDDC_SCLCntl_DS2                0x8C40
    #define     B16Gbl_HDMI_TX_EDDC_SCLCntl_DS2                0x8C40
    #define   LSb32Gbl_HDMI_TX_EDDC_SCLCntl_DS2                   2
    #define   LSb16Gbl_HDMI_TX_EDDC_SCLCntl_DS2                   2
    #define       bGbl_HDMI_TX_EDDC_SCLCntl_DS2                1
    #define   MSK32Gbl_HDMI_TX_EDDC_SCLCntl_DS2                   0x00000004

    #define     BA_Gbl_HDMI_TX_EDDC_SCLCntl_DS3                0x8C40
    #define     B16Gbl_HDMI_TX_EDDC_SCLCntl_DS3                0x8C40
    #define   LSb32Gbl_HDMI_TX_EDDC_SCLCntl_DS3                   3
    #define   LSb16Gbl_HDMI_TX_EDDC_SCLCntl_DS3                   3
    #define       bGbl_HDMI_TX_EDDC_SCLCntl_DS3                1
    #define   MSK32Gbl_HDMI_TX_EDDC_SCLCntl_DS3                   0x00000008

    #define     BA_Gbl_HDMI_TX_EDDC_SCLCntl_IE                 0x8C40
    #define     B16Gbl_HDMI_TX_EDDC_SCLCntl_IE                 0x8C40
    #define   LSb32Gbl_HDMI_TX_EDDC_SCLCntl_IE                    4
    #define   LSb16Gbl_HDMI_TX_EDDC_SCLCntl_IE                    4
    #define       bGbl_HDMI_TX_EDDC_SCLCntl_IE                 1
    #define   MSK32Gbl_HDMI_TX_EDDC_SCLCntl_IE                    0x00000010

    #define     BA_Gbl_HDMI_TX_EDDC_SCLCntl_PE                 0x8C40
    #define     B16Gbl_HDMI_TX_EDDC_SCLCntl_PE                 0x8C40
    #define   LSb32Gbl_HDMI_TX_EDDC_SCLCntl_PE                    5
    #define   LSb16Gbl_HDMI_TX_EDDC_SCLCntl_PE                    5
    #define       bGbl_HDMI_TX_EDDC_SCLCntl_PE                 1
    #define   MSK32Gbl_HDMI_TX_EDDC_SCLCntl_PE                    0x00000020

    #define     BA_Gbl_HDMI_TX_EDDC_SCLCntl_PS                 0x8C40
    #define     B16Gbl_HDMI_TX_EDDC_SCLCntl_PS                 0x8C40
    #define   LSb32Gbl_HDMI_TX_EDDC_SCLCntl_PS                    6
    #define   LSb16Gbl_HDMI_TX_EDDC_SCLCntl_PS                    6
    #define       bGbl_HDMI_TX_EDDC_SCLCntl_PS                 1
    #define   MSK32Gbl_HDMI_TX_EDDC_SCLCntl_PS                    0x00000040

    #define     BA_Gbl_HDMI_TX_EDDC_SCLCntl_SL                 0x8C40
    #define     B16Gbl_HDMI_TX_EDDC_SCLCntl_SL                 0x8C40
    #define   LSb32Gbl_HDMI_TX_EDDC_SCLCntl_SL                    7
    #define   LSb16Gbl_HDMI_TX_EDDC_SCLCntl_SL                    7
    #define       bGbl_HDMI_TX_EDDC_SCLCntl_SL                 1
    #define   MSK32Gbl_HDMI_TX_EDDC_SCLCntl_SL                    0x00000080

    #define     BA_Gbl_HDMI_TX_EDDC_SCLCntl_SPU                0x8C41
    #define     B16Gbl_HDMI_TX_EDDC_SCLCntl_SPU                0x8C40
    #define   LSb32Gbl_HDMI_TX_EDDC_SCLCntl_SPU                   8
    #define   LSb16Gbl_HDMI_TX_EDDC_SCLCntl_SPU                   8
    #define       bGbl_HDMI_TX_EDDC_SCLCntl_SPU                1
    #define   MSK32Gbl_HDMI_TX_EDDC_SCLCntl_SPU                   0x00000100

    #define     BA_Gbl_HDMI_TX_EDDC_SCLCntl_ST                 0x8C41
    #define     B16Gbl_HDMI_TX_EDDC_SCLCntl_ST                 0x8C40
    #define   LSb32Gbl_HDMI_TX_EDDC_SCLCntl_ST                    9
    #define   LSb16Gbl_HDMI_TX_EDDC_SCLCntl_ST                    9
    #define       bGbl_HDMI_TX_EDDC_SCLCntl_ST                 1
    #define   MSK32Gbl_HDMI_TX_EDDC_SCLCntl_ST                    0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_HDMI_TX_EDDC_SDACntl                    0x8C44

    #define     BA_Gbl_HDMI_TX_EDDC_SDACntl_DS0                0x8C44
    #define     B16Gbl_HDMI_TX_EDDC_SDACntl_DS0                0x8C44
    #define   LSb32Gbl_HDMI_TX_EDDC_SDACntl_DS0                   0
    #define   LSb16Gbl_HDMI_TX_EDDC_SDACntl_DS0                   0
    #define       bGbl_HDMI_TX_EDDC_SDACntl_DS0                1
    #define   MSK32Gbl_HDMI_TX_EDDC_SDACntl_DS0                   0x00000001

    #define     BA_Gbl_HDMI_TX_EDDC_SDACntl_DS1                0x8C44
    #define     B16Gbl_HDMI_TX_EDDC_SDACntl_DS1                0x8C44
    #define   LSb32Gbl_HDMI_TX_EDDC_SDACntl_DS1                   1
    #define   LSb16Gbl_HDMI_TX_EDDC_SDACntl_DS1                   1
    #define       bGbl_HDMI_TX_EDDC_SDACntl_DS1                1
    #define   MSK32Gbl_HDMI_TX_EDDC_SDACntl_DS1                   0x00000002

    #define     BA_Gbl_HDMI_TX_EDDC_SDACntl_DS2                0x8C44
    #define     B16Gbl_HDMI_TX_EDDC_SDACntl_DS2                0x8C44
    #define   LSb32Gbl_HDMI_TX_EDDC_SDACntl_DS2                   2
    #define   LSb16Gbl_HDMI_TX_EDDC_SDACntl_DS2                   2
    #define       bGbl_HDMI_TX_EDDC_SDACntl_DS2                1
    #define   MSK32Gbl_HDMI_TX_EDDC_SDACntl_DS2                   0x00000004

    #define     BA_Gbl_HDMI_TX_EDDC_SDACntl_DS3                0x8C44
    #define     B16Gbl_HDMI_TX_EDDC_SDACntl_DS3                0x8C44
    #define   LSb32Gbl_HDMI_TX_EDDC_SDACntl_DS3                   3
    #define   LSb16Gbl_HDMI_TX_EDDC_SDACntl_DS3                   3
    #define       bGbl_HDMI_TX_EDDC_SDACntl_DS3                1
    #define   MSK32Gbl_HDMI_TX_EDDC_SDACntl_DS3                   0x00000008

    #define     BA_Gbl_HDMI_TX_EDDC_SDACntl_IE                 0x8C44
    #define     B16Gbl_HDMI_TX_EDDC_SDACntl_IE                 0x8C44
    #define   LSb32Gbl_HDMI_TX_EDDC_SDACntl_IE                    4
    #define   LSb16Gbl_HDMI_TX_EDDC_SDACntl_IE                    4
    #define       bGbl_HDMI_TX_EDDC_SDACntl_IE                 1
    #define   MSK32Gbl_HDMI_TX_EDDC_SDACntl_IE                    0x00000010

    #define     BA_Gbl_HDMI_TX_EDDC_SDACntl_PE                 0x8C44
    #define     B16Gbl_HDMI_TX_EDDC_SDACntl_PE                 0x8C44
    #define   LSb32Gbl_HDMI_TX_EDDC_SDACntl_PE                    5
    #define   LSb16Gbl_HDMI_TX_EDDC_SDACntl_PE                    5
    #define       bGbl_HDMI_TX_EDDC_SDACntl_PE                 1
    #define   MSK32Gbl_HDMI_TX_EDDC_SDACntl_PE                    0x00000020

    #define     BA_Gbl_HDMI_TX_EDDC_SDACntl_PS                 0x8C44
    #define     B16Gbl_HDMI_TX_EDDC_SDACntl_PS                 0x8C44
    #define   LSb32Gbl_HDMI_TX_EDDC_SDACntl_PS                    6
    #define   LSb16Gbl_HDMI_TX_EDDC_SDACntl_PS                    6
    #define       bGbl_HDMI_TX_EDDC_SDACntl_PS                 1
    #define   MSK32Gbl_HDMI_TX_EDDC_SDACntl_PS                    0x00000040

    #define     BA_Gbl_HDMI_TX_EDDC_SDACntl_SL                 0x8C44
    #define     B16Gbl_HDMI_TX_EDDC_SDACntl_SL                 0x8C44
    #define   LSb32Gbl_HDMI_TX_EDDC_SDACntl_SL                    7
    #define   LSb16Gbl_HDMI_TX_EDDC_SDACntl_SL                    7
    #define       bGbl_HDMI_TX_EDDC_SDACntl_SL                 1
    #define   MSK32Gbl_HDMI_TX_EDDC_SDACntl_SL                    0x00000080

    #define     BA_Gbl_HDMI_TX_EDDC_SDACntl_SPU                0x8C45
    #define     B16Gbl_HDMI_TX_EDDC_SDACntl_SPU                0x8C44
    #define   LSb32Gbl_HDMI_TX_EDDC_SDACntl_SPU                   8
    #define   LSb16Gbl_HDMI_TX_EDDC_SDACntl_SPU                   8
    #define       bGbl_HDMI_TX_EDDC_SDACntl_SPU                1
    #define   MSK32Gbl_HDMI_TX_EDDC_SDACntl_SPU                   0x00000100

    #define     BA_Gbl_HDMI_TX_EDDC_SDACntl_ST                 0x8C45
    #define     B16Gbl_HDMI_TX_EDDC_SDACntl_ST                 0x8C44
    #define   LSb32Gbl_HDMI_TX_EDDC_SDACntl_ST                    9
    #define   LSb16Gbl_HDMI_TX_EDDC_SDACntl_ST                    9
    #define       bGbl_HDMI_TX_EDDC_SDACntl_ST                 1
    #define   MSK32Gbl_HDMI_TX_EDDC_SDACntl_ST                    0x00000200
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S3_DOCntl                             0x8C48

    #define     BA_Gbl_I2S3_DOCntl_DS0                         0x8C48
    #define     B16Gbl_I2S3_DOCntl_DS0                         0x8C48
    #define   LSb32Gbl_I2S3_DOCntl_DS0                            0
    #define   LSb16Gbl_I2S3_DOCntl_DS0                            0
    #define       bGbl_I2S3_DOCntl_DS0                         1
    #define   MSK32Gbl_I2S3_DOCntl_DS0                            0x00000001

    #define     BA_Gbl_I2S3_DOCntl_DS1                         0x8C48
    #define     B16Gbl_I2S3_DOCntl_DS1                         0x8C48
    #define   LSb32Gbl_I2S3_DOCntl_DS1                            1
    #define   LSb16Gbl_I2S3_DOCntl_DS1                            1
    #define       bGbl_I2S3_DOCntl_DS1                         1
    #define   MSK32Gbl_I2S3_DOCntl_DS1                            0x00000002

    #define     BA_Gbl_I2S3_DOCntl_DS2                         0x8C48
    #define     B16Gbl_I2S3_DOCntl_DS2                         0x8C48
    #define   LSb32Gbl_I2S3_DOCntl_DS2                            2
    #define   LSb16Gbl_I2S3_DOCntl_DS2                            2
    #define       bGbl_I2S3_DOCntl_DS2                         1
    #define   MSK32Gbl_I2S3_DOCntl_DS2                            0x00000004

    #define     BA_Gbl_I2S3_DOCntl_IE                          0x8C48
    #define     B16Gbl_I2S3_DOCntl_IE                          0x8C48
    #define   LSb32Gbl_I2S3_DOCntl_IE                             3
    #define   LSb16Gbl_I2S3_DOCntl_IE                             3
    #define       bGbl_I2S3_DOCntl_IE                          1
    #define   MSK32Gbl_I2S3_DOCntl_IE                             0x00000008

    #define     BA_Gbl_I2S3_DOCntl_PD                          0x8C48
    #define     B16Gbl_I2S3_DOCntl_PD                          0x8C48
    #define   LSb32Gbl_I2S3_DOCntl_PD                             4
    #define   LSb16Gbl_I2S3_DOCntl_PD                             4
    #define       bGbl_I2S3_DOCntl_PD                          1
    #define   MSK32Gbl_I2S3_DOCntl_PD                             0x00000010

    #define     BA_Gbl_I2S3_DOCntl_PU                          0x8C48
    #define     B16Gbl_I2S3_DOCntl_PU                          0x8C48
    #define   LSb32Gbl_I2S3_DOCntl_PU                             5
    #define   LSb16Gbl_I2S3_DOCntl_PU                             5
    #define       bGbl_I2S3_DOCntl_PU                          1
    #define   MSK32Gbl_I2S3_DOCntl_PU                             0x00000020

    #define     BA_Gbl_I2S3_DOCntl_SL                          0x8C48
    #define     B16Gbl_I2S3_DOCntl_SL                          0x8C48
    #define   LSb32Gbl_I2S3_DOCntl_SL                             6
    #define   LSb16Gbl_I2S3_DOCntl_SL                             6
    #define       bGbl_I2S3_DOCntl_SL                          1
    #define   MSK32Gbl_I2S3_DOCntl_SL                             0x00000040

    #define     BA_Gbl_I2S3_DOCntl_ST                          0x8C48
    #define     B16Gbl_I2S3_DOCntl_ST                          0x8C48
    #define   LSb32Gbl_I2S3_DOCntl_ST                             7
    #define   LSb16Gbl_I2S3_DOCntl_ST                             7
    #define       bGbl_I2S3_DOCntl_ST                          1
    #define   MSK32Gbl_I2S3_DOCntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S3_LRCKIOCntl                         0x8C4C

    #define     BA_Gbl_I2S3_LRCKIOCntl_DS0                     0x8C4C
    #define     B16Gbl_I2S3_LRCKIOCntl_DS0                     0x8C4C
    #define   LSb32Gbl_I2S3_LRCKIOCntl_DS0                        0
    #define   LSb16Gbl_I2S3_LRCKIOCntl_DS0                        0
    #define       bGbl_I2S3_LRCKIOCntl_DS0                     1
    #define   MSK32Gbl_I2S3_LRCKIOCntl_DS0                        0x00000001

    #define     BA_Gbl_I2S3_LRCKIOCntl_DS1                     0x8C4C
    #define     B16Gbl_I2S3_LRCKIOCntl_DS1                     0x8C4C
    #define   LSb32Gbl_I2S3_LRCKIOCntl_DS1                        1
    #define   LSb16Gbl_I2S3_LRCKIOCntl_DS1                        1
    #define       bGbl_I2S3_LRCKIOCntl_DS1                     1
    #define   MSK32Gbl_I2S3_LRCKIOCntl_DS1                        0x00000002

    #define     BA_Gbl_I2S3_LRCKIOCntl_DS2                     0x8C4C
    #define     B16Gbl_I2S3_LRCKIOCntl_DS2                     0x8C4C
    #define   LSb32Gbl_I2S3_LRCKIOCntl_DS2                        2
    #define   LSb16Gbl_I2S3_LRCKIOCntl_DS2                        2
    #define       bGbl_I2S3_LRCKIOCntl_DS2                     1
    #define   MSK32Gbl_I2S3_LRCKIOCntl_DS2                        0x00000004

    #define     BA_Gbl_I2S3_LRCKIOCntl_IE                      0x8C4C
    #define     B16Gbl_I2S3_LRCKIOCntl_IE                      0x8C4C
    #define   LSb32Gbl_I2S3_LRCKIOCntl_IE                         3
    #define   LSb16Gbl_I2S3_LRCKIOCntl_IE                         3
    #define       bGbl_I2S3_LRCKIOCntl_IE                      1
    #define   MSK32Gbl_I2S3_LRCKIOCntl_IE                         0x00000008

    #define     BA_Gbl_I2S3_LRCKIOCntl_PD                      0x8C4C
    #define     B16Gbl_I2S3_LRCKIOCntl_PD                      0x8C4C
    #define   LSb32Gbl_I2S3_LRCKIOCntl_PD                         4
    #define   LSb16Gbl_I2S3_LRCKIOCntl_PD                         4
    #define       bGbl_I2S3_LRCKIOCntl_PD                      1
    #define   MSK32Gbl_I2S3_LRCKIOCntl_PD                         0x00000010

    #define     BA_Gbl_I2S3_LRCKIOCntl_PU                      0x8C4C
    #define     B16Gbl_I2S3_LRCKIOCntl_PU                      0x8C4C
    #define   LSb32Gbl_I2S3_LRCKIOCntl_PU                         5
    #define   LSb16Gbl_I2S3_LRCKIOCntl_PU                         5
    #define       bGbl_I2S3_LRCKIOCntl_PU                      1
    #define   MSK32Gbl_I2S3_LRCKIOCntl_PU                         0x00000020

    #define     BA_Gbl_I2S3_LRCKIOCntl_SL                      0x8C4C
    #define     B16Gbl_I2S3_LRCKIOCntl_SL                      0x8C4C
    #define   LSb32Gbl_I2S3_LRCKIOCntl_SL                         6
    #define   LSb16Gbl_I2S3_LRCKIOCntl_SL                         6
    #define       bGbl_I2S3_LRCKIOCntl_SL                      1
    #define   MSK32Gbl_I2S3_LRCKIOCntl_SL                         0x00000040

    #define     BA_Gbl_I2S3_LRCKIOCntl_ST                      0x8C4C
    #define     B16Gbl_I2S3_LRCKIOCntl_ST                      0x8C4C
    #define   LSb32Gbl_I2S3_LRCKIOCntl_ST                         7
    #define   LSb16Gbl_I2S3_LRCKIOCntl_ST                         7
    #define       bGbl_I2S3_LRCKIOCntl_ST                      1
    #define   MSK32Gbl_I2S3_LRCKIOCntl_ST                         0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S3_BCLKIOCntl                         0x8C50

    #define     BA_Gbl_I2S3_BCLKIOCntl_DS0                     0x8C50
    #define     B16Gbl_I2S3_BCLKIOCntl_DS0                     0x8C50
    #define   LSb32Gbl_I2S3_BCLKIOCntl_DS0                        0
    #define   LSb16Gbl_I2S3_BCLKIOCntl_DS0                        0
    #define       bGbl_I2S3_BCLKIOCntl_DS0                     1
    #define   MSK32Gbl_I2S3_BCLKIOCntl_DS0                        0x00000001

    #define     BA_Gbl_I2S3_BCLKIOCntl_DS1                     0x8C50
    #define     B16Gbl_I2S3_BCLKIOCntl_DS1                     0x8C50
    #define   LSb32Gbl_I2S3_BCLKIOCntl_DS1                        1
    #define   LSb16Gbl_I2S3_BCLKIOCntl_DS1                        1
    #define       bGbl_I2S3_BCLKIOCntl_DS1                     1
    #define   MSK32Gbl_I2S3_BCLKIOCntl_DS1                        0x00000002

    #define     BA_Gbl_I2S3_BCLKIOCntl_DS2                     0x8C50
    #define     B16Gbl_I2S3_BCLKIOCntl_DS2                     0x8C50
    #define   LSb32Gbl_I2S3_BCLKIOCntl_DS2                        2
    #define   LSb16Gbl_I2S3_BCLKIOCntl_DS2                        2
    #define       bGbl_I2S3_BCLKIOCntl_DS2                     1
    #define   MSK32Gbl_I2S3_BCLKIOCntl_DS2                        0x00000004

    #define     BA_Gbl_I2S3_BCLKIOCntl_IE                      0x8C50
    #define     B16Gbl_I2S3_BCLKIOCntl_IE                      0x8C50
    #define   LSb32Gbl_I2S3_BCLKIOCntl_IE                         3
    #define   LSb16Gbl_I2S3_BCLKIOCntl_IE                         3
    #define       bGbl_I2S3_BCLKIOCntl_IE                      1
    #define   MSK32Gbl_I2S3_BCLKIOCntl_IE                         0x00000008

    #define     BA_Gbl_I2S3_BCLKIOCntl_PD                      0x8C50
    #define     B16Gbl_I2S3_BCLKIOCntl_PD                      0x8C50
    #define   LSb32Gbl_I2S3_BCLKIOCntl_PD                         4
    #define   LSb16Gbl_I2S3_BCLKIOCntl_PD                         4
    #define       bGbl_I2S3_BCLKIOCntl_PD                      1
    #define   MSK32Gbl_I2S3_BCLKIOCntl_PD                         0x00000010

    #define     BA_Gbl_I2S3_BCLKIOCntl_PU                      0x8C50
    #define     B16Gbl_I2S3_BCLKIOCntl_PU                      0x8C50
    #define   LSb32Gbl_I2S3_BCLKIOCntl_PU                         5
    #define   LSb16Gbl_I2S3_BCLKIOCntl_PU                         5
    #define       bGbl_I2S3_BCLKIOCntl_PU                      1
    #define   MSK32Gbl_I2S3_BCLKIOCntl_PU                         0x00000020

    #define     BA_Gbl_I2S3_BCLKIOCntl_SL                      0x8C50
    #define     B16Gbl_I2S3_BCLKIOCntl_SL                      0x8C50
    #define   LSb32Gbl_I2S3_BCLKIOCntl_SL                         6
    #define   LSb16Gbl_I2S3_BCLKIOCntl_SL                         6
    #define       bGbl_I2S3_BCLKIOCntl_SL                      1
    #define   MSK32Gbl_I2S3_BCLKIOCntl_SL                         0x00000040

    #define     BA_Gbl_I2S3_BCLKIOCntl_ST                      0x8C50
    #define     B16Gbl_I2S3_BCLKIOCntl_ST                      0x8C50
    #define   LSb32Gbl_I2S3_BCLKIOCntl_ST                         7
    #define   LSb16Gbl_I2S3_BCLKIOCntl_ST                         7
    #define       bGbl_I2S3_BCLKIOCntl_ST                      1
    #define   MSK32Gbl_I2S3_BCLKIOCntl_ST                         0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_I2S3_DICntl                             0x8C54

    #define     BA_Gbl_I2S3_DICntl_DS0                         0x8C54
    #define     B16Gbl_I2S3_DICntl_DS0                         0x8C54
    #define   LSb32Gbl_I2S3_DICntl_DS0                            0
    #define   LSb16Gbl_I2S3_DICntl_DS0                            0
    #define       bGbl_I2S3_DICntl_DS0                         1
    #define   MSK32Gbl_I2S3_DICntl_DS0                            0x00000001

    #define     BA_Gbl_I2S3_DICntl_DS1                         0x8C54
    #define     B16Gbl_I2S3_DICntl_DS1                         0x8C54
    #define   LSb32Gbl_I2S3_DICntl_DS1                            1
    #define   LSb16Gbl_I2S3_DICntl_DS1                            1
    #define       bGbl_I2S3_DICntl_DS1                         1
    #define   MSK32Gbl_I2S3_DICntl_DS1                            0x00000002

    #define     BA_Gbl_I2S3_DICntl_DS2                         0x8C54
    #define     B16Gbl_I2S3_DICntl_DS2                         0x8C54
    #define   LSb32Gbl_I2S3_DICntl_DS2                            2
    #define   LSb16Gbl_I2S3_DICntl_DS2                            2
    #define       bGbl_I2S3_DICntl_DS2                         1
    #define   MSK32Gbl_I2S3_DICntl_DS2                            0x00000004

    #define     BA_Gbl_I2S3_DICntl_IE                          0x8C54
    #define     B16Gbl_I2S3_DICntl_IE                          0x8C54
    #define   LSb32Gbl_I2S3_DICntl_IE                             3
    #define   LSb16Gbl_I2S3_DICntl_IE                             3
    #define       bGbl_I2S3_DICntl_IE                          1
    #define   MSK32Gbl_I2S3_DICntl_IE                             0x00000008

    #define     BA_Gbl_I2S3_DICntl_PD                          0x8C54
    #define     B16Gbl_I2S3_DICntl_PD                          0x8C54
    #define   LSb32Gbl_I2S3_DICntl_PD                             4
    #define   LSb16Gbl_I2S3_DICntl_PD                             4
    #define       bGbl_I2S3_DICntl_PD                          1
    #define   MSK32Gbl_I2S3_DICntl_PD                             0x00000010

    #define     BA_Gbl_I2S3_DICntl_PU                          0x8C54
    #define     B16Gbl_I2S3_DICntl_PU                          0x8C54
    #define   LSb32Gbl_I2S3_DICntl_PU                             5
    #define   LSb16Gbl_I2S3_DICntl_PU                             5
    #define       bGbl_I2S3_DICntl_PU                          1
    #define   MSK32Gbl_I2S3_DICntl_PU                             0x00000020

    #define     BA_Gbl_I2S3_DICntl_SL                          0x8C54
    #define     B16Gbl_I2S3_DICntl_SL                          0x8C54
    #define   LSb32Gbl_I2S3_DICntl_SL                             6
    #define   LSb16Gbl_I2S3_DICntl_SL                             6
    #define       bGbl_I2S3_DICntl_SL                          1
    #define   MSK32Gbl_I2S3_DICntl_SL                             0x00000040

    #define     BA_Gbl_I2S3_DICntl_ST                          0x8C54
    #define     B16Gbl_I2S3_DICntl_ST                          0x8C54
    #define   LSb32Gbl_I2S3_DICntl_ST                             7
    #define   LSb16Gbl_I2S3_DICntl_ST                             7
    #define       bGbl_I2S3_DICntl_ST                          1
    #define   MSK32Gbl_I2S3_DICntl_ST                             0x00000080
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_bootStrapSipll                          0x9000

    #define     BA_Gbl_bootStrapSipll_siPll_Byps               0x9000
    #define     B16Gbl_bootStrapSipll_siPll_Byps               0x9000
    #define   LSb32Gbl_bootStrapSipll_siPll_Byps                  0
    #define   LSb16Gbl_bootStrapSipll_siPll_Byps                  0
    #define       bGbl_bootStrapSipll_siPll_Byps               1
    #define   MSK32Gbl_bootStrapSipll_siPll_Byps                  0x00000001
    #define        Gbl_bootStrapSipll_siPll_Byps_PLL_OUT                    0x0
    #define        Gbl_bootStrapSipll_siPll_Byps_BYPS                       0x1
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_bootStrapEnSipll                        0x9004

    #define     BA_Gbl_bootStrapEnSipll_siPll_BypsEn           0x9004
    #define     B16Gbl_bootStrapEnSipll_siPll_BypsEn           0x9004
    #define   LSb32Gbl_bootStrapEnSipll_siPll_BypsEn              0
    #define   LSb16Gbl_bootStrapEnSipll_siPll_BypsEn              0
    #define       bGbl_bootStrapEnSipll_siPll_BypsEn           1
    #define   MSK32Gbl_bootStrapEnSipll_siPll_BypsEn              0x00000001
    #define        Gbl_bootStrapEnSipll_siPll_BypsEn_ENABLE                 0x1
    #define        Gbl_bootStrapEnSipll_siPll_BypsEn_DISABLE                0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_siPll                                   0x9008
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_siPllClkSwitch                          0x9028

    #define     BA_Gbl_siPllClkSwitch_siPll_SWBypass           0x9028
    #define     B16Gbl_siPllClkSwitch_siPll_SWBypass           0x9028
    #define   LSb32Gbl_siPllClkSwitch_siPll_SWBypass              0
    #define   LSb16Gbl_siPllClkSwitch_siPll_SWBypass              0
    #define       bGbl_siPllClkSwitch_siPll_SWBypass           1
    #define   MSK32Gbl_siPllClkSwitch_siPll_SWBypass              0x00000001
    #define        Gbl_siPllClkSwitch_siPll_SWBypass_refClk                 0x1
    #define        Gbl_siPllClkSwitch_siPll_SWBypass_pllClk                 0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_sissSysClk                              0x902C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_bcmClk                                  0x9030
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_nocsClk                                 0x9034
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_siSSReset                               0x9038

    #define     BA_Gbl_siSSReset_tspSyncReset                  0x9038
    #define     B16Gbl_siSSReset_tspSyncReset                  0x9038
    #define   LSb32Gbl_siSSReset_tspSyncReset                     0
    #define   LSb16Gbl_siSSReset_tspSyncReset                     0
    #define       bGbl_siSSReset_tspSyncReset                  1
    #define   MSK32Gbl_siSSReset_tspSyncReset                     0x00000001
    #define        Gbl_siSSReset_tspSyncReset_assert                        0x1
    #define        Gbl_siSSReset_tspSyncReset_deassert                      0x0

    #define     BA_Gbl_siSSReset_nskSyncReset                  0x9038
    #define     B16Gbl_siSSReset_nskSyncReset                  0x9038
    #define   LSb32Gbl_siSSReset_nskSyncReset                     1
    #define   LSb16Gbl_siSSReset_nskSyncReset                     1
    #define       bGbl_siSSReset_nskSyncReset                  1
    #define   MSK32Gbl_siSSReset_nskSyncReset                     0x00000002
    #define        Gbl_siSSReset_nskSyncReset_assert                        0x1
    #define        Gbl_siSSReset_nskSyncReset_deassert                      0x0

    #define     BA_Gbl_siSSReset_nocsSyncReset                 0x9038
    #define     B16Gbl_siSSReset_nocsSyncReset                 0x9038
    #define   LSb32Gbl_siSSReset_nocsSyncReset                    2
    #define   LSb16Gbl_siSSReset_nocsSyncReset                    2
    #define       bGbl_siSSReset_nocsSyncReset                 1
    #define   MSK32Gbl_siSSReset_nocsSyncReset                    0x00000004
    #define        Gbl_siSSReset_nocsSyncReset_assert                       0x1
    #define        Gbl_siSSReset_nocsSyncReset_deassert                     0x0

    #define     BA_Gbl_siSSReset_ifcpSyncReset                 0x9038
    #define     B16Gbl_siSSReset_ifcpSyncReset                 0x9038
    #define   LSb32Gbl_siSSReset_ifcpSyncReset                    3
    #define   LSb16Gbl_siSSReset_ifcpSyncReset                    3
    #define       bGbl_siSSReset_ifcpSyncReset                 1
    #define   MSK32Gbl_siSSReset_ifcpSyncReset                    0x00000008
    #define        Gbl_siSSReset_ifcpSyncReset_assert                       0x1
    #define        Gbl_siSSReset_ifcpSyncReset_deassert                     0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_siSSResetStatus                         0x903C

    #define     BA_Gbl_siSSResetStatus_tspSyncReset            0x903C
    #define     B16Gbl_siSSResetStatus_tspSyncReset            0x903C
    #define   LSb32Gbl_siSSResetStatus_tspSyncReset               0
    #define   LSb16Gbl_siSSResetStatus_tspSyncReset               0
    #define       bGbl_siSSResetStatus_tspSyncReset            1
    #define   MSK32Gbl_siSSResetStatus_tspSyncReset               0x00000001
    #define        Gbl_siSSResetStatus_tspSyncReset_assert                  0x1
    #define        Gbl_siSSResetStatus_tspSyncReset_deassert                0x0

    #define     BA_Gbl_siSSResetStatus_nskSyncReset            0x903C
    #define     B16Gbl_siSSResetStatus_nskSyncReset            0x903C
    #define   LSb32Gbl_siSSResetStatus_nskSyncReset               1
    #define   LSb16Gbl_siSSResetStatus_nskSyncReset               1
    #define       bGbl_siSSResetStatus_nskSyncReset            1
    #define   MSK32Gbl_siSSResetStatus_nskSyncReset               0x00000002
    #define        Gbl_siSSResetStatus_nskSyncReset_assert                  0x1
    #define        Gbl_siSSResetStatus_nskSyncReset_deassert                0x0

    #define     BA_Gbl_siSSResetStatus_nocsSyncReset           0x903C
    #define     B16Gbl_siSSResetStatus_nocsSyncReset           0x903C
    #define   LSb32Gbl_siSSResetStatus_nocsSyncReset              2
    #define   LSb16Gbl_siSSResetStatus_nocsSyncReset              2
    #define       bGbl_siSSResetStatus_nocsSyncReset           1
    #define   MSK32Gbl_siSSResetStatus_nocsSyncReset              0x00000004
    #define        Gbl_siSSResetStatus_nocsSyncReset_assert                 0x1
    #define        Gbl_siSSResetStatus_nocsSyncReset_deassert               0x0

    #define     BA_Gbl_siSSResetStatus_ifcpSyncReset           0x903C
    #define     B16Gbl_siSSResetStatus_ifcpSyncReset           0x903C
    #define   LSb32Gbl_siSSResetStatus_ifcpSyncReset              3
    #define   LSb16Gbl_siSSResetStatus_ifcpSyncReset              3
    #define       bGbl_siSSResetStatus_ifcpSyncReset           1
    #define   MSK32Gbl_siSSResetStatus_ifcpSyncReset              0x00000008
    #define        Gbl_siSSResetStatus_ifcpSyncReset_assert                 0x1
    #define        Gbl_siSSResetStatus_ifcpSyncReset_deassert               0x0
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_ifcpClk                                 0x9040
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_nskClk                                  0x9044
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_RWTC_SISS                               0x9048
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_SISS                           0x9054
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_NSK2                           0x9058
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_NOCS3                          0x905C
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_IFCP                           0x9060
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_SRAM_PWR_TSP                            0x9064
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_tspClk                                  0x9068
    ///////////////////////////////////////////////////////////
    #define     RA_Gbl_tspRefClk                               0x906C
    ///////////////////////////////////////////////////////////

    typedef struct SIE_Gbl {
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ProductId_Id(r32)                       _BFGET_(r32,31, 0)
    #define   SET32Gbl_ProductId_Id(r32,v)                     _BFSET_(r32,31, 0,v)

    #define     w32Gbl_ProductId                               {\
            UNSG32 uProductId_Id                               : 32;\
          }
    union { UNSG32 u32Gbl_ProductId;
            struct w32Gbl_ProductId;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ProductId_ext_ID_EXT(r32)               _BFGET_(r32, 7, 0)
    #define   SET32Gbl_ProductId_ext_ID_EXT(r32,v)             _BFSET_(r32, 7, 0,v)
    #define   GET16Gbl_ProductId_ext_ID_EXT(r16)               _BFGET_(r16, 7, 0)
    #define   SET16Gbl_ProductId_ext_ID_EXT(r16,v)             _BFSET_(r16, 7, 0,v)

    #define     w32Gbl_ProductId_ext                           {\
            UNSG32 uProductId_ext_ID_EXT                       :  8;\
            UNSG32 RSVDx4_b8                                   : 24;\
          }
    union { UNSG32 u32Gbl_ProductId_ext;
            struct w32Gbl_ProductId_ext;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_INT_ID_VALUE(r32)                       _BFGET_(r32, 7, 0)
    #define   SET32Gbl_INT_ID_VALUE(r32,v)                     _BFSET_(r32, 7, 0,v)
    #define   GET16Gbl_INT_ID_VALUE(r16)                       _BFGET_(r16, 7, 0)
    #define   SET16Gbl_INT_ID_VALUE(r16,v)                     _BFSET_(r16, 7, 0,v)

    #define     w32Gbl_INT_ID                                  {\
            UNSG32 uINT_ID_VALUE                               :  8;\
            UNSG32 RSVDx8_b8                                   : 24;\
          }
    union { UNSG32 u32Gbl_INT_ID;
            struct w32Gbl_INT_ID;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_bootStrap_softwareStrap(r32)            _BFGET_(r32,15, 0)
    #define   SET32Gbl_bootStrap_softwareStrap(r32,v)          _BFSET_(r32,15, 0,v)
    #define   GET16Gbl_bootStrap_softwareStrap(r16)            _BFGET_(r16,15, 0)
    #define   SET16Gbl_bootStrap_softwareStrap(r16,v)          _BFSET_(r16,15, 0,v)

    #define   GET32Gbl_bootStrap_bootSrc(r32)                  _BFGET_(r32,17,16)
    #define   SET32Gbl_bootStrap_bootSrc(r32,v)                _BFSET_(r32,17,16,v)
    #define   GET16Gbl_bootStrap_bootSrc(r16)                  _BFGET_(r16, 1, 0)
    #define   SET16Gbl_bootStrap_bootSrc(r16,v)                _BFSET_(r16, 1, 0,v)

    #define   GET32Gbl_bootStrap_cpuRstByps(r32)               _BFGET_(r32,18,18)
    #define   SET32Gbl_bootStrap_cpuRstByps(r32,v)             _BFSET_(r32,18,18,v)
    #define   GET16Gbl_bootStrap_cpuRstByps(r16)               _BFGET_(r16, 2, 2)
    #define   SET16Gbl_bootStrap_cpuRstByps(r16,v)             _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_bootStrap_pllPwrDown(r32)               _BFGET_(r32,19,19)
    #define   SET32Gbl_bootStrap_pllPwrDown(r32,v)             _BFSET_(r32,19,19,v)
    #define   GET16Gbl_bootStrap_pllPwrDown(r16)               _BFGET_(r16, 3, 3)
    #define   SET16Gbl_bootStrap_pllPwrDown(r16,v)             _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_bootStrap_sysPll_0Byps(r32)             _BFGET_(r32,20,20)
    #define   SET32Gbl_bootStrap_sysPll_0Byps(r32,v)           _BFSET_(r32,20,20,v)
    #define   GET16Gbl_bootStrap_sysPll_0Byps(r16)             _BFGET_(r16, 4, 4)
    #define   SET16Gbl_bootStrap_sysPll_0Byps(r16,v)           _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_bootStrap_sysPll_1Byps(r32)             _BFGET_(r32,21,21)
    #define   SET32Gbl_bootStrap_sysPll_1Byps(r32,v)           _BFSET_(r32,21,21,v)
    #define   GET16Gbl_bootStrap_sysPll_1Byps(r16)             _BFGET_(r16, 5, 5)
    #define   SET16Gbl_bootStrap_sysPll_1Byps(r16,v)           _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_bootStrap_reserve(r32)                  _BFGET_(r32,22,22)
    #define   SET32Gbl_bootStrap_reserve(r32,v)                _BFSET_(r32,22,22,v)
    #define   GET16Gbl_bootStrap_reserve(r16)                  _BFGET_(r16, 6, 6)
    #define   SET16Gbl_bootStrap_reserve(r16,v)                _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_bootStrap_memPllByps(r32)               _BFGET_(r32,23,23)
    #define   SET32Gbl_bootStrap_memPllByps(r32,v)             _BFSET_(r32,23,23,v)
    #define   GET16Gbl_bootStrap_memPllByps(r16)               _BFGET_(r16, 7, 7)
    #define   SET16Gbl_bootStrap_memPllByps(r16,v)             _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_bootStrap_cpuPllByps(r32)               _BFGET_(r32,24,24)
    #define   SET32Gbl_bootStrap_cpuPllByps(r32,v)             _BFSET_(r32,24,24,v)
    #define   GET16Gbl_bootStrap_cpuPllByps(r16)               _BFGET_(r16, 8, 8)
    #define   SET16Gbl_bootStrap_cpuPllByps(r16,v)             _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_bootStrap_ENG_EN(r32)                   _BFGET_(r32,25,25)
    #define   SET32Gbl_bootStrap_ENG_EN(r32,v)                 _BFSET_(r32,25,25,v)
    #define   GET16Gbl_bootStrap_ENG_EN(r16)                   _BFGET_(r16, 9, 9)
    #define   SET16Gbl_bootStrap_ENG_EN(r16,v)                 _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_bootStrap_LEGACY_BOOT(r32)              _BFGET_(r32,26,26)
    #define   SET32Gbl_bootStrap_LEGACY_BOOT(r32,v)            _BFSET_(r32,26,26,v)
    #define   GET16Gbl_bootStrap_LEGACY_BOOT(r16)              _BFGET_(r16,10,10)
    #define   SET16Gbl_bootStrap_LEGACY_BOOT(r16,v)            _BFSET_(r16,10,10,v)

    #define   GET32Gbl_bootStrap_avPll_0Byps(r32)              _BFGET_(r32,27,27)
    #define   SET32Gbl_bootStrap_avPll_0Byps(r32,v)            _BFSET_(r32,27,27,v)
    #define   GET16Gbl_bootStrap_avPll_0Byps(r16)              _BFGET_(r16,11,11)
    #define   SET16Gbl_bootStrap_avPll_0Byps(r16,v)            _BFSET_(r16,11,11,v)

    #define   GET32Gbl_bootStrap_avPll_1Byps(r32)              _BFGET_(r32,28,28)
    #define   SET32Gbl_bootStrap_avPll_1Byps(r32,v)            _BFSET_(r32,28,28,v)
    #define   GET16Gbl_bootStrap_avPll_1Byps(r16)              _BFGET_(r16,12,12)
    #define   SET16Gbl_bootStrap_avPll_1Byps(r16,v)            _BFSET_(r16,12,12,v)

    #define     w32Gbl_bootStrap                               {\
            UNSG32 ubootStrap_softwareStrap                    : 16;\
            UNSG32 ubootStrap_bootSrc                          :  2;\
            UNSG32 ubootStrap_cpuRstByps                       :  1;\
            UNSG32 ubootStrap_pllPwrDown                       :  1;\
            UNSG32 ubootStrap_sysPll_0Byps                     :  1;\
            UNSG32 ubootStrap_sysPll_1Byps                     :  1;\
            UNSG32 ubootStrap_reserve                          :  1;\
            UNSG32 ubootStrap_memPllByps                       :  1;\
            UNSG32 ubootStrap_cpuPllByps                       :  1;\
            UNSG32 ubootStrap_ENG_EN                           :  1;\
            UNSG32 ubootStrap_LEGACY_BOOT                      :  1;\
            UNSG32 ubootStrap_avPll_0Byps                      :  1;\
            UNSG32 ubootStrap_avPll_1Byps                      :  1;\
            UNSG32 RSVDxC_b29                                  :  3;\
          }
    union { UNSG32 u32Gbl_bootStrap;
            struct w32Gbl_bootStrap;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_bootStrapEn_cpuRstBypsEn(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_bootStrapEn_cpuRstBypsEn(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_bootStrapEn_cpuRstBypsEn(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_bootStrapEn_cpuRstBypsEn(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_bootStrapEn_pllPwrDownEn(r32)           _BFGET_(r32, 1, 1)
    #define   SET32Gbl_bootStrapEn_pllPwrDownEn(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_bootStrapEn_pllPwrDownEn(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_bootStrapEn_pllPwrDownEn(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_bootStrapEn_sysPLL_0BypsEn(r32)         _BFGET_(r32, 2, 2)
    #define   SET32Gbl_bootStrapEn_sysPLL_0BypsEn(r32,v)       _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_bootStrapEn_sysPLL_0BypsEn(r16)         _BFGET_(r16, 2, 2)
    #define   SET16Gbl_bootStrapEn_sysPLL_0BypsEn(r16,v)       _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_bootStrapEn_memPLLBypsEn(r32)           _BFGET_(r32, 3, 3)
    #define   SET32Gbl_bootStrapEn_memPLLBypsEn(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_bootStrapEn_memPLLBypsEn(r16)           _BFGET_(r16, 3, 3)
    #define   SET16Gbl_bootStrapEn_memPLLBypsEn(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_bootStrapEn_cpuPLLBypsEn(r32)           _BFGET_(r32, 4, 4)
    #define   SET32Gbl_bootStrapEn_cpuPLLBypsEn(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_bootStrapEn_cpuPLLBypsEn(r16)           _BFGET_(r16, 4, 4)
    #define   SET16Gbl_bootStrapEn_cpuPLLBypsEn(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_bootStrapEn_legacyBootEn(r32)           _BFGET_(r32, 5, 5)
    #define   SET32Gbl_bootStrapEn_legacyBootEn(r32,v)         _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_bootStrapEn_legacyBootEn(r16)           _BFGET_(r16, 5, 5)
    #define   SET16Gbl_bootStrapEn_legacyBootEn(r16,v)         _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_bootStrapEn_sysPLL_1BypsEn(r32)         _BFGET_(r32, 6, 6)
    #define   SET32Gbl_bootStrapEn_sysPLL_1BypsEn(r32,v)       _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_bootStrapEn_sysPLL_1BypsEn(r16)         _BFGET_(r16, 6, 6)
    #define   SET16Gbl_bootStrapEn_sysPLL_1BypsEn(r16,v)       _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_bootStrapEn_reserve(r32)                _BFGET_(r32, 7, 7)
    #define   SET32Gbl_bootStrapEn_reserve(r32,v)              _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_bootStrapEn_reserve(r16)                _BFGET_(r16, 7, 7)
    #define   SET16Gbl_bootStrapEn_reserve(r16,v)              _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_bootStrapEn_avPLL_0BypsEn(r32)          _BFGET_(r32, 8, 8)
    #define   SET32Gbl_bootStrapEn_avPLL_0BypsEn(r32,v)        _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_bootStrapEn_avPLL_0BypsEn(r16)          _BFGET_(r16, 8, 8)
    #define   SET16Gbl_bootStrapEn_avPLL_0BypsEn(r16,v)        _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_bootStrapEn_avPLL_1BypsEn(r32)          _BFGET_(r32, 9, 9)
    #define   SET32Gbl_bootStrapEn_avPLL_1BypsEn(r32,v)        _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_bootStrapEn_avPLL_1BypsEn(r16)          _BFGET_(r16, 9, 9)
    #define   SET16Gbl_bootStrapEn_avPLL_1BypsEn(r16,v)        _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_bootStrapEn                             {\
            UNSG32 ubootStrapEn_cpuRstBypsEn                   :  1;\
            UNSG32 ubootStrapEn_pllPwrDownEn                   :  1;\
            UNSG32 ubootStrapEn_sysPLL_0BypsEn                 :  1;\
            UNSG32 ubootStrapEn_memPLLBypsEn                   :  1;\
            UNSG32 ubootStrapEn_cpuPLLBypsEn                   :  1;\
            UNSG32 ubootStrapEn_legacyBootEn                   :  1;\
            UNSG32 ubootStrapEn_sysPLL_1BypsEn                 :  1;\
            UNSG32 ubootStrapEn_reserve                        :  1;\
            UNSG32 ubootStrapEn_avPLL_0BypsEn                  :  1;\
            UNSG32 ubootStrapEn_avPLL_1BypsEn                  :  1;\
            UNSG32 RSVDx10_b10                                 : 22;\
          }
    union { UNSG32 u32Gbl_bootStrapEn;
            struct w32Gbl_bootStrapEn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_pkgSel_DDR32bit(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_pkgSel_DDR32bit(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_pkgSel_DDR32bit(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_pkgSel_DDR32bit(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_pkgSel_reserved(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_pkgSel_reserved(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_pkgSel_reserved(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_pkgSel_reserved(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_pkgSel                                  {\
            UNSG32 upkgSel_DDR32bit                            :  1;\
            UNSG32 upkgSel_reserved                            :  1;\
            UNSG32 RSVDx14_b2                                  : 30;\
          }
    union { UNSG32 u32Gbl_pkgSel;
            struct w32Gbl_pkgSel;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx18                                     [40];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_chipCntl_DBG_SEL(r32)                   _BFGET_(r32, 2, 0)
    #define   SET32Gbl_chipCntl_DBG_SEL(r32,v)                 _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_chipCntl_DBG_SEL(r16)                   _BFGET_(r16, 2, 0)
    #define   SET16Gbl_chipCntl_DBG_SEL(r16,v)                 _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_chipCntl_PLL_PADDBG_SEL(r32)            _BFGET_(r32, 5, 3)
    #define   SET32Gbl_chipCntl_PLL_PADDBG_SEL(r32,v)          _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_chipCntl_PLL_PADDBG_SEL(r16)            _BFGET_(r16, 5, 3)
    #define   SET16Gbl_chipCntl_PLL_PADDBG_SEL(r16,v)          _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_chipCntl_TW1_SEL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_chipCntl_TW1_SEL(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_chipCntl_TW1_SEL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_chipCntl_TW1_SEL(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_chipCntl_URT2_PORT_SEL(r32)             _BFGET_(r32, 7, 7)
    #define   SET32Gbl_chipCntl_URT2_PORT_SEL(r32,v)           _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_chipCntl_URT2_PORT_SEL(r16)             _BFGET_(r16, 7, 7)
    #define   SET16Gbl_chipCntl_URT2_PORT_SEL(r16,v)           _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_chipCntl                                {\
            UNSG32 uchipCntl_DBG_SEL                           :  3;\
            UNSG32 uchipCntl_PLL_PADDBG_SEL                    :  3;\
            UNSG32 uchipCntl_TW1_SEL                           :  1;\
            UNSG32 uchipCntl_URT2_PORT_SEL                     :  1;\
            UNSG32 RSVDx40_b8                                  : 24;\
          }
    union { UNSG32 u32Gbl_chipCntl;
            struct w32Gbl_chipCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_stsCntl_sts0TwoWire(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_stsCntl_sts0TwoWire(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_stsCntl_sts0TwoWire(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_stsCntl_sts0TwoWire(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_stsCntl_sts1TwoWire(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_stsCntl_sts1TwoWire(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_stsCntl_sts1TwoWire(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_stsCntl_sts1TwoWire(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_stsCntl_sts2TwoWire(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_stsCntl_sts2TwoWire(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_stsCntl_sts2TwoWire(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_stsCntl_sts2TwoWire(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_stsCntl_sts3TwoWire(r32)                _BFGET_(r32, 3, 3)
    #define   SET32Gbl_stsCntl_sts3TwoWire(r32,v)              _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_stsCntl_sts3TwoWire(r16)                _BFGET_(r16, 3, 3)
    #define   SET16Gbl_stsCntl_sts3TwoWire(r16,v)              _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_stsCntl_sts4TwoWire(r32)                _BFGET_(r32, 4, 4)
    #define   SET32Gbl_stsCntl_sts4TwoWire(r32,v)              _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_stsCntl_sts4TwoWire(r16)                _BFGET_(r16, 4, 4)
    #define   SET16Gbl_stsCntl_sts4TwoWire(r16,v)              _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_stsCntl_sts5TwoWire(r32)                _BFGET_(r32, 5, 5)
    #define   SET32Gbl_stsCntl_sts5TwoWire(r32,v)              _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_stsCntl_sts5TwoWire(r16)                _BFGET_(r16, 5, 5)
    #define   SET16Gbl_stsCntl_sts5TwoWire(r16,v)              _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_stsCntl_sts6TwoWire(r32)                _BFGET_(r32, 6, 6)
    #define   SET32Gbl_stsCntl_sts6TwoWire(r32,v)              _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_stsCntl_sts6TwoWire(r16)                _BFGET_(r16, 6, 6)
    #define   SET16Gbl_stsCntl_sts6TwoWire(r16,v)              _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_stsCntl_sts7TwoWire(r32)                _BFGET_(r32, 7, 7)
    #define   SET32Gbl_stsCntl_sts7TwoWire(r32,v)              _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_stsCntl_sts7TwoWire(r16)                _BFGET_(r16, 7, 7)
    #define   SET16Gbl_stsCntl_sts7TwoWire(r16,v)              _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_stsCntl                                 {\
            UNSG32 ustsCntl_sts0TwoWire                        :  1;\
            UNSG32 ustsCntl_sts1TwoWire                        :  1;\
            UNSG32 ustsCntl_sts2TwoWire                        :  1;\
            UNSG32 ustsCntl_sts3TwoWire                        :  1;\
            UNSG32 ustsCntl_sts4TwoWire                        :  1;\
            UNSG32 ustsCntl_sts5TwoWire                        :  1;\
            UNSG32 ustsCntl_sts6TwoWire                        :  1;\
            UNSG32 ustsCntl_sts7TwoWire                        :  1;\
            UNSG32 RSVDx44_b8                                  : 24;\
          }
    union { UNSG32 u32Gbl_stsCntl;
            struct w32Gbl_stsCntl;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx48                                     [56];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic0_swReg0(r32)                 _BFGET_(r32,31, 0)
    #define   SET32Gbl_sw_generic0_swReg0(r32,v)               _BFSET_(r32,31, 0,v)

    #define     w32Gbl_sw_generic0                             {\
            UNSG32 usw_generic0_swReg0                         : 32;\
          }
    union { UNSG32 u32Gbl_sw_generic0;
            struct w32Gbl_sw_generic0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic1_swReg1(r32)                 _BFGET_(r32,31, 0)
    #define   SET32Gbl_sw_generic1_swReg1(r32,v)               _BFSET_(r32,31, 0,v)

    #define     w32Gbl_sw_generic1                             {\
            UNSG32 usw_generic1_swReg1                         : 32;\
          }
    union { UNSG32 u32Gbl_sw_generic1;
            struct w32Gbl_sw_generic1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic2_swReg2(r32)                 _BFGET_(r32,31, 0)
    #define   SET32Gbl_sw_generic2_swReg2(r32,v)               _BFSET_(r32,31, 0,v)

    #define     w32Gbl_sw_generic2                             {\
            UNSG32 usw_generic2_swReg2                         : 32;\
          }
    union { UNSG32 u32Gbl_sw_generic2;
            struct w32Gbl_sw_generic2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_sw_generic3_swReg3(r32)                 _BFGET_(r32,31, 0)
    #define   SET32Gbl_sw_generic3_swReg3(r32,v)               _BFSET_(r32,31, 0,v)

    #define     w32Gbl_sw_generic3                             {\
            UNSG32 usw_generic3_swReg3                         : 32;\
          }
    union { UNSG32 u32Gbl_sw_generic3;
            struct w32Gbl_sw_generic3;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx90                                     [112];
    ///////////////////////////////////////////////////////////
              SIE_SRAMRWTC                                     ie_RWTC_SOC;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_EMMC;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_SDIO;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_USB2;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_USB3;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_PCIE;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_GFX3D;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_V4G;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_H1;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_OVP;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_GE;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_PB;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_NPU;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_MC;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_ALM0;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_ALM1;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_DSP0;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_DSP1;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx150                                    [72];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_FPGAR_FPGAR(r32)                        _BFGET_(r32,31, 0)
    #define   SET32Gbl_FPGAR_FPGAR(r32,v)                      _BFSET_(r32,31, 0,v)

    #define     w32Gbl_FPGAR                                   {\
            UNSG32 uFPGAR_FPGAR                                : 32;\
          }
    union { UNSG32 u32Gbl_FPGAR;
            struct w32Gbl_FPGAR;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_FPGARW_FPGARW(r32)                      _BFGET_(r32,31, 0)
    #define   SET32Gbl_FPGARW_FPGARW(r32,v)                    _BFSET_(r32,31, 0,v)

    #define     w32Gbl_FPGARW                                  {\
            UNSG32 uFPGARW_FPGARW                              : 32;\
          }
    union { UNSG32 u32Gbl_FPGARW;
            struct w32Gbl_FPGARW;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx1A0                                    [96];
    ///////////////////////////////////////////////////////////
              SIE_abipll                                       ie_sysPll_0;
    ///////////////////////////////////////////////////////////
              SIE_abipll                                       ie_sysPll_1;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx240                                    [960];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ResetTrigger_chipReset(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ResetTrigger_chipReset(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ResetTrigger_chipReset(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ResetTrigger_chipReset(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ResetTrigger_socDdrSyncReset(r32)       _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ResetTrigger_socDdrSyncReset(r32,v)     _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_ResetTrigger_socDdrSyncReset(r16)       _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ResetTrigger_socDdrSyncReset(r16,v)     _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_ResetTrigger                            {\
            UNSG32 uResetTrigger_chipReset                     :  1;\
            UNSG32 uResetTrigger_socDdrSyncReset               :  1;\
            UNSG32 RSVDx600_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_ResetTrigger;
            struct w32Gbl_ResetTrigger;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ResetStatus_ChipResetStatus(r32)        _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ResetStatus_ChipResetStatus(r32,v)      _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ResetStatus_ChipResetStatus(r16)        _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ResetStatus_ChipResetStatus(r16,v)      _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ResetStatus_socDdrSyncResetStatus(r32)  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ResetStatus_socDdrSyncResetStatus(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_ResetStatus_socDdrSyncResetStatus(r16)  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ResetStatus_socDdrSyncResetStatus(r16,v) _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_ResetStatus                             {\
            UNSG32 uResetStatus_ChipResetStatus                :  1;\
            UNSG32 uResetStatus_socDdrSyncResetStatus          :  1;\
            UNSG32 RSVDx604_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_ResetStatus;
            struct w32Gbl_ResetStatus;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx608                                    [4];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_WDTResetStatus_wd0Status(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_WDTResetStatus_wd0Status(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_WDTResetStatus_wd0Status(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_WDTResetStatus_wd0Status(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_WDTResetStatus_wd1Status(r32)           _BFGET_(r32, 1, 1)
    #define   SET32Gbl_WDTResetStatus_wd1Status(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_WDTResetStatus_wd1Status(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_WDTResetStatus_wd1Status(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_WDTResetStatus_wd2Status(r32)           _BFGET_(r32, 2, 2)
    #define   SET32Gbl_WDTResetStatus_wd2Status(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_WDTResetStatus_wd2Status(r16)           _BFGET_(r16, 2, 2)
    #define   SET16Gbl_WDTResetStatus_wd2Status(r16,v)         _BFSET_(r16, 2, 2,v)

    #define     w32Gbl_WDTResetStatus                          {\
            UNSG32 uWDTResetStatus_wd0Status                   :  1;\
            UNSG32 uWDTResetStatus_wd1Status                   :  1;\
            UNSG32 uWDTResetStatus_wd2Status                   :  1;\
            UNSG32 RSVDx60C_b3                                 : 29;\
          }
    union { UNSG32 u32Gbl_WDTResetStatus;
            struct w32Gbl_WDTResetStatus;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx610                                    [16];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_avioReset_SyncReset(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_avioReset_SyncReset(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_avioReset_SyncReset(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_avioReset_SyncReset(r16,v)              _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_avioReset                               {\
            UNSG32 uavioReset_SyncReset                        :  1;\
            UNSG32 RSVDx620_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_avioReset;
            struct w32Gbl_avioReset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_avioResetStatus_SyncReset(r32)          _BFGET_(r32, 0, 0)
    #define   SET32Gbl_avioResetStatus_SyncReset(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_avioResetStatus_SyncReset(r16)          _BFGET_(r16, 0, 0)
    #define   SET16Gbl_avioResetStatus_SyncReset(r16,v)        _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_avioResetStatus                         {\
            UNSG32 uavioResetStatus_SyncReset                  :  1;\
            UNSG32 RSVDx624_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_avioResetStatus;
            struct w32Gbl_avioResetStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gethRgmiiRstn_SyncReset(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gethRgmiiRstn_SyncReset(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gethRgmiiRstn_SyncReset(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gethRgmiiRstn_SyncReset(r16,v)          _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gethRgmiiRstn                           {\
            UNSG32 ugethRgmiiRstn_SyncReset                    :  1;\
            UNSG32 RSVDx628_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gethRgmiiRstn;
            struct w32Gbl_gethRgmiiRstn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gethRgmiiResetStatus_SyncReset(r32)     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gethRgmiiResetStatus_SyncReset(r32,v)   _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gethRgmiiResetStatus_SyncReset(r16)     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gethRgmiiResetStatus_SyncReset(r16,v)   _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gethRgmiiResetStatus                    {\
            UNSG32 ugethRgmiiResetStatus_SyncReset             :  1;\
            UNSG32 RSVDx62C_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gethRgmiiResetStatus;
            struct w32Gbl_gethRgmiiResetStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gfx3DReset_SyncReset(r32)               _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gfx3DReset_SyncReset(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gfx3DReset_SyncReset(r16)               _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gfx3DReset_SyncReset(r16,v)             _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gfx3DReset                              {\
            UNSG32 ugfx3DReset_SyncReset                       :  1;\
            UNSG32 RSVDx630_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gfx3DReset;
            struct w32Gbl_gfx3DReset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gfx3DResetStatus_SyncReset(r32)         _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gfx3DResetStatus_SyncReset(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gfx3DResetStatus_SyncReset(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gfx3DResetStatus_SyncReset(r16,v)       _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gfx3DResetStatus                        {\
            UNSG32 ugfx3DResetStatus_SyncReset                 :  1;\
            UNSG32 RSVDx634_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gfx3DResetStatus;
            struct w32Gbl_gfx3DResetStatus;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx638                                    [8];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_decoderReset_SyncReset(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_decoderReset_SyncReset(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_decoderReset_SyncReset(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_decoderReset_SyncReset(r16,v)           _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_decoderReset                            {\
            UNSG32 udecoderReset_SyncReset                     :  1;\
            UNSG32 RSVDx640_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_decoderReset;
            struct w32Gbl_decoderReset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_decoderResetStatus_SyncReset(r32)       _BFGET_(r32, 0, 0)
    #define   SET32Gbl_decoderResetStatus_SyncReset(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_decoderResetStatus_SyncReset(r16)       _BFGET_(r16, 0, 0)
    #define   SET16Gbl_decoderResetStatus_SyncReset(r16,v)     _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_decoderResetStatus                      {\
            UNSG32 udecoderResetStatus_SyncReset               :  1;\
            UNSG32 RSVDx644_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_decoderResetStatus;
            struct w32Gbl_decoderResetStatus;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx648                                    [8];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_encoderReset_SyncReset(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_encoderReset_SyncReset(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_encoderReset_SyncReset(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_encoderReset_SyncReset(r16,v)           _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_encoderReset                            {\
            UNSG32 uencoderReset_SyncReset                     :  1;\
            UNSG32 RSVDx650_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_encoderReset;
            struct w32Gbl_encoderReset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_encoderResetStatus_SyncReset(r32)       _BFGET_(r32, 0, 0)
    #define   SET32Gbl_encoderResetStatus_SyncReset(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_encoderResetStatus_SyncReset(r16)       _BFGET_(r16, 0, 0)
    #define   SET16Gbl_encoderResetStatus_SyncReset(r16,v)     _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_encoderResetStatus                      {\
            UNSG32 uencoderResetStatus_SyncReset               :  1;\
            UNSG32 RSVDx654_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_encoderResetStatus;
            struct w32Gbl_encoderResetStatus;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx658                                    [8];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ovpReset_SyncReset(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ovpReset_SyncReset(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ovpReset_SyncReset(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ovpReset_SyncReset(r16,v)               _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_ovpReset                                {\
            UNSG32 uovpReset_SyncReset                         :  1;\
            UNSG32 RSVDx660_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_ovpReset;
            struct w32Gbl_ovpReset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ovpResetStatus_SyncReset(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ovpResetStatus_SyncReset(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ovpResetStatus_SyncReset(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ovpResetStatus_SyncReset(r16,v)         _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_ovpResetStatus                          {\
            UNSG32 uovpResetStatus_SyncReset                   :  1;\
            UNSG32 RSVDx664_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_ovpResetStatus;
            struct w32Gbl_ovpResetStatus;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx668                                    [8];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_almGeoxbarGRstn_SyncReset(r32)          _BFGET_(r32, 0, 0)
    #define   SET32Gbl_almGeoxbarGRstn_SyncReset(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_almGeoxbarGRstn_SyncReset(r16)          _BFGET_(r16, 0, 0)
    #define   SET16Gbl_almGeoxbarGRstn_SyncReset(r16,v)        _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_almGeoxbarGRstn                         {\
            UNSG32 ualmGeoxbarGRstn_SyncReset                  :  1;\
            UNSG32 RSVDx670_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_almGeoxbarGRstn;
            struct w32Gbl_almGeoxbarGRstn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_almGeoxbarResetStatus_SyncReset(r32)    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_almGeoxbarResetStatus_SyncReset(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_almGeoxbarResetStatus_SyncReset(r16)    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_almGeoxbarResetStatus_SyncReset(r16,v)  _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_almGeoxbarResetStatus                   {\
            UNSG32 ualmGeoxbarResetStatus_SyncReset            :  1;\
            UNSG32 RSVDx674_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_almGeoxbarResetStatus;
            struct w32Gbl_almGeoxbarResetStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_almVnxbarGRstn_SyncReset(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_almVnxbarGRstn_SyncReset(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_almVnxbarGRstn_SyncReset(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_almVnxbarGRstn_SyncReset(r16,v)         _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_almVnxbarGRstn                          {\
            UNSG32 ualmVnxbarGRstn_SyncReset                   :  1;\
            UNSG32 RSVDx678_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_almVnxbarGRstn;
            struct w32Gbl_almVnxbarGRstn;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_almVnxbarResetStatus_SyncReset(r32)     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_almVnxbarResetStatus_SyncReset(r32,v)   _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_almVnxbarResetStatus_SyncReset(r16)     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_almVnxbarResetStatus_SyncReset(r16,v)   _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_almVnxbarResetStatus                    {\
            UNSG32 ualmVnxbarResetStatus_SyncReset             :  1;\
            UNSG32 RSVDx67C_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_almVnxbarResetStatus;
            struct w32Gbl_almVnxbarResetStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_perifReset_SyncReset(r32)               _BFGET_(r32, 0, 0)
    #define   SET32Gbl_perifReset_SyncReset(r32,v)             _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_perifReset_SyncReset(r16)               _BFGET_(r16, 0, 0)
    #define   SET16Gbl_perifReset_SyncReset(r16,v)             _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_perifReset_ahbApbSyncReset(r32)         _BFGET_(r32, 1, 1)
    #define   SET32Gbl_perifReset_ahbApbSyncReset(r32,v)       _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_perifReset_ahbApbSyncReset(r16)         _BFGET_(r16, 1, 1)
    #define   SET16Gbl_perifReset_ahbApbSyncReset(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_perifReset_sdioSyncReset(r32)           _BFGET_(r32, 2, 2)
    #define   SET32Gbl_perifReset_sdioSyncReset(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_perifReset_sdioSyncReset(r16)           _BFGET_(r16, 2, 2)
    #define   SET16Gbl_perifReset_sdioSyncReset(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_perifReset_reserved0(r32)               _BFGET_(r32, 3, 3)
    #define   SET32Gbl_perifReset_reserved0(r32,v)             _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_perifReset_reserved0(r16)               _BFGET_(r16, 3, 3)
    #define   SET16Gbl_perifReset_reserved0(r16,v)             _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_perifReset_reserved1(r32)               _BFGET_(r32, 4, 4)
    #define   SET32Gbl_perifReset_reserved1(r32,v)             _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_perifReset_reserved1(r16)               _BFGET_(r16, 4, 4)
    #define   SET16Gbl_perifReset_reserved1(r16,v)             _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_perifReset_reserved2(r32)               _BFGET_(r32, 5, 5)
    #define   SET32Gbl_perifReset_reserved2(r32,v)             _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_perifReset_reserved2(r16)               _BFGET_(r16, 5, 5)
    #define   SET16Gbl_perifReset_reserved2(r16,v)             _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_perifReset_reserved3(r32)               _BFGET_(r32, 6, 6)
    #define   SET32Gbl_perifReset_reserved3(r32,v)             _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_perifReset_reserved3(r16)               _BFGET_(r16, 6, 6)
    #define   SET16Gbl_perifReset_reserved3(r16,v)             _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_perifReset_reserved4(r32)               _BFGET_(r32, 7, 7)
    #define   SET32Gbl_perifReset_reserved4(r32,v)             _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_perifReset_reserved4(r16)               _BFGET_(r16, 7, 7)
    #define   SET16Gbl_perifReset_reserved4(r16,v)             _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_perifReset_reserved5(r32)               _BFGET_(r32, 8, 8)
    #define   SET32Gbl_perifReset_reserved5(r32,v)             _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_perifReset_reserved5(r16)               _BFGET_(r16, 8, 8)
    #define   SET16Gbl_perifReset_reserved5(r16,v)             _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_perifReset_usb0SyncReset(r32)           _BFGET_(r32, 9, 9)
    #define   SET32Gbl_perifReset_usb0SyncReset(r32,v)         _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_perifReset_usb0SyncReset(r16)           _BFGET_(r16, 9, 9)
    #define   SET16Gbl_perifReset_usb0SyncReset(r16,v)         _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_perifReset_usb3SyncReset(r32)           _BFGET_(r32,10,10)
    #define   SET32Gbl_perifReset_usb3SyncReset(r32,v)         _BFSET_(r32,10,10,v)
    #define   GET16Gbl_perifReset_usb3SyncReset(r16)           _BFGET_(r16,10,10)
    #define   SET16Gbl_perifReset_usb3SyncReset(r16,v)         _BFSET_(r16,10,10,v)

    #define   GET32Gbl_perifReset_emmcSyncReset(r32)           _BFGET_(r32,11,11)
    #define   SET32Gbl_perifReset_emmcSyncReset(r32,v)         _BFSET_(r32,11,11,v)
    #define   GET16Gbl_perifReset_emmcSyncReset(r16)           _BFGET_(r16,11,11)
    #define   SET16Gbl_perifReset_emmcSyncReset(r16,v)         _BFSET_(r16,11,11,v)

    #define   GET32Gbl_perifReset_pBridgeSyncReset(r32)        _BFGET_(r32,12,12)
    #define   SET32Gbl_perifReset_pBridgeSyncReset(r32,v)      _BFSET_(r32,12,12,v)
    #define   GET16Gbl_perifReset_pBridgeSyncReset(r16)        _BFGET_(r16,12,12)
    #define   SET16Gbl_perifReset_pBridgeSyncReset(r16,v)      _BFSET_(r16,12,12,v)

    #define   GET32Gbl_perifReset_reserved6(r32)               _BFGET_(r32,13,13)
    #define   SET32Gbl_perifReset_reserved6(r32,v)             _BFSET_(r32,13,13,v)
    #define   GET16Gbl_perifReset_reserved6(r16)               _BFGET_(r16,13,13)
    #define   SET16Gbl_perifReset_reserved6(r16,v)             _BFSET_(r16,13,13,v)

    #define     w32Gbl_perifReset                              {\
            UNSG32 uperifReset_SyncReset                       :  1;\
            UNSG32 uperifReset_ahbApbSyncReset                 :  1;\
            UNSG32 uperifReset_sdioSyncReset                   :  1;\
            UNSG32 uperifReset_reserved0                       :  1;\
            UNSG32 uperifReset_reserved1                       :  1;\
            UNSG32 uperifReset_reserved2                       :  1;\
            UNSG32 uperifReset_reserved3                       :  1;\
            UNSG32 uperifReset_reserved4                       :  1;\
            UNSG32 uperifReset_reserved5                       :  1;\
            UNSG32 uperifReset_usb0SyncReset                   :  1;\
            UNSG32 uperifReset_usb3SyncReset                   :  1;\
            UNSG32 uperifReset_emmcSyncReset                   :  1;\
            UNSG32 uperifReset_pBridgeSyncReset                :  1;\
            UNSG32 uperifReset_reserved6                       :  1;\
            UNSG32 RSVDx680_b14                                : 18;\
          }
    union { UNSG32 u32Gbl_perifReset;
            struct w32Gbl_perifReset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_perifResetStatus_SyncReset(r32)         _BFGET_(r32, 0, 0)
    #define   SET32Gbl_perifResetStatus_SyncReset(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_perifResetStatus_SyncReset(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_perifResetStatus_SyncReset(r16,v)       _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_perifResetStatus_ahbApbSyncReset(r32)   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_perifResetStatus_ahbApbSyncReset(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_perifResetStatus_ahbApbSyncReset(r16)   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_perifResetStatus_ahbApbSyncReset(r16,v) _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_perifResetStatus_sdioSyncReset(r32)     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_perifResetStatus_sdioSyncReset(r32,v)   _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_perifResetStatus_sdioSyncReset(r16)     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_perifResetStatus_sdioSyncReset(r16,v)   _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_perifResetStatus_reserved0(r32)         _BFGET_(r32, 3, 3)
    #define   SET32Gbl_perifResetStatus_reserved0(r32,v)       _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_perifResetStatus_reserved0(r16)         _BFGET_(r16, 3, 3)
    #define   SET16Gbl_perifResetStatus_reserved0(r16,v)       _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_perifResetStatus_reserved1(r32)         _BFGET_(r32, 4, 4)
    #define   SET32Gbl_perifResetStatus_reserved1(r32,v)       _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_perifResetStatus_reserved1(r16)         _BFGET_(r16, 4, 4)
    #define   SET16Gbl_perifResetStatus_reserved1(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_perifResetStatus_reserved2(r32)         _BFGET_(r32, 5, 5)
    #define   SET32Gbl_perifResetStatus_reserved2(r32,v)       _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_perifResetStatus_reserved2(r16)         _BFGET_(r16, 5, 5)
    #define   SET16Gbl_perifResetStatus_reserved2(r16,v)       _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_perifResetStatus_reserved3(r32)         _BFGET_(r32, 6, 6)
    #define   SET32Gbl_perifResetStatus_reserved3(r32,v)       _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_perifResetStatus_reserved3(r16)         _BFGET_(r16, 6, 6)
    #define   SET16Gbl_perifResetStatus_reserved3(r16,v)       _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_perifResetStatus_reserved4(r32)         _BFGET_(r32, 7, 7)
    #define   SET32Gbl_perifResetStatus_reserved4(r32,v)       _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_perifResetStatus_reserved4(r16)         _BFGET_(r16, 7, 7)
    #define   SET16Gbl_perifResetStatus_reserved4(r16,v)       _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_perifResetStatus_reserved5(r32)         _BFGET_(r32, 8, 8)
    #define   SET32Gbl_perifResetStatus_reserved5(r32,v)       _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_perifResetStatus_reserved5(r16)         _BFGET_(r16, 8, 8)
    #define   SET16Gbl_perifResetStatus_reserved5(r16,v)       _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_perifResetStatus_usb0SyncReset(r32)     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_perifResetStatus_usb0SyncReset(r32,v)   _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_perifResetStatus_usb0SyncReset(r16)     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_perifResetStatus_usb0SyncReset(r16,v)   _BFSET_(r16, 9, 9,v)

    #define   GET32Gbl_perifResetStatus_usb3SyncReset(r32)     _BFGET_(r32,10,10)
    #define   SET32Gbl_perifResetStatus_usb3SyncReset(r32,v)   _BFSET_(r32,10,10,v)
    #define   GET16Gbl_perifResetStatus_usb3SyncReset(r16)     _BFGET_(r16,10,10)
    #define   SET16Gbl_perifResetStatus_usb3SyncReset(r16,v)   _BFSET_(r16,10,10,v)

    #define   GET32Gbl_perifResetStatus_emmcSyncReset(r32)     _BFGET_(r32,11,11)
    #define   SET32Gbl_perifResetStatus_emmcSyncReset(r32,v)   _BFSET_(r32,11,11,v)
    #define   GET16Gbl_perifResetStatus_emmcSyncReset(r16)     _BFGET_(r16,11,11)
    #define   SET16Gbl_perifResetStatus_emmcSyncReset(r16,v)   _BFSET_(r16,11,11,v)

    #define   GET32Gbl_perifResetStatus_pBridgeSyncReset(r32)  _BFGET_(r32,12,12)
    #define   SET32Gbl_perifResetStatus_pBridgeSyncReset(r32,v) _BFSET_(r32,12,12,v)
    #define   GET16Gbl_perifResetStatus_pBridgeSyncReset(r16)  _BFGET_(r16,12,12)
    #define   SET16Gbl_perifResetStatus_pBridgeSyncReset(r16,v) _BFSET_(r16,12,12,v)

    #define   GET32Gbl_perifResetStatus_tsioSyncReset(r32)     _BFGET_(r32,13,13)
    #define   SET32Gbl_perifResetStatus_tsioSyncReset(r32,v)   _BFSET_(r32,13,13,v)
    #define   GET16Gbl_perifResetStatus_tsioSyncReset(r16)     _BFGET_(r16,13,13)
    #define   SET16Gbl_perifResetStatus_tsioSyncReset(r16,v)   _BFSET_(r16,13,13,v)

    #define   GET32Gbl_perifResetStatus_reserved6(r32)         _BFGET_(r32,14,14)
    #define   SET32Gbl_perifResetStatus_reserved6(r32,v)       _BFSET_(r32,14,14,v)
    #define   GET16Gbl_perifResetStatus_reserved6(r16)         _BFGET_(r16,14,14)
    #define   SET16Gbl_perifResetStatus_reserved6(r16,v)       _BFSET_(r16,14,14,v)

    #define     w32Gbl_perifResetStatus                        {\
            UNSG32 uperifResetStatus_SyncReset                 :  1;\
            UNSG32 uperifResetStatus_ahbApbSyncReset           :  1;\
            UNSG32 uperifResetStatus_sdioSyncReset             :  1;\
            UNSG32 uperifResetStatus_reserved0                 :  1;\
            UNSG32 uperifResetStatus_reserved1                 :  1;\
            UNSG32 uperifResetStatus_reserved2                 :  1;\
            UNSG32 uperifResetStatus_reserved3                 :  1;\
            UNSG32 uperifResetStatus_reserved4                 :  1;\
            UNSG32 uperifResetStatus_reserved5                 :  1;\
            UNSG32 uperifResetStatus_usb0SyncReset             :  1;\
            UNSG32 uperifResetStatus_usb3SyncReset             :  1;\
            UNSG32 uperifResetStatus_emmcSyncReset             :  1;\
            UNSG32 uperifResetStatus_pBridgeSyncReset          :  1;\
            UNSG32 uperifResetStatus_tsioSyncReset             :  1;\
            UNSG32 uperifResetStatus_reserved6                 :  1;\
            UNSG32 RSVDx684_b15                                : 17;\
          }
    union { UNSG32 u32Gbl_perifResetStatus;
            struct w32Gbl_perifResetStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_perifStickyResetN_usb3PhyRstn(r32)      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_perifStickyResetN_usb3PhyRstn(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_perifStickyResetN_usb3PhyRstn(r16)      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_perifStickyResetN_usb3PhyRstn(r16,v)    _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_perifStickyResetN_pcie0Rstn(r32)        _BFGET_(r32, 1, 1)
    #define   SET32Gbl_perifStickyResetN_pcie0Rstn(r32,v)      _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_perifStickyResetN_pcie0Rstn(r16)        _BFGET_(r16, 1, 1)
    #define   SET16Gbl_perifStickyResetN_pcie0Rstn(r16,v)      _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_perifStickyResetN_usb0PhyRstn(r32)      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_perifStickyResetN_usb0PhyRstn(r32,v)    _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_perifStickyResetN_usb0PhyRstn(r16)      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_perifStickyResetN_usb0PhyRstn(r16,v)    _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_perifStickyResetN_usb0CoreRstn(r32)     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_perifStickyResetN_usb0CoreRstn(r32,v)   _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_perifStickyResetN_usb0CoreRstn(r16)     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_perifStickyResetN_usb0CoreRstn(r16,v)   _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_perifStickyResetN_usb0MahbRstn(r32)     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_perifStickyResetN_usb0MahbRstn(r32,v)   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_perifStickyResetN_usb0MahbRstn(r16)     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_perifStickyResetN_usb0MahbRstn(r16,v)   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_perifStickyResetN_pciePhyRstn(r32)      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_perifStickyResetN_pciePhyRstn(r32,v)    _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_perifStickyResetN_pciePhyRstn(r16)      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_perifStickyResetN_pciePhyRstn(r16,v)    _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_perifStickyResetN_usimRstn(r32)         _BFGET_(r32, 6, 6)
    #define   SET32Gbl_perifStickyResetN_usimRstn(r32,v)       _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_perifStickyResetN_usimRstn(r16)         _BFGET_(r16, 6, 6)
    #define   SET16Gbl_perifStickyResetN_usimRstn(r16,v)       _BFSET_(r16, 6, 6,v)

    #define     w32Gbl_perifStickyResetN                       {\
            UNSG32 uperifStickyResetN_usb3PhyRstn              :  1;\
            UNSG32 uperifStickyResetN_pcie0Rstn                :  1;\
            UNSG32 uperifStickyResetN_usb0PhyRstn              :  1;\
            UNSG32 uperifStickyResetN_usb0CoreRstn             :  1;\
            UNSG32 uperifStickyResetN_usb0MahbRstn             :  1;\
            UNSG32 uperifStickyResetN_pciePhyRstn              :  1;\
            UNSG32 uperifStickyResetN_usimRstn                 :  1;\
            UNSG32 RSVDx688_b7                                 : 25;\
          }
    union { UNSG32 u32Gbl_perifStickyResetN;
            struct w32Gbl_perifStickyResetN;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_apbPerifResetTrigger_uart0SyncReset(r32) _BFGET_(r32, 0, 0)
    #define   SET32Gbl_apbPerifResetTrigger_uart0SyncReset(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_apbPerifResetTrigger_uart0SyncReset(r16) _BFGET_(r16, 0, 0)
    #define   SET16Gbl_apbPerifResetTrigger_uart0SyncReset(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_apbPerifResetTrigger_reserved0(r32)     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_apbPerifResetTrigger_reserved0(r32,v)   _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_apbPerifResetTrigger_reserved0(r16)     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_apbPerifResetTrigger_reserved0(r16,v)   _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_apbPerifResetTrigger_i2c0SyncReset(r32) _BFGET_(r32, 2, 2)
    #define   SET32Gbl_apbPerifResetTrigger_i2c0SyncReset(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_apbPerifResetTrigger_i2c0SyncReset(r16) _BFGET_(r16, 2, 2)
    #define   SET16Gbl_apbPerifResetTrigger_i2c0SyncReset(r16,v) _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_apbPerifResetTrigger_i2c1SyncReset(r32) _BFGET_(r32, 3, 3)
    #define   SET32Gbl_apbPerifResetTrigger_i2c1SyncReset(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_apbPerifResetTrigger_i2c1SyncReset(r16) _BFGET_(r16, 3, 3)
    #define   SET16Gbl_apbPerifResetTrigger_i2c1SyncReset(r16,v) _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_apbPerifResetTrigger_spiSyncReset(r32)  _BFGET_(r32, 4, 4)
    #define   SET32Gbl_apbPerifResetTrigger_spiSyncReset(r32,v) _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_apbPerifResetTrigger_spiSyncReset(r16)  _BFGET_(r16, 4, 4)
    #define   SET16Gbl_apbPerifResetTrigger_spiSyncReset(r16,v) _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_apbPerifResetTrigger_timer0SyncReset(r32) _BFGET_(r32, 5, 5)
    #define   SET32Gbl_apbPerifResetTrigger_timer0SyncReset(r32,v) _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_apbPerifResetTrigger_timer0SyncReset(r16) _BFGET_(r16, 5, 5)
    #define   SET16Gbl_apbPerifResetTrigger_timer0SyncReset(r16,v) _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_apbPerifResetTrigger_timer1SyncReset(r32) _BFGET_(r32, 6, 6)
    #define   SET32Gbl_apbPerifResetTrigger_timer1SyncReset(r32,v) _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_apbPerifResetTrigger_timer1SyncReset(r16) _BFGET_(r16, 6, 6)
    #define   SET16Gbl_apbPerifResetTrigger_timer1SyncReset(r16,v) _BFSET_(r16, 6, 6,v)

    #define     w32Gbl_apbPerifResetTrigger                    {\
            UNSG32 uapbPerifResetTrigger_uart0SyncReset        :  1;\
            UNSG32 uapbPerifResetTrigger_reserved0             :  1;\
            UNSG32 uapbPerifResetTrigger_i2c0SyncReset         :  1;\
            UNSG32 uapbPerifResetTrigger_i2c1SyncReset         :  1;\
            UNSG32 uapbPerifResetTrigger_spiSyncReset          :  1;\
            UNSG32 uapbPerifResetTrigger_timer0SyncReset       :  1;\
            UNSG32 uapbPerifResetTrigger_timer1SyncReset       :  1;\
            UNSG32 RSVDx68C_b7                                 : 25;\
          }
    union { UNSG32 u32Gbl_apbPerifResetTrigger;
            struct w32Gbl_apbPerifResetTrigger;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_apbPerifResetStatus_uart0SyncResetStatus(r32) _BFGET_(r32, 0, 0)
    #define   SET32Gbl_apbPerifResetStatus_uart0SyncResetStatus(r32,v) _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_apbPerifResetStatus_uart0SyncResetStatus(r16) _BFGET_(r16, 0, 0)
    #define   SET16Gbl_apbPerifResetStatus_uart0SyncResetStatus(r16,v) _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_apbPerifResetStatus_reserved0(r32)      _BFGET_(r32, 1, 1)
    #define   SET32Gbl_apbPerifResetStatus_reserved0(r32,v)    _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_apbPerifResetStatus_reserved0(r16)      _BFGET_(r16, 1, 1)
    #define   SET16Gbl_apbPerifResetStatus_reserved0(r16,v)    _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_apbPerifResetStatus_i2c0SyncResetStatus(r32) _BFGET_(r32, 2, 2)
    #define   SET32Gbl_apbPerifResetStatus_i2c0SyncResetStatus(r32,v) _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_apbPerifResetStatus_i2c0SyncResetStatus(r16) _BFGET_(r16, 2, 2)
    #define   SET16Gbl_apbPerifResetStatus_i2c0SyncResetStatus(r16,v) _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_apbPerifResetStatus_i2c1SyncResetStatus(r32) _BFGET_(r32, 3, 3)
    #define   SET32Gbl_apbPerifResetStatus_i2c1SyncResetStatus(r32,v) _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_apbPerifResetStatus_i2c1SyncResetStatus(r16) _BFGET_(r16, 3, 3)
    #define   SET16Gbl_apbPerifResetStatus_i2c1SyncResetStatus(r16,v) _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_apbPerifResetStatus_i2c2SyncResetStatus(r32) _BFGET_(r32, 4, 4)
    #define   SET32Gbl_apbPerifResetStatus_i2c2SyncResetStatus(r32,v) _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_apbPerifResetStatus_i2c2SyncResetStatus(r16) _BFGET_(r16, 4, 4)
    #define   SET16Gbl_apbPerifResetStatus_i2c2SyncResetStatus(r16,v) _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_apbPerifResetStatus_spiSyncResetStatus(r32) _BFGET_(r32, 5, 5)
    #define   SET32Gbl_apbPerifResetStatus_spiSyncResetStatus(r32,v) _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_apbPerifResetStatus_spiSyncResetStatus(r16) _BFGET_(r16, 5, 5)
    #define   SET16Gbl_apbPerifResetStatus_spiSyncResetStatus(r16,v) _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_apbPerifResetStatus_timer0SyncResetStatus(r32) _BFGET_(r32, 6, 6)
    #define   SET32Gbl_apbPerifResetStatus_timer0SyncResetStatus(r32,v) _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_apbPerifResetStatus_timer0SyncResetStatus(r16) _BFGET_(r16, 6, 6)
    #define   SET16Gbl_apbPerifResetStatus_timer0SyncResetStatus(r16,v) _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_apbPerifResetStatus_timer1SyncResetStatus(r32) _BFGET_(r32, 7, 7)
    #define   SET32Gbl_apbPerifResetStatus_timer1SyncResetStatus(r32,v) _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_apbPerifResetStatus_timer1SyncResetStatus(r16) _BFGET_(r16, 7, 7)
    #define   SET16Gbl_apbPerifResetStatus_timer1SyncResetStatus(r16,v) _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_apbPerifResetStatus                     {\
            UNSG32 uapbPerifResetStatus_uart0SyncResetStatus   :  1;\
            UNSG32 uapbPerifResetStatus_reserved0              :  1;\
            UNSG32 uapbPerifResetStatus_i2c0SyncResetStatus    :  1;\
            UNSG32 uapbPerifResetStatus_i2c1SyncResetStatus    :  1;\
            UNSG32 uapbPerifResetStatus_i2c2SyncResetStatus    :  1;\
            UNSG32 uapbPerifResetStatus_spiSyncResetStatus     :  1;\
            UNSG32 uapbPerifResetStatus_timer0SyncResetStatus  :  1;\
            UNSG32 uapbPerifResetStatus_timer1SyncResetStatus  :  1;\
            UNSG32 RSVDx690_b8                                 : 24;\
          }
    union { UNSG32 u32Gbl_apbPerifResetStatus;
            struct w32Gbl_apbPerifResetStatus;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_topStickyResetN_npuGRstn(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_topStickyResetN_npuGRstn(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_topStickyResetN_npuGRstn(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_topStickyResetN_npuGRstn(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_topStickyResetN_dsp0CoreRstn(r32)       _BFGET_(r32, 1, 1)
    #define   SET32Gbl_topStickyResetN_dsp0CoreRstn(r32,v)     _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_topStickyResetN_dsp0CoreRstn(r16)       _BFGET_(r16, 1, 1)
    #define   SET16Gbl_topStickyResetN_dsp0CoreRstn(r16,v)     _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_topStickyResetN_dsp0CfgRstn(r32)        _BFGET_(r32, 2, 2)
    #define   SET32Gbl_topStickyResetN_dsp0CfgRstn(r32,v)      _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_topStickyResetN_dsp0CfgRstn(r16)        _BFGET_(r16, 2, 2)
    #define   SET16Gbl_topStickyResetN_dsp0CfgRstn(r16,v)      _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_topStickyResetN_dsp0DebugRstn(r32)      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_topStickyResetN_dsp0DebugRstn(r32,v)    _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_topStickyResetN_dsp0DebugRstn(r16)      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_topStickyResetN_dsp0DebugRstn(r16,v)    _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_topStickyResetN_dsp1CoreRstn(r32)       _BFGET_(r32, 4, 4)
    #define   SET32Gbl_topStickyResetN_dsp1CoreRstn(r32,v)     _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_topStickyResetN_dsp1CoreRstn(r16)       _BFGET_(r16, 4, 4)
    #define   SET16Gbl_topStickyResetN_dsp1CoreRstn(r16,v)     _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_topStickyResetN_dsp1CfgRstn(r32)        _BFGET_(r32, 5, 5)
    #define   SET32Gbl_topStickyResetN_dsp1CfgRstn(r32,v)      _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_topStickyResetN_dsp1CfgRstn(r16)        _BFGET_(r16, 5, 5)
    #define   SET16Gbl_topStickyResetN_dsp1CfgRstn(r16,v)      _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_topStickyResetN_dsp1DebugRstn(r32)      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_topStickyResetN_dsp1DebugRstn(r32,v)    _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_topStickyResetN_dsp1DebugRstn(r16)      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_topStickyResetN_dsp1DebugRstn(r16,v)    _BFSET_(r16, 6, 6,v)

    #define     w32Gbl_topStickyResetN                         {\
            UNSG32 utopStickyResetN_npuGRstn                   :  1;\
            UNSG32 utopStickyResetN_dsp0CoreRstn               :  1;\
            UNSG32 utopStickyResetN_dsp0CfgRstn                :  1;\
            UNSG32 utopStickyResetN_dsp0DebugRstn              :  1;\
            UNSG32 utopStickyResetN_dsp1CoreRstn               :  1;\
            UNSG32 utopStickyResetN_dsp1CfgRstn                :  1;\
            UNSG32 utopStickyResetN_dsp1DebugRstn              :  1;\
            UNSG32 RSVDx694_b7                                 : 25;\
          }
    union { UNSG32 u32Gbl_topStickyResetN;
            struct w32Gbl_topStickyResetN;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx698                                    [104];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_clkEnable_usb0CoreClkEn(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_clkEnable_usb0CoreClkEn(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_clkEnable_usb0CoreClkEn(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_clkEnable_usb0CoreClkEn(r16,v)          _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_clkEnable_sdioSysClkEn(r32)             _BFGET_(r32, 1, 1)
    #define   SET32Gbl_clkEnable_sdioSysClkEn(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_clkEnable_sdioSysClkEn(r16)             _BFGET_(r16, 1, 1)
    #define   SET16Gbl_clkEnable_sdioSysClkEn(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_clkEnable_pcie0SysClkEn(r32)            _BFGET_(r32, 2, 2)
    #define   SET32Gbl_clkEnable_pcie0SysClkEn(r32,v)          _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_clkEnable_pcie0SysClkEn(r16)            _BFGET_(r16, 2, 2)
    #define   SET16Gbl_clkEnable_pcie0SysClkEn(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_clkEnable_emmcSysClkEn(r32)             _BFGET_(r32, 3, 3)
    #define   SET32Gbl_clkEnable_emmcSysClkEn(r32,v)           _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_clkEnable_emmcSysClkEn(r16)             _BFGET_(r16, 3, 3)
    #define   SET16Gbl_clkEnable_emmcSysClkEn(r16,v)           _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_clkEnable_pBridgeCoreClkEn(r32)         _BFGET_(r32, 4, 4)
    #define   SET32Gbl_clkEnable_pBridgeCoreClkEn(r32,v)       _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_clkEnable_pBridgeCoreClkEn(r16)         _BFGET_(r16, 4, 4)
    #define   SET16Gbl_clkEnable_pBridgeCoreClkEn(r16,v)       _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_clkEnable_npuAxiClkEn(r32)              _BFGET_(r32, 5, 5)
    #define   SET32Gbl_clkEnable_npuAxiClkEn(r32,v)            _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_clkEnable_npuAxiClkEn(r16)              _BFGET_(r16, 5, 5)
    #define   SET16Gbl_clkEnable_npuAxiClkEn(r16,v)            _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_clkEnable_gethRgmiiSysClkEn(r32)        _BFGET_(r32, 6, 6)
    #define   SET32Gbl_clkEnable_gethRgmiiSysClkEn(r32,v)      _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_clkEnable_gethRgmiiSysClkEn(r16)        _BFGET_(r16, 6, 6)
    #define   SET16Gbl_clkEnable_gethRgmiiSysClkEn(r16,v)      _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_clkEnable_gfxAxiClkEn(r32)              _BFGET_(r32, 7, 7)
    #define   SET32Gbl_clkEnable_gfxAxiClkEn(r32,v)            _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_clkEnable_gfxAxiClkEn(r16)              _BFGET_(r16, 7, 7)
    #define   SET16Gbl_clkEnable_gfxAxiClkEn(r16,v)            _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_clkEnable_usbOtgClkEn(r32)              _BFGET_(r32, 8, 8)
    #define   SET32Gbl_clkEnable_usbOtgClkEn(r32,v)            _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_clkEnable_usbOtgClkEn(r16)              _BFGET_(r16, 8, 8)
    #define   SET16Gbl_clkEnable_usbOtgClkEn(r16,v)            _BFSET_(r16, 8, 8,v)

    #define     w32Gbl_clkEnable                               {\
            UNSG32 uclkEnable_usb0CoreClkEn                    :  1;\
            UNSG32 uclkEnable_sdioSysClkEn                     :  1;\
            UNSG32 uclkEnable_pcie0SysClkEn                    :  1;\
            UNSG32 uclkEnable_emmcSysClkEn                     :  1;\
            UNSG32 uclkEnable_pBridgeCoreClkEn                 :  1;\
            UNSG32 uclkEnable_npuAxiClkEn                      :  1;\
            UNSG32 uclkEnable_gethRgmiiSysClkEn                :  1;\
            UNSG32 uclkEnable_gfxAxiClkEn                      :  1;\
            UNSG32 uclkEnable_usbOtgClkEn                      :  1;\
            UNSG32 RSVDx700_b9                                 : 23;\
          }
    union { UNSG32 u32Gbl_clkEnable;
            struct w32Gbl_clkEnable;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx704                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_ClkSwitch_sysPLL_0SWBypass(r32)         _BFGET_(r32, 0, 0)
    #define   SET32Gbl_ClkSwitch_sysPLL_0SWBypass(r32,v)       _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_ClkSwitch_sysPLL_0SWBypass(r16)         _BFGET_(r16, 0, 0)
    #define   SET16Gbl_ClkSwitch_sysPLL_0SWBypass(r16,v)       _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_ClkSwitch_sysPLL_1SWBypass(r32)         _BFGET_(r32, 1, 1)
    #define   SET32Gbl_ClkSwitch_sysPLL_1SWBypass(r32,v)       _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_ClkSwitch_sysPLL_1SWBypass(r16)         _BFGET_(r16, 1, 1)
    #define   SET16Gbl_ClkSwitch_sysPLL_1SWBypass(r16,v)       _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_ClkSwitch_reserve(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_ClkSwitch_reserve(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_ClkSwitch_reserve(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_ClkSwitch_reserve(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_ClkSwitch_memPLLSWBypass(r32)           _BFGET_(r32, 3, 3)
    #define   SET32Gbl_ClkSwitch_memPLLSWBypass(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_ClkSwitch_memPLLSWBypass(r16)           _BFGET_(r16, 3, 3)
    #define   SET16Gbl_ClkSwitch_memPLLSWBypass(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_ClkSwitch_cpuPLLSWBypass(r32)           _BFGET_(r32, 4, 4)
    #define   SET32Gbl_ClkSwitch_cpuPLLSWBypass(r32,v)         _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_ClkSwitch_cpuPLLSWBypass(r16)           _BFGET_(r16, 4, 4)
    #define   SET16Gbl_ClkSwitch_cpuPLLSWBypass(r16,v)         _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_ClkSwitch_avPLL_0SWBypass(r32)          _BFGET_(r32, 5, 5)
    #define   SET32Gbl_ClkSwitch_avPLL_0SWBypass(r32,v)        _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_ClkSwitch_avPLL_0SWBypass(r16)          _BFGET_(r16, 5, 5)
    #define   SET16Gbl_ClkSwitch_avPLL_0SWBypass(r16,v)        _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_ClkSwitch_avPLL_1SWBypass(r32)          _BFGET_(r32, 6, 6)
    #define   SET32Gbl_ClkSwitch_avPLL_1SWBypass(r32,v)        _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_ClkSwitch_avPLL_1SWBypass(r16)          _BFGET_(r16, 6, 6)
    #define   SET16Gbl_ClkSwitch_avPLL_1SWBypass(r16,v)        _BFSET_(r16, 6, 6,v)

    #define     w32Gbl_ClkSwitch                               {\
            UNSG32 uClkSwitch_sysPLL_0SWBypass                 :  1;\
            UNSG32 uClkSwitch_sysPLL_1SWBypass                 :  1;\
            UNSG32 uClkSwitch_reserve                          :  1;\
            UNSG32 uClkSwitch_memPLLSWBypass                   :  1;\
            UNSG32 uClkSwitch_cpuPLLSWBypass                   :  1;\
            UNSG32 uClkSwitch_avPLL_0SWBypass                  :  1;\
            UNSG32 uClkSwitch_avPLL_1SWBypass                  :  1;\
            UNSG32 RSVDx710_b7                                 : 25;\
          }
    union { UNSG32 u32Gbl_ClkSwitch;
            struct w32Gbl_ClkSwitch;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx714                                    [12];
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_cpufastRefClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD1                                        ie_memfastRefClk;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx728                                    [24];
    ///////////////////////////////////////////////////////////
              SIE_clkD8                                        ie_cfgClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD3                                        ie_perifSysClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD8                                        ie_atbClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD1                                        ie_decoderClk;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx750                                    [4];
    ///////////////////////////////////////////////////////////
              SIE_clkD3                                        ie_encoderClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD3                                        ie_ovpCoreClk;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx75C                                    [4];
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_gfx3DCoreClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_gfx3DSysClk;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx768                                    [8];
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_avioSysClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_vppSysClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD8                                        ie_esmClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD4                                        ie_avioBiuClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_vipPipeClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_avioFpll400_clk;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx788                                    [24];
    ///////////////////////////////////////////////////////////
              SIE_clkD4                                        ie_apbCoreClk;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx7A4                                    [12];
    ///////////////////////////////////////////////////////////
              SIE_clkD4                                        ie_emmcClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD4                                        ie_sd0Clk;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx7B8                                    [40];
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_perifTestClk125mGroup0;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx7E4                                    [12];
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_usb2TestClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_perifTestClk250mGroup0;
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_usb3CoreClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_npuClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD4                                        ie_hdmiRxrefClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_usb2TestClk480mGroup0;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_usb2TestClk480mGroup1;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_usb2TestClk480mGroup2;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_usb2TestClk100mGroup0;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_usb2TestClk100mGroup1;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_usb2TestClk100mGroup2;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_usb2TestClk100mGroup3;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_usb2TestClk100mGroup4;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_perifTestClk200mGroup0;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_perifTestClk200mGroup1;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_perifTestClk500mGroup0;
    ///////////////////////////////////////////////////////////
              SIE_clkD4                                        ie_aioSysClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_usimClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD12_ENOFF                                 ie_perifTestClk50mGroup0;
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_dspSysClk;
    ///////////////////////////////////////////////////////////
              SIE_clkD3                                        ie_dsp0Clk;
    ///////////////////////////////////////////////////////////
              SIE_clkD3                                        ie_dsp1Clk;
    ///////////////////////////////////////////////////////////
              SIE_clkD2                                        ie_vnSysClk;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx84C                                    [180];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SECURE_SCAN_EN_SET(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SECURE_SCAN_EN_SET(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SECURE_SCAN_EN_SET(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SECURE_SCAN_EN_SET(r16,v)               _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_SECURE_SCAN_EN                          {\
            UNSG32 uSECURE_SCAN_EN_SET                         :  1;\
            UNSG32 RSVDx900_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_SECURE_SCAN_EN;
            struct w32Gbl_SECURE_SCAN_EN;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx904                                    [20];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gfx3DDisRamClkGate_drcg(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gfx3DDisRamClkGate_drcg(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gfx3DDisRamClkGate_drcg(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gfx3DDisRamClkGate_drcg(r16,v)          _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gfx3DDisRamClkGate                      {\
            UNSG32 ugfx3DDisRamClkGate_drcg                    :  1;\
            UNSG32 RSVDx918_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gfx3DDisRamClkGate;
            struct w32Gbl_gfx3DDisRamClkGate;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx91C                                    [68];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_gic400_ctrl_cgfsdisable(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_gic400_ctrl_cgfsdisable(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_gic400_ctrl_cgfsdisable(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_gic400_ctrl_cgfsdisable(r16,v)          _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_gic400_ctrl                             {\
            UNSG32 ugic400_ctrl_cgfsdisable                    :  1;\
            UNSG32 RSVDx960_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_gic400_ctrl;
            struct w32Gbl_gic400_ctrl;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx964                                    [12];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_CTRL_0_timer_enable(r32)            _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GFX_CTRL_0_timer_enable(r32,v)          _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_GFX_CTRL_0_timer_enable(r16)            _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GFX_CTRL_0_timer_enable(r16,v)          _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_GFX_CTRL_0                              {\
            UNSG32 uGFX_CTRL_0_timer_enable                    :  1;\
            UNSG32 RSVDx970_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_GFX_CTRL_0;
            struct w32Gbl_GFX_CTRL_0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_CTRL_1_timer_load(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GFX_CTRL_1_timer_load(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_GFX_CTRL_1_timer_load(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GFX_CTRL_1_timer_load(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_GFX_CTRL_1_timer_halt(r32)              _BFGET_(r32, 1, 1)
    #define   SET32Gbl_GFX_CTRL_1_timer_halt(r32,v)            _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_GFX_CTRL_1_timer_halt(r16)              _BFGET_(r16, 1, 1)
    #define   SET16Gbl_GFX_CTRL_1_timer_halt(r16,v)            _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_GFX_CTRL_1                              {\
            UNSG32 uGFX_CTRL_1_timer_load                      :  1;\
            UNSG32 uGFX_CTRL_1_timer_halt                      :  1;\
            UNSG32 RSVDx974_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_GFX_CTRL_1;
            struct w32Gbl_GFX_CTRL_1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_CTRL_2_timer_value_lsb(r32)         _BFGET_(r32,31, 0)
    #define   SET32Gbl_GFX_CTRL_2_timer_value_lsb(r32,v)       _BFSET_(r32,31, 0,v)

    #define     w32Gbl_GFX_CTRL_2                              {\
            UNSG32 uGFX_CTRL_2_timer_value_lsb                 : 32;\
          }
    union { UNSG32 u32Gbl_GFX_CTRL_2;
            struct w32Gbl_GFX_CTRL_2;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_CTRL_3_timer_value_msb(r32)         _BFGET_(r32,31, 0)
    #define   SET32Gbl_GFX_CTRL_3_timer_value_msb(r32,v)       _BFSET_(r32,31, 0,v)

    #define     w32Gbl_GFX_CTRL_3                              {\
            UNSG32 uGFX_CTRL_3_timer_value_msb                 : 32;\
          }
    union { UNSG32 u32Gbl_GFX_CTRL_3;
            struct w32Gbl_GFX_CTRL_3;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb(r32) _BFGET_(r32,31, 0)
    #define   SET32Gbl_GFX_TIMER_VALUE_timer_binary_value_lsb(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32Gbl_GFX_TIMER_VALUE                         {\
            UNSG32 uGFX_TIMER_VALUE_timer_binary_value_lsb     : 32;\
          }
    union { UNSG32 u32Gbl_GFX_TIMER_VALUE;
            struct w32Gbl_GFX_TIMER_VALUE;
          };
    #define   GET32Gbl_GFX_TIMER_VALUE_timer_binary_value_msb(r32) _BFGET_(r32,31, 0)
    #define   SET32Gbl_GFX_TIMER_VALUE_timer_binary_value_msb(r32,v) _BFSET_(r32,31, 0,v)

    #define     w32Gbl_GFX_TIMER_VALUE1                        {\
            UNSG32 uGFX_TIMER_VALUE_timer_binary_value_msb     : 32;\
          }
    union { UNSG32 u32Gbl_GFX_TIMER_VALUE1;
            struct w32Gbl_GFX_TIMER_VALUE1;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx988                                    [4];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GFX_STATUS_gfx3d_idle(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GFX_STATUS_gfx3d_idle(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_GFX_STATUS_gfx3d_idle(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GFX_STATUS_gfx3d_idle(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_GFX_STATUS                              {\
            UNSG32 uGFX_STATUS_gfx3d_idle                      :  1;\
            UNSG32 RSVDx98C_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_GFX_STATUS;
            struct w32Gbl_GFX_STATUS;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_USBOTG_REFCLK_CTRL0_divval(r32)         _BFGET_(r32,31, 0)
    #define   SET32Gbl_USBOTG_REFCLK_CTRL0_divval(r32,v)       _BFSET_(r32,31, 0,v)

    #define     w32Gbl_USBOTG_REFCLK_CTRL0                     {\
            UNSG32 uUSBOTG_REFCLK_CTRL0_divval                 : 32;\
          }
    union { UNSG32 u32Gbl_USBOTG_REFCLK_CTRL0;
            struct w32Gbl_USBOTG_REFCLK_CTRL0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_USBOTG_REFCLK_CTRL1_lowcnt(r32)         _BFGET_(r32,31, 0)
    #define   SET32Gbl_USBOTG_REFCLK_CTRL1_lowcnt(r32,v)       _BFSET_(r32,31, 0,v)

    #define     w32Gbl_USBOTG_REFCLK_CTRL1                     {\
            UNSG32 uUSBOTG_REFCLK_CTRL1_lowcnt                 : 32;\
          }
    union { UNSG32 u32Gbl_USBOTG_REFCLK_CTRL1;
            struct w32Gbl_USBOTG_REFCLK_CTRL1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_USIMCLK_MUX_globalClksel(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_USIMCLK_MUX_globalClksel(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_USIMCLK_MUX_globalClksel(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_USIMCLK_MUX_globalClksel(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_USIMCLK_MUX_STS6Clksel(r32)             _BFGET_(r32, 1, 1)
    #define   SET32Gbl_USIMCLK_MUX_STS6Clksel(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_USIMCLK_MUX_STS6Clksel(r16)             _BFGET_(r16, 1, 1)
    #define   SET16Gbl_USIMCLK_MUX_STS6Clksel(r16,v)           _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_USIMCLK_MUX                             {\
            UNSG32 uUSIMCLK_MUX_globalClksel                   :  1;\
            UNSG32 uUSIMCLK_MUX_STS6Clksel                     :  1;\
            UNSG32 RSVDx998_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_USIMCLK_MUX;
            struct w32Gbl_USIMCLK_MUX;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_REFCLK_SWITCH_cfgClkSwt2refClk(r32)     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_REFCLK_SWITCH_cfgClkSwt2refClk(r32,v)   _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_REFCLK_SWITCH_cfgClkSwt2refClk(r16)     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_REFCLK_SWITCH_cfgClkSwt2refClk(r16,v)   _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk(r32) _BFGET_(r32, 1, 1)
    #define   SET32Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk(r32,v) _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk(r16) _BFGET_(r16, 1, 1)
    #define   SET16Gbl_REFCLK_SWITCH_perifSysClkSwt2refClk(r16,v) _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_REFCLK_SWITCH                           {\
            UNSG32 uREFCLK_SWITCH_cfgClkSwt2refClk             :  1;\
            UNSG32 uREFCLK_SWITCH_perifSysClkSwt2refClk        :  1;\
            UNSG32 RSVDx99C_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_REFCLK_SWITCH;
            struct w32Gbl_REFCLK_SWITCH;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DSP0_Control_RunStall(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DSP0_Control_RunStall(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DSP0_Control_RunStall(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DSP0_Control_RunStall(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_DSP0_Control                            {\
            UNSG32 uDSP0_Control_RunStall                      :  1;\
            UNSG32 RSVDx9A0_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_DSP0_Control;
            struct w32Gbl_DSP0_Control;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DSP0_Status_PWaitMode(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DSP0_Status_PWaitMode(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DSP0_Status_PWaitMode(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DSP0_Status_PWaitMode(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DSP0_Status_XOCDMode(r32)               _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DSP0_Status_XOCDMode(r32,v)             _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DSP0_Status_XOCDMode(r16)               _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DSP0_Status_XOCDMode(r16,v)             _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_DSP0_Status                             {\
            UNSG32 uDSP0_Status_PWaitMode                      :  1;\
            UNSG32 uDSP0_Status_XOCDMode                       :  1;\
            UNSG32 RSVDx9A4_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_DSP0_Status;
            struct w32Gbl_DSP0_Status;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DSP0_SECCTRL0_ALTRESETVEC(r32)          _BFGET_(r32,31, 0)
    #define   SET32Gbl_DSP0_SECCTRL0_ALTRESETVEC(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32Gbl_DSP0_SECCTRL0                           {\
            UNSG32 uDSP0_SECCTRL0_ALTRESETVEC                  : 32;\
          }
    union { UNSG32 u32Gbl_DSP0_SECCTRL0;
            struct w32Gbl_DSP0_SECCTRL0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DSP0_SECCTRL1_DSP_STATVECTORSEL(r32)    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DSP0_SECCTRL1_DSP_STATVECTORSEL(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DSP0_SECCTRL1_DSP_STATVECTORSEL(r16)    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DSP0_SECCTRL1_DSP_STATVECTORSEL(r16,v)  _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_DSP0_SECCTRL1                           {\
            UNSG32 uDSP0_SECCTRL1_DSP_STATVECTORSEL            :  1;\
            UNSG32 RSVDx9AC_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_DSP0_SECCTRL1;
            struct w32Gbl_DSP0_SECCTRL1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DSP0_PRID_Prid(r32)                     _BFGET_(r32,15, 0)
    #define   SET32Gbl_DSP0_PRID_Prid(r32,v)                   _BFSET_(r32,15, 0,v)
    #define   GET16Gbl_DSP0_PRID_Prid(r16)                     _BFGET_(r16,15, 0)
    #define   SET16Gbl_DSP0_PRID_Prid(r16,v)                   _BFSET_(r16,15, 0,v)

    #define     w32Gbl_DSP0_PRID                               {\
            UNSG32 uDSP0_PRID_Prid                             : 16;\
            UNSG32 RSVDx9B0_b16                                : 16;\
          }
    union { UNSG32 u32Gbl_DSP0_PRID;
            struct w32Gbl_DSP0_PRID;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DSP1_Control_RunStall(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DSP1_Control_RunStall(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DSP1_Control_RunStall(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DSP1_Control_RunStall(r16,v)            _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_DSP1_Control                            {\
            UNSG32 uDSP1_Control_RunStall                      :  1;\
            UNSG32 RSVDx9B4_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_DSP1_Control;
            struct w32Gbl_DSP1_Control;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DSP1_Status_PWaitMode(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DSP1_Status_PWaitMode(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DSP1_Status_PWaitMode(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DSP1_Status_PWaitMode(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_DSP1_Status_XOCDMode(r32)               _BFGET_(r32, 1, 1)
    #define   SET32Gbl_DSP1_Status_XOCDMode(r32,v)             _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_DSP1_Status_XOCDMode(r16)               _BFGET_(r16, 1, 1)
    #define   SET16Gbl_DSP1_Status_XOCDMode(r16,v)             _BFSET_(r16, 1, 1,v)

    #define     w32Gbl_DSP1_Status                             {\
            UNSG32 uDSP1_Status_PWaitMode                      :  1;\
            UNSG32 uDSP1_Status_XOCDMode                       :  1;\
            UNSG32 RSVDx9B8_b2                                 : 30;\
          }
    union { UNSG32 u32Gbl_DSP1_Status;
            struct w32Gbl_DSP1_Status;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DSP1_SECCTRL0_ALTRESETVEC(r32)          _BFGET_(r32,31, 0)
    #define   SET32Gbl_DSP1_SECCTRL0_ALTRESETVEC(r32,v)        _BFSET_(r32,31, 0,v)

    #define     w32Gbl_DSP1_SECCTRL0                           {\
            UNSG32 uDSP1_SECCTRL0_ALTRESETVEC                  : 32;\
          }
    union { UNSG32 u32Gbl_DSP1_SECCTRL0;
            struct w32Gbl_DSP1_SECCTRL0;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DSP1_SECCTRL1_DSP_STATVECTORSEL(r32)    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_DSP1_SECCTRL1_DSP_STATVECTORSEL(r32,v)  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_DSP1_SECCTRL1_DSP_STATVECTORSEL(r16)    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_DSP1_SECCTRL1_DSP_STATVECTORSEL(r16,v)  _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_DSP1_SECCTRL1                           {\
            UNSG32 uDSP1_SECCTRL1_DSP_STATVECTORSEL            :  1;\
            UNSG32 RSVDx9C0_b1                                 : 31;\
          }
    union { UNSG32 u32Gbl_DSP1_SECCTRL1;
            struct w32Gbl_DSP1_SECCTRL1;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_DSP1_PRID_Prid(r32)                     _BFGET_(r32,15, 0)
    #define   SET32Gbl_DSP1_PRID_Prid(r32,v)                   _BFSET_(r32,15, 0,v)
    #define   GET16Gbl_DSP1_PRID_Prid(r16)                     _BFGET_(r16,15, 0)
    #define   SET16Gbl_DSP1_PRID_Prid(r16,v)                   _BFSET_(r16,15, 0,v)

    #define     w32Gbl_DSP1_PRID                               {\
            UNSG32 uDSP1_PRID_Prid                             : 16;\
            UNSG32 RSVDx9C4_b16                                : 16;\
          }
    union { UNSG32 u32Gbl_DSP1_PRID;
            struct w32Gbl_DSP1_PRID;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx9C8                                    [56];
    ///////////////////////////////////////////////////////////
              SIE_PERIF                                        ie_PERIF;
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDxA1C                                    [30180];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_pinMuxCntlBus_GPIO_A2(r32)              _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_GPIO_A2(r32,v)            _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_pinMuxCntlBus_GPIO_A2(r16)              _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_GPIO_A2(r16,v)            _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_pinMuxCntlBus_GPIO_A1(r32)              _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_GPIO_A1(r32,v)            _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_pinMuxCntlBus_GPIO_A1(r16)              _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_GPIO_A1(r16,v)            _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_pinMuxCntlBus_GPIO_A0(r32)              _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_GPIO_A0(r32,v)            _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_pinMuxCntlBus_GPIO_A0(r16)              _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_GPIO_A0(r16,v)            _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_pinMuxCntlBus_STS0_CLK(r32)             _BFGET_(r32,11, 9)
    #define   SET32Gbl_pinMuxCntlBus_STS0_CLK(r32,v)           _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_pinMuxCntlBus_STS0_CLK(r16)             _BFGET_(r16,11, 9)
    #define   SET16Gbl_pinMuxCntlBus_STS0_CLK(r16,v)           _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_pinMuxCntlBus_STS0_SOP(r32)             _BFGET_(r32,14,12)
    #define   SET32Gbl_pinMuxCntlBus_STS0_SOP(r32,v)           _BFSET_(r32,14,12,v)
    #define   GET16Gbl_pinMuxCntlBus_STS0_SOP(r16)             _BFGET_(r16,14,12)
    #define   SET16Gbl_pinMuxCntlBus_STS0_SOP(r16,v)           _BFSET_(r16,14,12,v)

    #define   GET32Gbl_pinMuxCntlBus_STS0_SD(r32)              _BFGET_(r32,17,15)
    #define   SET32Gbl_pinMuxCntlBus_STS0_SD(r32,v)            _BFSET_(r32,17,15,v)

    #define   GET32Gbl_pinMuxCntlBus_STS0_VALD(r32)            _BFGET_(r32,20,18)
    #define   SET32Gbl_pinMuxCntlBus_STS0_VALD(r32,v)          _BFSET_(r32,20,18,v)
    #define   GET16Gbl_pinMuxCntlBus_STS0_VALD(r16)            _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_STS0_VALD(r16,v)          _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_pinMuxCntlBus_STS1_CLK(r32)             _BFGET_(r32,23,21)
    #define   SET32Gbl_pinMuxCntlBus_STS1_CLK(r32,v)           _BFSET_(r32,23,21,v)
    #define   GET16Gbl_pinMuxCntlBus_STS1_CLK(r16)             _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_STS1_CLK(r16,v)           _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_pinMuxCntlBus_STS1_SOP(r32)             _BFGET_(r32,26,24)
    #define   SET32Gbl_pinMuxCntlBus_STS1_SOP(r32,v)           _BFSET_(r32,26,24,v)
    #define   GET16Gbl_pinMuxCntlBus_STS1_SOP(r16)             _BFGET_(r16,10, 8)
    #define   SET16Gbl_pinMuxCntlBus_STS1_SOP(r16,v)           _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_pinMuxCntlBus_STS1_SD(r32)              _BFGET_(r32,29,27)
    #define   SET32Gbl_pinMuxCntlBus_STS1_SD(r32,v)            _BFSET_(r32,29,27,v)
    #define   GET16Gbl_pinMuxCntlBus_STS1_SD(r16)              _BFGET_(r16,13,11)
    #define   SET16Gbl_pinMuxCntlBus_STS1_SD(r16,v)            _BFSET_(r16,13,11,v)

    #define     w32Gbl_pinMuxCntlBus                           {\
            UNSG32 upinMuxCntlBus_GPIO_A2                      :  3;\
            UNSG32 upinMuxCntlBus_GPIO_A1                      :  3;\
            UNSG32 upinMuxCntlBus_GPIO_A0                      :  3;\
            UNSG32 upinMuxCntlBus_STS0_CLK                     :  3;\
            UNSG32 upinMuxCntlBus_STS0_SOP                     :  3;\
            UNSG32 upinMuxCntlBus_STS0_SD                      :  3;\
            UNSG32 upinMuxCntlBus_STS0_VALD                    :  3;\
            UNSG32 upinMuxCntlBus_STS1_CLK                     :  3;\
            UNSG32 upinMuxCntlBus_STS1_SOP                     :  3;\
            UNSG32 upinMuxCntlBus_STS1_SD                      :  3;\
            UNSG32 RSVDx8000_b30                               :  2;\
          }
    union { UNSG32 u32Gbl_pinMuxCntlBus;
            struct w32Gbl_pinMuxCntlBus;
          };
    #define   GET32Gbl_pinMuxCntlBus_STS1_VALD(r32)            _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_STS1_VALD(r32,v)          _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_pinMuxCntlBus_STS1_VALD(r16)            _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_STS1_VALD(r16,v)          _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SS0n(r32)            _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SS0n(r32,v)          _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SS0n(r16)            _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SS0n(r16,v)          _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SS1n(r32)            _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SS1n(r32,v)          _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SS1n(r16)            _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SS1n(r16,v)          _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SS2n(r32)            _BFGET_(r32,11, 9)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SS2n(r32,v)          _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SS2n(r16)            _BFGET_(r16,11, 9)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SS2n(r16,v)          _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SS3n(r32)            _BFGET_(r32,14,12)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SS3n(r32,v)          _BFSET_(r32,14,12,v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SS3n(r16)            _BFGET_(r16,14,12)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SS3n(r16,v)          _BFSET_(r16,14,12,v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SDO(r32)             _BFGET_(r32,17,15)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SDO(r32,v)           _BFSET_(r32,17,15,v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SCLK(r32)            _BFGET_(r32,20,18)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SCLK(r32,v)          _BFSET_(r32,20,18,v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SCLK(r16)            _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SCLK(r16,v)          _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_pinMuxCntlBus_SPI1_SDI(r32)             _BFGET_(r32,23,21)
    #define   SET32Gbl_pinMuxCntlBus_SPI1_SDI(r32,v)           _BFSET_(r32,23,21,v)
    #define   GET16Gbl_pinMuxCntlBus_SPI1_SDI(r16)             _BFGET_(r16, 7, 5)
    #define   SET16Gbl_pinMuxCntlBus_SPI1_SDI(r16,v)           _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_pinMuxCntlBus_TW0_SCL(r32)              _BFGET_(r32,26,24)
    #define   SET32Gbl_pinMuxCntlBus_TW0_SCL(r32,v)            _BFSET_(r32,26,24,v)
    #define   GET16Gbl_pinMuxCntlBus_TW0_SCL(r16)              _BFGET_(r16,10, 8)
    #define   SET16Gbl_pinMuxCntlBus_TW0_SCL(r16,v)            _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_pinMuxCntlBus_TW0_SDA(r32)              _BFGET_(r32,29,27)
    #define   SET32Gbl_pinMuxCntlBus_TW0_SDA(r32,v)            _BFSET_(r32,29,27,v)
    #define   GET16Gbl_pinMuxCntlBus_TW0_SDA(r16)              _BFGET_(r16,13,11)
    #define   SET16Gbl_pinMuxCntlBus_TW0_SDA(r16,v)            _BFSET_(r16,13,11,v)

    #define     w32Gbl_pinMuxCntlBus1                          {\
            UNSG32 upinMuxCntlBus_STS1_VALD                    :  3;\
            UNSG32 upinMuxCntlBus_SPI1_SS0n                    :  3;\
            UNSG32 upinMuxCntlBus_SPI1_SS1n                    :  3;\
            UNSG32 upinMuxCntlBus_SPI1_SS2n                    :  3;\
            UNSG32 upinMuxCntlBus_SPI1_SS3n                    :  3;\
            UNSG32 upinMuxCntlBus_SPI1_SDO                     :  3;\
            UNSG32 upinMuxCntlBus_SPI1_SCLK                    :  3;\
            UNSG32 upinMuxCntlBus_SPI1_SDI                     :  3;\
            UNSG32 upinMuxCntlBus_TW0_SCL                      :  3;\
            UNSG32 upinMuxCntlBus_TW0_SDA                      :  3;\
            UNSG32 RSVDx8004_b30                               :  2;\
          }
    union { UNSG32 u32Gbl_pinMuxCntlBus1;
            struct w32Gbl_pinMuxCntlBus1;
          };
    #define   GET32Gbl_pinMuxCntlBus_USB2_DRV_VBUS(r32)        _BFGET_(r32, 2, 0)
    #define   SET32Gbl_pinMuxCntlBus_USB2_DRV_VBUS(r32,v)      _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_pinMuxCntlBus_USB2_DRV_VBUS(r16)        _BFGET_(r16, 2, 0)
    #define   SET16Gbl_pinMuxCntlBus_USB2_DRV_VBUS(r16,v)      _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_pinMuxCntlBus_SDIO0_CDn(r32)            _BFGET_(r32, 5, 3)
    #define   SET32Gbl_pinMuxCntlBus_SDIO0_CDn(r32,v)          _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_pinMuxCntlBus_SDIO0_CDn(r16)            _BFGET_(r16, 5, 3)
    #define   SET16Gbl_pinMuxCntlBus_SDIO0_CDn(r16,v)          _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_pinMuxCntlBus_SDIO0_WP(r32)             _BFGET_(r32, 8, 6)
    #define   SET32Gbl_pinMuxCntlBus_SDIO0_WP(r32,v)           _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_pinMuxCntlBus_SDIO0_WP(r16)             _BFGET_(r16, 8, 6)
    #define   SET16Gbl_pinMuxCntlBus_SDIO0_WP(r16,v)           _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_pinMuxCntlBus_SCRD0_CRD_PRES(r32)       _BFGET_(r32,11, 9)
    #define   SET32Gbl_pinMuxCntlBus_SCRD0_CRD_PRES(r32,v)     _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_pinMuxCntlBus_SCRD0_CRD_PRES(r16)       _BFGET_(r16,11, 9)
    #define   SET16Gbl_pinMuxCntlBus_SCRD0_CRD_PRES(r16,v)     _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_pinMuxCntlBus_SCRD0_RST(r32)            _BFGET_(r32,14,12)
    #define   SET32Gbl_pinMuxCntlBus_SCRD0_RST(r32,v)          _BFSET_(r32,14,12,v)
    #define   GET16Gbl_pinMuxCntlBus_SCRD0_RST(r16)            _BFGET_(r16,14,12)
    #define   SET16Gbl_pinMuxCntlBus_SCRD0_RST(r16,v)          _BFSET_(r16,14,12,v)

    #define   GET32Gbl_pinMuxCntlBus_SCRD0_DCLK(r32)           _BFGET_(r32,17,15)
    #define   SET32Gbl_pinMuxCntlBus_SCRD0_DCLK(r32,v)         _BFSET_(r32,17,15,v)

    #define   GET32Gbl_pinMuxCntlBus_SCRD0_DIO(r32)            _BFGET_(r32,20,18)
    #define   SET32Gbl_pinMuxCntlBus_SCRD0_DIO(r32,v)          _BFSET_(r32,20,18,v)
    #define   GET16Gbl_pinMuxCntlBus_SCRD0_DIO(r16)            _BFGET_(r16, 4, 2)
    #define   SET16Gbl_pinMuxCntlBus_SCRD0_DIO(r16,v)          _BFSET_(r16, 4, 2,v)

    #define     w32Gbl_pinMuxCntlBus2                          {\
            UNSG32 upinMuxCntlBus_USB2_DRV_VBUS                :  3;\
            UNSG32 upinMuxCntlBus_SDIO0_CDn                    :  3;\
            UNSG32 upinMuxCntlBus_SDIO0_WP                     :  3;\
            UNSG32 upinMuxCntlBus_SCRD0_CRD_PRES               :  3;\
            UNSG32 upinMuxCntlBus_SCRD0_RST                    :  3;\
            UNSG32 upinMuxCntlBus_SCRD0_DCLK                   :  3;\
            UNSG32 upinMuxCntlBus_SCRD0_DIO                    :  3;\
            UNSG32 RSVDx8008_b21                               : 11;\
          }
    union { UNSG32 u32Gbl_pinMuxCntlBus2;
            struct w32Gbl_pinMuxCntlBus2;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx800C                                   [1012];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_avioPinMuxCntlBus_I2S1_DO0(r32)         _BFGET_(r32, 2, 0)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S1_DO0(r32,v)       _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S1_DO0(r16)         _BFGET_(r16, 2, 0)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S1_DO0(r16,v)       _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S1_DO1(r32)         _BFGET_(r32, 5, 3)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S1_DO1(r32,v)       _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S1_DO1(r16)         _BFGET_(r16, 5, 3)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S1_DO1(r16,v)       _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S1_DO2(r32)         _BFGET_(r32, 8, 6)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S1_DO2(r32,v)       _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S1_DO2(r16)         _BFGET_(r16, 8, 6)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S1_DO2(r16,v)       _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S1_DO3(r32)         _BFGET_(r32,11, 9)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S1_DO3(r32,v)       _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S1_DO3(r16)         _BFGET_(r16,11, 9)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S1_DO3(r16,v)       _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S1_LRCKIO(r32)      _BFGET_(r32,14,12)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S1_LRCKIO(r32,v)    _BFSET_(r32,14,12,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S1_LRCKIO(r16)      _BFGET_(r16,14,12)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S1_LRCKIO(r16,v)    _BFSET_(r16,14,12,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S1_BCLKIO(r32)      _BFGET_(r32,17,15)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S1_BCLKIO(r32,v)    _BFSET_(r32,17,15,v)

    #define   GET32Gbl_avioPinMuxCntlBus_SPDIFO(r32)           _BFGET_(r32,20,18)
    #define   SET32Gbl_avioPinMuxCntlBus_SPDIFO(r32,v)         _BFSET_(r32,20,18,v)
    #define   GET16Gbl_avioPinMuxCntlBus_SPDIFO(r16)           _BFGET_(r16, 4, 2)
    #define   SET16Gbl_avioPinMuxCntlBus_SPDIFO(r16,v)         _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_avioPinMuxCntlBus_SPDIFI(r32)           _BFGET_(r32,23,21)
    #define   SET32Gbl_avioPinMuxCntlBus_SPDIFI(r32,v)         _BFSET_(r32,23,21,v)
    #define   GET16Gbl_avioPinMuxCntlBus_SPDIFI(r16)           _BFGET_(r16, 7, 5)
    #define   SET16Gbl_avioPinMuxCntlBus_SPDIFI(r16,v)         _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S2_LRCKIO(r32)      _BFGET_(r32,26,24)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S2_LRCKIO(r32,v)    _BFSET_(r32,26,24,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S2_LRCKIO(r16)      _BFGET_(r16,10, 8)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S2_LRCKIO(r16,v)    _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S2_BCLKIO(r32)      _BFGET_(r32,29,27)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S2_BCLKIO(r32,v)    _BFSET_(r32,29,27,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S2_BCLKIO(r16)      _BFGET_(r16,13,11)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S2_BCLKIO(r16,v)    _BFSET_(r16,13,11,v)

    #define     w32Gbl_avioPinMuxCntlBus                       {\
            UNSG32 uavioPinMuxCntlBus_I2S1_DO0                 :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S1_DO1                 :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S1_DO2                 :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S1_DO3                 :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S1_LRCKIO              :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S1_BCLKIO              :  3;\
            UNSG32 uavioPinMuxCntlBus_SPDIFO                   :  3;\
            UNSG32 uavioPinMuxCntlBus_SPDIFI                   :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S2_LRCKIO              :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S2_BCLKIO              :  3;\
            UNSG32 RSVDx8400_b30                               :  2;\
          }
    union { UNSG32 u32Gbl_avioPinMuxCntlBus;
            struct w32Gbl_avioPinMuxCntlBus;
          };
    #define   GET32Gbl_avioPinMuxCntlBus_I2S2_DI0(r32)         _BFGET_(r32, 2, 0)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S2_DI0(r32,v)       _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S2_DI0(r16)         _BFGET_(r16, 2, 0)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S2_DI0(r16,v)       _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S2_DI1(r32)         _BFGET_(r32, 5, 3)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S2_DI1(r32,v)       _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S2_DI1(r16)         _BFGET_(r16, 5, 3)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S2_DI1(r16,v)       _BFSET_(r16, 5, 3,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S2_DI2(r32)         _BFGET_(r32, 8, 6)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S2_DI2(r32,v)       _BFSET_(r32, 8, 6,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S2_DI2(r16)         _BFGET_(r16, 8, 6)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S2_DI2(r16,v)       _BFSET_(r16, 8, 6,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S2_DI3(r32)         _BFGET_(r32,11, 9)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S2_DI3(r32,v)       _BFSET_(r32,11, 9,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S2_DI3(r16)         _BFGET_(r16,11, 9)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S2_DI3(r16,v)       _BFSET_(r16,11, 9,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S1_MCLK(r32)        _BFGET_(r32,14,12)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S1_MCLK(r32,v)      _BFSET_(r32,14,12,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S1_MCLK(r16)        _BFGET_(r16,14,12)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S1_MCLK(r16,v)      _BFSET_(r16,14,12,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S2_MCLK(r32)        _BFGET_(r32,17,15)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S2_MCLK(r32,v)      _BFSET_(r32,17,15,v)

    #define   GET32Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL(r32) _BFGET_(r32,20,18)
    #define   SET32Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL(r32,v) _BFSET_(r32,20,18,v)
    #define   GET16Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL(r16) _BFGET_(r16, 4, 2)
    #define   SET16Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SCL(r16,v) _BFSET_(r16, 4, 2,v)

    #define   GET32Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA(r32) _BFGET_(r32,23,21)
    #define   SET32Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA(r32,v) _BFSET_(r32,23,21,v)
    #define   GET16Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA(r16) _BFGET_(r16, 7, 5)
    #define   SET16Gbl_avioPinMuxCntlBus_HDMI_TX_EDDC_SDA(r16,v) _BFSET_(r16, 7, 5,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S3_DO(r32)          _BFGET_(r32,26,24)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S3_DO(r32,v)        _BFSET_(r32,26,24,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S3_DO(r16)          _BFGET_(r16,10, 8)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S3_DO(r16,v)        _BFSET_(r16,10, 8,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S3_LRCKIO(r32)      _BFGET_(r32,29,27)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S3_LRCKIO(r32,v)    _BFSET_(r32,29,27,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S3_LRCKIO(r16)      _BFGET_(r16,13,11)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S3_LRCKIO(r16,v)    _BFSET_(r16,13,11,v)

    #define     w32Gbl_avioPinMuxCntlBus1                      {\
            UNSG32 uavioPinMuxCntlBus_I2S2_DI0                 :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S2_DI1                 :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S2_DI2                 :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S2_DI3                 :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S1_MCLK                :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S2_MCLK                :  3;\
            UNSG32 uavioPinMuxCntlBus_HDMI_TX_EDDC_SCL         :  3;\
            UNSG32 uavioPinMuxCntlBus_HDMI_TX_EDDC_SDA         :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S3_DO                  :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S3_LRCKIO              :  3;\
            UNSG32 RSVDx8404_b30                               :  2;\
          }
    union { UNSG32 u32Gbl_avioPinMuxCntlBus1;
            struct w32Gbl_avioPinMuxCntlBus1;
          };
    #define   GET32Gbl_avioPinMuxCntlBus_I2S3_BCLKIO(r32)      _BFGET_(r32, 2, 0)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S3_BCLKIO(r32,v)    _BFSET_(r32, 2, 0,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S3_BCLKIO(r16)      _BFGET_(r16, 2, 0)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S3_BCLKIO(r16,v)    _BFSET_(r16, 2, 0,v)

    #define   GET32Gbl_avioPinMuxCntlBus_I2S3_DI(r32)          _BFGET_(r32, 5, 3)
    #define   SET32Gbl_avioPinMuxCntlBus_I2S3_DI(r32,v)        _BFSET_(r32, 5, 3,v)
    #define   GET16Gbl_avioPinMuxCntlBus_I2S3_DI(r16)          _BFGET_(r16, 5, 3)
    #define   SET16Gbl_avioPinMuxCntlBus_I2S3_DI(r16,v)        _BFSET_(r16, 5, 3,v)

    #define     w32Gbl_avioPinMuxCntlBus2                      {\
            UNSG32 uavioPinMuxCntlBus_I2S3_BCLKIO              :  3;\
            UNSG32 uavioPinMuxCntlBus_I2S3_DI                  :  3;\
            UNSG32 RSVDx8408_b6                                : 26;\
          }
    union { UNSG32 u32Gbl_avioPinMuxCntlBus2;
            struct w32Gbl_avioPinMuxCntlBus2;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx840C                                   [1012];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GPIO_A2Cntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GPIO_A2Cntl_DS0(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_GPIO_A2Cntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GPIO_A2Cntl_DS0(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_GPIO_A2Cntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_GPIO_A2Cntl_DS1(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_GPIO_A2Cntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_GPIO_A2Cntl_DS1(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_GPIO_A2Cntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_GPIO_A2Cntl_DS2(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_GPIO_A2Cntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_GPIO_A2Cntl_DS2(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_GPIO_A2Cntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_GPIO_A2Cntl_IE(r32,v)                   _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_GPIO_A2Cntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_GPIO_A2Cntl_IE(r16,v)                   _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_GPIO_A2Cntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_GPIO_A2Cntl_PD(r32,v)                   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_GPIO_A2Cntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_GPIO_A2Cntl_PD(r16,v)                   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_GPIO_A2Cntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_GPIO_A2Cntl_PU(r32,v)                   _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_GPIO_A2Cntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_GPIO_A2Cntl_PU(r16,v)                   _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_GPIO_A2Cntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_GPIO_A2Cntl_SL(r32,v)                   _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_GPIO_A2Cntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_GPIO_A2Cntl_SL(r16,v)                   _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_GPIO_A2Cntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_GPIO_A2Cntl_ST(r32,v)                   _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_GPIO_A2Cntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_GPIO_A2Cntl_ST(r16,v)                   _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_GPIO_A2Cntl                             {\
            UNSG32 uGPIO_A2Cntl_DS0                            :  1;\
            UNSG32 uGPIO_A2Cntl_DS1                            :  1;\
            UNSG32 uGPIO_A2Cntl_DS2                            :  1;\
            UNSG32 uGPIO_A2Cntl_IE                             :  1;\
            UNSG32 uGPIO_A2Cntl_PD                             :  1;\
            UNSG32 uGPIO_A2Cntl_PU                             :  1;\
            UNSG32 uGPIO_A2Cntl_SL                             :  1;\
            UNSG32 uGPIO_A2Cntl_ST                             :  1;\
            UNSG32 RSVDx8800_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_GPIO_A2Cntl;
            struct w32Gbl_GPIO_A2Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GPIO_A1Cntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GPIO_A1Cntl_DS0(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_GPIO_A1Cntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GPIO_A1Cntl_DS0(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_GPIO_A1Cntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_GPIO_A1Cntl_DS1(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_GPIO_A1Cntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_GPIO_A1Cntl_DS1(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_GPIO_A1Cntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_GPIO_A1Cntl_DS2(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_GPIO_A1Cntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_GPIO_A1Cntl_DS2(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_GPIO_A1Cntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_GPIO_A1Cntl_IE(r32,v)                   _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_GPIO_A1Cntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_GPIO_A1Cntl_IE(r16,v)                   _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_GPIO_A1Cntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_GPIO_A1Cntl_PD(r32,v)                   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_GPIO_A1Cntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_GPIO_A1Cntl_PD(r16,v)                   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_GPIO_A1Cntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_GPIO_A1Cntl_PU(r32,v)                   _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_GPIO_A1Cntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_GPIO_A1Cntl_PU(r16,v)                   _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_GPIO_A1Cntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_GPIO_A1Cntl_SL(r32,v)                   _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_GPIO_A1Cntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_GPIO_A1Cntl_SL(r16,v)                   _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_GPIO_A1Cntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_GPIO_A1Cntl_ST(r32,v)                   _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_GPIO_A1Cntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_GPIO_A1Cntl_ST(r16,v)                   _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_GPIO_A1Cntl                             {\
            UNSG32 uGPIO_A1Cntl_DS0                            :  1;\
            UNSG32 uGPIO_A1Cntl_DS1                            :  1;\
            UNSG32 uGPIO_A1Cntl_DS2                            :  1;\
            UNSG32 uGPIO_A1Cntl_IE                             :  1;\
            UNSG32 uGPIO_A1Cntl_PD                             :  1;\
            UNSG32 uGPIO_A1Cntl_PU                             :  1;\
            UNSG32 uGPIO_A1Cntl_SL                             :  1;\
            UNSG32 uGPIO_A1Cntl_ST                             :  1;\
            UNSG32 RSVDx8804_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_GPIO_A1Cntl;
            struct w32Gbl_GPIO_A1Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_GPIO_A0Cntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_GPIO_A0Cntl_DS0(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_GPIO_A0Cntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_GPIO_A0Cntl_DS0(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_GPIO_A0Cntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_GPIO_A0Cntl_DS1(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_GPIO_A0Cntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_GPIO_A0Cntl_DS1(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_GPIO_A0Cntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_GPIO_A0Cntl_DS2(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_GPIO_A0Cntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_GPIO_A0Cntl_DS2(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_GPIO_A0Cntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_GPIO_A0Cntl_IE(r32,v)                   _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_GPIO_A0Cntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_GPIO_A0Cntl_IE(r16,v)                   _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_GPIO_A0Cntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_GPIO_A0Cntl_PD(r32,v)                   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_GPIO_A0Cntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_GPIO_A0Cntl_PD(r16,v)                   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_GPIO_A0Cntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_GPIO_A0Cntl_PU(r32,v)                   _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_GPIO_A0Cntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_GPIO_A0Cntl_PU(r16,v)                   _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_GPIO_A0Cntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_GPIO_A0Cntl_SL(r32,v)                   _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_GPIO_A0Cntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_GPIO_A0Cntl_SL(r16,v)                   _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_GPIO_A0Cntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_GPIO_A0Cntl_ST(r32,v)                   _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_GPIO_A0Cntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_GPIO_A0Cntl_ST(r16,v)                   _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_GPIO_A0Cntl                             {\
            UNSG32 uGPIO_A0Cntl_DS0                            :  1;\
            UNSG32 uGPIO_A0Cntl_DS1                            :  1;\
            UNSG32 uGPIO_A0Cntl_DS2                            :  1;\
            UNSG32 uGPIO_A0Cntl_IE                             :  1;\
            UNSG32 uGPIO_A0Cntl_PD                             :  1;\
            UNSG32 uGPIO_A0Cntl_PU                             :  1;\
            UNSG32 uGPIO_A0Cntl_SL                             :  1;\
            UNSG32 uGPIO_A0Cntl_ST                             :  1;\
            UNSG32 RSVDx8808_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_GPIO_A0Cntl;
            struct w32Gbl_GPIO_A0Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_STS0_CLKCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_STS0_CLKCntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_STS0_CLKCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_STS0_CLKCntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_STS0_CLKCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_STS0_CLKCntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_STS0_CLKCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_STS0_CLKCntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_STS0_CLKCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_STS0_CLKCntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_STS0_CLKCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_STS0_CLKCntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_STS0_CLKCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_STS0_CLKCntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_STS0_CLKCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_STS0_CLKCntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_STS0_CLKCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_STS0_CLKCntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_STS0_CLKCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_STS0_CLKCntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_STS0_CLKCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_STS0_CLKCntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_STS0_CLKCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_STS0_CLKCntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_STS0_CLKCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_STS0_CLKCntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_STS0_CLKCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_STS0_CLKCntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_STS0_CLKCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_STS0_CLKCntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_STS0_CLKCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_STS0_CLKCntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_STS0_CLKCntl                            {\
            UNSG32 uSTS0_CLKCntl_DS0                           :  1;\
            UNSG32 uSTS0_CLKCntl_DS1                           :  1;\
            UNSG32 uSTS0_CLKCntl_DS2                           :  1;\
            UNSG32 uSTS0_CLKCntl_IE                            :  1;\
            UNSG32 uSTS0_CLKCntl_PD                            :  1;\
            UNSG32 uSTS0_CLKCntl_PU                            :  1;\
            UNSG32 uSTS0_CLKCntl_SL                            :  1;\
            UNSG32 uSTS0_CLKCntl_ST                            :  1;\
            UNSG32 RSVDx880C_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_STS0_CLKCntl;
            struct w32Gbl_STS0_CLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_STS0_SOPCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_STS0_SOPCntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_STS0_SOPCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_STS0_SOPCntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_STS0_SOPCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_STS0_SOPCntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_STS0_SOPCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_STS0_SOPCntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_STS0_SOPCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_STS0_SOPCntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_STS0_SOPCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_STS0_SOPCntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_STS0_SOPCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_STS0_SOPCntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_STS0_SOPCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_STS0_SOPCntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_STS0_SOPCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_STS0_SOPCntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_STS0_SOPCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_STS0_SOPCntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_STS0_SOPCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_STS0_SOPCntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_STS0_SOPCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_STS0_SOPCntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_STS0_SOPCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_STS0_SOPCntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_STS0_SOPCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_STS0_SOPCntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_STS0_SOPCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_STS0_SOPCntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_STS0_SOPCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_STS0_SOPCntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_STS0_SOPCntl                            {\
            UNSG32 uSTS0_SOPCntl_DS0                           :  1;\
            UNSG32 uSTS0_SOPCntl_DS1                           :  1;\
            UNSG32 uSTS0_SOPCntl_DS2                           :  1;\
            UNSG32 uSTS0_SOPCntl_IE                            :  1;\
            UNSG32 uSTS0_SOPCntl_PD                            :  1;\
            UNSG32 uSTS0_SOPCntl_PU                            :  1;\
            UNSG32 uSTS0_SOPCntl_SL                            :  1;\
            UNSG32 uSTS0_SOPCntl_ST                            :  1;\
            UNSG32 RSVDx8810_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_STS0_SOPCntl;
            struct w32Gbl_STS0_SOPCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_STS0_SDCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_STS0_SDCntl_DS0(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_STS0_SDCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_STS0_SDCntl_DS0(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_STS0_SDCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_STS0_SDCntl_DS1(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_STS0_SDCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_STS0_SDCntl_DS1(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_STS0_SDCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_STS0_SDCntl_DS2(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_STS0_SDCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_STS0_SDCntl_DS2(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_STS0_SDCntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_STS0_SDCntl_IE(r32,v)                   _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_STS0_SDCntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_STS0_SDCntl_IE(r16,v)                   _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_STS0_SDCntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_STS0_SDCntl_PD(r32,v)                   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_STS0_SDCntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_STS0_SDCntl_PD(r16,v)                   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_STS0_SDCntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_STS0_SDCntl_PU(r32,v)                   _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_STS0_SDCntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_STS0_SDCntl_PU(r16,v)                   _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_STS0_SDCntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_STS0_SDCntl_SL(r32,v)                   _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_STS0_SDCntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_STS0_SDCntl_SL(r16,v)                   _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_STS0_SDCntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_STS0_SDCntl_ST(r32,v)                   _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_STS0_SDCntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_STS0_SDCntl_ST(r16,v)                   _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_STS0_SDCntl                             {\
            UNSG32 uSTS0_SDCntl_DS0                            :  1;\
            UNSG32 uSTS0_SDCntl_DS1                            :  1;\
            UNSG32 uSTS0_SDCntl_DS2                            :  1;\
            UNSG32 uSTS0_SDCntl_IE                             :  1;\
            UNSG32 uSTS0_SDCntl_PD                             :  1;\
            UNSG32 uSTS0_SDCntl_PU                             :  1;\
            UNSG32 uSTS0_SDCntl_SL                             :  1;\
            UNSG32 uSTS0_SDCntl_ST                             :  1;\
            UNSG32 RSVDx8814_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_STS0_SDCntl;
            struct w32Gbl_STS0_SDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_STS0_VALDCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_STS0_VALDCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_STS0_VALDCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_STS0_VALDCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_STS0_VALDCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_STS0_VALDCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_STS0_VALDCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_STS0_VALDCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_STS0_VALDCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_STS0_VALDCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_STS0_VALDCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_STS0_VALDCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_STS0_VALDCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_STS0_VALDCntl_IE(r32,v)                 _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_STS0_VALDCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_STS0_VALDCntl_IE(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_STS0_VALDCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_STS0_VALDCntl_PD(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_STS0_VALDCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_STS0_VALDCntl_PD(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_STS0_VALDCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_STS0_VALDCntl_PU(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_STS0_VALDCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_STS0_VALDCntl_PU(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_STS0_VALDCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_STS0_VALDCntl_SL(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_STS0_VALDCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_STS0_VALDCntl_SL(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_STS0_VALDCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_STS0_VALDCntl_ST(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_STS0_VALDCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_STS0_VALDCntl_ST(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_STS0_VALDCntl                           {\
            UNSG32 uSTS0_VALDCntl_DS0                          :  1;\
            UNSG32 uSTS0_VALDCntl_DS1                          :  1;\
            UNSG32 uSTS0_VALDCntl_DS2                          :  1;\
            UNSG32 uSTS0_VALDCntl_IE                           :  1;\
            UNSG32 uSTS0_VALDCntl_PD                           :  1;\
            UNSG32 uSTS0_VALDCntl_PU                           :  1;\
            UNSG32 uSTS0_VALDCntl_SL                           :  1;\
            UNSG32 uSTS0_VALDCntl_ST                           :  1;\
            UNSG32 RSVDx8818_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_STS0_VALDCntl;
            struct w32Gbl_STS0_VALDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_STS1_CLKCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_STS1_CLKCntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_STS1_CLKCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_STS1_CLKCntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_STS1_CLKCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_STS1_CLKCntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_STS1_CLKCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_STS1_CLKCntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_STS1_CLKCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_STS1_CLKCntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_STS1_CLKCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_STS1_CLKCntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_STS1_CLKCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_STS1_CLKCntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_STS1_CLKCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_STS1_CLKCntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_STS1_CLKCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_STS1_CLKCntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_STS1_CLKCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_STS1_CLKCntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_STS1_CLKCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_STS1_CLKCntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_STS1_CLKCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_STS1_CLKCntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_STS1_CLKCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_STS1_CLKCntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_STS1_CLKCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_STS1_CLKCntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_STS1_CLKCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_STS1_CLKCntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_STS1_CLKCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_STS1_CLKCntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_STS1_CLKCntl                            {\
            UNSG32 uSTS1_CLKCntl_DS0                           :  1;\
            UNSG32 uSTS1_CLKCntl_DS1                           :  1;\
            UNSG32 uSTS1_CLKCntl_DS2                           :  1;\
            UNSG32 uSTS1_CLKCntl_IE                            :  1;\
            UNSG32 uSTS1_CLKCntl_PD                            :  1;\
            UNSG32 uSTS1_CLKCntl_PU                            :  1;\
            UNSG32 uSTS1_CLKCntl_SL                            :  1;\
            UNSG32 uSTS1_CLKCntl_ST                            :  1;\
            UNSG32 RSVDx881C_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_STS1_CLKCntl;
            struct w32Gbl_STS1_CLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_STS1_SOPCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_STS1_SOPCntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_STS1_SOPCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_STS1_SOPCntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_STS1_SOPCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_STS1_SOPCntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_STS1_SOPCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_STS1_SOPCntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_STS1_SOPCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_STS1_SOPCntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_STS1_SOPCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_STS1_SOPCntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_STS1_SOPCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_STS1_SOPCntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_STS1_SOPCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_STS1_SOPCntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_STS1_SOPCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_STS1_SOPCntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_STS1_SOPCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_STS1_SOPCntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_STS1_SOPCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_STS1_SOPCntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_STS1_SOPCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_STS1_SOPCntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_STS1_SOPCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_STS1_SOPCntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_STS1_SOPCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_STS1_SOPCntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_STS1_SOPCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_STS1_SOPCntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_STS1_SOPCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_STS1_SOPCntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_STS1_SOPCntl                            {\
            UNSG32 uSTS1_SOPCntl_DS0                           :  1;\
            UNSG32 uSTS1_SOPCntl_DS1                           :  1;\
            UNSG32 uSTS1_SOPCntl_DS2                           :  1;\
            UNSG32 uSTS1_SOPCntl_IE                            :  1;\
            UNSG32 uSTS1_SOPCntl_PD                            :  1;\
            UNSG32 uSTS1_SOPCntl_PU                            :  1;\
            UNSG32 uSTS1_SOPCntl_SL                            :  1;\
            UNSG32 uSTS1_SOPCntl_ST                            :  1;\
            UNSG32 RSVDx8820_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_STS1_SOPCntl;
            struct w32Gbl_STS1_SOPCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_STS1_SDCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_STS1_SDCntl_DS0(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_STS1_SDCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_STS1_SDCntl_DS0(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_STS1_SDCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_STS1_SDCntl_DS1(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_STS1_SDCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_STS1_SDCntl_DS1(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_STS1_SDCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_STS1_SDCntl_DS2(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_STS1_SDCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_STS1_SDCntl_DS2(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_STS1_SDCntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_STS1_SDCntl_IE(r32,v)                   _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_STS1_SDCntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_STS1_SDCntl_IE(r16,v)                   _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_STS1_SDCntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_STS1_SDCntl_PD(r32,v)                   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_STS1_SDCntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_STS1_SDCntl_PD(r16,v)                   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_STS1_SDCntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_STS1_SDCntl_PU(r32,v)                   _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_STS1_SDCntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_STS1_SDCntl_PU(r16,v)                   _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_STS1_SDCntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_STS1_SDCntl_SL(r32,v)                   _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_STS1_SDCntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_STS1_SDCntl_SL(r16,v)                   _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_STS1_SDCntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_STS1_SDCntl_ST(r32,v)                   _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_STS1_SDCntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_STS1_SDCntl_ST(r16,v)                   _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_STS1_SDCntl                             {\
            UNSG32 uSTS1_SDCntl_DS0                            :  1;\
            UNSG32 uSTS1_SDCntl_DS1                            :  1;\
            UNSG32 uSTS1_SDCntl_DS2                            :  1;\
            UNSG32 uSTS1_SDCntl_IE                             :  1;\
            UNSG32 uSTS1_SDCntl_PD                             :  1;\
            UNSG32 uSTS1_SDCntl_PU                             :  1;\
            UNSG32 uSTS1_SDCntl_SL                             :  1;\
            UNSG32 uSTS1_SDCntl_ST                             :  1;\
            UNSG32 RSVDx8824_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_STS1_SDCntl;
            struct w32Gbl_STS1_SDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_STS1_VALDCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_STS1_VALDCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_STS1_VALDCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_STS1_VALDCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_STS1_VALDCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_STS1_VALDCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_STS1_VALDCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_STS1_VALDCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_STS1_VALDCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_STS1_VALDCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_STS1_VALDCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_STS1_VALDCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_STS1_VALDCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_STS1_VALDCntl_IE(r32,v)                 _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_STS1_VALDCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_STS1_VALDCntl_IE(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_STS1_VALDCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_STS1_VALDCntl_PD(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_STS1_VALDCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_STS1_VALDCntl_PD(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_STS1_VALDCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_STS1_VALDCntl_PU(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_STS1_VALDCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_STS1_VALDCntl_PU(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_STS1_VALDCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_STS1_VALDCntl_SL(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_STS1_VALDCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_STS1_VALDCntl_SL(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_STS1_VALDCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_STS1_VALDCntl_ST(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_STS1_VALDCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_STS1_VALDCntl_ST(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_STS1_VALDCntl                           {\
            UNSG32 uSTS1_VALDCntl_DS0                          :  1;\
            UNSG32 uSTS1_VALDCntl_DS1                          :  1;\
            UNSG32 uSTS1_VALDCntl_DS2                          :  1;\
            UNSG32 uSTS1_VALDCntl_IE                           :  1;\
            UNSG32 uSTS1_VALDCntl_PD                           :  1;\
            UNSG32 uSTS1_VALDCntl_PU                           :  1;\
            UNSG32 uSTS1_VALDCntl_SL                           :  1;\
            UNSG32 uSTS1_VALDCntl_ST                           :  1;\
            UNSG32 RSVDx8828_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_STS1_VALDCntl;
            struct w32Gbl_STS1_VALDCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS0nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS0nCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SS0nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS0nCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SS0nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS0nCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SS0nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS0nCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPI1_SS0nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SS0nCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPI1_SS0nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SS0nCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SPI1_SS0nCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SS0nCntl_IE(r32,v)                 _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SPI1_SS0nCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SS0nCntl_IE(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SPI1_SS0nCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SS0nCntl_PD(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SPI1_SS0nCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SS0nCntl_PD(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SPI1_SS0nCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SS0nCntl_PU(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SPI1_SS0nCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SS0nCntl_PU(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SPI1_SS0nCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SS0nCntl_SL(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SPI1_SS0nCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SS0nCntl_SL(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SPI1_SS0nCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SS0nCntl_ST(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SPI1_SS0nCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SS0nCntl_ST(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SPI1_SS0nCntl                           {\
            UNSG32 uSPI1_SS0nCntl_DS0                          :  1;\
            UNSG32 uSPI1_SS0nCntl_DS1                          :  1;\
            UNSG32 uSPI1_SS0nCntl_DS2                          :  1;\
            UNSG32 uSPI1_SS0nCntl_IE                           :  1;\
            UNSG32 uSPI1_SS0nCntl_PD                           :  1;\
            UNSG32 uSPI1_SS0nCntl_PU                           :  1;\
            UNSG32 uSPI1_SS0nCntl_SL                           :  1;\
            UNSG32 uSPI1_SS0nCntl_ST                           :  1;\
            UNSG32 RSVDx882C_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SPI1_SS0nCntl;
            struct w32Gbl_SPI1_SS0nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS1nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS1nCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SS1nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS1nCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SS1nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS1nCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SS1nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS1nCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPI1_SS1nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SS1nCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPI1_SS1nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SS1nCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SPI1_SS1nCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SS1nCntl_IE(r32,v)                 _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SPI1_SS1nCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SS1nCntl_IE(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SPI1_SS1nCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SS1nCntl_PD(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SPI1_SS1nCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SS1nCntl_PD(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SPI1_SS1nCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SS1nCntl_PU(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SPI1_SS1nCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SS1nCntl_PU(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SPI1_SS1nCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SS1nCntl_SL(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SPI1_SS1nCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SS1nCntl_SL(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SPI1_SS1nCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SS1nCntl_ST(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SPI1_SS1nCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SS1nCntl_ST(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SPI1_SS1nCntl                           {\
            UNSG32 uSPI1_SS1nCntl_DS0                          :  1;\
            UNSG32 uSPI1_SS1nCntl_DS1                          :  1;\
            UNSG32 uSPI1_SS1nCntl_DS2                          :  1;\
            UNSG32 uSPI1_SS1nCntl_IE                           :  1;\
            UNSG32 uSPI1_SS1nCntl_PD                           :  1;\
            UNSG32 uSPI1_SS1nCntl_PU                           :  1;\
            UNSG32 uSPI1_SS1nCntl_SL                           :  1;\
            UNSG32 uSPI1_SS1nCntl_ST                           :  1;\
            UNSG32 RSVDx8830_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SPI1_SS1nCntl;
            struct w32Gbl_SPI1_SS1nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS2nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS2nCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SS2nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS2nCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SS2nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS2nCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SS2nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS2nCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPI1_SS2nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SS2nCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPI1_SS2nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SS2nCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SPI1_SS2nCntl_DS3(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SS2nCntl_DS3(r32,v)                _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SPI1_SS2nCntl_DS3(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SS2nCntl_DS3(r16,v)                _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SPI1_SS2nCntl_IE(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SS2nCntl_IE(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SPI1_SS2nCntl_IE(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SS2nCntl_IE(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SPI1_SS2nCntl_PE(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SS2nCntl_PE(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SPI1_SS2nCntl_PE(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SS2nCntl_PE(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SPI1_SS2nCntl_PS(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SS2nCntl_PS(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SPI1_SS2nCntl_PS(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SS2nCntl_PS(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SPI1_SS2nCntl_SL(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SS2nCntl_SL(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SPI1_SS2nCntl_SL(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SS2nCntl_SL(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_SPI1_SS2nCntl_SPU(r32)                  _BFGET_(r32, 8, 8)
    #define   SET32Gbl_SPI1_SS2nCntl_SPU(r32,v)                _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_SPI1_SS2nCntl_SPU(r16)                  _BFGET_(r16, 8, 8)
    #define   SET16Gbl_SPI1_SS2nCntl_SPU(r16,v)                _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_SPI1_SS2nCntl_ST(r32)                   _BFGET_(r32, 9, 9)
    #define   SET32Gbl_SPI1_SS2nCntl_ST(r32,v)                 _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_SPI1_SS2nCntl_ST(r16)                   _BFGET_(r16, 9, 9)
    #define   SET16Gbl_SPI1_SS2nCntl_ST(r16,v)                 _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_SPI1_SS2nCntl                           {\
            UNSG32 uSPI1_SS2nCntl_DS0                          :  1;\
            UNSG32 uSPI1_SS2nCntl_DS1                          :  1;\
            UNSG32 uSPI1_SS2nCntl_DS2                          :  1;\
            UNSG32 uSPI1_SS2nCntl_DS3                          :  1;\
            UNSG32 uSPI1_SS2nCntl_IE                           :  1;\
            UNSG32 uSPI1_SS2nCntl_PE                           :  1;\
            UNSG32 uSPI1_SS2nCntl_PS                           :  1;\
            UNSG32 uSPI1_SS2nCntl_SL                           :  1;\
            UNSG32 uSPI1_SS2nCntl_SPU                          :  1;\
            UNSG32 uSPI1_SS2nCntl_ST                           :  1;\
            UNSG32 RSVDx8834_b10                               : 22;\
          }
    union { UNSG32 u32Gbl_SPI1_SS2nCntl;
            struct w32Gbl_SPI1_SS2nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SS3nCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SS3nCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SS3nCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SS3nCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SS3nCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SS3nCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SS3nCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SS3nCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPI1_SS3nCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SS3nCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPI1_SS3nCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SS3nCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SPI1_SS3nCntl_DS3(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SS3nCntl_DS3(r32,v)                _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SPI1_SS3nCntl_DS3(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SS3nCntl_DS3(r16,v)                _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SPI1_SS3nCntl_IE(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SS3nCntl_IE(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SPI1_SS3nCntl_IE(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SS3nCntl_IE(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SPI1_SS3nCntl_PE(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SS3nCntl_PE(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SPI1_SS3nCntl_PE(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SS3nCntl_PE(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SPI1_SS3nCntl_PS(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SS3nCntl_PS(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SPI1_SS3nCntl_PS(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SS3nCntl_PS(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SPI1_SS3nCntl_SL(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SS3nCntl_SL(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SPI1_SS3nCntl_SL(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SS3nCntl_SL(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_SPI1_SS3nCntl_SPU(r32)                  _BFGET_(r32, 8, 8)
    #define   SET32Gbl_SPI1_SS3nCntl_SPU(r32,v)                _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_SPI1_SS3nCntl_SPU(r16)                  _BFGET_(r16, 8, 8)
    #define   SET16Gbl_SPI1_SS3nCntl_SPU(r16,v)                _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_SPI1_SS3nCntl_ST(r32)                   _BFGET_(r32, 9, 9)
    #define   SET32Gbl_SPI1_SS3nCntl_ST(r32,v)                 _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_SPI1_SS3nCntl_ST(r16)                   _BFGET_(r16, 9, 9)
    #define   SET16Gbl_SPI1_SS3nCntl_ST(r16,v)                 _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_SPI1_SS3nCntl                           {\
            UNSG32 uSPI1_SS3nCntl_DS0                          :  1;\
            UNSG32 uSPI1_SS3nCntl_DS1                          :  1;\
            UNSG32 uSPI1_SS3nCntl_DS2                          :  1;\
            UNSG32 uSPI1_SS3nCntl_DS3                          :  1;\
            UNSG32 uSPI1_SS3nCntl_IE                           :  1;\
            UNSG32 uSPI1_SS3nCntl_PE                           :  1;\
            UNSG32 uSPI1_SS3nCntl_PS                           :  1;\
            UNSG32 uSPI1_SS3nCntl_SL                           :  1;\
            UNSG32 uSPI1_SS3nCntl_SPU                          :  1;\
            UNSG32 uSPI1_SS3nCntl_ST                           :  1;\
            UNSG32 RSVDx8838_b10                               : 22;\
          }
    union { UNSG32 u32Gbl_SPI1_SS3nCntl;
            struct w32Gbl_SPI1_SS3nCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SDOCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SDOCntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SDOCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SDOCntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SDOCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SDOCntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SDOCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SDOCntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPI1_SDOCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SDOCntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPI1_SDOCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SDOCntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SPI1_SDOCntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SDOCntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SPI1_SDOCntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SDOCntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SPI1_SDOCntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SDOCntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SPI1_SDOCntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SDOCntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SPI1_SDOCntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SDOCntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SPI1_SDOCntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SDOCntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SPI1_SDOCntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SDOCntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SPI1_SDOCntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SDOCntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SPI1_SDOCntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SDOCntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SPI1_SDOCntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SDOCntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SPI1_SDOCntl                            {\
            UNSG32 uSPI1_SDOCntl_DS0                           :  1;\
            UNSG32 uSPI1_SDOCntl_DS1                           :  1;\
            UNSG32 uSPI1_SDOCntl_DS2                           :  1;\
            UNSG32 uSPI1_SDOCntl_IE                            :  1;\
            UNSG32 uSPI1_SDOCntl_PD                            :  1;\
            UNSG32 uSPI1_SDOCntl_PU                            :  1;\
            UNSG32 uSPI1_SDOCntl_SL                            :  1;\
            UNSG32 uSPI1_SDOCntl_ST                            :  1;\
            UNSG32 RSVDx883C_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SPI1_SDOCntl;
            struct w32Gbl_SPI1_SDOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SCLKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SCLKCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SCLKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SCLKCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SCLKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SCLKCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SCLKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SCLKCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPI1_SCLKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SCLKCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPI1_SCLKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SCLKCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SPI1_SCLKCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SCLKCntl_IE(r32,v)                 _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SPI1_SCLKCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SCLKCntl_IE(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SPI1_SCLKCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SCLKCntl_PD(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SPI1_SCLKCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SCLKCntl_PD(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SPI1_SCLKCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SCLKCntl_PU(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SPI1_SCLKCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SCLKCntl_PU(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SPI1_SCLKCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SCLKCntl_SL(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SPI1_SCLKCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SCLKCntl_SL(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SPI1_SCLKCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SCLKCntl_ST(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SPI1_SCLKCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SCLKCntl_ST(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SPI1_SCLKCntl                           {\
            UNSG32 uSPI1_SCLKCntl_DS0                          :  1;\
            UNSG32 uSPI1_SCLKCntl_DS1                          :  1;\
            UNSG32 uSPI1_SCLKCntl_DS2                          :  1;\
            UNSG32 uSPI1_SCLKCntl_IE                           :  1;\
            UNSG32 uSPI1_SCLKCntl_PD                           :  1;\
            UNSG32 uSPI1_SCLKCntl_PU                           :  1;\
            UNSG32 uSPI1_SCLKCntl_SL                           :  1;\
            UNSG32 uSPI1_SCLKCntl_ST                           :  1;\
            UNSG32 RSVDx8840_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SPI1_SCLKCntl;
            struct w32Gbl_SPI1_SCLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPI1_SDICntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPI1_SDICntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPI1_SDICntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPI1_SDICntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPI1_SDICntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPI1_SDICntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPI1_SDICntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPI1_SDICntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPI1_SDICntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPI1_SDICntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPI1_SDICntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPI1_SDICntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SPI1_SDICntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPI1_SDICntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SPI1_SDICntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPI1_SDICntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SPI1_SDICntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPI1_SDICntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SPI1_SDICntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPI1_SDICntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SPI1_SDICntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPI1_SDICntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SPI1_SDICntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPI1_SDICntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SPI1_SDICntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPI1_SDICntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SPI1_SDICntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPI1_SDICntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SPI1_SDICntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPI1_SDICntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SPI1_SDICntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPI1_SDICntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SPI1_SDICntl                            {\
            UNSG32 uSPI1_SDICntl_DS0                           :  1;\
            UNSG32 uSPI1_SDICntl_DS1                           :  1;\
            UNSG32 uSPI1_SDICntl_DS2                           :  1;\
            UNSG32 uSPI1_SDICntl_IE                            :  1;\
            UNSG32 uSPI1_SDICntl_PD                            :  1;\
            UNSG32 uSPI1_SDICntl_PU                            :  1;\
            UNSG32 uSPI1_SDICntl_SL                            :  1;\
            UNSG32 uSPI1_SDICntl_ST                            :  1;\
            UNSG32 RSVDx8844_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SPI1_SDICntl;
            struct w32Gbl_SPI1_SDICntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TW0_SCLCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TW0_SCLCntl_DS0(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_TW0_SCLCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TW0_SCLCntl_DS0(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_TW0_SCLCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TW0_SCLCntl_DS1(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_TW0_SCLCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TW0_SCLCntl_DS1(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_TW0_SCLCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TW0_SCLCntl_DS2(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_TW0_SCLCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TW0_SCLCntl_DS2(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_TW0_SCLCntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TW0_SCLCntl_DS3(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_TW0_SCLCntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TW0_SCLCntl_DS3(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_TW0_SCLCntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TW0_SCLCntl_IE(r32,v)                   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_TW0_SCLCntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TW0_SCLCntl_IE(r16,v)                   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_TW0_SCLCntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TW0_SCLCntl_PE(r32,v)                   _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_TW0_SCLCntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TW0_SCLCntl_PE(r16,v)                   _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_TW0_SCLCntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TW0_SCLCntl_PS(r32,v)                   _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_TW0_SCLCntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TW0_SCLCntl_PS(r16,v)                   _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_TW0_SCLCntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TW0_SCLCntl_SL(r32,v)                   _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_TW0_SCLCntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TW0_SCLCntl_SL(r16,v)                   _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_TW0_SCLCntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TW0_SCLCntl_SPU(r32,v)                  _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_TW0_SCLCntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TW0_SCLCntl_SPU(r16,v)                  _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_TW0_SCLCntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TW0_SCLCntl_ST(r32,v)                   _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_TW0_SCLCntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TW0_SCLCntl_ST(r16,v)                   _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_TW0_SCLCntl                             {\
            UNSG32 uTW0_SCLCntl_DS0                            :  1;\
            UNSG32 uTW0_SCLCntl_DS1                            :  1;\
            UNSG32 uTW0_SCLCntl_DS2                            :  1;\
            UNSG32 uTW0_SCLCntl_DS3                            :  1;\
            UNSG32 uTW0_SCLCntl_IE                             :  1;\
            UNSG32 uTW0_SCLCntl_PE                             :  1;\
            UNSG32 uTW0_SCLCntl_PS                             :  1;\
            UNSG32 uTW0_SCLCntl_SL                             :  1;\
            UNSG32 uTW0_SCLCntl_SPU                            :  1;\
            UNSG32 uTW0_SCLCntl_ST                             :  1;\
            UNSG32 RSVDx8848_b10                               : 22;\
          }
    union { UNSG32 u32Gbl_TW0_SCLCntl;
            struct w32Gbl_TW0_SCLCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_TW0_SDACntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_TW0_SDACntl_DS0(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_TW0_SDACntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_TW0_SDACntl_DS0(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_TW0_SDACntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_TW0_SDACntl_DS1(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_TW0_SDACntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_TW0_SDACntl_DS1(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_TW0_SDACntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_TW0_SDACntl_DS2(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_TW0_SDACntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_TW0_SDACntl_DS2(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_TW0_SDACntl_DS3(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_TW0_SDACntl_DS3(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_TW0_SDACntl_DS3(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_TW0_SDACntl_DS3(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_TW0_SDACntl_IE(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_TW0_SDACntl_IE(r32,v)                   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_TW0_SDACntl_IE(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_TW0_SDACntl_IE(r16,v)                   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_TW0_SDACntl_PE(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_TW0_SDACntl_PE(r32,v)                   _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_TW0_SDACntl_PE(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_TW0_SDACntl_PE(r16,v)                   _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_TW0_SDACntl_PS(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_TW0_SDACntl_PS(r32,v)                   _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_TW0_SDACntl_PS(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_TW0_SDACntl_PS(r16,v)                   _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_TW0_SDACntl_SL(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_TW0_SDACntl_SL(r32,v)                   _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_TW0_SDACntl_SL(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_TW0_SDACntl_SL(r16,v)                   _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_TW0_SDACntl_SPU(r32)                    _BFGET_(r32, 8, 8)
    #define   SET32Gbl_TW0_SDACntl_SPU(r32,v)                  _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_TW0_SDACntl_SPU(r16)                    _BFGET_(r16, 8, 8)
    #define   SET16Gbl_TW0_SDACntl_SPU(r16,v)                  _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_TW0_SDACntl_ST(r32)                     _BFGET_(r32, 9, 9)
    #define   SET32Gbl_TW0_SDACntl_ST(r32,v)                   _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_TW0_SDACntl_ST(r16)                     _BFGET_(r16, 9, 9)
    #define   SET16Gbl_TW0_SDACntl_ST(r16,v)                   _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_TW0_SDACntl                             {\
            UNSG32 uTW0_SDACntl_DS0                            :  1;\
            UNSG32 uTW0_SDACntl_DS1                            :  1;\
            UNSG32 uTW0_SDACntl_DS2                            :  1;\
            UNSG32 uTW0_SDACntl_DS3                            :  1;\
            UNSG32 uTW0_SDACntl_IE                             :  1;\
            UNSG32 uTW0_SDACntl_PE                             :  1;\
            UNSG32 uTW0_SDACntl_PS                             :  1;\
            UNSG32 uTW0_SDACntl_SL                             :  1;\
            UNSG32 uTW0_SDACntl_SPU                            :  1;\
            UNSG32 uTW0_SDACntl_ST                             :  1;\
            UNSG32 RSVDx884C_b10                               : 22;\
          }
    union { UNSG32 u32Gbl_TW0_SDACntl;
            struct w32Gbl_TW0_SDACntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_USB2_DRV_VBUSCntl_DS0(r32)              _BFGET_(r32, 0, 0)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_DS0(r32,v)            _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_DS0(r16)              _BFGET_(r16, 0, 0)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_DS0(r16,v)            _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_DS1(r32)              _BFGET_(r32, 1, 1)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_DS1(r32,v)            _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_DS1(r16)              _BFGET_(r16, 1, 1)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_DS1(r16,v)            _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_DS2(r32)              _BFGET_(r32, 2, 2)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_DS2(r32,v)            _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_DS2(r16)              _BFGET_(r16, 2, 2)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_DS2(r16,v)            _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_IE(r32)               _BFGET_(r32, 3, 3)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_IE(r32,v)             _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_IE(r16)               _BFGET_(r16, 3, 3)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_IE(r16,v)             _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_PD(r32)               _BFGET_(r32, 4, 4)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_PD(r32,v)             _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_PD(r16)               _BFGET_(r16, 4, 4)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_PD(r16,v)             _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_PU(r32)               _BFGET_(r32, 5, 5)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_PU(r32,v)             _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_PU(r16)               _BFGET_(r16, 5, 5)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_PU(r16,v)             _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_SL(r32)               _BFGET_(r32, 6, 6)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_SL(r32,v)             _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_SL(r16)               _BFGET_(r16, 6, 6)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_SL(r16,v)             _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_USB2_DRV_VBUSCntl_ST(r32)               _BFGET_(r32, 7, 7)
    #define   SET32Gbl_USB2_DRV_VBUSCntl_ST(r32,v)             _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_USB2_DRV_VBUSCntl_ST(r16)               _BFGET_(r16, 7, 7)
    #define   SET16Gbl_USB2_DRV_VBUSCntl_ST(r16,v)             _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_USB2_DRV_VBUSCntl                       {\
            UNSG32 uUSB2_DRV_VBUSCntl_DS0                      :  1;\
            UNSG32 uUSB2_DRV_VBUSCntl_DS1                      :  1;\
            UNSG32 uUSB2_DRV_VBUSCntl_DS2                      :  1;\
            UNSG32 uUSB2_DRV_VBUSCntl_IE                       :  1;\
            UNSG32 uUSB2_DRV_VBUSCntl_PD                       :  1;\
            UNSG32 uUSB2_DRV_VBUSCntl_PU                       :  1;\
            UNSG32 uUSB2_DRV_VBUSCntl_SL                       :  1;\
            UNSG32 uUSB2_DRV_VBUSCntl_ST                       :  1;\
            UNSG32 RSVDx8850_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_USB2_DRV_VBUSCntl;
            struct w32Gbl_USB2_DRV_VBUSCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SDIO0_CDnCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SDIO0_CDnCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SDIO0_CDnCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SDIO0_CDnCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SDIO0_CDnCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SDIO0_CDnCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SDIO0_CDnCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SDIO0_CDnCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SDIO0_CDnCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SDIO0_CDnCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SDIO0_CDnCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SDIO0_CDnCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SDIO0_CDnCntl_DS3(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SDIO0_CDnCntl_DS3(r32,v)                _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SDIO0_CDnCntl_DS3(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SDIO0_CDnCntl_DS3(r16,v)                _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SDIO0_CDnCntl_IE(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SDIO0_CDnCntl_IE(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SDIO0_CDnCntl_IE(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SDIO0_CDnCntl_IE(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SDIO0_CDnCntl_PE(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SDIO0_CDnCntl_PE(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SDIO0_CDnCntl_PE(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SDIO0_CDnCntl_PE(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SDIO0_CDnCntl_PS(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SDIO0_CDnCntl_PS(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SDIO0_CDnCntl_PS(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SDIO0_CDnCntl_PS(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SDIO0_CDnCntl_SL(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SDIO0_CDnCntl_SL(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SDIO0_CDnCntl_SL(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SDIO0_CDnCntl_SL(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_SDIO0_CDnCntl_SPU(r32)                  _BFGET_(r32, 8, 8)
    #define   SET32Gbl_SDIO0_CDnCntl_SPU(r32,v)                _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_SDIO0_CDnCntl_SPU(r16)                  _BFGET_(r16, 8, 8)
    #define   SET16Gbl_SDIO0_CDnCntl_SPU(r16,v)                _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_SDIO0_CDnCntl_ST(r32)                   _BFGET_(r32, 9, 9)
    #define   SET32Gbl_SDIO0_CDnCntl_ST(r32,v)                 _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_SDIO0_CDnCntl_ST(r16)                   _BFGET_(r16, 9, 9)
    #define   SET16Gbl_SDIO0_CDnCntl_ST(r16,v)                 _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_SDIO0_CDnCntl                           {\
            UNSG32 uSDIO0_CDnCntl_DS0                          :  1;\
            UNSG32 uSDIO0_CDnCntl_DS1                          :  1;\
            UNSG32 uSDIO0_CDnCntl_DS2                          :  1;\
            UNSG32 uSDIO0_CDnCntl_DS3                          :  1;\
            UNSG32 uSDIO0_CDnCntl_IE                           :  1;\
            UNSG32 uSDIO0_CDnCntl_PE                           :  1;\
            UNSG32 uSDIO0_CDnCntl_PS                           :  1;\
            UNSG32 uSDIO0_CDnCntl_SL                           :  1;\
            UNSG32 uSDIO0_CDnCntl_SPU                          :  1;\
            UNSG32 uSDIO0_CDnCntl_ST                           :  1;\
            UNSG32 RSVDx8854_b10                               : 22;\
          }
    union { UNSG32 u32Gbl_SDIO0_CDnCntl;
            struct w32Gbl_SDIO0_CDnCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SDIO0_WPCntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SDIO0_WPCntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SDIO0_WPCntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SDIO0_WPCntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SDIO0_WPCntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SDIO0_WPCntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SDIO0_WPCntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SDIO0_WPCntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SDIO0_WPCntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SDIO0_WPCntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SDIO0_WPCntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SDIO0_WPCntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SDIO0_WPCntl_DS3(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SDIO0_WPCntl_DS3(r32,v)                 _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SDIO0_WPCntl_DS3(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SDIO0_WPCntl_DS3(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SDIO0_WPCntl_IE(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SDIO0_WPCntl_IE(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SDIO0_WPCntl_IE(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SDIO0_WPCntl_IE(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SDIO0_WPCntl_PE(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SDIO0_WPCntl_PE(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SDIO0_WPCntl_PE(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SDIO0_WPCntl_PE(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SDIO0_WPCntl_PS(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SDIO0_WPCntl_PS(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SDIO0_WPCntl_PS(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SDIO0_WPCntl_PS(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SDIO0_WPCntl_SL(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SDIO0_WPCntl_SL(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SDIO0_WPCntl_SL(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SDIO0_WPCntl_SL(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_SDIO0_WPCntl_SPU(r32)                   _BFGET_(r32, 8, 8)
    #define   SET32Gbl_SDIO0_WPCntl_SPU(r32,v)                 _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_SDIO0_WPCntl_SPU(r16)                   _BFGET_(r16, 8, 8)
    #define   SET16Gbl_SDIO0_WPCntl_SPU(r16,v)                 _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_SDIO0_WPCntl_ST(r32)                    _BFGET_(r32, 9, 9)
    #define   SET32Gbl_SDIO0_WPCntl_ST(r32,v)                  _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_SDIO0_WPCntl_ST(r16)                    _BFGET_(r16, 9, 9)
    #define   SET16Gbl_SDIO0_WPCntl_ST(r16,v)                  _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_SDIO0_WPCntl                            {\
            UNSG32 uSDIO0_WPCntl_DS0                           :  1;\
            UNSG32 uSDIO0_WPCntl_DS1                           :  1;\
            UNSG32 uSDIO0_WPCntl_DS2                           :  1;\
            UNSG32 uSDIO0_WPCntl_DS3                           :  1;\
            UNSG32 uSDIO0_WPCntl_IE                            :  1;\
            UNSG32 uSDIO0_WPCntl_PE                            :  1;\
            UNSG32 uSDIO0_WPCntl_PS                            :  1;\
            UNSG32 uSDIO0_WPCntl_SL                            :  1;\
            UNSG32 uSDIO0_WPCntl_SPU                           :  1;\
            UNSG32 uSDIO0_WPCntl_ST                            :  1;\
            UNSG32 RSVDx8858_b10                               : 22;\
          }
    union { UNSG32 u32Gbl_SDIO0_WPCntl;
            struct w32Gbl_SDIO0_WPCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SCRD0_CRD_PRESCntl_DS0(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SCRD0_CRD_PRESCntl_DS0(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SCRD0_CRD_PRESCntl_DS0(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SCRD0_CRD_PRESCntl_DS0(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SCRD0_CRD_PRESCntl_DS1(r32)             _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SCRD0_CRD_PRESCntl_DS1(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SCRD0_CRD_PRESCntl_DS1(r16)             _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SCRD0_CRD_PRESCntl_DS1(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SCRD0_CRD_PRESCntl_DS2(r32)             _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SCRD0_CRD_PRESCntl_DS2(r32,v)           _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SCRD0_CRD_PRESCntl_DS2(r16)             _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SCRD0_CRD_PRESCntl_DS2(r16,v)           _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SCRD0_CRD_PRESCntl_IE(r32)              _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SCRD0_CRD_PRESCntl_IE(r32,v)            _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SCRD0_CRD_PRESCntl_IE(r16)              _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SCRD0_CRD_PRESCntl_IE(r16,v)            _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SCRD0_CRD_PRESCntl_PD(r32)              _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SCRD0_CRD_PRESCntl_PD(r32,v)            _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SCRD0_CRD_PRESCntl_PD(r16)              _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SCRD0_CRD_PRESCntl_PD(r16,v)            _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SCRD0_CRD_PRESCntl_PU(r32)              _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SCRD0_CRD_PRESCntl_PU(r32,v)            _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SCRD0_CRD_PRESCntl_PU(r16)              _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SCRD0_CRD_PRESCntl_PU(r16,v)            _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SCRD0_CRD_PRESCntl_SL(r32)              _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SCRD0_CRD_PRESCntl_SL(r32,v)            _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SCRD0_CRD_PRESCntl_SL(r16)              _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SCRD0_CRD_PRESCntl_SL(r16,v)            _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SCRD0_CRD_PRESCntl_ST(r32)              _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SCRD0_CRD_PRESCntl_ST(r32,v)            _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SCRD0_CRD_PRESCntl_ST(r16)              _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SCRD0_CRD_PRESCntl_ST(r16,v)            _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SCRD0_CRD_PRESCntl                      {\
            UNSG32 uSCRD0_CRD_PRESCntl_DS0                     :  1;\
            UNSG32 uSCRD0_CRD_PRESCntl_DS1                     :  1;\
            UNSG32 uSCRD0_CRD_PRESCntl_DS2                     :  1;\
            UNSG32 uSCRD0_CRD_PRESCntl_IE                      :  1;\
            UNSG32 uSCRD0_CRD_PRESCntl_PD                      :  1;\
            UNSG32 uSCRD0_CRD_PRESCntl_PU                      :  1;\
            UNSG32 uSCRD0_CRD_PRESCntl_SL                      :  1;\
            UNSG32 uSCRD0_CRD_PRESCntl_ST                      :  1;\
            UNSG32 RSVDx885C_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SCRD0_CRD_PRESCntl;
            struct w32Gbl_SCRD0_CRD_PRESCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SCRD0_RSTCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SCRD0_RSTCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SCRD0_RSTCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SCRD0_RSTCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SCRD0_RSTCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SCRD0_RSTCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SCRD0_RSTCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SCRD0_RSTCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SCRD0_RSTCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SCRD0_RSTCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SCRD0_RSTCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SCRD0_RSTCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SCRD0_RSTCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SCRD0_RSTCntl_IE(r32,v)                 _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SCRD0_RSTCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SCRD0_RSTCntl_IE(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SCRD0_RSTCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SCRD0_RSTCntl_PD(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SCRD0_RSTCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SCRD0_RSTCntl_PD(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SCRD0_RSTCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SCRD0_RSTCntl_PU(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SCRD0_RSTCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SCRD0_RSTCntl_PU(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SCRD0_RSTCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SCRD0_RSTCntl_SL(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SCRD0_RSTCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SCRD0_RSTCntl_SL(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SCRD0_RSTCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SCRD0_RSTCntl_ST(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SCRD0_RSTCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SCRD0_RSTCntl_ST(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SCRD0_RSTCntl                           {\
            UNSG32 uSCRD0_RSTCntl_DS0                          :  1;\
            UNSG32 uSCRD0_RSTCntl_DS1                          :  1;\
            UNSG32 uSCRD0_RSTCntl_DS2                          :  1;\
            UNSG32 uSCRD0_RSTCntl_IE                           :  1;\
            UNSG32 uSCRD0_RSTCntl_PD                           :  1;\
            UNSG32 uSCRD0_RSTCntl_PU                           :  1;\
            UNSG32 uSCRD0_RSTCntl_SL                           :  1;\
            UNSG32 uSCRD0_RSTCntl_ST                           :  1;\
            UNSG32 RSVDx8860_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SCRD0_RSTCntl;
            struct w32Gbl_SCRD0_RSTCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SCRD0_DCLKCntl_DS0(r32)                 _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SCRD0_DCLKCntl_DS0(r32,v)               _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SCRD0_DCLKCntl_DS0(r16)                 _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SCRD0_DCLKCntl_DS0(r16,v)               _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SCRD0_DCLKCntl_DS1(r32)                 _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SCRD0_DCLKCntl_DS1(r32,v)               _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SCRD0_DCLKCntl_DS1(r16)                 _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SCRD0_DCLKCntl_DS1(r16,v)               _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SCRD0_DCLKCntl_DS2(r32)                 _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SCRD0_DCLKCntl_DS2(r32,v)               _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SCRD0_DCLKCntl_DS2(r16)                 _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SCRD0_DCLKCntl_DS2(r16,v)               _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SCRD0_DCLKCntl_IE(r32)                  _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SCRD0_DCLKCntl_IE(r32,v)                _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SCRD0_DCLKCntl_IE(r16)                  _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SCRD0_DCLKCntl_IE(r16,v)                _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SCRD0_DCLKCntl_PD(r32)                  _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SCRD0_DCLKCntl_PD(r32,v)                _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SCRD0_DCLKCntl_PD(r16)                  _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SCRD0_DCLKCntl_PD(r16,v)                _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SCRD0_DCLKCntl_PU(r32)                  _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SCRD0_DCLKCntl_PU(r32,v)                _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SCRD0_DCLKCntl_PU(r16)                  _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SCRD0_DCLKCntl_PU(r16,v)                _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SCRD0_DCLKCntl_SL(r32)                  _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SCRD0_DCLKCntl_SL(r32,v)                _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SCRD0_DCLKCntl_SL(r16)                  _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SCRD0_DCLKCntl_SL(r16,v)                _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SCRD0_DCLKCntl_ST(r32)                  _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SCRD0_DCLKCntl_ST(r32,v)                _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SCRD0_DCLKCntl_ST(r16)                  _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SCRD0_DCLKCntl_ST(r16,v)                _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SCRD0_DCLKCntl                          {\
            UNSG32 uSCRD0_DCLKCntl_DS0                         :  1;\
            UNSG32 uSCRD0_DCLKCntl_DS1                         :  1;\
            UNSG32 uSCRD0_DCLKCntl_DS2                         :  1;\
            UNSG32 uSCRD0_DCLKCntl_IE                          :  1;\
            UNSG32 uSCRD0_DCLKCntl_PD                          :  1;\
            UNSG32 uSCRD0_DCLKCntl_PU                          :  1;\
            UNSG32 uSCRD0_DCLKCntl_SL                          :  1;\
            UNSG32 uSCRD0_DCLKCntl_ST                          :  1;\
            UNSG32 RSVDx8864_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SCRD0_DCLKCntl;
            struct w32Gbl_SCRD0_DCLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SCRD0_DIOCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SCRD0_DIOCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SCRD0_DIOCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SCRD0_DIOCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SCRD0_DIOCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SCRD0_DIOCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SCRD0_DIOCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SCRD0_DIOCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SCRD0_DIOCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SCRD0_DIOCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SCRD0_DIOCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SCRD0_DIOCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SCRD0_DIOCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SCRD0_DIOCntl_IE(r32,v)                 _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SCRD0_DIOCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SCRD0_DIOCntl_IE(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SCRD0_DIOCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SCRD0_DIOCntl_PD(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SCRD0_DIOCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SCRD0_DIOCntl_PD(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SCRD0_DIOCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SCRD0_DIOCntl_PU(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SCRD0_DIOCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SCRD0_DIOCntl_PU(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SCRD0_DIOCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SCRD0_DIOCntl_SL(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SCRD0_DIOCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SCRD0_DIOCntl_SL(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SCRD0_DIOCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SCRD0_DIOCntl_ST(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SCRD0_DIOCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SCRD0_DIOCntl_ST(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SCRD0_DIOCntl                           {\
            UNSG32 uSCRD0_DIOCntl_DS0                          :  1;\
            UNSG32 uSCRD0_DIOCntl_DS1                          :  1;\
            UNSG32 uSCRD0_DIOCntl_DS2                          :  1;\
            UNSG32 uSCRD0_DIOCntl_IE                           :  1;\
            UNSG32 uSCRD0_DIOCntl_PD                           :  1;\
            UNSG32 uSCRD0_DIOCntl_PU                           :  1;\
            UNSG32 uSCRD0_DIOCntl_SL                           :  1;\
            UNSG32 uSCRD0_DIOCntl_ST                           :  1;\
            UNSG32 RSVDx8868_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SCRD0_DIOCntl;
            struct w32Gbl_SCRD0_DIOCntl;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx886C                                   [916];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_DO0Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_DO0Cntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S1_DO0Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_DO0Cntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S1_DO0Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_DO0Cntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S1_DO0Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_DO0Cntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S1_DO0Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_DO0Cntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S1_DO0Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_DO0Cntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S1_DO0Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_DO0Cntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S1_DO0Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_DO0Cntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S1_DO0Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_DO0Cntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S1_DO0Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_DO0Cntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S1_DO0Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_DO0Cntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S1_DO0Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_DO0Cntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S1_DO0Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_DO0Cntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S1_DO0Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_DO0Cntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S1_DO0Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_DO0Cntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S1_DO0Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_DO0Cntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S1_DO0Cntl                            {\
            UNSG32 uI2S1_DO0Cntl_DS0                           :  1;\
            UNSG32 uI2S1_DO0Cntl_DS1                           :  1;\
            UNSG32 uI2S1_DO0Cntl_DS2                           :  1;\
            UNSG32 uI2S1_DO0Cntl_IE                            :  1;\
            UNSG32 uI2S1_DO0Cntl_PD                            :  1;\
            UNSG32 uI2S1_DO0Cntl_PU                            :  1;\
            UNSG32 uI2S1_DO0Cntl_SL                            :  1;\
            UNSG32 uI2S1_DO0Cntl_ST                            :  1;\
            UNSG32 RSVDx8C00_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S1_DO0Cntl;
            struct w32Gbl_I2S1_DO0Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_DO1Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_DO1Cntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S1_DO1Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_DO1Cntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S1_DO1Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_DO1Cntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S1_DO1Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_DO1Cntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S1_DO1Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_DO1Cntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S1_DO1Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_DO1Cntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S1_DO1Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_DO1Cntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S1_DO1Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_DO1Cntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S1_DO1Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_DO1Cntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S1_DO1Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_DO1Cntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S1_DO1Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_DO1Cntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S1_DO1Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_DO1Cntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S1_DO1Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_DO1Cntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S1_DO1Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_DO1Cntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S1_DO1Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_DO1Cntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S1_DO1Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_DO1Cntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S1_DO1Cntl                            {\
            UNSG32 uI2S1_DO1Cntl_DS0                           :  1;\
            UNSG32 uI2S1_DO1Cntl_DS1                           :  1;\
            UNSG32 uI2S1_DO1Cntl_DS2                           :  1;\
            UNSG32 uI2S1_DO1Cntl_IE                            :  1;\
            UNSG32 uI2S1_DO1Cntl_PD                            :  1;\
            UNSG32 uI2S1_DO1Cntl_PU                            :  1;\
            UNSG32 uI2S1_DO1Cntl_SL                            :  1;\
            UNSG32 uI2S1_DO1Cntl_ST                            :  1;\
            UNSG32 RSVDx8C04_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S1_DO1Cntl;
            struct w32Gbl_I2S1_DO1Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_DO2Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_DO2Cntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S1_DO2Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_DO2Cntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S1_DO2Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_DO2Cntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S1_DO2Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_DO2Cntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S1_DO2Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_DO2Cntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S1_DO2Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_DO2Cntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S1_DO2Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_DO2Cntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S1_DO2Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_DO2Cntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S1_DO2Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_DO2Cntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S1_DO2Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_DO2Cntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S1_DO2Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_DO2Cntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S1_DO2Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_DO2Cntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S1_DO2Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_DO2Cntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S1_DO2Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_DO2Cntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S1_DO2Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_DO2Cntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S1_DO2Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_DO2Cntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S1_DO2Cntl                            {\
            UNSG32 uI2S1_DO2Cntl_DS0                           :  1;\
            UNSG32 uI2S1_DO2Cntl_DS1                           :  1;\
            UNSG32 uI2S1_DO2Cntl_DS2                           :  1;\
            UNSG32 uI2S1_DO2Cntl_IE                            :  1;\
            UNSG32 uI2S1_DO2Cntl_PD                            :  1;\
            UNSG32 uI2S1_DO2Cntl_PU                            :  1;\
            UNSG32 uI2S1_DO2Cntl_SL                            :  1;\
            UNSG32 uI2S1_DO2Cntl_ST                            :  1;\
            UNSG32 RSVDx8C08_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S1_DO2Cntl;
            struct w32Gbl_I2S1_DO2Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_DO3Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_DO3Cntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S1_DO3Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_DO3Cntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S1_DO3Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_DO3Cntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S1_DO3Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_DO3Cntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S1_DO3Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_DO3Cntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S1_DO3Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_DO3Cntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S1_DO3Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_DO3Cntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S1_DO3Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_DO3Cntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S1_DO3Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_DO3Cntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S1_DO3Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_DO3Cntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S1_DO3Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_DO3Cntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S1_DO3Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_DO3Cntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S1_DO3Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_DO3Cntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S1_DO3Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_DO3Cntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S1_DO3Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_DO3Cntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S1_DO3Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_DO3Cntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S1_DO3Cntl                            {\
            UNSG32 uI2S1_DO3Cntl_DS0                           :  1;\
            UNSG32 uI2S1_DO3Cntl_DS1                           :  1;\
            UNSG32 uI2S1_DO3Cntl_DS2                           :  1;\
            UNSG32 uI2S1_DO3Cntl_IE                            :  1;\
            UNSG32 uI2S1_DO3Cntl_PD                            :  1;\
            UNSG32 uI2S1_DO3Cntl_PU                            :  1;\
            UNSG32 uI2S1_DO3Cntl_SL                            :  1;\
            UNSG32 uI2S1_DO3Cntl_ST                            :  1;\
            UNSG32 RSVDx8C0C_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S1_DO3Cntl;
            struct w32Gbl_I2S1_DO3Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_LRCKIOCntl_DS0(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_LRCKIOCntl_DS0(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S1_LRCKIOCntl_DS0(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_LRCKIOCntl_DS0(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S1_LRCKIOCntl_DS1(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_LRCKIOCntl_DS1(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S1_LRCKIOCntl_DS1(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_LRCKIOCntl_DS1(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S1_LRCKIOCntl_DS2(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_LRCKIOCntl_DS2(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S1_LRCKIOCntl_DS2(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_LRCKIOCntl_DS2(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S1_LRCKIOCntl_IE(r32)                 _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_LRCKIOCntl_IE(r32,v)               _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S1_LRCKIOCntl_IE(r16)                 _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_LRCKIOCntl_IE(r16,v)               _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S1_LRCKIOCntl_PD(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_LRCKIOCntl_PD(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S1_LRCKIOCntl_PD(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_LRCKIOCntl_PD(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S1_LRCKIOCntl_PU(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_LRCKIOCntl_PU(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S1_LRCKIOCntl_PU(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_LRCKIOCntl_PU(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S1_LRCKIOCntl_SL(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_LRCKIOCntl_SL(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S1_LRCKIOCntl_SL(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_LRCKIOCntl_SL(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S1_LRCKIOCntl_ST(r32)                 _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_LRCKIOCntl_ST(r32,v)               _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S1_LRCKIOCntl_ST(r16)                 _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_LRCKIOCntl_ST(r16,v)               _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S1_LRCKIOCntl                         {\
            UNSG32 uI2S1_LRCKIOCntl_DS0                        :  1;\
            UNSG32 uI2S1_LRCKIOCntl_DS1                        :  1;\
            UNSG32 uI2S1_LRCKIOCntl_DS2                        :  1;\
            UNSG32 uI2S1_LRCKIOCntl_IE                         :  1;\
            UNSG32 uI2S1_LRCKIOCntl_PD                         :  1;\
            UNSG32 uI2S1_LRCKIOCntl_PU                         :  1;\
            UNSG32 uI2S1_LRCKIOCntl_SL                         :  1;\
            UNSG32 uI2S1_LRCKIOCntl_ST                         :  1;\
            UNSG32 RSVDx8C10_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S1_LRCKIOCntl;
            struct w32Gbl_I2S1_LRCKIOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_BCLKIOCntl_DS0(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_BCLKIOCntl_DS0(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S1_BCLKIOCntl_DS0(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_BCLKIOCntl_DS0(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S1_BCLKIOCntl_DS1(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_BCLKIOCntl_DS1(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S1_BCLKIOCntl_DS1(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_BCLKIOCntl_DS1(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S1_BCLKIOCntl_DS2(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_BCLKIOCntl_DS2(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S1_BCLKIOCntl_DS2(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_BCLKIOCntl_DS2(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S1_BCLKIOCntl_IE(r32)                 _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_BCLKIOCntl_IE(r32,v)               _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S1_BCLKIOCntl_IE(r16)                 _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_BCLKIOCntl_IE(r16,v)               _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S1_BCLKIOCntl_PD(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_BCLKIOCntl_PD(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S1_BCLKIOCntl_PD(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_BCLKIOCntl_PD(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S1_BCLKIOCntl_PU(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_BCLKIOCntl_PU(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S1_BCLKIOCntl_PU(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_BCLKIOCntl_PU(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S1_BCLKIOCntl_SL(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_BCLKIOCntl_SL(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S1_BCLKIOCntl_SL(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_BCLKIOCntl_SL(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S1_BCLKIOCntl_ST(r32)                 _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_BCLKIOCntl_ST(r32,v)               _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S1_BCLKIOCntl_ST(r16)                 _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_BCLKIOCntl_ST(r16,v)               _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S1_BCLKIOCntl                         {\
            UNSG32 uI2S1_BCLKIOCntl_DS0                        :  1;\
            UNSG32 uI2S1_BCLKIOCntl_DS1                        :  1;\
            UNSG32 uI2S1_BCLKIOCntl_DS2                        :  1;\
            UNSG32 uI2S1_BCLKIOCntl_IE                         :  1;\
            UNSG32 uI2S1_BCLKIOCntl_PD                         :  1;\
            UNSG32 uI2S1_BCLKIOCntl_PU                         :  1;\
            UNSG32 uI2S1_BCLKIOCntl_SL                         :  1;\
            UNSG32 uI2S1_BCLKIOCntl_ST                         :  1;\
            UNSG32 RSVDx8C14_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S1_BCLKIOCntl;
            struct w32Gbl_I2S1_BCLKIOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPDIFOCntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPDIFOCntl_DS0(r32,v)                   _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPDIFOCntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPDIFOCntl_DS0(r16,v)                   _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPDIFOCntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPDIFOCntl_DS1(r32,v)                   _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPDIFOCntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPDIFOCntl_DS1(r16,v)                   _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPDIFOCntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPDIFOCntl_DS2(r32,v)                   _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPDIFOCntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPDIFOCntl_DS2(r16,v)                   _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SPDIFOCntl_IE(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPDIFOCntl_IE(r32,v)                    _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SPDIFOCntl_IE(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPDIFOCntl_IE(r16,v)                    _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SPDIFOCntl_PD(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPDIFOCntl_PD(r32,v)                    _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SPDIFOCntl_PD(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPDIFOCntl_PD(r16,v)                    _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SPDIFOCntl_PU(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPDIFOCntl_PU(r32,v)                    _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SPDIFOCntl_PU(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPDIFOCntl_PU(r16,v)                    _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SPDIFOCntl_SL(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPDIFOCntl_SL(r32,v)                    _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SPDIFOCntl_SL(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPDIFOCntl_SL(r16,v)                    _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SPDIFOCntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPDIFOCntl_ST(r32,v)                    _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SPDIFOCntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPDIFOCntl_ST(r16,v)                    _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SPDIFOCntl                              {\
            UNSG32 uSPDIFOCntl_DS0                             :  1;\
            UNSG32 uSPDIFOCntl_DS1                             :  1;\
            UNSG32 uSPDIFOCntl_DS2                             :  1;\
            UNSG32 uSPDIFOCntl_IE                              :  1;\
            UNSG32 uSPDIFOCntl_PD                              :  1;\
            UNSG32 uSPDIFOCntl_PU                              :  1;\
            UNSG32 uSPDIFOCntl_SL                              :  1;\
            UNSG32 uSPDIFOCntl_ST                              :  1;\
            UNSG32 RSVDx8C18_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SPDIFOCntl;
            struct w32Gbl_SPDIFOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_SPDIFICntl_DS0(r32)                     _BFGET_(r32, 0, 0)
    #define   SET32Gbl_SPDIFICntl_DS0(r32,v)                   _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_SPDIFICntl_DS0(r16)                     _BFGET_(r16, 0, 0)
    #define   SET16Gbl_SPDIFICntl_DS0(r16,v)                   _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_SPDIFICntl_DS1(r32)                     _BFGET_(r32, 1, 1)
    #define   SET32Gbl_SPDIFICntl_DS1(r32,v)                   _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_SPDIFICntl_DS1(r16)                     _BFGET_(r16, 1, 1)
    #define   SET16Gbl_SPDIFICntl_DS1(r16,v)                   _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_SPDIFICntl_DS2(r32)                     _BFGET_(r32, 2, 2)
    #define   SET32Gbl_SPDIFICntl_DS2(r32,v)                   _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_SPDIFICntl_DS2(r16)                     _BFGET_(r16, 2, 2)
    #define   SET16Gbl_SPDIFICntl_DS2(r16,v)                   _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_SPDIFICntl_IE(r32)                      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_SPDIFICntl_IE(r32,v)                    _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_SPDIFICntl_IE(r16)                      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_SPDIFICntl_IE(r16,v)                    _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_SPDIFICntl_PD(r32)                      _BFGET_(r32, 4, 4)
    #define   SET32Gbl_SPDIFICntl_PD(r32,v)                    _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_SPDIFICntl_PD(r16)                      _BFGET_(r16, 4, 4)
    #define   SET16Gbl_SPDIFICntl_PD(r16,v)                    _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_SPDIFICntl_PU(r32)                      _BFGET_(r32, 5, 5)
    #define   SET32Gbl_SPDIFICntl_PU(r32,v)                    _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_SPDIFICntl_PU(r16)                      _BFGET_(r16, 5, 5)
    #define   SET16Gbl_SPDIFICntl_PU(r16,v)                    _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_SPDIFICntl_SL(r32)                      _BFGET_(r32, 6, 6)
    #define   SET32Gbl_SPDIFICntl_SL(r32,v)                    _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_SPDIFICntl_SL(r16)                      _BFGET_(r16, 6, 6)
    #define   SET16Gbl_SPDIFICntl_SL(r16,v)                    _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_SPDIFICntl_ST(r32)                      _BFGET_(r32, 7, 7)
    #define   SET32Gbl_SPDIFICntl_ST(r32,v)                    _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_SPDIFICntl_ST(r16)                      _BFGET_(r16, 7, 7)
    #define   SET16Gbl_SPDIFICntl_ST(r16,v)                    _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_SPDIFICntl                              {\
            UNSG32 uSPDIFICntl_DS0                             :  1;\
            UNSG32 uSPDIFICntl_DS1                             :  1;\
            UNSG32 uSPDIFICntl_DS2                             :  1;\
            UNSG32 uSPDIFICntl_IE                              :  1;\
            UNSG32 uSPDIFICntl_PD                              :  1;\
            UNSG32 uSPDIFICntl_PU                              :  1;\
            UNSG32 uSPDIFICntl_SL                              :  1;\
            UNSG32 uSPDIFICntl_ST                              :  1;\
            UNSG32 RSVDx8C1C_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_SPDIFICntl;
            struct w32Gbl_SPDIFICntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_LRCKIOCntl_DS0(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_LRCKIOCntl_DS0(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S2_LRCKIOCntl_DS0(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_LRCKIOCntl_DS0(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S2_LRCKIOCntl_DS1(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_LRCKIOCntl_DS1(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S2_LRCKIOCntl_DS1(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_LRCKIOCntl_DS1(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S2_LRCKIOCntl_DS2(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_LRCKIOCntl_DS2(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S2_LRCKIOCntl_DS2(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_LRCKIOCntl_DS2(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S2_LRCKIOCntl_IE(r32)                 _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_LRCKIOCntl_IE(r32,v)               _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S2_LRCKIOCntl_IE(r16)                 _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_LRCKIOCntl_IE(r16,v)               _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S2_LRCKIOCntl_PD(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_LRCKIOCntl_PD(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S2_LRCKIOCntl_PD(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_LRCKIOCntl_PD(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S2_LRCKIOCntl_PU(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_LRCKIOCntl_PU(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S2_LRCKIOCntl_PU(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_LRCKIOCntl_PU(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S2_LRCKIOCntl_SL(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_LRCKIOCntl_SL(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S2_LRCKIOCntl_SL(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_LRCKIOCntl_SL(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S2_LRCKIOCntl_ST(r32)                 _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_LRCKIOCntl_ST(r32,v)               _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S2_LRCKIOCntl_ST(r16)                 _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_LRCKIOCntl_ST(r16,v)               _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S2_LRCKIOCntl                         {\
            UNSG32 uI2S2_LRCKIOCntl_DS0                        :  1;\
            UNSG32 uI2S2_LRCKIOCntl_DS1                        :  1;\
            UNSG32 uI2S2_LRCKIOCntl_DS2                        :  1;\
            UNSG32 uI2S2_LRCKIOCntl_IE                         :  1;\
            UNSG32 uI2S2_LRCKIOCntl_PD                         :  1;\
            UNSG32 uI2S2_LRCKIOCntl_PU                         :  1;\
            UNSG32 uI2S2_LRCKIOCntl_SL                         :  1;\
            UNSG32 uI2S2_LRCKIOCntl_ST                         :  1;\
            UNSG32 RSVDx8C20_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S2_LRCKIOCntl;
            struct w32Gbl_I2S2_LRCKIOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_BCLKIOCntl_DS0(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_BCLKIOCntl_DS0(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S2_BCLKIOCntl_DS0(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_BCLKIOCntl_DS0(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S2_BCLKIOCntl_DS1(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_BCLKIOCntl_DS1(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S2_BCLKIOCntl_DS1(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_BCLKIOCntl_DS1(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S2_BCLKIOCntl_DS2(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_BCLKIOCntl_DS2(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S2_BCLKIOCntl_DS2(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_BCLKIOCntl_DS2(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S2_BCLKIOCntl_IE(r32)                 _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_BCLKIOCntl_IE(r32,v)               _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S2_BCLKIOCntl_IE(r16)                 _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_BCLKIOCntl_IE(r16,v)               _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S2_BCLKIOCntl_PD(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_BCLKIOCntl_PD(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S2_BCLKIOCntl_PD(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_BCLKIOCntl_PD(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S2_BCLKIOCntl_PU(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_BCLKIOCntl_PU(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S2_BCLKIOCntl_PU(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_BCLKIOCntl_PU(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S2_BCLKIOCntl_SL(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_BCLKIOCntl_SL(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S2_BCLKIOCntl_SL(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_BCLKIOCntl_SL(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S2_BCLKIOCntl_ST(r32)                 _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_BCLKIOCntl_ST(r32,v)               _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S2_BCLKIOCntl_ST(r16)                 _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_BCLKIOCntl_ST(r16,v)               _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S2_BCLKIOCntl                         {\
            UNSG32 uI2S2_BCLKIOCntl_DS0                        :  1;\
            UNSG32 uI2S2_BCLKIOCntl_DS1                        :  1;\
            UNSG32 uI2S2_BCLKIOCntl_DS2                        :  1;\
            UNSG32 uI2S2_BCLKIOCntl_IE                         :  1;\
            UNSG32 uI2S2_BCLKIOCntl_PD                         :  1;\
            UNSG32 uI2S2_BCLKIOCntl_PU                         :  1;\
            UNSG32 uI2S2_BCLKIOCntl_SL                         :  1;\
            UNSG32 uI2S2_BCLKIOCntl_ST                         :  1;\
            UNSG32 RSVDx8C24_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S2_BCLKIOCntl;
            struct w32Gbl_I2S2_BCLKIOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_DI0Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_DI0Cntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S2_DI0Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_DI0Cntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S2_DI0Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_DI0Cntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S2_DI0Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_DI0Cntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S2_DI0Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_DI0Cntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S2_DI0Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_DI0Cntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S2_DI0Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_DI0Cntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S2_DI0Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_DI0Cntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S2_DI0Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_DI0Cntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S2_DI0Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_DI0Cntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S2_DI0Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_DI0Cntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S2_DI0Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_DI0Cntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S2_DI0Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_DI0Cntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S2_DI0Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_DI0Cntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S2_DI0Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_DI0Cntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S2_DI0Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_DI0Cntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S2_DI0Cntl                            {\
            UNSG32 uI2S2_DI0Cntl_DS0                           :  1;\
            UNSG32 uI2S2_DI0Cntl_DS1                           :  1;\
            UNSG32 uI2S2_DI0Cntl_DS2                           :  1;\
            UNSG32 uI2S2_DI0Cntl_IE                            :  1;\
            UNSG32 uI2S2_DI0Cntl_PD                            :  1;\
            UNSG32 uI2S2_DI0Cntl_PU                            :  1;\
            UNSG32 uI2S2_DI0Cntl_SL                            :  1;\
            UNSG32 uI2S2_DI0Cntl_ST                            :  1;\
            UNSG32 RSVDx8C28_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S2_DI0Cntl;
            struct w32Gbl_I2S2_DI0Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_DI1Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_DI1Cntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S2_DI1Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_DI1Cntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S2_DI1Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_DI1Cntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S2_DI1Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_DI1Cntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S2_DI1Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_DI1Cntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S2_DI1Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_DI1Cntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S2_DI1Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_DI1Cntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S2_DI1Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_DI1Cntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S2_DI1Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_DI1Cntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S2_DI1Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_DI1Cntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S2_DI1Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_DI1Cntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S2_DI1Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_DI1Cntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S2_DI1Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_DI1Cntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S2_DI1Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_DI1Cntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S2_DI1Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_DI1Cntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S2_DI1Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_DI1Cntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S2_DI1Cntl                            {\
            UNSG32 uI2S2_DI1Cntl_DS0                           :  1;\
            UNSG32 uI2S2_DI1Cntl_DS1                           :  1;\
            UNSG32 uI2S2_DI1Cntl_DS2                           :  1;\
            UNSG32 uI2S2_DI1Cntl_IE                            :  1;\
            UNSG32 uI2S2_DI1Cntl_PD                            :  1;\
            UNSG32 uI2S2_DI1Cntl_PU                            :  1;\
            UNSG32 uI2S2_DI1Cntl_SL                            :  1;\
            UNSG32 uI2S2_DI1Cntl_ST                            :  1;\
            UNSG32 RSVDx8C2C_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S2_DI1Cntl;
            struct w32Gbl_I2S2_DI1Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_DI2Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_DI2Cntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S2_DI2Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_DI2Cntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S2_DI2Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_DI2Cntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S2_DI2Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_DI2Cntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S2_DI2Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_DI2Cntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S2_DI2Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_DI2Cntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S2_DI2Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_DI2Cntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S2_DI2Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_DI2Cntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S2_DI2Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_DI2Cntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S2_DI2Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_DI2Cntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S2_DI2Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_DI2Cntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S2_DI2Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_DI2Cntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S2_DI2Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_DI2Cntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S2_DI2Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_DI2Cntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S2_DI2Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_DI2Cntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S2_DI2Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_DI2Cntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S2_DI2Cntl                            {\
            UNSG32 uI2S2_DI2Cntl_DS0                           :  1;\
            UNSG32 uI2S2_DI2Cntl_DS1                           :  1;\
            UNSG32 uI2S2_DI2Cntl_DS2                           :  1;\
            UNSG32 uI2S2_DI2Cntl_IE                            :  1;\
            UNSG32 uI2S2_DI2Cntl_PD                            :  1;\
            UNSG32 uI2S2_DI2Cntl_PU                            :  1;\
            UNSG32 uI2S2_DI2Cntl_SL                            :  1;\
            UNSG32 uI2S2_DI2Cntl_ST                            :  1;\
            UNSG32 RSVDx8C30_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S2_DI2Cntl;
            struct w32Gbl_I2S2_DI2Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_DI3Cntl_DS0(r32)                   _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_DI3Cntl_DS0(r32,v)                 _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S2_DI3Cntl_DS0(r16)                   _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_DI3Cntl_DS0(r16,v)                 _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S2_DI3Cntl_DS1(r32)                   _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_DI3Cntl_DS1(r32,v)                 _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S2_DI3Cntl_DS1(r16)                   _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_DI3Cntl_DS1(r16,v)                 _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S2_DI3Cntl_DS2(r32)                   _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_DI3Cntl_DS2(r32,v)                 _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S2_DI3Cntl_DS2(r16)                   _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_DI3Cntl_DS2(r16,v)                 _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S2_DI3Cntl_IE(r32)                    _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_DI3Cntl_IE(r32,v)                  _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S2_DI3Cntl_IE(r16)                    _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_DI3Cntl_IE(r16,v)                  _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S2_DI3Cntl_PD(r32)                    _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_DI3Cntl_PD(r32,v)                  _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S2_DI3Cntl_PD(r16)                    _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_DI3Cntl_PD(r16,v)                  _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S2_DI3Cntl_PU(r32)                    _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_DI3Cntl_PU(r32,v)                  _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S2_DI3Cntl_PU(r16)                    _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_DI3Cntl_PU(r16,v)                  _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S2_DI3Cntl_SL(r32)                    _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_DI3Cntl_SL(r32,v)                  _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S2_DI3Cntl_SL(r16)                    _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_DI3Cntl_SL(r16,v)                  _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S2_DI3Cntl_ST(r32)                    _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_DI3Cntl_ST(r32,v)                  _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S2_DI3Cntl_ST(r16)                    _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_DI3Cntl_ST(r16,v)                  _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S2_DI3Cntl                            {\
            UNSG32 uI2S2_DI3Cntl_DS0                           :  1;\
            UNSG32 uI2S2_DI3Cntl_DS1                           :  1;\
            UNSG32 uI2S2_DI3Cntl_DS2                           :  1;\
            UNSG32 uI2S2_DI3Cntl_IE                            :  1;\
            UNSG32 uI2S2_DI3Cntl_PD                            :  1;\
            UNSG32 uI2S2_DI3Cntl_PU                            :  1;\
            UNSG32 uI2S2_DI3Cntl_SL                            :  1;\
            UNSG32 uI2S2_DI3Cntl_ST                            :  1;\
            UNSG32 RSVDx8C34_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S2_DI3Cntl;
            struct w32Gbl_I2S2_DI3Cntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S1_MCLKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S1_MCLKCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S1_MCLKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S1_MCLKCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S1_MCLKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S1_MCLKCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S1_MCLKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S1_MCLKCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S1_MCLKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S1_MCLKCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S1_MCLKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S1_MCLKCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S1_MCLKCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S1_MCLKCntl_IE(r32,v)                 _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S1_MCLKCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S1_MCLKCntl_IE(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S1_MCLKCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S1_MCLKCntl_PD(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S1_MCLKCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S1_MCLKCntl_PD(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S1_MCLKCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S1_MCLKCntl_PU(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S1_MCLKCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S1_MCLKCntl_PU(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S1_MCLKCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S1_MCLKCntl_SL(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S1_MCLKCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S1_MCLKCntl_SL(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S1_MCLKCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S1_MCLKCntl_ST(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S1_MCLKCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S1_MCLKCntl_ST(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S1_MCLKCntl                           {\
            UNSG32 uI2S1_MCLKCntl_DS0                          :  1;\
            UNSG32 uI2S1_MCLKCntl_DS1                          :  1;\
            UNSG32 uI2S1_MCLKCntl_DS2                          :  1;\
            UNSG32 uI2S1_MCLKCntl_IE                           :  1;\
            UNSG32 uI2S1_MCLKCntl_PD                           :  1;\
            UNSG32 uI2S1_MCLKCntl_PU                           :  1;\
            UNSG32 uI2S1_MCLKCntl_SL                           :  1;\
            UNSG32 uI2S1_MCLKCntl_ST                           :  1;\
            UNSG32 RSVDx8C38_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S1_MCLKCntl;
            struct w32Gbl_I2S1_MCLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S2_MCLKCntl_DS0(r32)                  _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S2_MCLKCntl_DS0(r32,v)                _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S2_MCLKCntl_DS0(r16)                  _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S2_MCLKCntl_DS0(r16,v)                _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S2_MCLKCntl_DS1(r32)                  _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S2_MCLKCntl_DS1(r32,v)                _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S2_MCLKCntl_DS1(r16)                  _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S2_MCLKCntl_DS1(r16,v)                _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S2_MCLKCntl_DS2(r32)                  _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S2_MCLKCntl_DS2(r32,v)                _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S2_MCLKCntl_DS2(r16)                  _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S2_MCLKCntl_DS2(r16,v)                _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S2_MCLKCntl_IE(r32)                   _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S2_MCLKCntl_IE(r32,v)                 _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S2_MCLKCntl_IE(r16)                   _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S2_MCLKCntl_IE(r16,v)                 _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S2_MCLKCntl_PD(r32)                   _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S2_MCLKCntl_PD(r32,v)                 _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S2_MCLKCntl_PD(r16)                   _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S2_MCLKCntl_PD(r16,v)                 _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S2_MCLKCntl_PU(r32)                   _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S2_MCLKCntl_PU(r32,v)                 _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S2_MCLKCntl_PU(r16)                   _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S2_MCLKCntl_PU(r16,v)                 _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S2_MCLKCntl_SL(r32)                   _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S2_MCLKCntl_SL(r32,v)                 _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S2_MCLKCntl_SL(r16)                   _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S2_MCLKCntl_SL(r16,v)                 _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S2_MCLKCntl_ST(r32)                   _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S2_MCLKCntl_ST(r32,v)                 _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S2_MCLKCntl_ST(r16)                   _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S2_MCLKCntl_ST(r16,v)                 _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S2_MCLKCntl                           {\
            UNSG32 uI2S2_MCLKCntl_DS0                          :  1;\
            UNSG32 uI2S2_MCLKCntl_DS1                          :  1;\
            UNSG32 uI2S2_MCLKCntl_DS2                          :  1;\
            UNSG32 uI2S2_MCLKCntl_IE                           :  1;\
            UNSG32 uI2S2_MCLKCntl_PD                           :  1;\
            UNSG32 uI2S2_MCLKCntl_PU                           :  1;\
            UNSG32 uI2S2_MCLKCntl_SL                           :  1;\
            UNSG32 uI2S2_MCLKCntl_ST                           :  1;\
            UNSG32 RSVDx8C3C_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S2_MCLKCntl;
            struct w32Gbl_I2S2_MCLKCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_HDMI_TX_EDDC_SCLCntl_DS0(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_HDMI_TX_EDDC_SCLCntl_DS0(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SCLCntl_DS0(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_HDMI_TX_EDDC_SCLCntl_DS0(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SCLCntl_DS1(r32)           _BFGET_(r32, 1, 1)
    #define   SET32Gbl_HDMI_TX_EDDC_SCLCntl_DS1(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SCLCntl_DS1(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_HDMI_TX_EDDC_SCLCntl_DS1(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SCLCntl_DS2(r32)           _BFGET_(r32, 2, 2)
    #define   SET32Gbl_HDMI_TX_EDDC_SCLCntl_DS2(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SCLCntl_DS2(r16)           _BFGET_(r16, 2, 2)
    #define   SET16Gbl_HDMI_TX_EDDC_SCLCntl_DS2(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SCLCntl_DS3(r32)           _BFGET_(r32, 3, 3)
    #define   SET32Gbl_HDMI_TX_EDDC_SCLCntl_DS3(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SCLCntl_DS3(r16)           _BFGET_(r16, 3, 3)
    #define   SET16Gbl_HDMI_TX_EDDC_SCLCntl_DS3(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SCLCntl_IE(r32)            _BFGET_(r32, 4, 4)
    #define   SET32Gbl_HDMI_TX_EDDC_SCLCntl_IE(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SCLCntl_IE(r16)            _BFGET_(r16, 4, 4)
    #define   SET16Gbl_HDMI_TX_EDDC_SCLCntl_IE(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SCLCntl_PE(r32)            _BFGET_(r32, 5, 5)
    #define   SET32Gbl_HDMI_TX_EDDC_SCLCntl_PE(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SCLCntl_PE(r16)            _BFGET_(r16, 5, 5)
    #define   SET16Gbl_HDMI_TX_EDDC_SCLCntl_PE(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SCLCntl_PS(r32)            _BFGET_(r32, 6, 6)
    #define   SET32Gbl_HDMI_TX_EDDC_SCLCntl_PS(r32,v)          _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SCLCntl_PS(r16)            _BFGET_(r16, 6, 6)
    #define   SET16Gbl_HDMI_TX_EDDC_SCLCntl_PS(r16,v)          _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SCLCntl_SL(r32)            _BFGET_(r32, 7, 7)
    #define   SET32Gbl_HDMI_TX_EDDC_SCLCntl_SL(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SCLCntl_SL(r16)            _BFGET_(r16, 7, 7)
    #define   SET16Gbl_HDMI_TX_EDDC_SCLCntl_SL(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SCLCntl_SPU(r32)           _BFGET_(r32, 8, 8)
    #define   SET32Gbl_HDMI_TX_EDDC_SCLCntl_SPU(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SCLCntl_SPU(r16)           _BFGET_(r16, 8, 8)
    #define   SET16Gbl_HDMI_TX_EDDC_SCLCntl_SPU(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SCLCntl_ST(r32)            _BFGET_(r32, 9, 9)
    #define   SET32Gbl_HDMI_TX_EDDC_SCLCntl_ST(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SCLCntl_ST(r16)            _BFGET_(r16, 9, 9)
    #define   SET16Gbl_HDMI_TX_EDDC_SCLCntl_ST(r16,v)          _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_HDMI_TX_EDDC_SCLCntl                    {\
            UNSG32 uHDMI_TX_EDDC_SCLCntl_DS0                   :  1;\
            UNSG32 uHDMI_TX_EDDC_SCLCntl_DS1                   :  1;\
            UNSG32 uHDMI_TX_EDDC_SCLCntl_DS2                   :  1;\
            UNSG32 uHDMI_TX_EDDC_SCLCntl_DS3                   :  1;\
            UNSG32 uHDMI_TX_EDDC_SCLCntl_IE                    :  1;\
            UNSG32 uHDMI_TX_EDDC_SCLCntl_PE                    :  1;\
            UNSG32 uHDMI_TX_EDDC_SCLCntl_PS                    :  1;\
            UNSG32 uHDMI_TX_EDDC_SCLCntl_SL                    :  1;\
            UNSG32 uHDMI_TX_EDDC_SCLCntl_SPU                   :  1;\
            UNSG32 uHDMI_TX_EDDC_SCLCntl_ST                    :  1;\
            UNSG32 RSVDx8C40_b10                               : 22;\
          }
    union { UNSG32 u32Gbl_HDMI_TX_EDDC_SCLCntl;
            struct w32Gbl_HDMI_TX_EDDC_SCLCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_HDMI_TX_EDDC_SDACntl_DS0(r32)           _BFGET_(r32, 0, 0)
    #define   SET32Gbl_HDMI_TX_EDDC_SDACntl_DS0(r32,v)         _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SDACntl_DS0(r16)           _BFGET_(r16, 0, 0)
    #define   SET16Gbl_HDMI_TX_EDDC_SDACntl_DS0(r16,v)         _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SDACntl_DS1(r32)           _BFGET_(r32, 1, 1)
    #define   SET32Gbl_HDMI_TX_EDDC_SDACntl_DS1(r32,v)         _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SDACntl_DS1(r16)           _BFGET_(r16, 1, 1)
    #define   SET16Gbl_HDMI_TX_EDDC_SDACntl_DS1(r16,v)         _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SDACntl_DS2(r32)           _BFGET_(r32, 2, 2)
    #define   SET32Gbl_HDMI_TX_EDDC_SDACntl_DS2(r32,v)         _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SDACntl_DS2(r16)           _BFGET_(r16, 2, 2)
    #define   SET16Gbl_HDMI_TX_EDDC_SDACntl_DS2(r16,v)         _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SDACntl_DS3(r32)           _BFGET_(r32, 3, 3)
    #define   SET32Gbl_HDMI_TX_EDDC_SDACntl_DS3(r32,v)         _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SDACntl_DS3(r16)           _BFGET_(r16, 3, 3)
    #define   SET16Gbl_HDMI_TX_EDDC_SDACntl_DS3(r16,v)         _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SDACntl_IE(r32)            _BFGET_(r32, 4, 4)
    #define   SET32Gbl_HDMI_TX_EDDC_SDACntl_IE(r32,v)          _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SDACntl_IE(r16)            _BFGET_(r16, 4, 4)
    #define   SET16Gbl_HDMI_TX_EDDC_SDACntl_IE(r16,v)          _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SDACntl_PE(r32)            _BFGET_(r32, 5, 5)
    #define   SET32Gbl_HDMI_TX_EDDC_SDACntl_PE(r32,v)          _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SDACntl_PE(r16)            _BFGET_(r16, 5, 5)
    #define   SET16Gbl_HDMI_TX_EDDC_SDACntl_PE(r16,v)          _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SDACntl_PS(r32)            _BFGET_(r32, 6, 6)
    #define   SET32Gbl_HDMI_TX_EDDC_SDACntl_PS(r32,v)          _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SDACntl_PS(r16)            _BFGET_(r16, 6, 6)
    #define   SET16Gbl_HDMI_TX_EDDC_SDACntl_PS(r16,v)          _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SDACntl_SL(r32)            _BFGET_(r32, 7, 7)
    #define   SET32Gbl_HDMI_TX_EDDC_SDACntl_SL(r32,v)          _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SDACntl_SL(r16)            _BFGET_(r16, 7, 7)
    #define   SET16Gbl_HDMI_TX_EDDC_SDACntl_SL(r16,v)          _BFSET_(r16, 7, 7,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SDACntl_SPU(r32)           _BFGET_(r32, 8, 8)
    #define   SET32Gbl_HDMI_TX_EDDC_SDACntl_SPU(r32,v)         _BFSET_(r32, 8, 8,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SDACntl_SPU(r16)           _BFGET_(r16, 8, 8)
    #define   SET16Gbl_HDMI_TX_EDDC_SDACntl_SPU(r16,v)         _BFSET_(r16, 8, 8,v)

    #define   GET32Gbl_HDMI_TX_EDDC_SDACntl_ST(r32)            _BFGET_(r32, 9, 9)
    #define   SET32Gbl_HDMI_TX_EDDC_SDACntl_ST(r32,v)          _BFSET_(r32, 9, 9,v)
    #define   GET16Gbl_HDMI_TX_EDDC_SDACntl_ST(r16)            _BFGET_(r16, 9, 9)
    #define   SET16Gbl_HDMI_TX_EDDC_SDACntl_ST(r16,v)          _BFSET_(r16, 9, 9,v)

    #define     w32Gbl_HDMI_TX_EDDC_SDACntl                    {\
            UNSG32 uHDMI_TX_EDDC_SDACntl_DS0                   :  1;\
            UNSG32 uHDMI_TX_EDDC_SDACntl_DS1                   :  1;\
            UNSG32 uHDMI_TX_EDDC_SDACntl_DS2                   :  1;\
            UNSG32 uHDMI_TX_EDDC_SDACntl_DS3                   :  1;\
            UNSG32 uHDMI_TX_EDDC_SDACntl_IE                    :  1;\
            UNSG32 uHDMI_TX_EDDC_SDACntl_PE                    :  1;\
            UNSG32 uHDMI_TX_EDDC_SDACntl_PS                    :  1;\
            UNSG32 uHDMI_TX_EDDC_SDACntl_SL                    :  1;\
            UNSG32 uHDMI_TX_EDDC_SDACntl_SPU                   :  1;\
            UNSG32 uHDMI_TX_EDDC_SDACntl_ST                    :  1;\
            UNSG32 RSVDx8C44_b10                               : 22;\
          }
    union { UNSG32 u32Gbl_HDMI_TX_EDDC_SDACntl;
            struct w32Gbl_HDMI_TX_EDDC_SDACntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S3_DOCntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S3_DOCntl_DS0(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S3_DOCntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S3_DOCntl_DS0(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S3_DOCntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S3_DOCntl_DS1(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S3_DOCntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S3_DOCntl_DS1(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S3_DOCntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S3_DOCntl_DS2(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S3_DOCntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S3_DOCntl_DS2(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S3_DOCntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S3_DOCntl_IE(r32,v)                   _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S3_DOCntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S3_DOCntl_IE(r16,v)                   _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S3_DOCntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S3_DOCntl_PD(r32,v)                   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S3_DOCntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S3_DOCntl_PD(r16,v)                   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S3_DOCntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S3_DOCntl_PU(r32,v)                   _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S3_DOCntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S3_DOCntl_PU(r16,v)                   _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S3_DOCntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S3_DOCntl_SL(r32,v)                   _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S3_DOCntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S3_DOCntl_SL(r16,v)                   _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S3_DOCntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S3_DOCntl_ST(r32,v)                   _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S3_DOCntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S3_DOCntl_ST(r16,v)                   _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S3_DOCntl                             {\
            UNSG32 uI2S3_DOCntl_DS0                            :  1;\
            UNSG32 uI2S3_DOCntl_DS1                            :  1;\
            UNSG32 uI2S3_DOCntl_DS2                            :  1;\
            UNSG32 uI2S3_DOCntl_IE                             :  1;\
            UNSG32 uI2S3_DOCntl_PD                             :  1;\
            UNSG32 uI2S3_DOCntl_PU                             :  1;\
            UNSG32 uI2S3_DOCntl_SL                             :  1;\
            UNSG32 uI2S3_DOCntl_ST                             :  1;\
            UNSG32 RSVDx8C48_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S3_DOCntl;
            struct w32Gbl_I2S3_DOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S3_LRCKIOCntl_DS0(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S3_LRCKIOCntl_DS0(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S3_LRCKIOCntl_DS0(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S3_LRCKIOCntl_DS0(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S3_LRCKIOCntl_DS1(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S3_LRCKIOCntl_DS1(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S3_LRCKIOCntl_DS1(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S3_LRCKIOCntl_DS1(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S3_LRCKIOCntl_DS2(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S3_LRCKIOCntl_DS2(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S3_LRCKIOCntl_DS2(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S3_LRCKIOCntl_DS2(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S3_LRCKIOCntl_IE(r32)                 _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S3_LRCKIOCntl_IE(r32,v)               _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S3_LRCKIOCntl_IE(r16)                 _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S3_LRCKIOCntl_IE(r16,v)               _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S3_LRCKIOCntl_PD(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S3_LRCKIOCntl_PD(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S3_LRCKIOCntl_PD(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S3_LRCKIOCntl_PD(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S3_LRCKIOCntl_PU(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S3_LRCKIOCntl_PU(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S3_LRCKIOCntl_PU(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S3_LRCKIOCntl_PU(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S3_LRCKIOCntl_SL(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S3_LRCKIOCntl_SL(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S3_LRCKIOCntl_SL(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S3_LRCKIOCntl_SL(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S3_LRCKIOCntl_ST(r32)                 _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S3_LRCKIOCntl_ST(r32,v)               _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S3_LRCKIOCntl_ST(r16)                 _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S3_LRCKIOCntl_ST(r16,v)               _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S3_LRCKIOCntl                         {\
            UNSG32 uI2S3_LRCKIOCntl_DS0                        :  1;\
            UNSG32 uI2S3_LRCKIOCntl_DS1                        :  1;\
            UNSG32 uI2S3_LRCKIOCntl_DS2                        :  1;\
            UNSG32 uI2S3_LRCKIOCntl_IE                         :  1;\
            UNSG32 uI2S3_LRCKIOCntl_PD                         :  1;\
            UNSG32 uI2S3_LRCKIOCntl_PU                         :  1;\
            UNSG32 uI2S3_LRCKIOCntl_SL                         :  1;\
            UNSG32 uI2S3_LRCKIOCntl_ST                         :  1;\
            UNSG32 RSVDx8C4C_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S3_LRCKIOCntl;
            struct w32Gbl_I2S3_LRCKIOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S3_BCLKIOCntl_DS0(r32)                _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S3_BCLKIOCntl_DS0(r32,v)              _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S3_BCLKIOCntl_DS0(r16)                _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S3_BCLKIOCntl_DS0(r16,v)              _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S3_BCLKIOCntl_DS1(r32)                _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S3_BCLKIOCntl_DS1(r32,v)              _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S3_BCLKIOCntl_DS1(r16)                _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S3_BCLKIOCntl_DS1(r16,v)              _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S3_BCLKIOCntl_DS2(r32)                _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S3_BCLKIOCntl_DS2(r32,v)              _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S3_BCLKIOCntl_DS2(r16)                _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S3_BCLKIOCntl_DS2(r16,v)              _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S3_BCLKIOCntl_IE(r32)                 _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S3_BCLKIOCntl_IE(r32,v)               _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S3_BCLKIOCntl_IE(r16)                 _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S3_BCLKIOCntl_IE(r16,v)               _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S3_BCLKIOCntl_PD(r32)                 _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S3_BCLKIOCntl_PD(r32,v)               _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S3_BCLKIOCntl_PD(r16)                 _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S3_BCLKIOCntl_PD(r16,v)               _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S3_BCLKIOCntl_PU(r32)                 _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S3_BCLKIOCntl_PU(r32,v)               _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S3_BCLKIOCntl_PU(r16)                 _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S3_BCLKIOCntl_PU(r16,v)               _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S3_BCLKIOCntl_SL(r32)                 _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S3_BCLKIOCntl_SL(r32,v)               _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S3_BCLKIOCntl_SL(r16)                 _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S3_BCLKIOCntl_SL(r16,v)               _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S3_BCLKIOCntl_ST(r32)                 _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S3_BCLKIOCntl_ST(r32,v)               _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S3_BCLKIOCntl_ST(r16)                 _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S3_BCLKIOCntl_ST(r16,v)               _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S3_BCLKIOCntl                         {\
            UNSG32 uI2S3_BCLKIOCntl_DS0                        :  1;\
            UNSG32 uI2S3_BCLKIOCntl_DS1                        :  1;\
            UNSG32 uI2S3_BCLKIOCntl_DS2                        :  1;\
            UNSG32 uI2S3_BCLKIOCntl_IE                         :  1;\
            UNSG32 uI2S3_BCLKIOCntl_PD                         :  1;\
            UNSG32 uI2S3_BCLKIOCntl_PU                         :  1;\
            UNSG32 uI2S3_BCLKIOCntl_SL                         :  1;\
            UNSG32 uI2S3_BCLKIOCntl_ST                         :  1;\
            UNSG32 RSVDx8C50_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S3_BCLKIOCntl;
            struct w32Gbl_I2S3_BCLKIOCntl;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_I2S3_DICntl_DS0(r32)                    _BFGET_(r32, 0, 0)
    #define   SET32Gbl_I2S3_DICntl_DS0(r32,v)                  _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_I2S3_DICntl_DS0(r16)                    _BFGET_(r16, 0, 0)
    #define   SET16Gbl_I2S3_DICntl_DS0(r16,v)                  _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_I2S3_DICntl_DS1(r32)                    _BFGET_(r32, 1, 1)
    #define   SET32Gbl_I2S3_DICntl_DS1(r32,v)                  _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_I2S3_DICntl_DS1(r16)                    _BFGET_(r16, 1, 1)
    #define   SET16Gbl_I2S3_DICntl_DS1(r16,v)                  _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_I2S3_DICntl_DS2(r32)                    _BFGET_(r32, 2, 2)
    #define   SET32Gbl_I2S3_DICntl_DS2(r32,v)                  _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_I2S3_DICntl_DS2(r16)                    _BFGET_(r16, 2, 2)
    #define   SET16Gbl_I2S3_DICntl_DS2(r16,v)                  _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_I2S3_DICntl_IE(r32)                     _BFGET_(r32, 3, 3)
    #define   SET32Gbl_I2S3_DICntl_IE(r32,v)                   _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_I2S3_DICntl_IE(r16)                     _BFGET_(r16, 3, 3)
    #define   SET16Gbl_I2S3_DICntl_IE(r16,v)                   _BFSET_(r16, 3, 3,v)

    #define   GET32Gbl_I2S3_DICntl_PD(r32)                     _BFGET_(r32, 4, 4)
    #define   SET32Gbl_I2S3_DICntl_PD(r32,v)                   _BFSET_(r32, 4, 4,v)
    #define   GET16Gbl_I2S3_DICntl_PD(r16)                     _BFGET_(r16, 4, 4)
    #define   SET16Gbl_I2S3_DICntl_PD(r16,v)                   _BFSET_(r16, 4, 4,v)

    #define   GET32Gbl_I2S3_DICntl_PU(r32)                     _BFGET_(r32, 5, 5)
    #define   SET32Gbl_I2S3_DICntl_PU(r32,v)                   _BFSET_(r32, 5, 5,v)
    #define   GET16Gbl_I2S3_DICntl_PU(r16)                     _BFGET_(r16, 5, 5)
    #define   SET16Gbl_I2S3_DICntl_PU(r16,v)                   _BFSET_(r16, 5, 5,v)

    #define   GET32Gbl_I2S3_DICntl_SL(r32)                     _BFGET_(r32, 6, 6)
    #define   SET32Gbl_I2S3_DICntl_SL(r32,v)                   _BFSET_(r32, 6, 6,v)
    #define   GET16Gbl_I2S3_DICntl_SL(r16)                     _BFGET_(r16, 6, 6)
    #define   SET16Gbl_I2S3_DICntl_SL(r16,v)                   _BFSET_(r16, 6, 6,v)

    #define   GET32Gbl_I2S3_DICntl_ST(r32)                     _BFGET_(r32, 7, 7)
    #define   SET32Gbl_I2S3_DICntl_ST(r32,v)                   _BFSET_(r32, 7, 7,v)
    #define   GET16Gbl_I2S3_DICntl_ST(r16)                     _BFGET_(r16, 7, 7)
    #define   SET16Gbl_I2S3_DICntl_ST(r16,v)                   _BFSET_(r16, 7, 7,v)

    #define     w32Gbl_I2S3_DICntl                             {\
            UNSG32 uI2S3_DICntl_DS0                            :  1;\
            UNSG32 uI2S3_DICntl_DS1                            :  1;\
            UNSG32 uI2S3_DICntl_DS2                            :  1;\
            UNSG32 uI2S3_DICntl_IE                             :  1;\
            UNSG32 uI2S3_DICntl_PD                             :  1;\
            UNSG32 uI2S3_DICntl_PU                             :  1;\
            UNSG32 uI2S3_DICntl_SL                             :  1;\
            UNSG32 uI2S3_DICntl_ST                             :  1;\
            UNSG32 RSVDx8C54_b8                                : 24;\
          }
    union { UNSG32 u32Gbl_I2S3_DICntl;
            struct w32Gbl_I2S3_DICntl;
          };
    ///////////////////////////////////////////////////////////
             UNSG8 RSVDx8C58                                   [936];
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_bootStrapSipll_siPll_Byps(r32)          _BFGET_(r32, 0, 0)
    #define   SET32Gbl_bootStrapSipll_siPll_Byps(r32,v)        _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_bootStrapSipll_siPll_Byps(r16)          _BFGET_(r16, 0, 0)
    #define   SET16Gbl_bootStrapSipll_siPll_Byps(r16,v)        _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_bootStrapSipll                          {\
            UNSG32 ubootStrapSipll_siPll_Byps                  :  1;\
            UNSG32 RSVDx9000_b1                                : 31;\
          }
    union { UNSG32 u32Gbl_bootStrapSipll;
            struct w32Gbl_bootStrapSipll;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_bootStrapEnSipll_siPll_BypsEn(r32)      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_bootStrapEnSipll_siPll_BypsEn(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_bootStrapEnSipll_siPll_BypsEn(r16)      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_bootStrapEnSipll_siPll_BypsEn(r16,v)    _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_bootStrapEnSipll                        {\
            UNSG32 ubootStrapEnSipll_siPll_BypsEn              :  1;\
            UNSG32 RSVDx9004_b1                                : 31;\
          }
    union { UNSG32 u32Gbl_bootStrapEnSipll;
            struct w32Gbl_bootStrapEnSipll;
          };
    ///////////////////////////////////////////////////////////
              SIE_abipll                                       ie_siPll;
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_siPllClkSwitch_siPll_SWBypass(r32)      _BFGET_(r32, 0, 0)
    #define   SET32Gbl_siPllClkSwitch_siPll_SWBypass(r32,v)    _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_siPllClkSwitch_siPll_SWBypass(r16)      _BFGET_(r16, 0, 0)
    #define   SET16Gbl_siPllClkSwitch_siPll_SWBypass(r16,v)    _BFSET_(r16, 0, 0,v)

    #define     w32Gbl_siPllClkSwitch                          {\
            UNSG32 usiPllClkSwitch_siPll_SWBypass              :  1;\
            UNSG32 RSVDx9028_b1                                : 31;\
          }
    union { UNSG32 u32Gbl_siPllClkSwitch;
            struct w32Gbl_siPllClkSwitch;
          };
    ///////////////////////////////////////////////////////////
              SIE_SISSClkD3                                    ie_sissSysClk;
    ///////////////////////////////////////////////////////////
              SIE_SISSClkD4                                    ie_bcmClk;
    ///////////////////////////////////////////////////////////
              SIE_SISSClkD4                                    ie_nocsClk;
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_siSSReset_tspSyncReset(r32)             _BFGET_(r32, 0, 0)
    #define   SET32Gbl_siSSReset_tspSyncReset(r32,v)           _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_siSSReset_tspSyncReset(r16)             _BFGET_(r16, 0, 0)
    #define   SET16Gbl_siSSReset_tspSyncReset(r16,v)           _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_siSSReset_nskSyncReset(r32)             _BFGET_(r32, 1, 1)
    #define   SET32Gbl_siSSReset_nskSyncReset(r32,v)           _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_siSSReset_nskSyncReset(r16)             _BFGET_(r16, 1, 1)
    #define   SET16Gbl_siSSReset_nskSyncReset(r16,v)           _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_siSSReset_nocsSyncReset(r32)            _BFGET_(r32, 2, 2)
    #define   SET32Gbl_siSSReset_nocsSyncReset(r32,v)          _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_siSSReset_nocsSyncReset(r16)            _BFGET_(r16, 2, 2)
    #define   SET16Gbl_siSSReset_nocsSyncReset(r16,v)          _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_siSSReset_ifcpSyncReset(r32)            _BFGET_(r32, 3, 3)
    #define   SET32Gbl_siSSReset_ifcpSyncReset(r32,v)          _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_siSSReset_ifcpSyncReset(r16)            _BFGET_(r16, 3, 3)
    #define   SET16Gbl_siSSReset_ifcpSyncReset(r16,v)          _BFSET_(r16, 3, 3,v)

    #define     w32Gbl_siSSReset                               {\
            UNSG32 usiSSReset_tspSyncReset                     :  1;\
            UNSG32 usiSSReset_nskSyncReset                     :  1;\
            UNSG32 usiSSReset_nocsSyncReset                    :  1;\
            UNSG32 usiSSReset_ifcpSyncReset                    :  1;\
            UNSG32 RSVDx9038_b4                                : 28;\
          }
    union { UNSG32 u32Gbl_siSSReset;
            struct w32Gbl_siSSReset;
          };
    ///////////////////////////////////////////////////////////
    #define   GET32Gbl_siSSResetStatus_tspSyncReset(r32)       _BFGET_(r32, 0, 0)
    #define   SET32Gbl_siSSResetStatus_tspSyncReset(r32,v)     _BFSET_(r32, 0, 0,v)
    #define   GET16Gbl_siSSResetStatus_tspSyncReset(r16)       _BFGET_(r16, 0, 0)
    #define   SET16Gbl_siSSResetStatus_tspSyncReset(r16,v)     _BFSET_(r16, 0, 0,v)

    #define   GET32Gbl_siSSResetStatus_nskSyncReset(r32)       _BFGET_(r32, 1, 1)
    #define   SET32Gbl_siSSResetStatus_nskSyncReset(r32,v)     _BFSET_(r32, 1, 1,v)
    #define   GET16Gbl_siSSResetStatus_nskSyncReset(r16)       _BFGET_(r16, 1, 1)
    #define   SET16Gbl_siSSResetStatus_nskSyncReset(r16,v)     _BFSET_(r16, 1, 1,v)

    #define   GET32Gbl_siSSResetStatus_nocsSyncReset(r32)      _BFGET_(r32, 2, 2)
    #define   SET32Gbl_siSSResetStatus_nocsSyncReset(r32,v)    _BFSET_(r32, 2, 2,v)
    #define   GET16Gbl_siSSResetStatus_nocsSyncReset(r16)      _BFGET_(r16, 2, 2)
    #define   SET16Gbl_siSSResetStatus_nocsSyncReset(r16,v)    _BFSET_(r16, 2, 2,v)

    #define   GET32Gbl_siSSResetStatus_ifcpSyncReset(r32)      _BFGET_(r32, 3, 3)
    #define   SET32Gbl_siSSResetStatus_ifcpSyncReset(r32,v)    _BFSET_(r32, 3, 3,v)
    #define   GET16Gbl_siSSResetStatus_ifcpSyncReset(r16)      _BFGET_(r16, 3, 3)
    #define   SET16Gbl_siSSResetStatus_ifcpSyncReset(r16,v)    _BFSET_(r16, 3, 3,v)

    #define     w32Gbl_siSSResetStatus                         {\
            UNSG32 usiSSResetStatus_tspSyncReset               :  1;\
            UNSG32 usiSSResetStatus_nskSyncReset               :  1;\
            UNSG32 usiSSResetStatus_nocsSyncReset              :  1;\
            UNSG32 usiSSResetStatus_ifcpSyncReset              :  1;\
            UNSG32 RSVDx903C_b4                                : 28;\
          }
    union { UNSG32 u32Gbl_siSSResetStatus;
            struct w32Gbl_siSSResetStatus;
          };
    ///////////////////////////////////////////////////////////
              SIE_SISSClkD4                                    ie_ifcpClk;
    ///////////////////////////////////////////////////////////
              SIE_SISSClkD4                                    ie_nskClk;
    ///////////////////////////////////////////////////////////
              SIE_SRAMRWTC                                     ie_RWTC_SISS;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_SISS;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_NSK2;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_NOCS3;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_IFCP;
    ///////////////////////////////////////////////////////////
              SIE_SRAMPWR                                      ie_SRAM_PWR_TSP;
    ///////////////////////////////////////////////////////////
              SIE_SISSClkD2                                    ie_tspClk;
    ///////////////////////////////////////////////////////////
              SIE_SISSClkD4                                    ie_tspRefClk;
    ///////////////////////////////////////////////////////////
    } SIE_Gbl;

    typedef union  T32Gbl_ProductId
          { UNSG32 u32;
            struct w32Gbl_ProductId;
                 } T32Gbl_ProductId;
    typedef union  T32Gbl_ProductId_ext
          { UNSG32 u32;
            struct w32Gbl_ProductId_ext;
                 } T32Gbl_ProductId_ext;
    typedef union  T32Gbl_INT_ID
          { UNSG32 u32;
            struct w32Gbl_INT_ID;
                 } T32Gbl_INT_ID;
    typedef union  T32Gbl_bootStrap
          { UNSG32 u32;
            struct w32Gbl_bootStrap;
                 } T32Gbl_bootStrap;
    typedef union  T32Gbl_bootStrapEn
          { UNSG32 u32;
            struct w32Gbl_bootStrapEn;
                 } T32Gbl_bootStrapEn;
    typedef union  T32Gbl_pkgSel
          { UNSG32 u32;
            struct w32Gbl_pkgSel;
                 } T32Gbl_pkgSel;
    typedef union  T32Gbl_chipCntl
          { UNSG32 u32;
            struct w32Gbl_chipCntl;
                 } T32Gbl_chipCntl;
    typedef union  T32Gbl_stsCntl
          { UNSG32 u32;
            struct w32Gbl_stsCntl;
                 } T32Gbl_stsCntl;
    typedef union  T32Gbl_sw_generic0
          { UNSG32 u32;
            struct w32Gbl_sw_generic0;
                 } T32Gbl_sw_generic0;
    typedef union  T32Gbl_sw_generic1
          { UNSG32 u32;
            struct w32Gbl_sw_generic1;
                 } T32Gbl_sw_generic1;
    typedef union  T32Gbl_sw_generic2
          { UNSG32 u32;
            struct w32Gbl_sw_generic2;
                 } T32Gbl_sw_generic2;
    typedef union  T32Gbl_sw_generic3
          { UNSG32 u32;
            struct w32Gbl_sw_generic3;
                 } T32Gbl_sw_generic3;
    typedef union  T32Gbl_FPGAR
          { UNSG32 u32;
            struct w32Gbl_FPGAR;
                 } T32Gbl_FPGAR;
    typedef union  T32Gbl_FPGARW
          { UNSG32 u32;
            struct w32Gbl_FPGARW;
                 } T32Gbl_FPGARW;
    typedef union  T32Gbl_ResetTrigger
          { UNSG32 u32;
            struct w32Gbl_ResetTrigger;
                 } T32Gbl_ResetTrigger;
    typedef union  T32Gbl_ResetStatus
          { UNSG32 u32;
            struct w32Gbl_ResetStatus;
                 } T32Gbl_ResetStatus;
    typedef union  T32Gbl_WDTResetStatus
          { UNSG32 u32;
            struct w32Gbl_WDTResetStatus;
                 } T32Gbl_WDTResetStatus;
    typedef union  T32Gbl_avioReset
          { UNSG32 u32;
            struct w32Gbl_avioReset;
                 } T32Gbl_avioReset;
    typedef union  T32Gbl_avioResetStatus
          { UNSG32 u32;
            struct w32Gbl_avioResetStatus;
                 } T32Gbl_avioResetStatus;
    typedef union  T32Gbl_gethRgmiiRstn
          { UNSG32 u32;
            struct w32Gbl_gethRgmiiRstn;
                 } T32Gbl_gethRgmiiRstn;
    typedef union  T32Gbl_gethRgmiiResetStatus
          { UNSG32 u32;
            struct w32Gbl_gethRgmiiResetStatus;
                 } T32Gbl_gethRgmiiResetStatus;
    typedef union  T32Gbl_gfx3DReset
          { UNSG32 u32;
            struct w32Gbl_gfx3DReset;
                 } T32Gbl_gfx3DReset;
    typedef union  T32Gbl_gfx3DResetStatus
          { UNSG32 u32;
            struct w32Gbl_gfx3DResetStatus;
                 } T32Gbl_gfx3DResetStatus;
    typedef union  T32Gbl_decoderReset
          { UNSG32 u32;
            struct w32Gbl_decoderReset;
                 } T32Gbl_decoderReset;
    typedef union  T32Gbl_decoderResetStatus
          { UNSG32 u32;
            struct w32Gbl_decoderResetStatus;
                 } T32Gbl_decoderResetStatus;
    typedef union  T32Gbl_encoderReset
          { UNSG32 u32;
            struct w32Gbl_encoderReset;
                 } T32Gbl_encoderReset;
    typedef union  T32Gbl_encoderResetStatus
          { UNSG32 u32;
            struct w32Gbl_encoderResetStatus;
                 } T32Gbl_encoderResetStatus;
    typedef union  T32Gbl_ovpReset
          { UNSG32 u32;
            struct w32Gbl_ovpReset;
                 } T32Gbl_ovpReset;
    typedef union  T32Gbl_ovpResetStatus
          { UNSG32 u32;
            struct w32Gbl_ovpResetStatus;
                 } T32Gbl_ovpResetStatus;
    typedef union  T32Gbl_almGeoxbarGRstn
          { UNSG32 u32;
            struct w32Gbl_almGeoxbarGRstn;
                 } T32Gbl_almGeoxbarGRstn;
    typedef union  T32Gbl_almGeoxbarResetStatus
          { UNSG32 u32;
            struct w32Gbl_almGeoxbarResetStatus;
                 } T32Gbl_almGeoxbarResetStatus;
    typedef union  T32Gbl_almVnxbarGRstn
          { UNSG32 u32;
            struct w32Gbl_almVnxbarGRstn;
                 } T32Gbl_almVnxbarGRstn;
    typedef union  T32Gbl_almVnxbarResetStatus
          { UNSG32 u32;
            struct w32Gbl_almVnxbarResetStatus;
                 } T32Gbl_almVnxbarResetStatus;
    typedef union  T32Gbl_perifReset
          { UNSG32 u32;
            struct w32Gbl_perifReset;
                 } T32Gbl_perifReset;
    typedef union  T32Gbl_perifResetStatus
          { UNSG32 u32;
            struct w32Gbl_perifResetStatus;
                 } T32Gbl_perifResetStatus;
    typedef union  T32Gbl_perifStickyResetN
          { UNSG32 u32;
            struct w32Gbl_perifStickyResetN;
                 } T32Gbl_perifStickyResetN;
    typedef union  T32Gbl_apbPerifResetTrigger
          { UNSG32 u32;
            struct w32Gbl_apbPerifResetTrigger;
                 } T32Gbl_apbPerifResetTrigger;
    typedef union  T32Gbl_apbPerifResetStatus
          { UNSG32 u32;
            struct w32Gbl_apbPerifResetStatus;
                 } T32Gbl_apbPerifResetStatus;
    typedef union  T32Gbl_topStickyResetN
          { UNSG32 u32;
            struct w32Gbl_topStickyResetN;
                 } T32Gbl_topStickyResetN;
    typedef union  T32Gbl_clkEnable
          { UNSG32 u32;
            struct w32Gbl_clkEnable;
                 } T32Gbl_clkEnable;
    typedef union  T32Gbl_ClkSwitch
          { UNSG32 u32;
            struct w32Gbl_ClkSwitch;
                 } T32Gbl_ClkSwitch;
    typedef union  T32Gbl_SECURE_SCAN_EN
          { UNSG32 u32;
            struct w32Gbl_SECURE_SCAN_EN;
                 } T32Gbl_SECURE_SCAN_EN;
    typedef union  T32Gbl_gfx3DDisRamClkGate
          { UNSG32 u32;
            struct w32Gbl_gfx3DDisRamClkGate;
                 } T32Gbl_gfx3DDisRamClkGate;
    typedef union  T32Gbl_gic400_ctrl
          { UNSG32 u32;
            struct w32Gbl_gic400_ctrl;
                 } T32Gbl_gic400_ctrl;
    typedef union  T32Gbl_GFX_CTRL_0
          { UNSG32 u32;
            struct w32Gbl_GFX_CTRL_0;
                 } T32Gbl_GFX_CTRL_0;
    typedef union  T32Gbl_GFX_CTRL_1
          { UNSG32 u32;
            struct w32Gbl_GFX_CTRL_1;
                 } T32Gbl_GFX_CTRL_1;
    typedef union  T32Gbl_GFX_CTRL_2
          { UNSG32 u32;
            struct w32Gbl_GFX_CTRL_2;
                 } T32Gbl_GFX_CTRL_2;
    typedef union  T32Gbl_GFX_CTRL_3
          { UNSG32 u32;
            struct w32Gbl_GFX_CTRL_3;
                 } T32Gbl_GFX_CTRL_3;
    typedef union  T32Gbl_GFX_TIMER_VALUE
          { UNSG32 u32;
            struct w32Gbl_GFX_TIMER_VALUE;
                 } T32Gbl_GFX_TIMER_VALUE;
    typedef union  T32Gbl_GFX_TIMER_VALUE1
          { UNSG32 u32;
            struct w32Gbl_GFX_TIMER_VALUE1;
                 } T32Gbl_GFX_TIMER_VALUE1;
    typedef union  T32Gbl_GFX_STATUS
          { UNSG32 u32;
            struct w32Gbl_GFX_STATUS;
                 } T32Gbl_GFX_STATUS;
    typedef union  T32Gbl_USBOTG_REFCLK_CTRL0
          { UNSG32 u32;
            struct w32Gbl_USBOTG_REFCLK_CTRL0;
                 } T32Gbl_USBOTG_REFCLK_CTRL0;
    typedef union  T32Gbl_USBOTG_REFCLK_CTRL1
          { UNSG32 u32;
            struct w32Gbl_USBOTG_REFCLK_CTRL1;
                 } T32Gbl_USBOTG_REFCLK_CTRL1;
    typedef union  T32Gbl_USIMCLK_MUX
          { UNSG32 u32;
            struct w32Gbl_USIMCLK_MUX;
                 } T32Gbl_USIMCLK_MUX;
    typedef union  T32Gbl_REFCLK_SWITCH
          { UNSG32 u32;
            struct w32Gbl_REFCLK_SWITCH;
                 } T32Gbl_REFCLK_SWITCH;
    typedef union  T32Gbl_DSP0_Control
          { UNSG32 u32;
            struct w32Gbl_DSP0_Control;
                 } T32Gbl_DSP0_Control;
    typedef union  T32Gbl_DSP0_Status
          { UNSG32 u32;
            struct w32Gbl_DSP0_Status;
                 } T32Gbl_DSP0_Status;
    typedef union  T32Gbl_DSP0_SECCTRL0
          { UNSG32 u32;
            struct w32Gbl_DSP0_SECCTRL0;
                 } T32Gbl_DSP0_SECCTRL0;
    typedef union  T32Gbl_DSP0_SECCTRL1
          { UNSG32 u32;
            struct w32Gbl_DSP0_SECCTRL1;
                 } T32Gbl_DSP0_SECCTRL1;
    typedef union  T32Gbl_DSP0_PRID
          { UNSG32 u32;
            struct w32Gbl_DSP0_PRID;
                 } T32Gbl_DSP0_PRID;
    typedef union  T32Gbl_DSP1_Control
          { UNSG32 u32;
            struct w32Gbl_DSP1_Control;
                 } T32Gbl_DSP1_Control;
    typedef union  T32Gbl_DSP1_Status
          { UNSG32 u32;
            struct w32Gbl_DSP1_Status;
                 } T32Gbl_DSP1_Status;
    typedef union  T32Gbl_DSP1_SECCTRL0
          { UNSG32 u32;
            struct w32Gbl_DSP1_SECCTRL0;
                 } T32Gbl_DSP1_SECCTRL0;
    typedef union  T32Gbl_DSP1_SECCTRL1
          { UNSG32 u32;
            struct w32Gbl_DSP1_SECCTRL1;
                 } T32Gbl_DSP1_SECCTRL1;
    typedef union  T32Gbl_DSP1_PRID
          { UNSG32 u32;
            struct w32Gbl_DSP1_PRID;
                 } T32Gbl_DSP1_PRID;
    typedef union  T32Gbl_pinMuxCntlBus
          { UNSG32 u32;
            struct w32Gbl_pinMuxCntlBus;
                 } T32Gbl_pinMuxCntlBus;
    typedef union  T32Gbl_pinMuxCntlBus1
          { UNSG32 u32;
            struct w32Gbl_pinMuxCntlBus1;
                 } T32Gbl_pinMuxCntlBus1;
    typedef union  T32Gbl_pinMuxCntlBus2
          { UNSG32 u32;
            struct w32Gbl_pinMuxCntlBus2;
                 } T32Gbl_pinMuxCntlBus2;
    typedef union  T32Gbl_avioPinMuxCntlBus
          { UNSG32 u32;
            struct w32Gbl_avioPinMuxCntlBus;
                 } T32Gbl_avioPinMuxCntlBus;
    typedef union  T32Gbl_avioPinMuxCntlBus1
          { UNSG32 u32;
            struct w32Gbl_avioPinMuxCntlBus1;
                 } T32Gbl_avioPinMuxCntlBus1;
    typedef union  T32Gbl_avioPinMuxCntlBus2
          { UNSG32 u32;
            struct w32Gbl_avioPinMuxCntlBus2;
                 } T32Gbl_avioPinMuxCntlBus2;
    typedef union  T32Gbl_GPIO_A2Cntl
          { UNSG32 u32;
            struct w32Gbl_GPIO_A2Cntl;
                 } T32Gbl_GPIO_A2Cntl;
    typedef union  T32Gbl_GPIO_A1Cntl
          { UNSG32 u32;
            struct w32Gbl_GPIO_A1Cntl;
                 } T32Gbl_GPIO_A1Cntl;
    typedef union  T32Gbl_GPIO_A0Cntl
          { UNSG32 u32;
            struct w32Gbl_GPIO_A0Cntl;
                 } T32Gbl_GPIO_A0Cntl;
    typedef union  T32Gbl_STS0_CLKCntl
          { UNSG32 u32;
            struct w32Gbl_STS0_CLKCntl;
                 } T32Gbl_STS0_CLKCntl;
    typedef union  T32Gbl_STS0_SOPCntl
          { UNSG32 u32;
            struct w32Gbl_STS0_SOPCntl;
                 } T32Gbl_STS0_SOPCntl;
    typedef union  T32Gbl_STS0_SDCntl
          { UNSG32 u32;
            struct w32Gbl_STS0_SDCntl;
                 } T32Gbl_STS0_SDCntl;
    typedef union  T32Gbl_STS0_VALDCntl
          { UNSG32 u32;
            struct w32Gbl_STS0_VALDCntl;
                 } T32Gbl_STS0_VALDCntl;
    typedef union  T32Gbl_STS1_CLKCntl
          { UNSG32 u32;
            struct w32Gbl_STS1_CLKCntl;
                 } T32Gbl_STS1_CLKCntl;
    typedef union  T32Gbl_STS1_SOPCntl
          { UNSG32 u32;
            struct w32Gbl_STS1_SOPCntl;
                 } T32Gbl_STS1_SOPCntl;
    typedef union  T32Gbl_STS1_SDCntl
          { UNSG32 u32;
            struct w32Gbl_STS1_SDCntl;
                 } T32Gbl_STS1_SDCntl;
    typedef union  T32Gbl_STS1_VALDCntl
          { UNSG32 u32;
            struct w32Gbl_STS1_VALDCntl;
                 } T32Gbl_STS1_VALDCntl;
    typedef union  T32Gbl_SPI1_SS0nCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SS0nCntl;
                 } T32Gbl_SPI1_SS0nCntl;
    typedef union  T32Gbl_SPI1_SS1nCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SS1nCntl;
                 } T32Gbl_SPI1_SS1nCntl;
    typedef union  T32Gbl_SPI1_SS2nCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SS2nCntl;
                 } T32Gbl_SPI1_SS2nCntl;
    typedef union  T32Gbl_SPI1_SS3nCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SS3nCntl;
                 } T32Gbl_SPI1_SS3nCntl;
    typedef union  T32Gbl_SPI1_SDOCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SDOCntl;
                 } T32Gbl_SPI1_SDOCntl;
    typedef union  T32Gbl_SPI1_SCLKCntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SCLKCntl;
                 } T32Gbl_SPI1_SCLKCntl;
    typedef union  T32Gbl_SPI1_SDICntl
          { UNSG32 u32;
            struct w32Gbl_SPI1_SDICntl;
                 } T32Gbl_SPI1_SDICntl;
    typedef union  T32Gbl_TW0_SCLCntl
          { UNSG32 u32;
            struct w32Gbl_TW0_SCLCntl;
                 } T32Gbl_TW0_SCLCntl;
    typedef union  T32Gbl_TW0_SDACntl
          { UNSG32 u32;
            struct w32Gbl_TW0_SDACntl;
                 } T32Gbl_TW0_SDACntl;
    typedef union  T32Gbl_USB2_DRV_VBUSCntl
          { UNSG32 u32;
            struct w32Gbl_USB2_DRV_VBUSCntl;
                 } T32Gbl_USB2_DRV_VBUSCntl;
    typedef union  T32Gbl_SDIO0_CDnCntl
          { UNSG32 u32;
            struct w32Gbl_SDIO0_CDnCntl;
                 } T32Gbl_SDIO0_CDnCntl;
    typedef union  T32Gbl_SDIO0_WPCntl
          { UNSG32 u32;
            struct w32Gbl_SDIO0_WPCntl;
                 } T32Gbl_SDIO0_WPCntl;
    typedef union  T32Gbl_SCRD0_CRD_PRESCntl
          { UNSG32 u32;
            struct w32Gbl_SCRD0_CRD_PRESCntl;
                 } T32Gbl_SCRD0_CRD_PRESCntl;
    typedef union  T32Gbl_SCRD0_RSTCntl
          { UNSG32 u32;
            struct w32Gbl_SCRD0_RSTCntl;
                 } T32Gbl_SCRD0_RSTCntl;
    typedef union  T32Gbl_SCRD0_DCLKCntl
          { UNSG32 u32;
            struct w32Gbl_SCRD0_DCLKCntl;
                 } T32Gbl_SCRD0_DCLKCntl;
    typedef union  T32Gbl_SCRD0_DIOCntl
          { UNSG32 u32;
            struct w32Gbl_SCRD0_DIOCntl;
                 } T32Gbl_SCRD0_DIOCntl;
    typedef union  T32Gbl_I2S1_DO0Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S1_DO0Cntl;
                 } T32Gbl_I2S1_DO0Cntl;
    typedef union  T32Gbl_I2S1_DO1Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S1_DO1Cntl;
                 } T32Gbl_I2S1_DO1Cntl;
    typedef union  T32Gbl_I2S1_DO2Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S1_DO2Cntl;
                 } T32Gbl_I2S1_DO2Cntl;
    typedef union  T32Gbl_I2S1_DO3Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S1_DO3Cntl;
                 } T32Gbl_I2S1_DO3Cntl;
    typedef union  T32Gbl_I2S1_LRCKIOCntl
          { UNSG32 u32;
            struct w32Gbl_I2S1_LRCKIOCntl;
                 } T32Gbl_I2S1_LRCKIOCntl;
    typedef union  T32Gbl_I2S1_BCLKIOCntl
          { UNSG32 u32;
            struct w32Gbl_I2S1_BCLKIOCntl;
                 } T32Gbl_I2S1_BCLKIOCntl;
    typedef union  T32Gbl_SPDIFOCntl
          { UNSG32 u32;
            struct w32Gbl_SPDIFOCntl;
                 } T32Gbl_SPDIFOCntl;
    typedef union  T32Gbl_SPDIFICntl
          { UNSG32 u32;
            struct w32Gbl_SPDIFICntl;
                 } T32Gbl_SPDIFICntl;
    typedef union  T32Gbl_I2S2_LRCKIOCntl
          { UNSG32 u32;
            struct w32Gbl_I2S2_LRCKIOCntl;
                 } T32Gbl_I2S2_LRCKIOCntl;
    typedef union  T32Gbl_I2S2_BCLKIOCntl
          { UNSG32 u32;
            struct w32Gbl_I2S2_BCLKIOCntl;
                 } T32Gbl_I2S2_BCLKIOCntl;
    typedef union  T32Gbl_I2S2_DI0Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S2_DI0Cntl;
                 } T32Gbl_I2S2_DI0Cntl;
    typedef union  T32Gbl_I2S2_DI1Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S2_DI1Cntl;
                 } T32Gbl_I2S2_DI1Cntl;
    typedef union  T32Gbl_I2S2_DI2Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S2_DI2Cntl;
                 } T32Gbl_I2S2_DI2Cntl;
    typedef union  T32Gbl_I2S2_DI3Cntl
          { UNSG32 u32;
            struct w32Gbl_I2S2_DI3Cntl;
                 } T32Gbl_I2S2_DI3Cntl;
    typedef union  T32Gbl_I2S1_MCLKCntl
          { UNSG32 u32;
            struct w32Gbl_I2S1_MCLKCntl;
                 } T32Gbl_I2S1_MCLKCntl;
    typedef union  T32Gbl_I2S2_MCLKCntl
          { UNSG32 u32;
            struct w32Gbl_I2S2_MCLKCntl;
                 } T32Gbl_I2S2_MCLKCntl;
    typedef union  T32Gbl_HDMI_TX_EDDC_SCLCntl
          { UNSG32 u32;
            struct w32Gbl_HDMI_TX_EDDC_SCLCntl;
                 } T32Gbl_HDMI_TX_EDDC_SCLCntl;
    typedef union  T32Gbl_HDMI_TX_EDDC_SDACntl
          { UNSG32 u32;
            struct w32Gbl_HDMI_TX_EDDC_SDACntl;
                 } T32Gbl_HDMI_TX_EDDC_SDACntl;
    typedef union  T32Gbl_I2S3_DOCntl
          { UNSG32 u32;
            struct w32Gbl_I2S3_DOCntl;
                 } T32Gbl_I2S3_DOCntl;
    typedef union  T32Gbl_I2S3_LRCKIOCntl
          { UNSG32 u32;
            struct w32Gbl_I2S3_LRCKIOCntl;
                 } T32Gbl_I2S3_LRCKIOCntl;
    typedef union  T32Gbl_I2S3_BCLKIOCntl
          { UNSG32 u32;
            struct w32Gbl_I2S3_BCLKIOCntl;
                 } T32Gbl_I2S3_BCLKIOCntl;
    typedef union  T32Gbl_I2S3_DICntl
          { UNSG32 u32;
            struct w32Gbl_I2S3_DICntl;
                 } T32Gbl_I2S3_DICntl;
    typedef union  T32Gbl_bootStrapSipll
          { UNSG32 u32;
            struct w32Gbl_bootStrapSipll;
                 } T32Gbl_bootStrapSipll;
    typedef union  T32Gbl_bootStrapEnSipll
          { UNSG32 u32;
            struct w32Gbl_bootStrapEnSipll;
                 } T32Gbl_bootStrapEnSipll;
    typedef union  T32Gbl_siPllClkSwitch
          { UNSG32 u32;
            struct w32Gbl_siPllClkSwitch;
                 } T32Gbl_siPllClkSwitch;
    typedef union  T32Gbl_siSSReset
          { UNSG32 u32;
            struct w32Gbl_siSSReset;
                 } T32Gbl_siSSReset;
    typedef union  T32Gbl_siSSResetStatus
          { UNSG32 u32;
            struct w32Gbl_siSSResetStatus;
                 } T32Gbl_siSSResetStatus;
    ///////////////////////////////////////////////////////////

    typedef union  TGbl_ProductId
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ProductId;
                   };
                 } TGbl_ProductId;
    typedef union  TGbl_ProductId_ext
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ProductId_ext;
                   };
                 } TGbl_ProductId_ext;
    typedef union  TGbl_INT_ID
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_INT_ID;
                   };
                 } TGbl_INT_ID;
    typedef union  TGbl_bootStrap
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_bootStrap;
                   };
                 } TGbl_bootStrap;
    typedef union  TGbl_bootStrapEn
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_bootStrapEn;
                   };
                 } TGbl_bootStrapEn;
    typedef union  TGbl_pkgSel
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_pkgSel;
                   };
                 } TGbl_pkgSel;
    typedef union  TGbl_chipCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_chipCntl;
                   };
                 } TGbl_chipCntl;
    typedef union  TGbl_stsCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_stsCntl;
                   };
                 } TGbl_stsCntl;
    typedef union  TGbl_sw_generic0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sw_generic0;
                   };
                 } TGbl_sw_generic0;
    typedef union  TGbl_sw_generic1
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sw_generic1;
                   };
                 } TGbl_sw_generic1;
    typedef union  TGbl_sw_generic2
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sw_generic2;
                   };
                 } TGbl_sw_generic2;
    typedef union  TGbl_sw_generic3
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_sw_generic3;
                   };
                 } TGbl_sw_generic3;
    typedef union  TGbl_FPGAR
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_FPGAR;
                   };
                 } TGbl_FPGAR;
    typedef union  TGbl_FPGARW
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_FPGARW;
                   };
                 } TGbl_FPGARW;
    typedef union  TGbl_ResetTrigger
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ResetTrigger;
                   };
                 } TGbl_ResetTrigger;
    typedef union  TGbl_ResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ResetStatus;
                   };
                 } TGbl_ResetStatus;
    typedef union  TGbl_WDTResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_WDTResetStatus;
                   };
                 } TGbl_WDTResetStatus;
    typedef union  TGbl_avioReset
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_avioReset;
                   };
                 } TGbl_avioReset;
    typedef union  TGbl_avioResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_avioResetStatus;
                   };
                 } TGbl_avioResetStatus;
    typedef union  TGbl_gethRgmiiRstn
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gethRgmiiRstn;
                   };
                 } TGbl_gethRgmiiRstn;
    typedef union  TGbl_gethRgmiiResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gethRgmiiResetStatus;
                   };
                 } TGbl_gethRgmiiResetStatus;
    typedef union  TGbl_gfx3DReset
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gfx3DReset;
                   };
                 } TGbl_gfx3DReset;
    typedef union  TGbl_gfx3DResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gfx3DResetStatus;
                   };
                 } TGbl_gfx3DResetStatus;
    typedef union  TGbl_decoderReset
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_decoderReset;
                   };
                 } TGbl_decoderReset;
    typedef union  TGbl_decoderResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_decoderResetStatus;
                   };
                 } TGbl_decoderResetStatus;
    typedef union  TGbl_encoderReset
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_encoderReset;
                   };
                 } TGbl_encoderReset;
    typedef union  TGbl_encoderResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_encoderResetStatus;
                   };
                 } TGbl_encoderResetStatus;
    typedef union  TGbl_ovpReset
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ovpReset;
                   };
                 } TGbl_ovpReset;
    typedef union  TGbl_ovpResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ovpResetStatus;
                   };
                 } TGbl_ovpResetStatus;
    typedef union  TGbl_almGeoxbarGRstn
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_almGeoxbarGRstn;
                   };
                 } TGbl_almGeoxbarGRstn;
    typedef union  TGbl_almGeoxbarResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_almGeoxbarResetStatus;
                   };
                 } TGbl_almGeoxbarResetStatus;
    typedef union  TGbl_almVnxbarGRstn
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_almVnxbarGRstn;
                   };
                 } TGbl_almVnxbarGRstn;
    typedef union  TGbl_almVnxbarResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_almVnxbarResetStatus;
                   };
                 } TGbl_almVnxbarResetStatus;
    typedef union  TGbl_perifReset
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_perifReset;
                   };
                 } TGbl_perifReset;
    typedef union  TGbl_perifResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_perifResetStatus;
                   };
                 } TGbl_perifResetStatus;
    typedef union  TGbl_perifStickyResetN
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_perifStickyResetN;
                   };
                 } TGbl_perifStickyResetN;
    typedef union  TGbl_apbPerifResetTrigger
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_apbPerifResetTrigger;
                   };
                 } TGbl_apbPerifResetTrigger;
    typedef union  TGbl_apbPerifResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_apbPerifResetStatus;
                   };
                 } TGbl_apbPerifResetStatus;
    typedef union  TGbl_topStickyResetN
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_topStickyResetN;
                   };
                 } TGbl_topStickyResetN;
    typedef union  TGbl_clkEnable
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_clkEnable;
                   };
                 } TGbl_clkEnable;
    typedef union  TGbl_ClkSwitch
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_ClkSwitch;
                   };
                 } TGbl_ClkSwitch;
    typedef union  TGbl_SECURE_SCAN_EN
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SECURE_SCAN_EN;
                   };
                 } TGbl_SECURE_SCAN_EN;
    typedef union  TGbl_gfx3DDisRamClkGate
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gfx3DDisRamClkGate;
                   };
                 } TGbl_gfx3DDisRamClkGate;
    typedef union  TGbl_gic400_ctrl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_gic400_ctrl;
                   };
                 } TGbl_gic400_ctrl;
    typedef union  TGbl_GFX_CTRL_0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_GFX_CTRL_0;
                   };
                 } TGbl_GFX_CTRL_0;
    typedef union  TGbl_GFX_CTRL_1
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_GFX_CTRL_1;
                   };
                 } TGbl_GFX_CTRL_1;
    typedef union  TGbl_GFX_CTRL_2
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_GFX_CTRL_2;
                   };
                 } TGbl_GFX_CTRL_2;
    typedef union  TGbl_GFX_CTRL_3
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_GFX_CTRL_3;
                   };
                 } TGbl_GFX_CTRL_3;
    typedef union  TGbl_GFX_TIMER_VALUE
          { UNSG32 u32[2];
            struct {
            struct w32Gbl_GFX_TIMER_VALUE;
            struct w32Gbl_GFX_TIMER_VALUE1;
                   };
                 } TGbl_GFX_TIMER_VALUE;
    typedef union  TGbl_GFX_STATUS
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_GFX_STATUS;
                   };
                 } TGbl_GFX_STATUS;
    typedef union  TGbl_USBOTG_REFCLK_CTRL0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_USBOTG_REFCLK_CTRL0;
                   };
                 } TGbl_USBOTG_REFCLK_CTRL0;
    typedef union  TGbl_USBOTG_REFCLK_CTRL1
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_USBOTG_REFCLK_CTRL1;
                   };
                 } TGbl_USBOTG_REFCLK_CTRL1;
    typedef union  TGbl_USIMCLK_MUX
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_USIMCLK_MUX;
                   };
                 } TGbl_USIMCLK_MUX;
    typedef union  TGbl_REFCLK_SWITCH
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_REFCLK_SWITCH;
                   };
                 } TGbl_REFCLK_SWITCH;
    typedef union  TGbl_DSP0_Control
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DSP0_Control;
                   };
                 } TGbl_DSP0_Control;
    typedef union  TGbl_DSP0_Status
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DSP0_Status;
                   };
                 } TGbl_DSP0_Status;
    typedef union  TGbl_DSP0_SECCTRL0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DSP0_SECCTRL0;
                   };
                 } TGbl_DSP0_SECCTRL0;
    typedef union  TGbl_DSP0_SECCTRL1
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DSP0_SECCTRL1;
                   };
                 } TGbl_DSP0_SECCTRL1;
    typedef union  TGbl_DSP0_PRID
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DSP0_PRID;
                   };
                 } TGbl_DSP0_PRID;
    typedef union  TGbl_DSP1_Control
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DSP1_Control;
                   };
                 } TGbl_DSP1_Control;
    typedef union  TGbl_DSP1_Status
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DSP1_Status;
                   };
                 } TGbl_DSP1_Status;
    typedef union  TGbl_DSP1_SECCTRL0
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DSP1_SECCTRL0;
                   };
                 } TGbl_DSP1_SECCTRL0;
    typedef union  TGbl_DSP1_SECCTRL1
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DSP1_SECCTRL1;
                   };
                 } TGbl_DSP1_SECCTRL1;
    typedef union  TGbl_DSP1_PRID
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_DSP1_PRID;
                   };
                 } TGbl_DSP1_PRID;
    typedef union  TGbl_pinMuxCntlBus
          { UNSG32 u32[3];
            struct {
            struct w32Gbl_pinMuxCntlBus;
            struct w32Gbl_pinMuxCntlBus1;
            struct w32Gbl_pinMuxCntlBus2;
                   };
                 } TGbl_pinMuxCntlBus;
    typedef union  TGbl_avioPinMuxCntlBus
          { UNSG32 u32[3];
            struct {
            struct w32Gbl_avioPinMuxCntlBus;
            struct w32Gbl_avioPinMuxCntlBus1;
            struct w32Gbl_avioPinMuxCntlBus2;
                   };
                 } TGbl_avioPinMuxCntlBus;
    typedef union  TGbl_GPIO_A2Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_GPIO_A2Cntl;
                   };
                 } TGbl_GPIO_A2Cntl;
    typedef union  TGbl_GPIO_A1Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_GPIO_A1Cntl;
                   };
                 } TGbl_GPIO_A1Cntl;
    typedef union  TGbl_GPIO_A0Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_GPIO_A0Cntl;
                   };
                 } TGbl_GPIO_A0Cntl;
    typedef union  TGbl_STS0_CLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_STS0_CLKCntl;
                   };
                 } TGbl_STS0_CLKCntl;
    typedef union  TGbl_STS0_SOPCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_STS0_SOPCntl;
                   };
                 } TGbl_STS0_SOPCntl;
    typedef union  TGbl_STS0_SDCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_STS0_SDCntl;
                   };
                 } TGbl_STS0_SDCntl;
    typedef union  TGbl_STS0_VALDCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_STS0_VALDCntl;
                   };
                 } TGbl_STS0_VALDCntl;
    typedef union  TGbl_STS1_CLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_STS1_CLKCntl;
                   };
                 } TGbl_STS1_CLKCntl;
    typedef union  TGbl_STS1_SOPCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_STS1_SOPCntl;
                   };
                 } TGbl_STS1_SOPCntl;
    typedef union  TGbl_STS1_SDCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_STS1_SDCntl;
                   };
                 } TGbl_STS1_SDCntl;
    typedef union  TGbl_STS1_VALDCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_STS1_VALDCntl;
                   };
                 } TGbl_STS1_VALDCntl;
    typedef union  TGbl_SPI1_SS0nCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SS0nCntl;
                   };
                 } TGbl_SPI1_SS0nCntl;
    typedef union  TGbl_SPI1_SS1nCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SS1nCntl;
                   };
                 } TGbl_SPI1_SS1nCntl;
    typedef union  TGbl_SPI1_SS2nCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SS2nCntl;
                   };
                 } TGbl_SPI1_SS2nCntl;
    typedef union  TGbl_SPI1_SS3nCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SS3nCntl;
                   };
                 } TGbl_SPI1_SS3nCntl;
    typedef union  TGbl_SPI1_SDOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SDOCntl;
                   };
                 } TGbl_SPI1_SDOCntl;
    typedef union  TGbl_SPI1_SCLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SCLKCntl;
                   };
                 } TGbl_SPI1_SCLKCntl;
    typedef union  TGbl_SPI1_SDICntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPI1_SDICntl;
                   };
                 } TGbl_SPI1_SDICntl;
    typedef union  TGbl_TW0_SCLCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_TW0_SCLCntl;
                   };
                 } TGbl_TW0_SCLCntl;
    typedef union  TGbl_TW0_SDACntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_TW0_SDACntl;
                   };
                 } TGbl_TW0_SDACntl;
    typedef union  TGbl_USB2_DRV_VBUSCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_USB2_DRV_VBUSCntl;
                   };
                 } TGbl_USB2_DRV_VBUSCntl;
    typedef union  TGbl_SDIO0_CDnCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SDIO0_CDnCntl;
                   };
                 } TGbl_SDIO0_CDnCntl;
    typedef union  TGbl_SDIO0_WPCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SDIO0_WPCntl;
                   };
                 } TGbl_SDIO0_WPCntl;
    typedef union  TGbl_SCRD0_CRD_PRESCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SCRD0_CRD_PRESCntl;
                   };
                 } TGbl_SCRD0_CRD_PRESCntl;
    typedef union  TGbl_SCRD0_RSTCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SCRD0_RSTCntl;
                   };
                 } TGbl_SCRD0_RSTCntl;
    typedef union  TGbl_SCRD0_DCLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SCRD0_DCLKCntl;
                   };
                 } TGbl_SCRD0_DCLKCntl;
    typedef union  TGbl_SCRD0_DIOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SCRD0_DIOCntl;
                   };
                 } TGbl_SCRD0_DIOCntl;
    typedef union  TGbl_I2S1_DO0Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S1_DO0Cntl;
                   };
                 } TGbl_I2S1_DO0Cntl;
    typedef union  TGbl_I2S1_DO1Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S1_DO1Cntl;
                   };
                 } TGbl_I2S1_DO1Cntl;
    typedef union  TGbl_I2S1_DO2Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S1_DO2Cntl;
                   };
                 } TGbl_I2S1_DO2Cntl;
    typedef union  TGbl_I2S1_DO3Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S1_DO3Cntl;
                   };
                 } TGbl_I2S1_DO3Cntl;
    typedef union  TGbl_I2S1_LRCKIOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S1_LRCKIOCntl;
                   };
                 } TGbl_I2S1_LRCKIOCntl;
    typedef union  TGbl_I2S1_BCLKIOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S1_BCLKIOCntl;
                   };
                 } TGbl_I2S1_BCLKIOCntl;
    typedef union  TGbl_SPDIFOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPDIFOCntl;
                   };
                 } TGbl_SPDIFOCntl;
    typedef union  TGbl_SPDIFICntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_SPDIFICntl;
                   };
                 } TGbl_SPDIFICntl;
    typedef union  TGbl_I2S2_LRCKIOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S2_LRCKIOCntl;
                   };
                 } TGbl_I2S2_LRCKIOCntl;
    typedef union  TGbl_I2S2_BCLKIOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S2_BCLKIOCntl;
                   };
                 } TGbl_I2S2_BCLKIOCntl;
    typedef union  TGbl_I2S2_DI0Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S2_DI0Cntl;
                   };
                 } TGbl_I2S2_DI0Cntl;
    typedef union  TGbl_I2S2_DI1Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S2_DI1Cntl;
                   };
                 } TGbl_I2S2_DI1Cntl;
    typedef union  TGbl_I2S2_DI2Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S2_DI2Cntl;
                   };
                 } TGbl_I2S2_DI2Cntl;
    typedef union  TGbl_I2S2_DI3Cntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S2_DI3Cntl;
                   };
                 } TGbl_I2S2_DI3Cntl;
    typedef union  TGbl_I2S1_MCLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S1_MCLKCntl;
                   };
                 } TGbl_I2S1_MCLKCntl;
    typedef union  TGbl_I2S2_MCLKCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S2_MCLKCntl;
                   };
                 } TGbl_I2S2_MCLKCntl;
    typedef union  TGbl_HDMI_TX_EDDC_SCLCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_HDMI_TX_EDDC_SCLCntl;
                   };
                 } TGbl_HDMI_TX_EDDC_SCLCntl;
    typedef union  TGbl_HDMI_TX_EDDC_SDACntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_HDMI_TX_EDDC_SDACntl;
                   };
                 } TGbl_HDMI_TX_EDDC_SDACntl;
    typedef union  TGbl_I2S3_DOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S3_DOCntl;
                   };
                 } TGbl_I2S3_DOCntl;
    typedef union  TGbl_I2S3_LRCKIOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S3_LRCKIOCntl;
                   };
                 } TGbl_I2S3_LRCKIOCntl;
    typedef union  TGbl_I2S3_BCLKIOCntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S3_BCLKIOCntl;
                   };
                 } TGbl_I2S3_BCLKIOCntl;
    typedef union  TGbl_I2S3_DICntl
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_I2S3_DICntl;
                   };
                 } TGbl_I2S3_DICntl;
    typedef union  TGbl_bootStrapSipll
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_bootStrapSipll;
                   };
                 } TGbl_bootStrapSipll;
    typedef union  TGbl_bootStrapEnSipll
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_bootStrapEnSipll;
                   };
                 } TGbl_bootStrapEnSipll;
    typedef union  TGbl_siPllClkSwitch
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_siPllClkSwitch;
                   };
                 } TGbl_siPllClkSwitch;
    typedef union  TGbl_siSSReset
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_siSSReset;
                   };
                 } TGbl_siSSReset;
    typedef union  TGbl_siSSResetStatus
          { UNSG32 u32[1];
            struct {
            struct w32Gbl_siSSResetStatus;
                   };
                 } TGbl_siSSResetStatus;

    ///////////////////////////////////////////////////////////
     SIGN32 Gbl_drvrd(SIE_Gbl *p, UNSG32 base, SIGN32 mem, SIGN32 tst);
     SIGN32 Gbl_drvwr(SIE_Gbl *p, UNSG32 base, SIGN32 mem, SIGN32 tst, UNSG32 *pcmd);
       void Gbl_reset(SIE_Gbl *p);
     SIGN32 Gbl_cmp  (SIE_Gbl *p, SIE_Gbl *pie, char *pfx, void *hLOG, SIGN32 mem, SIGN32 tst);
    #define Gbl_check(p,pie,pfx,hLOG) Gbl_cmp(p,pie,pfx,(void*)(hLOG),0,0)
    #define Gbl_print(p,    pfx,hLOG) Gbl_cmp(p,0,  pfx,(void*)(hLOG),0,0)

#endif
//////
/// ENDOFINTERFACE: Gbl
////////////////////////////////////////////////////////////



#ifdef __cplusplus
  }
#endif
#pragma  pack()

#endif
//////
/// ENDOFFILE: global.h
////////////////////////////////////////////////////////////

