/*
 * NDA AND NEED-TO-KNOW REQUIRED
 *
 * Copyright © 2013-2018 Synaptics Incorporated. All rights reserved.
 *
 * This file contains information that is proprietary to Synaptics
 * Incorporated ("Synaptics"). The holder of this file shall treat all
 * information contained herein as confidential, shall use the
 * information only for its intended purpose, and shall not duplicate,
 * disclose, or disseminate any of this information in any manner
 * unless Synaptics has otherwise provided express, written
 * permission.
 *
 * Use of the materials may require a license of intellectual property
 * from a third party or from Synaptics. This file conveys no express
 * or implied licenses to any intellectual property rights belonging
 * to Synaptics.
 *
 * INFORMATION CONTAINED IN THIS DOCUMENT IS PROVIDED "AS-IS," AND
 * SYNAPTICS EXPRESSLY DISCLAIMS ALL EXPRESS AND IMPLIED WARRANTIES,
 * INCLUDING ANY IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE, AND ANY WARRANTIES OF NON-INFRINGEMENT OF ANY
 * INTELLECTUAL PROPERTY RIGHTS. IN NO EVENT SHALL SYNAPTICS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, PUNITIVE, OR
 * CONSEQUENTIAL DAMAGES ARISING OUT OF OR IN CONNECTION WITH THE USE
 * OF THE INFORMATION CONTAINED IN THIS DOCUMENT, HOWEVER CAUSED AND
 * BASED ON ANY THEORY OF LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, AND EVEN IF SYNAPTICS WAS
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IF A TRIBUNAL OF
 * COMPETENT JURISDICTION DOES NOT PERMIT THE DISCLAIMER OF DIRECT
 * DAMAGES OR ANY OTHER DAMAGES, SYNAPTICS' TOTAL CUMULATIVE LIABILITY
 * TO ANY PARTY SHALL NOT EXCEED ONE HUNDRED U.S. DOLLARS.
 */

#ifndef _TZ_ERRCODE_H_
#define _TZ_ERRCODE_H_

/* Here, we use same error code as TEE_ERROR_*.
 * but it's not a must, we can use different error code definitions.
 */
enum {
	TZ_SUCCESS			= 0x00000000,	/* TEEC_SUCCESS			*/
	TZ_ERROR_GENERIC		= 0xFFFF0000,	/* TEEC_ERROR_GENERIC		*/
	TZ_ERROR_ACCESS_DENIED		= 0xFFFF0001,	/* TEEC_ERROR_ACCESS_DENIED	*/
	TZ_ERROR_CANCEL			= 0xFFFF0002,	/* TEEC_ERROR_CANCEL		*/
	TZ_ERROR_ACCESS_CONFLICT	= 0xFFFF0003,	/* TEEC_ERROR_ACCESS_CONFLICT	*/
	TZ_ERROR_EXCESS_DATA		= 0xFFFF0004,	/* TEEC_ERROR_EXCESS_DATA	*/
	TZ_ERROR_BAD_FORMAT		= 0xFFFF0005,	/* TEEC_ERROR_BAD_FORMAT	*/
	TZ_ERROR_BAD_PARAMETERS		= 0xFFFF0006,	/* TEEC_ERROR_BAD_PARAMETERS	*/
	TZ_ERROR_BAD_STATE		= 0xFFFF0007,	/* TEEC_ERROR_BAD_STATE		*/
	TZ_ERROR_ITEM_NOT_FOUND		= 0xFFFF0008,	/* TEEC_ERROR_ITEM_NOT_FOUND	*/
	TZ_ERROR_NOT_IMPLEMENTED	= 0xFFFF0009,	/* TEEC_ERROR_NOT_IMPLEMENTED	*/
	TZ_ERROR_NOT_SUPPORTED		= 0xFFFF000A,	/* TEEC_ERROR_NOT_SUPPORTED	*/
	TZ_ERROR_NO_DATA		= 0xFFFF000B,	/* TEEC_ERROR_NO_DATA		*/
	TZ_ERROR_OUT_OF_MEMORY		= 0xFFFF000C,	/* TEEC_ERROR_OUT_OF_MEMORY	*/
	TZ_ERROR_BUSY			= 0xFFFF000D,	/* TEEC_ERROR_BUSY		*/
	TZ_ERROR_COMMUNICATION		= 0xFFFF000E,	/* TEEC_ERROR_COMMUNICATION	*/
	TZ_ERROR_SECURITY		= 0xFFFF000F,	/* TEEC_ERROR_SECURITY		*/
	TZ_ERROR_SHORT_BUFFER		= 0xFFFF0010,	/* TEEC_ERROR_SHORT_BUFFER	*/
	TZ_PENDING			= 0xFFFF2000,
	TZ_ERROR_TIMEOUT		= 0xFFFF3001,
	TZ_ERROR_OVERFLOW		= 0xFFFF300F,
	TZ_ERROR_TARGET_DEAD		= 0xFFFF3024,	/* TEEC_ERROR_TARGET_DEAD	*/
	TZ_ERROR_STORAGE_NO_SPACE	= 0xFFFF3041,
	TZ_ERROR_MAC_INVALID		= 0xFFFF3071,
	TZ_ERROR_SIGNATURE_INVALID	= 0xFFFF3072,
	TZ_ERROR_TIME_NOT_SET		= 0xFFFF5000,
	TZ_ERROR_TIME_NEEDS_RESET	= 0xFFFF5001,
};

typedef uint32_t	tz_errcode_t;

#endif /* _TZ_ERRCODE_H_ */
